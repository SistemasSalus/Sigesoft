//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Devart Entity Developer tool using Entity Framework EntityObject template.
// Code is generated on: 17/05/2021 17:32:11
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using System.Reflection;
using System.Linq.Expressions;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects;
using System.Data.Objects.DataClasses;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_Area_v_AreaCode", "location", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.location), "area", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.area), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_AttentionInArea_i_NodeId", "node", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.node), "attentioninarea", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.attentioninarea), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_AttentionArea_AttentionAreaComponent_v_AttentionAreaId", "attentioninarea", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.attentioninarea), "attentioninareacomponent", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.attentioninareacomponent), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_AttentionAreaComponent_v_ComponentId", "component", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.component), "attentioninareacomponent", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.attentioninareacomponent), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_AuxiliaryExam_v_ComponentId", "component", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.component), "auxiliaryexam", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.auxiliaryexam), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_AuxiliaryExam_v_ServiceId", "service", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.service), "auxiliaryexam", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.auxiliaryexam), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_BlackListPerson_v_PersonId", "person", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.person), "blacklistperson", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.blacklistperson), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_Calendar_v_PersonId", "person", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.person), "calendar", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.calendar), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Calendar_v_ServiceId", "service", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.service), "calendar", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.calendar), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_ComponentFields_v_MedicalExamFields", "component", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.component), "componentfields", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.componentfields), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Diseases_ComponentFieldValues_v_Diseases", "diseases", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.diseases), "componentfieldvalues", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.componentfieldvalues), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ComponentFieldValues_ComponentFieldVauesRecommendation_v_Com", "componentfieldvalues", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.componentfieldvalues), "componentfieldvaluesrecommendation", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.componentfieldvaluesrecommendation), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_MasterRecommendationRestricction_ComponentFieldValuesRecomme", "masterrecommendationrestricction", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.masterrecommendationrestricction), "componentfieldvaluesrecommendation", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.componentfieldvaluesrecommendation), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ComponentFieldValues_ComponentFieldVauesRestriction_v_Compon", "componentfieldvalues", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.componentfieldvalues), "componentfieldvaluesrestriction", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.componentfieldvaluesrestriction), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_MasterRecommendationRestricction_ComponentFieldValuesRestric", "masterrecommendationrestricction", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.masterrecommendationrestricction), "componentfieldvaluesrestriction", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.componentfieldvaluesrestriction), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_DiagnosticRepository_v_ServiceId", "service", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.service), "diagnosticrepository", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.diagnosticrepository), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ComponentField_DiagnosticRepository_v_ComponentFieldsId", "componentfields", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.componentfields), "diagnosticrepository", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.diagnosticrepository), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DiseasesId_DiagnosticRepository_v_DiseasesId", "diseases", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.diseases), "diagnosticrepository", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.diagnosticrepository), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Cie10_Diseases_v_CIE10Id", "cie10", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.cie10), "diseases", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.diseases), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK_dxfrecuente_cie10_v_CIE10Id", "cie10", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.cie10), "dxfrecuente", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.dxfrecuente), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK_dxfrecuente_dxfrecuente_vDiseasesId", "diseases", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.diseases), "dxfrecuente", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.dxfrecuente), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK_dxfrecuentedetalle_dxfrecuentedetalle_v_DxFrecuenteId", "dxfrecuente", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.dxfrecuente), "dxfrecuentedetalle", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.dxfrecuentedetalle), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Diseases_FamilyMedicalAntecedents_v_DiseasesId", "diseases", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.diseases), "familymedicalantecedents", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.familymedicalantecedents), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_FamilyMedicalAntecedents_v_PersonId", "person", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.person), "familymedicalantecedents", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.familymedicalantecedents), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Area_Ges_v_AreaCode", "area", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.area), "ges", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.ges), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_GroupOccupation_v_GroupOccupationCode", "location", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.location), "groupoccupation", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.groupoccupation), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_History_v_PersonId", "person", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.person), "history", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.history), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Product_Medication_v_ProductId", "product", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.product), "medication", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.medication), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Medication_v_ServiceId", "service", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.service), "medication", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.medication), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Supplier_Movement_i_SupplierId_i_NodeId", "supplier", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.supplier), "movement", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.movement), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_Movement_i_WarehouseId", "warehouse", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.warehouse), "movement", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.movement), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Movement_MovementDetail_i_MovementId", "movement", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.movement), "movementdetail", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.movementdetail), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Product_MovementDetail_i_ProductId", "product", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.product), "movementdetail", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.movementdetail), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_MovementDetail_i_WarehouseId", "warehouse", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.warehouse), "movementdetail", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.movementdetail), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_MultimediaFile_v_PersonId", "person", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.person), "multimediafile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.multimediafile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_NodeOrganizationLocationProfile_v_LocationId", "location", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.location), "nodeorganizationlocationprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.nodeorganizationlocationprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_NodeOrganizationLocationProfile_v_NodeId", "node", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.node), "nodeorganizationlocationprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.nodeorganizationlocationprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_NodeOrganizationLocationProfile_v_OrganizationI", "organization", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.organization), "nodeorganizationlocationprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.nodeorganizationlocationprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Orga", "location", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.location), "nodeorganizationlocationwarehouseprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.nodeorganizationlocationwarehouseprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_NodeOrganizationLocationWarehouseProfile_i_NodeId", "node", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.node), "nodeorganizationlocationwarehouseprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.nodeorganizationlocationwarehouseprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Loca", "organization", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.organization), "nodeorganizationlocationwarehouseprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.nodeorganizationlocationwarehouseprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_NodeOrganizationLocationWarehouseProfile_v_Warehou", "warehouse", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.warehouse), "nodeorganizationlocationwarehouseprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.nodeorganizationlocationwarehouseprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Node_Node_Organization_i_NodeId", "node", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.node), "nodeorganizationprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.nodeorganizationprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Organization_NodeOrganization_i_OrganizationId", "organization", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.organization), "nodeorganizationprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.nodeorganizationprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_NodeServiceProfile_i_NodeId", "node", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.node), "nodeserviceprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.nodeserviceprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_NoxiousHabits_v_PersonId", "person", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.person), "noxioushabits", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.noxioushabits), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Ges_Occupation_v_GesCode", "ges", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.ges), "occupation", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.occupation), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_GroupOccupation_Occupation_v_GroupOccupationCode", "groupoccupation", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.groupoccupation), "occupation", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.occupation), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_Pacient_v_PersonId", "person", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.person), "pacient", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.pacient), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_pacient_pacientemultimediadata_v_PersonId", "pacient", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.pacient), "pacientmultimediadata", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.pacientmultimediadata), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Diseases_PersonalmMedicalHistory_v_DiseasesId", "diseases", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.diseases), "personmedicalhistory", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.personmedicalhistory), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_PersonMedicalHistory_v_PersonId", "person", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.person), "personmedicalhistory", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.personmedicalhistory), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK_PortalUserAccess_PortalUser", "portaluser", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.portaluser), "portaluseraccess", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.portaluseraccess), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK_PortalUserAccess_organization", "organization", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.organization), "portaluseraccess", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.portaluseraccess), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK_PortalPermission_PortalUser", "portaluser", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.portaluser), "portaluserpermission", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.portaluserpermission), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Procedure_v_ServiceId", "service", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.service), "procedurebyservice", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.procedurebyservice), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Product_ProductWarehouse_i_ProductId", "product", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.product), "productwarehouse", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.productwarehouse), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_ProductWarehouse_i_WarehouseId", "warehouse", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.warehouse), "productwarehouse", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.productwarehouse), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Person_Professional_v_PersonId", "person", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.person), "professional", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.professional), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Protocol_ProtocolComponent_v_ProtocolId", "protocol", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.protocol), "protocolcomponent", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.protocolcomponent), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_ProtocolComponent_v_ComponentId", "component", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.component), "protocolcomponent", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.protocolcomponent), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK_AppHerarchy_ProtocolSystemUser_i_AppHerarchyId", "applicationhierarchy", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.applicationhierarchy), "protocolsystemuser", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.protocolsystemuser), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK_Protocol_ProtocolSystemUser_v_ProtocolId", "protocol", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.protocol), "protocolsystemuser", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.protocolsystemuser), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK_SystemUser_ProtocolSystemUser_i_SystemUserId", "systemuser", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.systemuser), "protocolsystemuser", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.protocolsystemuser), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_Recommendation_v_RecommendationId", "component", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.component), "recommendation", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.recommendation), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Recommendation_v_ServiceId", "service", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.service), "recommendation", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.recommendation), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DiagnosticRepository_Recommendation_v_DiagnosticRepositoryId", "diagnosticrepository", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.diagnosticrepository), "recommendation", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.recommendation), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_SystemUser_RestrictedWarehouseProfile_v_SystemUserId", "systemuser", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.systemuser), "restrictedwarehouseprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.restrictedwarehouseprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_RestrictedWarehouseProfile_v_WarehouseId", "warehouse", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.warehouse), "restrictedwarehouseprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.restrictedwarehouseprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_Restricction_v_ComponentId", "component", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.component), "restriction", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.restriction), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Restricction_v_ServiceId", "service", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.service), "restriction", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.restriction), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DiagnosticRepository_RestrictionByDiagnostic_v_DiagnosticRep", "diagnosticrepository", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.diagnosticrepository), "restriction", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.restriction), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_node_rolenode_i_NodeId", "node", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.node), "rolenode", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.rolenode), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_RoleNodeComponent_v_ComponentId", "component", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.component), "rolenodecomponentprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.rolenodecomponentprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_RoleNode_RoleNodeComponent_i_NodeId_i_RoleId", "rolenode", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.rolenode), "rolenodecomponentprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.rolenodecomponentprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_applicationhierarchy_rolenodeprofile_i_ApplicationHierarchyI", "applicationhierarchy", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.applicationhierarchy), "rolenodeprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.rolenodeprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_RoleNode_RoleNodeProfile_i_NodeId_i_RoleId", "rolenode", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.rolenode), "rolenodeprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.rolenodeprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_Service_v_PersonId", "person", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.person), "service", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.service), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Protocol_Service_v_ProtocolId", "protocol", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.protocol), "service", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.service), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_ServiceComponent_v_ComponentId", "component", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.component), "servicecomponent", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicecomponent), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_ServiceComponent_v_ServiceId", "service", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.service), "servicecomponent", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicecomponent), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ComponentFields_ServiceComponentFields_v_MedicalExamFieldsId", "componentfields", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.componentfields), "servicecomponentfields", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicecomponentfields), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponent_ServiceComponentComponentFields", "servicecomponent", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.servicecomponent), "servicecomponentfields", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicecomponentfields), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ComponentFieldValues_ServiceComponentFieldValues_v_Component", "componentfieldvalues", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.componentfieldvalues), "servicecomponentfieldvalues", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicecomponentfieldvalues), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponentFieldIds_ServiceComponentFieldValues", "servicecomponentfields", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.servicecomponentfields), "servicecomponentfieldvalues", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicecomponentfieldvalues), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_MultimediaFile_ServiceComponentFieldValuesMultimedia_v_Multi", "multimediafile", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.multimediafile), "servicecomponentfieldvaluesmultimedia", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicecomponentfieldvaluesmultimedia), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponentFieldValues_ServiceComponentFieldValuesMulti", "servicecomponentfieldvalues", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.servicecomponentfieldvalues), "servicecomponentfieldvaluesmultimedia", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicecomponentfieldvaluesmultimedia), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_MultimediaFile_ServiceComponentMultimedia_v_MultimediaFileId", "multimediafile", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.multimediafile), "servicecomponentmultimedia", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicecomponentmultimedia), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponent_ServiceComponentMultimedia_v_ServiceCompone", "servicecomponent", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.servicecomponent), "servicecomponentmultimedia", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicecomponentmultimedia), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_MultimediaFile_ServiceMultimedia_v_MultimediaFileId", "multimediafile", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.multimediafile), "servicemultimedia", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicemultimedia), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Service_ServiceMultimedia_v_ServiceId", "service", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.service), "servicemultimedia", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.servicemultimedia), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Protocol_ServiceOrderDetail_v_ProtocolId", "protocol", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.protocol), "serviceorderdetail", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.serviceorderdetail), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ServiceOrder_ServiceOrderDetail_v_ServiceOrderId", "serviceorder", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.serviceorder), "serviceorderdetail", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.serviceorderdetail), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DeplymentFile_SoftwareComponentRelease_i_DeploymentFileId", "deploymentfile", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.deploymentfile), "softwarecomponentrelease", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.softwarecomponentrelease), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_SystemUser_i_PersonId_i_NodeId", "person", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.person), "systemuser", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.systemuser), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ApplicationHerarchy_SystemUserGlobal_i_ApplicationId", "applicationhierarchy", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.applicationhierarchy), "systemusergobalprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.systemusergobalprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_SystemUser_SystemUserGlobalProfile_v_SystemUserId", "systemuser", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.systemuser), "systemusergobalprofile", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.systemusergobalprofile), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_RoleNode_SystemUserRoleNode_i_NodeId_i_RoleId", "rolenode", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.rolenode), "systemuserrolenode", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.systemuserrolenode), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_SystemUser_SystemUSerRoleNode_i_SystemUserId", "systemuser", RelationshipMultiplicity.One, typeof(Sigesoft.Node.WinClient.DAL.systemuser), "systemuserrolenode", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.systemuserrolenode), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK__testdevic__iTest__0214FC18", "brand", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.brand), "testdevice", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.testdevice), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_History_TypeofEPP_v_HistoryId", "history", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.history), "typeofeep", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.typeofeep), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK__usuariore__v_org__71E28D02", "organization", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.organization), "usuarioregcovidorganization", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.usuarioregcovidorganization), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "FK__usuariore__i_usu__72D6B13B", "usuarioregcovid", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.usuarioregcovid), "usuarioregcovidorganization", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.usuarioregcovidorganization), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_Warehouse_v_LocationId", "location", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.location), "warehouse", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.warehouse), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_Warehouse_i_OrganizationId", "organization", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.organization), "warehouse", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.warehouse), true)]
[assembly: EdmRelationshipAttribute("Sigesoft.Node.WinClient.DAL", "Fk_History_WorkstationDangers_v_HistoryId", "history", RelationshipMultiplicity.ZeroOrOne, typeof(Sigesoft.Node.WinClient.DAL.history), "workstationdangers", RelationshipMultiplicity.Many, typeof(Sigesoft.Node.WinClient.DAL.workstationdangers), true)]

#endregion

namespace Sigesoft.Node.WinClient.DAL
{

    #region SigesoftEntitiesModel

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SigesoftEntitiesModel : ObjectContext
    {
        #region Constructors

        /// <summary>
        /// Initialize a new SigesoftEntitiesModel object.
        /// </summary>
        public SigesoftEntitiesModel() : 
                base(@"name=SigesoftConnectionString", "SigesoftEntitiesModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initializes a new SigesoftEntitiesModel object using the connection string found in the 'SigesoftEntitiesModel' section of the application configuration file.
        /// </summary>
        public SigesoftEntitiesModel(string connectionString) : 
                base(connectionString, "SigesoftEntitiesModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new SigesoftEntitiesModel object.
        /// </summary>
        public SigesoftEntitiesModel(EntityConnection connection) : base(connection, "SigesoftEntitiesModel")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }

        #endregion

        #region Partial Methods

        partial void OnContextCreated();

        #endregion

        #region ObjectSet Properties

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<applicationhierarchy> applicationhierarchy
        {
            get
            {
                if ((_applicationhierarchy == null))
                {
                    _applicationhierarchy = base.CreateObjectSet<applicationhierarchy>("applicationhierarchy");
                }
                return _applicationhierarchy;
            }
        }
        private ObjectSet<applicationhierarchy> _applicationhierarchy;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<area> area
        {
            get
            {
                if ((_area == null))
                {
                    _area = base.CreateObjectSet<area>("area");
                }
                return _area;
            }
        }
        private ObjectSet<area> _area;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<attentioninarea> attentioninarea
        {
            get
            {
                if ((_attentioninarea == null))
                {
                    _attentioninarea = base.CreateObjectSet<attentioninarea>("attentioninarea");
                }
                return _attentioninarea;
            }
        }
        private ObjectSet<attentioninarea> _attentioninarea;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<attentioninareacomponent> attentioninareacomponent
        {
            get
            {
                if ((_attentioninareacomponent == null))
                {
                    _attentioninareacomponent = base.CreateObjectSet<attentioninareacomponent>("attentioninareacomponent");
                }
                return _attentioninareacomponent;
            }
        }
        private ObjectSet<attentioninareacomponent> _attentioninareacomponent;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<authorizedperson> authorizedperson
        {
            get
            {
                if ((_authorizedperson == null))
                {
                    _authorizedperson = base.CreateObjectSet<authorizedperson>("authorizedperson");
                }
                return _authorizedperson;
            }
        }
        private ObjectSet<authorizedperson> _authorizedperson;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<auxiliaryexam> auxiliaryexam
        {
            get
            {
                if ((_auxiliaryexam == null))
                {
                    _auxiliaryexam = base.CreateObjectSet<auxiliaryexam>("auxiliaryexam");
                }
                return _auxiliaryexam;
            }
        }
        private ObjectSet<auxiliaryexam> _auxiliaryexam;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<blacklistperson> blacklistperson
        {
            get
            {
                if ((_blacklistperson == null))
                {
                    _blacklistperson = base.CreateObjectSet<blacklistperson>("blacklistperson");
                }
                return _blacklistperson;
            }
        }
        private ObjectSet<blacklistperson> _blacklistperson;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<brand> brand
        {
            get
            {
                if ((_brand == null))
                {
                    _brand = base.CreateObjectSet<brand>("brand");
                }
                return _brand;
            }
        }
        private ObjectSet<brand> _brand;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<calendar> calendar
        {
            get
            {
                if ((_calendar == null))
                {
                    _calendar = base.CreateObjectSet<calendar>("calendar");
                }
                return _calendar;
            }
        }
        private ObjectSet<calendar> _calendar;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<campaniascovid> campaniascovid
        {
            get
            {
                if ((_campaniascovid == null))
                {
                    _campaniascovid = base.CreateObjectSet<campaniascovid>("campaniascovid");
                }
                return _campaniascovid;
            }
        }
        private ObjectSet<campaniascovid> _campaniascovid;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<cie10> cie10
        {
            get
            {
                if ((_cie10 == null))
                {
                    _cie10 = base.CreateObjectSet<cie10>("cie10");
                }
                return _cie10;
            }
        }
        private ObjectSet<cie10> _cie10;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<clinica> clinica
        {
            get
            {
                if ((_clinica == null))
                {
                    _clinica = base.CreateObjectSet<clinica>("clinica");
                }
                return _clinica;
            }
        }
        private ObjectSet<clinica> _clinica;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<component> component
        {
            get
            {
                if ((_component == null))
                {
                    _component = base.CreateObjectSet<component>("component");
                }
                return _component;
            }
        }
        private ObjectSet<component> _component;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<componentfield> componentfield
        {
            get
            {
                if ((_componentfield == null))
                {
                    _componentfield = base.CreateObjectSet<componentfield>("componentfield");
                }
                return _componentfield;
            }
        }
        private ObjectSet<componentfield> _componentfield;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<componentfields> componentfields
        {
            get
            {
                if ((_componentfields == null))
                {
                    _componentfields = base.CreateObjectSet<componentfields>("componentfields");
                }
                return _componentfields;
            }
        }
        private ObjectSet<componentfields> _componentfields;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<componentfieldvalues> componentfieldvalues
        {
            get
            {
                if ((_componentfieldvalues == null))
                {
                    _componentfieldvalues = base.CreateObjectSet<componentfieldvalues>("componentfieldvalues");
                }
                return _componentfieldvalues;
            }
        }
        private ObjectSet<componentfieldvalues> _componentfieldvalues;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<componentfieldvaluesrecommendation> componentfieldvaluesrecommendation
        {
            get
            {
                if ((_componentfieldvaluesrecommendation == null))
                {
                    _componentfieldvaluesrecommendation = base.CreateObjectSet<componentfieldvaluesrecommendation>("componentfieldvaluesrecommendation");
                }
                return _componentfieldvaluesrecommendation;
            }
        }
        private ObjectSet<componentfieldvaluesrecommendation> _componentfieldvaluesrecommendation;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<componentfieldvaluesrestriction> componentfieldvaluesrestriction
        {
            get
            {
                if ((_componentfieldvaluesrestriction == null))
                {
                    _componentfieldvaluesrestriction = base.CreateObjectSet<componentfieldvaluesrestriction>("componentfieldvaluesrestriction");
                }
                return _componentfieldvaluesrestriction;
            }
        }
        private ObjectSet<componentfieldvaluesrestriction> _componentfieldvaluesrestriction;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<covid> covid
        {
            get
            {
                if ((_covid == null))
                {
                    _covid = base.CreateObjectSet<covid>("covid");
                }
                return _covid;
            }
        }
        private ObjectSet<covid> _covid;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<datahierarchy> datahierarchy
        {
            get
            {
                if ((_datahierarchy == null))
                {
                    _datahierarchy = base.CreateObjectSet<datahierarchy>("datahierarchy");
                }
                return _datahierarchy;
            }
        }
        private ObjectSet<datahierarchy> _datahierarchy;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<deploymentfile> deploymentfile
        {
            get
            {
                if ((_deploymentfile == null))
                {
                    _deploymentfile = base.CreateObjectSet<deploymentfile>("deploymentfile");
                }
                return _deploymentfile;
            }
        }
        private ObjectSet<deploymentfile> _deploymentfile;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<diagnosticrepository> diagnosticrepository
        {
            get
            {
                if ((_diagnosticrepository == null))
                {
                    _diagnosticrepository = base.CreateObjectSet<diagnosticrepository>("diagnosticrepository");
                }
                return _diagnosticrepository;
            }
        }
        private ObjectSet<diagnosticrepository> _diagnosticrepository;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<diseases> diseases
        {
            get
            {
                if ((_diseases == null))
                {
                    _diseases = base.CreateObjectSet<diseases>("diseases");
                }
                return _diseases;
            }
        }
        private ObjectSet<diseases> _diseases;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dxfrecuente> dxfrecuente
        {
            get
            {
                if ((_dxfrecuente == null))
                {
                    _dxfrecuente = base.CreateObjectSet<dxfrecuente>("dxfrecuente");
                }
                return _dxfrecuente;
            }
        }
        private ObjectSet<dxfrecuente> _dxfrecuente;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dxfrecuentedetalle> dxfrecuentedetalle
        {
            get
            {
                if ((_dxfrecuentedetalle == null))
                {
                    _dxfrecuentedetalle = base.CreateObjectSet<dxfrecuentedetalle>("dxfrecuentedetalle");
                }
                return _dxfrecuentedetalle;
            }
        }
        private ObjectSet<dxfrecuentedetalle> _dxfrecuentedetalle;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<employee> employee
        {
            get
            {
                if ((_employee == null))
                {
                    _employee = base.CreateObjectSet<employee>("employee");
                }
                return _employee;
            }
        }
        private ObjectSet<employee> _employee;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<employercompany> employercompany
        {
            get
            {
                if ((_employercompany == null))
                {
                    _employercompany = base.CreateObjectSet<employercompany>("employercompany");
                }
                return _employercompany;
            }
        }
        private ObjectSet<employercompany> _employercompany;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<empresasempleadoras> empresasempleadoras
        {
            get
            {
                if ((_empresasempleadoras == null))
                {
                    _empresasempleadoras = base.CreateObjectSet<empresasempleadoras>("empresasempleadoras");
                }
                return _empresasempleadoras;
            }
        }
        private ObjectSet<empresasempleadoras> _empresasempleadoras;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<familymedicalantecedents> familymedicalantecedents
        {
            get
            {
                if ((_familymedicalantecedents == null))
                {
                    _familymedicalantecedents = base.CreateObjectSet<familymedicalantecedents>("familymedicalantecedents");
                }
                return _familymedicalantecedents;
            }
        }
        private ObjectSet<familymedicalantecedents> _familymedicalantecedents;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ges> ges
        {
            get
            {
                if ((_ges == null))
                {
                    _ges = base.CreateObjectSet<ges>("ges");
                }
                return _ges;
            }
        }
        private ObjectSet<ges> _ges;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<groupoccupation> groupoccupation
        {
            get
            {
                if ((_groupoccupation == null))
                {
                    _groupoccupation = base.CreateObjectSet<groupoccupation>("groupoccupation");
                }
                return _groupoccupation;
            }
        }
        private ObjectSet<groupoccupation> _groupoccupation;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<hcactualizado> hcactualizado
        {
            get
            {
                if ((_hcactualizado == null))
                {
                    _hcactualizado = base.CreateObjectSet<hcactualizado>("hcactualizado");
                }
                return _hcactualizado;
            }
        }
        private ObjectSet<hcactualizado> _hcactualizado;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<headcount> headcount
        {
            get
            {
                if ((_headcount == null))
                {
                    _headcount = base.CreateObjectSet<headcount>("headcount");
                }
                return _headcount;
            }
        }
        private ObjectSet<headcount> _headcount;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<history> history
        {
            get
            {
                if ((_history == null))
                {
                    _history = base.CreateObjectSet<history>("history");
                }
                return _history;
            }
        }
        private ObjectSet<history> _history;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<interfacebc300> interfacebc300
        {
            get
            {
                if ((_interfacebc300 == null))
                {
                    _interfacebc300 = base.CreateObjectSet<interfacebc300>("interfacebc300");
                }
                return _interfacebc300;
            }
        }
        private ObjectSet<interfacebc300> _interfacebc300;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<interfaceeso> interfaceeso
        {
            get
            {
                if ((_interfaceeso == null))
                {
                    _interfaceeso = base.CreateObjectSet<interfaceeso>("interfaceeso");
                }
                return _interfaceeso;
            }
        }
        private ObjectSet<interfaceeso> _interfaceeso;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<location> location
        {
            get
            {
                if ((_location == null))
                {
                    _location = base.CreateObjectSet<location>("location");
                }
                return _location;
            }
        }
        private ObjectSet<location> _location;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<log> log
        {
            get
            {
                if ((_log == null))
                {
                    _log = base.CreateObjectSet<log>("log");
                }
                return _log;
            }
        }
        private ObjectSet<log> _log;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<loginexterno> loginexterno
        {
            get
            {
                if ((_loginexterno == null))
                {
                    _loginexterno = base.CreateObjectSet<loginexterno>("loginexterno");
                }
                return _loginexterno;
            }
        }
        private ObjectSet<loginexterno> _loginexterno;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<masterrecommendationrestricction> masterrecommendationrestricction
        {
            get
            {
                if ((_masterrecommendationrestricction == null))
                {
                    _masterrecommendationrestricction = base.CreateObjectSet<masterrecommendationrestricction>("masterrecommendationrestricction");
                }
                return _masterrecommendationrestricction;
            }
        }
        private ObjectSet<masterrecommendationrestricction> _masterrecommendationrestricction;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<medication> medication
        {
            get
            {
                if ((_medication == null))
                {
                    _medication = base.CreateObjectSet<medication>("medication");
                }
                return _medication;
            }
        }
        private ObjectSet<medication> _medication;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<movement> movement
        {
            get
            {
                if ((_movement == null))
                {
                    _movement = base.CreateObjectSet<movement>("movement");
                }
                return _movement;
            }
        }
        private ObjectSet<movement> _movement;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<movementdetail> movementdetail
        {
            get
            {
                if ((_movementdetail == null))
                {
                    _movementdetail = base.CreateObjectSet<movementdetail>("movementdetail");
                }
                return _movementdetail;
            }
        }
        private ObjectSet<movementdetail> _movementdetail;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<multimediafile> multimediafile
        {
            get
            {
                if ((_multimediafile == null))
                {
                    _multimediafile = base.CreateObjectSet<multimediafile>("multimediafile");
                }
                return _multimediafile;
            }
        }
        private ObjectSet<multimediafile> _multimediafile;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<node> node
        {
            get
            {
                if ((_node == null))
                {
                    _node = base.CreateObjectSet<node>("node");
                }
                return _node;
            }
        }
        private ObjectSet<node> _node;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<nodedatabasestatus> nodedatabasestatus
        {
            get
            {
                if ((_nodedatabasestatus == null))
                {
                    _nodedatabasestatus = base.CreateObjectSet<nodedatabasestatus>("nodedatabasestatus");
                }
                return _nodedatabasestatus;
            }
        }
        private ObjectSet<nodedatabasestatus> _nodedatabasestatus;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<nodeorganizationlocationprofile> nodeorganizationlocationprofile
        {
            get
            {
                if ((_nodeorganizationlocationprofile == null))
                {
                    _nodeorganizationlocationprofile = base.CreateObjectSet<nodeorganizationlocationprofile>("nodeorganizationlocationprofile");
                }
                return _nodeorganizationlocationprofile;
            }
        }
        private ObjectSet<nodeorganizationlocationprofile> _nodeorganizationlocationprofile;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<nodeorganizationlocationwarehouseprofile> nodeorganizationlocationwarehouseprofile
        {
            get
            {
                if ((_nodeorganizationlocationwarehouseprofile == null))
                {
                    _nodeorganizationlocationwarehouseprofile = base.CreateObjectSet<nodeorganizationlocationwarehouseprofile>("nodeorganizationlocationwarehouseprofile");
                }
                return _nodeorganizationlocationwarehouseprofile;
            }
        }
        private ObjectSet<nodeorganizationlocationwarehouseprofile> _nodeorganizationlocationwarehouseprofile;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<nodeorganizationprofile> nodeorganizationprofile
        {
            get
            {
                if ((_nodeorganizationprofile == null))
                {
                    _nodeorganizationprofile = base.CreateObjectSet<nodeorganizationprofile>("nodeorganizationprofile");
                }
                return _nodeorganizationprofile;
            }
        }
        private ObjectSet<nodeorganizationprofile> _nodeorganizationprofile;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<nodeserviceprofile> nodeserviceprofile
        {
            get
            {
                if ((_nodeserviceprofile == null))
                {
                    _nodeserviceprofile = base.CreateObjectSet<nodeserviceprofile>("nodeserviceprofile");
                }
                return _nodeserviceprofile;
            }
        }
        private ObjectSet<nodeserviceprofile> _nodeserviceprofile;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<nodesyncstatus> nodesyncstatus
        {
            get
            {
                if ((_nodesyncstatus == null))
                {
                    _nodesyncstatus = base.CreateObjectSet<nodesyncstatus>("nodesyncstatus");
                }
                return _nodesyncstatus;
            }
        }
        private ObjectSet<nodesyncstatus> _nodesyncstatus;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<noxioushabits> noxioushabits
        {
            get
            {
                if ((_noxioushabits == null))
                {
                    _noxioushabits = base.CreateObjectSet<noxioushabits>("noxioushabits");
                }
                return _noxioushabits;
            }
        }
        private ObjectSet<noxioushabits> _noxioushabits;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<occupation> occupation
        {
            get
            {
                if ((_occupation == null))
                {
                    _occupation = base.CreateObjectSet<occupation>("occupation");
                }
                return _occupation;
            }
        }
        private ObjectSet<occupation> _occupation;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ordenreporte> ordenreporte
        {
            get
            {
                if ((_ordenreporte == null))
                {
                    _ordenreporte = base.CreateObjectSet<ordenreporte>("ordenreporte");
                }
                return _ordenreporte;
            }
        }
        private ObjectSet<ordenreporte> _ordenreporte;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<organization> organization
        {
            get
            {
                if ((_organization == null))
                {
                    _organization = base.CreateObjectSet<organization>("organization");
                }
                return _organization;
            }
        }
        private ObjectSet<organization> _organization;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<pacient> pacient
        {
            get
            {
                if ((_pacient == null))
                {
                    _pacient = base.CreateObjectSet<pacient>("pacient");
                }
                return _pacient;
            }
        }
        private ObjectSet<pacient> _pacient;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<pacientmultimediadata> pacientmultimediadata
        {
            get
            {
                if ((_pacientmultimediadata == null))
                {
                    _pacientmultimediadata = base.CreateObjectSet<pacientmultimediadata>("pacientmultimediadata");
                }
                return _pacientmultimediadata;
            }
        }
        private ObjectSet<pacientmultimediadata> _pacientmultimediadata;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<person> person
        {
            get
            {
                if ((_person == null))
                {
                    _person = base.CreateObjectSet<person>("person");
                }
                return _person;
            }
        }
        private ObjectSet<person> _person;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<personmedicalhistory> personmedicalhistory
        {
            get
            {
                if ((_personmedicalhistory == null))
                {
                    _personmedicalhistory = base.CreateObjectSet<personmedicalhistory>("personmedicalhistory");
                }
                return _personmedicalhistory;
            }
        }
        private ObjectSet<personmedicalhistory> _personmedicalhistory;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<portaluser> portaluser
        {
            get
            {
                if ((_portaluser == null))
                {
                    _portaluser = base.CreateObjectSet<portaluser>("portaluser");
                }
                return _portaluser;
            }
        }
        private ObjectSet<portaluser> _portaluser;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<portaluseraccess> portaluseraccess
        {
            get
            {
                if ((_portaluseraccess == null))
                {
                    _portaluseraccess = base.CreateObjectSet<portaluseraccess>("portaluseraccess");
                }
                return _portaluseraccess;
            }
        }
        private ObjectSet<portaluseraccess> _portaluseraccess;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<portaluserpermission> portaluserpermission
        {
            get
            {
                if ((_portaluserpermission == null))
                {
                    _portaluserpermission = base.CreateObjectSet<portaluserpermission>("portaluserpermission");
                }
                return _portaluserpermission;
            }
        }
        private ObjectSet<portaluserpermission> _portaluserpermission;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<procedurebyservice> procedurebyservice
        {
            get
            {
                if ((_procedurebyservice == null))
                {
                    _procedurebyservice = base.CreateObjectSet<procedurebyservice>("procedurebyservice");
                }
                return _procedurebyservice;
            }
        }
        private ObjectSet<procedurebyservice> _procedurebyservice;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<product> product
        {
            get
            {
                if ((_product == null))
                {
                    _product = base.CreateObjectSet<product>("product");
                }
                return _product;
            }
        }
        private ObjectSet<product> _product;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<productsformigration> productsformigration
        {
            get
            {
                if ((_productsformigration == null))
                {
                    _productsformigration = base.CreateObjectSet<productsformigration>("productsformigration");
                }
                return _productsformigration;
            }
        }
        private ObjectSet<productsformigration> _productsformigration;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<productwarehouse> productwarehouse
        {
            get
            {
                if ((_productwarehouse == null))
                {
                    _productwarehouse = base.CreateObjectSet<productwarehouse>("productwarehouse");
                }
                return _productwarehouse;
            }
        }
        private ObjectSet<productwarehouse> _productwarehouse;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<professional> professional
        {
            get
            {
                if ((_professional == null))
                {
                    _professional = base.CreateObjectSet<professional>("professional");
                }
                return _professional;
            }
        }
        private ObjectSet<professional> _professional;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<protocol> protocol
        {
            get
            {
                if ((_protocol == null))
                {
                    _protocol = base.CreateObjectSet<protocol>("protocol");
                }
                return _protocol;
            }
        }
        private ObjectSet<protocol> _protocol;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<protocolcomponent> protocolcomponent
        {
            get
            {
                if ((_protocolcomponent == null))
                {
                    _protocolcomponent = base.CreateObjectSet<protocolcomponent>("protocolcomponent");
                }
                return _protocolcomponent;
            }
        }
        private ObjectSet<protocolcomponent> _protocolcomponent;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<protocolregcovid> protocolregcovid
        {
            get
            {
                if ((_protocolregcovid == null))
                {
                    _protocolregcovid = base.CreateObjectSet<protocolregcovid>("protocolregcovid");
                }
                return _protocolregcovid;
            }
        }
        private ObjectSet<protocolregcovid> _protocolregcovid;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<protocolsystemuser> protocolsystemuser
        {
            get
            {
                if ((_protocolsystemuser == null))
                {
                    _protocolsystemuser = base.CreateObjectSet<protocolsystemuser>("protocolsystemuser");
                }
                return _protocolsystemuser;
            }
        }
        private ObjectSet<protocolsystemuser> _protocolsystemuser;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<recommendation> recommendation
        {
            get
            {
                if ((_recommendation == null))
                {
                    _recommendation = base.CreateObjectSet<recommendation>("recommendation");
                }
                return _recommendation;
            }
        }
        private ObjectSet<recommendation> _recommendation;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<restrictedwarehouseprofile> restrictedwarehouseprofile
        {
            get
            {
                if ((_restrictedwarehouseprofile == null))
                {
                    _restrictedwarehouseprofile = base.CreateObjectSet<restrictedwarehouseprofile>("restrictedwarehouseprofile");
                }
                return _restrictedwarehouseprofile;
            }
        }
        private ObjectSet<restrictedwarehouseprofile> _restrictedwarehouseprofile;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<restriction> restriction
        {
            get
            {
                if ((_restriction == null))
                {
                    _restriction = base.CreateObjectSet<restriction>("restriction");
                }
                return _restriction;
            }
        }
        private ObjectSet<restriction> _restriction;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<rolenode> rolenode
        {
            get
            {
                if ((_rolenode == null))
                {
                    _rolenode = base.CreateObjectSet<rolenode>("rolenode");
                }
                return _rolenode;
            }
        }
        private ObjectSet<rolenode> _rolenode;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<rolenodecomponentprofile> rolenodecomponentprofile
        {
            get
            {
                if ((_rolenodecomponentprofile == null))
                {
                    _rolenodecomponentprofile = base.CreateObjectSet<rolenodecomponentprofile>("rolenodecomponentprofile");
                }
                return _rolenodecomponentprofile;
            }
        }
        private ObjectSet<rolenodecomponentprofile> _rolenodecomponentprofile;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<rolenodeprofile> rolenodeprofile
        {
            get
            {
                if ((_rolenodeprofile == null))
                {
                    _rolenodeprofile = base.CreateObjectSet<rolenodeprofile>("rolenodeprofile");
                }
                return _rolenodeprofile;
            }
        }
        private ObjectSet<rolenodeprofile> _rolenodeprofile;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<secuential> secuential
        {
            get
            {
                if ((_secuential == null))
                {
                    _secuential = base.CreateObjectSet<secuential>("secuential");
                }
                return _secuential;
            }
        }
        private ObjectSet<secuential> _secuential;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<servernodesync> servernodesync
        {
            get
            {
                if ((_servernodesync == null))
                {
                    _servernodesync = base.CreateObjectSet<servernodesync>("servernodesync");
                }
                return _servernodesync;
            }
        }
        private ObjectSet<servernodesync> _servernodesync;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<serversyncstatus> serversyncstatus
        {
            get
            {
                if ((_serversyncstatus == null))
                {
                    _serversyncstatus = base.CreateObjectSet<serversyncstatus>("serversyncstatus");
                }
                return _serversyncstatus;
            }
        }
        private ObjectSet<serversyncstatus> _serversyncstatus;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<service> service
        {
            get
            {
                if ((_service == null))
                {
                    _service = base.CreateObjectSet<service>("service");
                }
                return _service;
            }
        }
        private ObjectSet<service> _service;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<servicecomponent> servicecomponent
        {
            get
            {
                if ((_servicecomponent == null))
                {
                    _servicecomponent = base.CreateObjectSet<servicecomponent>("servicecomponent");
                }
                return _servicecomponent;
            }
        }
        private ObjectSet<servicecomponent> _servicecomponent;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<servicecomponentfields> servicecomponentfields
        {
            get
            {
                if ((_servicecomponentfields == null))
                {
                    _servicecomponentfields = base.CreateObjectSet<servicecomponentfields>("servicecomponentfields");
                }
                return _servicecomponentfields;
            }
        }
        private ObjectSet<servicecomponentfields> _servicecomponentfields;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<servicecomponentfieldvalues> servicecomponentfieldvalues
        {
            get
            {
                if ((_servicecomponentfieldvalues == null))
                {
                    _servicecomponentfieldvalues = base.CreateObjectSet<servicecomponentfieldvalues>("servicecomponentfieldvalues");
                }
                return _servicecomponentfieldvalues;
            }
        }
        private ObjectSet<servicecomponentfieldvalues> _servicecomponentfieldvalues;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<servicecomponentfieldvaluesmultimedia> servicecomponentfieldvaluesmultimedia
        {
            get
            {
                if ((_servicecomponentfieldvaluesmultimedia == null))
                {
                    _servicecomponentfieldvaluesmultimedia = base.CreateObjectSet<servicecomponentfieldvaluesmultimedia>("servicecomponentfieldvaluesmultimedia");
                }
                return _servicecomponentfieldvaluesmultimedia;
            }
        }
        private ObjectSet<servicecomponentfieldvaluesmultimedia> _servicecomponentfieldvaluesmultimedia;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<servicecomponentmultimedia> servicecomponentmultimedia
        {
            get
            {
                if ((_servicecomponentmultimedia == null))
                {
                    _servicecomponentmultimedia = base.CreateObjectSet<servicecomponentmultimedia>("servicecomponentmultimedia");
                }
                return _servicecomponentmultimedia;
            }
        }
        private ObjectSet<servicecomponentmultimedia> _servicecomponentmultimedia;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<servicefact> servicefact
        {
            get
            {
                if ((_servicefact == null))
                {
                    _servicefact = base.CreateObjectSet<servicefact>("servicefact");
                }
                return _servicefact;
            }
        }
        private ObjectSet<servicefact> _servicefact;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<servicemultimedia> servicemultimedia
        {
            get
            {
                if ((_servicemultimedia == null))
                {
                    _servicemultimedia = base.CreateObjectSet<servicemultimedia>("servicemultimedia");
                }
                return _servicemultimedia;
            }
        }
        private ObjectSet<servicemultimedia> _servicemultimedia;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<serviceorder> serviceorder
        {
            get
            {
                if ((_serviceorder == null))
                {
                    _serviceorder = base.CreateObjectSet<serviceorder>("serviceorder");
                }
                return _serviceorder;
            }
        }
        private ObjectSet<serviceorder> _serviceorder;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<serviceorderdetail> serviceorderdetail
        {
            get
            {
                if ((_serviceorderdetail == null))
                {
                    _serviceorderdetail = base.CreateObjectSet<serviceorderdetail>("serviceorderdetail");
                }
                return _serviceorderdetail;
            }
        }
        private ObjectSet<serviceorderdetail> _serviceorderdetail;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<servicespivot> servicespivot
        {
            get
            {
                if ((_servicespivot == null))
                {
                    _servicespivot = base.CreateObjectSet<servicespivot>("servicespivot");
                }
                return _servicespivot;
            }
        }
        private ObjectSet<servicespivot> _servicespivot;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<softwarecomponentrelease> softwarecomponentrelease
        {
            get
            {
                if ((_softwarecomponentrelease == null))
                {
                    _softwarecomponentrelease = base.CreateObjectSet<softwarecomponentrelease>("softwarecomponentrelease");
                }
                return _softwarecomponentrelease;
            }
        }
        private ObjectSet<softwarecomponentrelease> _softwarecomponentrelease;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<supplier> supplier
        {
            get
            {
                if ((_supplier == null))
                {
                    _supplier = base.CreateObjectSet<supplier>("supplier");
                }
                return _supplier;
            }
        }
        private ObjectSet<supplier> _supplier;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<systemparameter> systemparameter
        {
            get
            {
                if ((_systemparameter == null))
                {
                    _systemparameter = base.CreateObjectSet<systemparameter>("systemparameter");
                }
                return _systemparameter;
            }
        }
        private ObjectSet<systemparameter> _systemparameter;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<systemuser> systemuser
        {
            get
            {
                if ((_systemuser == null))
                {
                    _systemuser = base.CreateObjectSet<systemuser>("systemuser");
                }
                return _systemuser;
            }
        }
        private ObjectSet<systemuser> _systemuser;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<systemusergobalprofile> systemusergobalprofile
        {
            get
            {
                if ((_systemusergobalprofile == null))
                {
                    _systemusergobalprofile = base.CreateObjectSet<systemusergobalprofile>("systemusergobalprofile");
                }
                return _systemusergobalprofile;
            }
        }
        private ObjectSet<systemusergobalprofile> _systemusergobalprofile;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<systemuserrolenode> systemuserrolenode
        {
            get
            {
                if ((_systemuserrolenode == null))
                {
                    _systemuserrolenode = base.CreateObjectSet<systemuserrolenode>("systemuserrolenode");
                }
                return _systemuserrolenode;
            }
        }
        private ObjectSet<systemuserrolenode> _systemuserrolenode;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<testdevice> testdevice
        {
            get
            {
                if ((_testdevice == null))
                {
                    _testdevice = base.CreateObjectSet<testdevice>("testdevice");
                }
                return _testdevice;
            }
        }
        private ObjectSet<testdevice> _testdevice;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<typeofeep> typeofeep
        {
            get
            {
                if ((_typeofeep == null))
                {
                    _typeofeep = base.CreateObjectSet<typeofeep>("typeofeep");
                }
                return _typeofeep;
            }
        }
        private ObjectSet<typeofeep> _typeofeep;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<usuarioregcovid> usuarioregcovid
        {
            get
            {
                if ((_usuarioregcovid == null))
                {
                    _usuarioregcovid = base.CreateObjectSet<usuarioregcovid>("usuarioregcovid");
                }
                return _usuarioregcovid;
            }
        }
        private ObjectSet<usuarioregcovid> _usuarioregcovid;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<usuarioregcovidorganization> usuarioregcovidorganization
        {
            get
            {
                if ((_usuarioregcovidorganization == null))
                {
                    _usuarioregcovidorganization = base.CreateObjectSet<usuarioregcovidorganization>("usuarioregcovidorganization");
                }
                return _usuarioregcovidorganization;
            }
        }
        private ObjectSet<usuarioregcovidorganization> _usuarioregcovidorganization;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<warehouse> warehouse
        {
            get
            {
                if ((_warehouse == null))
                {
                    _warehouse = base.CreateObjectSet<warehouse>("warehouse");
                }
                return _warehouse;
            }
        }
        private ObjectSet<warehouse> _warehouse;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<workstationdangers> workstationdangers
        {
            get
            {
                if ((_workstationdangers == null))
                {
                    _workstationdangers = base.CreateObjectSet<workstationdangers>("workstationdangers");
                }
                return _workstationdangers;
            }
        }
        private ObjectSet<workstationdangers> _workstationdangers;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the applicationhierarchy EntitySet.
        /// </summary>
        public void AddToapplicationhierarchy(applicationhierarchy applicationhierarchy)
        {
            base.AddObject("applicationhierarchy", applicationhierarchy);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the area EntitySet.
        /// </summary>
        public void AddToarea(area area)
        {
            base.AddObject("area", area);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the attentioninarea EntitySet.
        /// </summary>
        public void AddToattentioninarea(attentioninarea attentioninarea)
        {
            base.AddObject("attentioninarea", attentioninarea);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the attentioninareacomponent EntitySet.
        /// </summary>
        public void AddToattentioninareacomponent(attentioninareacomponent attentioninareacomponent)
        {
            base.AddObject("attentioninareacomponent", attentioninareacomponent);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the authorizedperson EntitySet.
        /// </summary>
        public void AddToauthorizedperson(authorizedperson authorizedperson)
        {
            base.AddObject("authorizedperson", authorizedperson);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the auxiliaryexam EntitySet.
        /// </summary>
        public void AddToauxiliaryexam(auxiliaryexam auxiliaryexam)
        {
            base.AddObject("auxiliaryexam", auxiliaryexam);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the blacklistperson EntitySet.
        /// </summary>
        public void AddToblacklistperson(blacklistperson blacklistperson)
        {
            base.AddObject("blacklistperson", blacklistperson);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the brand EntitySet.
        /// </summary>
        public void AddTobrand(brand brand)
        {
            base.AddObject("brand", brand);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the calendar EntitySet.
        /// </summary>
        public void AddTocalendar(calendar calendar)
        {
            base.AddObject("calendar", calendar);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the campaniascovid EntitySet.
        /// </summary>
        public void AddTocampaniascovid(campaniascovid campaniascovid)
        {
            base.AddObject("campaniascovid", campaniascovid);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the cie10 EntitySet.
        /// </summary>
        public void AddTocie10(cie10 cie10)
        {
            base.AddObject("cie10", cie10);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the clinica EntitySet.
        /// </summary>
        public void AddToclinica(clinica clinica)
        {
            base.AddObject("clinica", clinica);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the component EntitySet.
        /// </summary>
        public void AddTocomponent(component component)
        {
            base.AddObject("component", component);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the componentfield EntitySet.
        /// </summary>
        public void AddTocomponentfield(componentfield componentfield)
        {
            base.AddObject("componentfield", componentfield);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the componentfields EntitySet.
        /// </summary>
        public void AddTocomponentfields(componentfields componentfields)
        {
            base.AddObject("componentfields", componentfields);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the componentfieldvalues EntitySet.
        /// </summary>
        public void AddTocomponentfieldvalues(componentfieldvalues componentfieldvalues)
        {
            base.AddObject("componentfieldvalues", componentfieldvalues);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the componentfieldvaluesrecommendation EntitySet.
        /// </summary>
        public void AddTocomponentfieldvaluesrecommendation(componentfieldvaluesrecommendation componentfieldvaluesrecommendation)
        {
            base.AddObject("componentfieldvaluesrecommendation", componentfieldvaluesrecommendation);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the componentfieldvaluesrestriction EntitySet.
        /// </summary>
        public void AddTocomponentfieldvaluesrestriction(componentfieldvaluesrestriction componentfieldvaluesrestriction)
        {
            base.AddObject("componentfieldvaluesrestriction", componentfieldvaluesrestriction);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the covid EntitySet.
        /// </summary>
        public void AddTocovid(covid covid)
        {
            base.AddObject("covid", covid);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the datahierarchy EntitySet.
        /// </summary>
        public void AddTodatahierarchy(datahierarchy datahierarchy)
        {
            base.AddObject("datahierarchy", datahierarchy);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the deploymentfile EntitySet.
        /// </summary>
        public void AddTodeploymentfile(deploymentfile deploymentfile)
        {
            base.AddObject("deploymentfile", deploymentfile);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the diagnosticrepository EntitySet.
        /// </summary>
        public void AddTodiagnosticrepository(diagnosticrepository diagnosticrepository)
        {
            base.AddObject("diagnosticrepository", diagnosticrepository);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the diseases EntitySet.
        /// </summary>
        public void AddTodiseases(diseases diseases)
        {
            base.AddObject("diseases", diseases);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the dxfrecuente EntitySet.
        /// </summary>
        public void AddTodxfrecuente(dxfrecuente dxfrecuente)
        {
            base.AddObject("dxfrecuente", dxfrecuente);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the dxfrecuentedetalle EntitySet.
        /// </summary>
        public void AddTodxfrecuentedetalle(dxfrecuentedetalle dxfrecuentedetalle)
        {
            base.AddObject("dxfrecuentedetalle", dxfrecuentedetalle);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the employee EntitySet.
        /// </summary>
        public void AddToemployee(employee employee)
        {
            base.AddObject("employee", employee);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the employercompany EntitySet.
        /// </summary>
        public void AddToemployercompany(employercompany employercompany)
        {
            base.AddObject("employercompany", employercompany);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the empresasempleadoras EntitySet.
        /// </summary>
        public void AddToempresasempleadoras(empresasempleadoras empresasempleadoras)
        {
            base.AddObject("empresasempleadoras", empresasempleadoras);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the familymedicalantecedents EntitySet.
        /// </summary>
        public void AddTofamilymedicalantecedents(familymedicalantecedents familymedicalantecedents)
        {
            base.AddObject("familymedicalantecedents", familymedicalantecedents);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ges EntitySet.
        /// </summary>
        public void AddToges(ges ges)
        {
            base.AddObject("ges", ges);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the groupoccupation EntitySet.
        /// </summary>
        public void AddTogroupoccupation(groupoccupation groupoccupation)
        {
            base.AddObject("groupoccupation", groupoccupation);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the hcactualizado EntitySet.
        /// </summary>
        public void AddTohcactualizado(hcactualizado hcactualizado)
        {
            base.AddObject("hcactualizado", hcactualizado);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the headcount EntitySet.
        /// </summary>
        public void AddToheadcount(headcount headcount)
        {
            base.AddObject("headcount", headcount);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the history EntitySet.
        /// </summary>
        public void AddTohistory(history history)
        {
            base.AddObject("history", history);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the interfacebc300 EntitySet.
        /// </summary>
        public void AddTointerfacebc300(interfacebc300 interfacebc300)
        {
            base.AddObject("interfacebc300", interfacebc300);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the interfaceeso EntitySet.
        /// </summary>
        public void AddTointerfaceeso(interfaceeso interfaceeso)
        {
            base.AddObject("interfaceeso", interfaceeso);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the location EntitySet.
        /// </summary>
        public void AddTolocation(location location)
        {
            base.AddObject("location", location);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the log EntitySet.
        /// </summary>
        public void AddTolog(log log)
        {
            base.AddObject("log", log);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the loginexterno EntitySet.
        /// </summary>
        public void AddTologinexterno(loginexterno loginexterno)
        {
            base.AddObject("loginexterno", loginexterno);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the masterrecommendationrestricction EntitySet.
        /// </summary>
        public void AddTomasterrecommendationrestricction(masterrecommendationrestricction masterrecommendationrestricction)
        {
            base.AddObject("masterrecommendationrestricction", masterrecommendationrestricction);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the medication EntitySet.
        /// </summary>
        public void AddTomedication(medication medication)
        {
            base.AddObject("medication", medication);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the movement EntitySet.
        /// </summary>
        public void AddTomovement(movement movement)
        {
            base.AddObject("movement", movement);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the movementdetail EntitySet.
        /// </summary>
        public void AddTomovementdetail(movementdetail movementdetail)
        {
            base.AddObject("movementdetail", movementdetail);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the multimediafile EntitySet.
        /// </summary>
        public void AddTomultimediafile(multimediafile multimediafile)
        {
            base.AddObject("multimediafile", multimediafile);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the node EntitySet.
        /// </summary>
        public void AddTonode(node node)
        {
            base.AddObject("node", node);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the nodedatabasestatus EntitySet.
        /// </summary>
        public void AddTonodedatabasestatus(nodedatabasestatus nodedatabasestatus)
        {
            base.AddObject("nodedatabasestatus", nodedatabasestatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the nodeorganizationlocationprofile EntitySet.
        /// </summary>
        public void AddTonodeorganizationlocationprofile(nodeorganizationlocationprofile nodeorganizationlocationprofile)
        {
            base.AddObject("nodeorganizationlocationprofile", nodeorganizationlocationprofile);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the nodeorganizationlocationwarehouseprofile EntitySet.
        /// </summary>
        public void AddTonodeorganizationlocationwarehouseprofile(nodeorganizationlocationwarehouseprofile nodeorganizationlocationwarehouseprofile)
        {
            base.AddObject("nodeorganizationlocationwarehouseprofile", nodeorganizationlocationwarehouseprofile);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the nodeorganizationprofile EntitySet.
        /// </summary>
        public void AddTonodeorganizationprofile(nodeorganizationprofile nodeorganizationprofile)
        {
            base.AddObject("nodeorganizationprofile", nodeorganizationprofile);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the nodeserviceprofile EntitySet.
        /// </summary>
        public void AddTonodeserviceprofile(nodeserviceprofile nodeserviceprofile)
        {
            base.AddObject("nodeserviceprofile", nodeserviceprofile);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the nodesyncstatus EntitySet.
        /// </summary>
        public void AddTonodesyncstatus(nodesyncstatus nodesyncstatus)
        {
            base.AddObject("nodesyncstatus", nodesyncstatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the noxioushabits EntitySet.
        /// </summary>
        public void AddTonoxioushabits(noxioushabits noxioushabits)
        {
            base.AddObject("noxioushabits", noxioushabits);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the occupation EntitySet.
        /// </summary>
        public void AddTooccupation(occupation occupation)
        {
            base.AddObject("occupation", occupation);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the ordenreporte EntitySet.
        /// </summary>
        public void AddToordenreporte(ordenreporte ordenreporte)
        {
            base.AddObject("ordenreporte", ordenreporte);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the organization EntitySet.
        /// </summary>
        public void AddToorganization(organization organization)
        {
            base.AddObject("organization", organization);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the pacient EntitySet.
        /// </summary>
        public void AddTopacient(pacient pacient)
        {
            base.AddObject("pacient", pacient);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the pacientmultimediadata EntitySet.
        /// </summary>
        public void AddTopacientmultimediadata(pacientmultimediadata pacientmultimediadata)
        {
            base.AddObject("pacientmultimediadata", pacientmultimediadata);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the person EntitySet.
        /// </summary>
        public void AddToperson(person person)
        {
            base.AddObject("person", person);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the personmedicalhistory EntitySet.
        /// </summary>
        public void AddTopersonmedicalhistory(personmedicalhistory personmedicalhistory)
        {
            base.AddObject("personmedicalhistory", personmedicalhistory);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the portaluser EntitySet.
        /// </summary>
        public void AddToportaluser(portaluser portaluser)
        {
            base.AddObject("portaluser", portaluser);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the portaluseraccess EntitySet.
        /// </summary>
        public void AddToportaluseraccess(portaluseraccess portaluseraccess)
        {
            base.AddObject("portaluseraccess", portaluseraccess);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the portaluserpermission EntitySet.
        /// </summary>
        public void AddToportaluserpermission(portaluserpermission portaluserpermission)
        {
            base.AddObject("portaluserpermission", portaluserpermission);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the procedurebyservice EntitySet.
        /// </summary>
        public void AddToprocedurebyservice(procedurebyservice procedurebyservice)
        {
            base.AddObject("procedurebyservice", procedurebyservice);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the product EntitySet.
        /// </summary>
        public void AddToproduct(product product)
        {
            base.AddObject("product", product);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the productsformigration EntitySet.
        /// </summary>
        public void AddToproductsformigration(productsformigration productsformigration)
        {
            base.AddObject("productsformigration", productsformigration);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the productwarehouse EntitySet.
        /// </summary>
        public void AddToproductwarehouse(productwarehouse productwarehouse)
        {
            base.AddObject("productwarehouse", productwarehouse);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the professional EntitySet.
        /// </summary>
        public void AddToprofessional(professional professional)
        {
            base.AddObject("professional", professional);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the protocol EntitySet.
        /// </summary>
        public void AddToprotocol(protocol protocol)
        {
            base.AddObject("protocol", protocol);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the protocolcomponent EntitySet.
        /// </summary>
        public void AddToprotocolcomponent(protocolcomponent protocolcomponent)
        {
            base.AddObject("protocolcomponent", protocolcomponent);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the protocolregcovid EntitySet.
        /// </summary>
        public void AddToprotocolregcovid(protocolregcovid protocolregcovid)
        {
            base.AddObject("protocolregcovid", protocolregcovid);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the protocolsystemuser EntitySet.
        /// </summary>
        public void AddToprotocolsystemuser(protocolsystemuser protocolsystemuser)
        {
            base.AddObject("protocolsystemuser", protocolsystemuser);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the recommendation EntitySet.
        /// </summary>
        public void AddTorecommendation(recommendation recommendation)
        {
            base.AddObject("recommendation", recommendation);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the restrictedwarehouseprofile EntitySet.
        /// </summary>
        public void AddTorestrictedwarehouseprofile(restrictedwarehouseprofile restrictedwarehouseprofile)
        {
            base.AddObject("restrictedwarehouseprofile", restrictedwarehouseprofile);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the restriction EntitySet.
        /// </summary>
        public void AddTorestriction(restriction restriction)
        {
            base.AddObject("restriction", restriction);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the rolenode EntitySet.
        /// </summary>
        public void AddTorolenode(rolenode rolenode)
        {
            base.AddObject("rolenode", rolenode);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the rolenodecomponentprofile EntitySet.
        /// </summary>
        public void AddTorolenodecomponentprofile(rolenodecomponentprofile rolenodecomponentprofile)
        {
            base.AddObject("rolenodecomponentprofile", rolenodecomponentprofile);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the rolenodeprofile EntitySet.
        /// </summary>
        public void AddTorolenodeprofile(rolenodeprofile rolenodeprofile)
        {
            base.AddObject("rolenodeprofile", rolenodeprofile);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the secuential EntitySet.
        /// </summary>
        public void AddTosecuential(secuential secuential)
        {
            base.AddObject("secuential", secuential);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the servernodesync EntitySet.
        /// </summary>
        public void AddToservernodesync(servernodesync servernodesync)
        {
            base.AddObject("servernodesync", servernodesync);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the serversyncstatus EntitySet.
        /// </summary>
        public void AddToserversyncstatus(serversyncstatus serversyncstatus)
        {
            base.AddObject("serversyncstatus", serversyncstatus);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the service EntitySet.
        /// </summary>
        public void AddToservice(service service)
        {
            base.AddObject("service", service);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the servicecomponent EntitySet.
        /// </summary>
        public void AddToservicecomponent(servicecomponent servicecomponent)
        {
            base.AddObject("servicecomponent", servicecomponent);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the servicecomponentfields EntitySet.
        /// </summary>
        public void AddToservicecomponentfields(servicecomponentfields servicecomponentfields)
        {
            base.AddObject("servicecomponentfields", servicecomponentfields);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the servicecomponentfieldvalues EntitySet.
        /// </summary>
        public void AddToservicecomponentfieldvalues(servicecomponentfieldvalues servicecomponentfieldvalues)
        {
            base.AddObject("servicecomponentfieldvalues", servicecomponentfieldvalues);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the servicecomponentfieldvaluesmultimedia EntitySet.
        /// </summary>
        public void AddToservicecomponentfieldvaluesmultimedia(servicecomponentfieldvaluesmultimedia servicecomponentfieldvaluesmultimedia)
        {
            base.AddObject("servicecomponentfieldvaluesmultimedia", servicecomponentfieldvaluesmultimedia);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the servicecomponentmultimedia EntitySet.
        /// </summary>
        public void AddToservicecomponentmultimedia(servicecomponentmultimedia servicecomponentmultimedia)
        {
            base.AddObject("servicecomponentmultimedia", servicecomponentmultimedia);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the servicefact EntitySet.
        /// </summary>
        public void AddToservicefact(servicefact servicefact)
        {
            base.AddObject("servicefact", servicefact);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the servicemultimedia EntitySet.
        /// </summary>
        public void AddToservicemultimedia(servicemultimedia servicemultimedia)
        {
            base.AddObject("servicemultimedia", servicemultimedia);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the serviceorder EntitySet.
        /// </summary>
        public void AddToserviceorder(serviceorder serviceorder)
        {
            base.AddObject("serviceorder", serviceorder);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the serviceorderdetail EntitySet.
        /// </summary>
        public void AddToserviceorderdetail(serviceorderdetail serviceorderdetail)
        {
            base.AddObject("serviceorderdetail", serviceorderdetail);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the servicespivot EntitySet.
        /// </summary>
        public void AddToservicespivot(servicespivot servicespivot)
        {
            base.AddObject("servicespivot", servicespivot);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the softwarecomponentrelease EntitySet.
        /// </summary>
        public void AddTosoftwarecomponentrelease(softwarecomponentrelease softwarecomponentrelease)
        {
            base.AddObject("softwarecomponentrelease", softwarecomponentrelease);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the supplier EntitySet.
        /// </summary>
        public void AddTosupplier(supplier supplier)
        {
            base.AddObject("supplier", supplier);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the systemparameter EntitySet.
        /// </summary>
        public void AddTosystemparameter(systemparameter systemparameter)
        {
            base.AddObject("systemparameter", systemparameter);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the systemuser EntitySet.
        /// </summary>
        public void AddTosystemuser(systemuser systemuser)
        {
            base.AddObject("systemuser", systemuser);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the systemusergobalprofile EntitySet.
        /// </summary>
        public void AddTosystemusergobalprofile(systemusergobalprofile systemusergobalprofile)
        {
            base.AddObject("systemusergobalprofile", systemusergobalprofile);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the systemuserrolenode EntitySet.
        /// </summary>
        public void AddTosystemuserrolenode(systemuserrolenode systemuserrolenode)
        {
            base.AddObject("systemuserrolenode", systemuserrolenode);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the testdevice EntitySet.
        /// </summary>
        public void AddTotestdevice(testdevice testdevice)
        {
            base.AddObject("testdevice", testdevice);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the typeofeep EntitySet.
        /// </summary>
        public void AddTotypeofeep(typeofeep typeofeep)
        {
            base.AddObject("typeofeep", typeofeep);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the usuarioregcovid EntitySet.
        /// </summary>
        public void AddTousuarioregcovid(usuarioregcovid usuarioregcovid)
        {
            base.AddObject("usuarioregcovid", usuarioregcovid);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the usuarioregcovidorganization EntitySet.
        /// </summary>
        public void AddTousuarioregcovidorganization(usuarioregcovidorganization usuarioregcovidorganization)
        {
            base.AddObject("usuarioregcovidorganization", usuarioregcovidorganization);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the warehouse EntitySet.
        /// </summary>
        public void AddTowarehouse(warehouse warehouse)
        {
            base.AddObject("warehouse", warehouse);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the workstationdangers EntitySet.
        /// </summary>
        public void AddToworkstationdangers(workstationdangers workstationdangers)
        {
            base.AddObject("workstationdangers", workstationdangers);
        }

        #endregion

        #region Methods

    
        /// <summary>
        /// There are no comments for atenderpacientecategoria in the schema.
        /// </summary>
        public ObjectResult<atenderpacientecategoriaResult> atenderpacientecategoria (global::System.Nullable<int> categoria, string serviceid)
        {
            ObjectParameter categoriaParameter;
            if (categoria.HasValue)
            {
                categoriaParameter = new ObjectParameter("categoria", categoria);
            }
            else
            {
                categoriaParameter = new ObjectParameter("categoria", typeof(global::System.Nullable<int>));
            }
            ObjectParameter serviceidParameter;
            if (serviceid != null)
            {
                serviceidParameter = new ObjectParameter("serviceid", serviceid);
            }
            else
            {
                serviceidParameter = new ObjectParameter("serviceid", typeof(string));
            }
            return base.ExecuteFunction<atenderpacientecategoriaResult>("SigesoftEntitiesModel.atenderpacientecategoria", categoriaParameter, serviceidParameter);
        }

    
        /// <summary>
        /// There are no comments for background_comprar_registro_activo in the schema.
        /// </summary>
        public ObjectResult<background_comprar_registro_activoResult> background_comprar_registro_activo (string dni, global::System.Nullable<System.DateTime> fechaExamen)
        {
            ObjectParameter dniParameter;
            if (dni != null)
            {
                dniParameter = new ObjectParameter("dni", dni);
            }
            else
            {
                dniParameter = new ObjectParameter("dni", typeof(string));
            }
            ObjectParameter fechaExamenParameter;
            if (fechaExamen.HasValue)
            {
                fechaExamenParameter = new ObjectParameter("fechaExamen", fechaExamen);
            }
            else
            {
                fechaExamenParameter = new ObjectParameter("fechaExamen", typeof(global::System.Nullable<System.DateTime>));
            }
            return base.ExecuteFunction<background_comprar_registro_activoResult>("SigesoftEntitiesModel.background_comprar_registro_activo", dniParameter, fechaExamenParameter);
        }

    
        /// <summary>
        /// There are no comments for background_consultar_registros_vigcovid in the schema.
        /// </summary>
        public ObjectResult<background_comprar_registro_activoResult> background_consultar_registros_vigcovid (string dni)
        {
            ObjectParameter dniParameter;
            if (dni != null)
            {
                dniParameter = new ObjectParameter("dni", dni);
            }
            else
            {
                dniParameter = new ObjectParameter("dni", typeof(string));
            }
            return base.ExecuteFunction<background_comprar_registro_activoResult>("SigesoftEntitiesModel.background_consultar_registros_vigcovid", dniParameter);
        }

    
        /// <summary>
        /// There are no comments for background_enviar_examen_vigcovid in the schema.
        /// </summary>
        public void background_enviar_examen_vigcovid (global::System.Nullable<int> registroId, global::System.Nullable<int> resultado, global::System.Nullable<System.DateTime> fechaExamen, string componentId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.background_enviar_examen_vigcovid";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter registroIdParameter = new EntityParameter("registroId", System.Data.DbType.Int32);
                if (registroId.HasValue)
                  registroIdParameter.Value = registroId;
                command.Parameters.Add(registroIdParameter);
                EntityParameter resultadoParameter = new EntityParameter("resultado", System.Data.DbType.Int32);
                if (resultado.HasValue)
                  resultadoParameter.Value = resultado;
                command.Parameters.Add(resultadoParameter);
                EntityParameter fechaExamenParameter = new EntityParameter("fechaExamen", System.Data.DbType.DateTime);
                if (fechaExamen.HasValue)
                  fechaExamenParameter.Value = fechaExamen;
                command.Parameters.Add(fechaExamenParameter);
                EntityParameter componentIdParameter = new EntityParameter("componentId", System.Data.DbType.String);
                if (componentId != null)
                  componentIdParameter.Value = componentId;
                command.Parameters.Add(componentIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for borrartableinterface in the schema.
        /// </summary>
        public void borrartableinterface ()
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.borrartableinterface";
                command.Connection = (EntityConnection)this.Connection;
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for buscar_paciente in the schema.
        /// </summary>
        public ObjectResult<buscar_pacienteResult> buscar_paciente (string Nombre, string ApellidoPaterno, string ApellidoMaterno)
        {
            ObjectParameter NombreParameter;
            if (Nombre != null)
            {
                NombreParameter = new ObjectParameter("Nombre", Nombre);
            }
            else
            {
                NombreParameter = new ObjectParameter("Nombre", typeof(string));
            }
            ObjectParameter ApellidoPaternoParameter;
            if (ApellidoPaterno != null)
            {
                ApellidoPaternoParameter = new ObjectParameter("ApellidoPaterno", ApellidoPaterno);
            }
            else
            {
                ApellidoPaternoParameter = new ObjectParameter("ApellidoPaterno", typeof(string));
            }
            ObjectParameter ApellidoMaternoParameter;
            if (ApellidoMaterno != null)
            {
                ApellidoMaternoParameter = new ObjectParameter("ApellidoMaterno", ApellidoMaterno);
            }
            else
            {
                ApellidoMaternoParameter = new ObjectParameter("ApellidoMaterno", typeof(string));
            }
            return base.ExecuteFunction<buscar_pacienteResult>("SigesoftEntitiesModel.buscar_paciente", NombreParameter, ApellidoPaternoParameter, ApellidoMaternoParameter);
        }

    
        /// <summary>
        /// There are no comments for drz_bs300read in the schema.
        /// </summary>
        public ObjectResult<drz_bs300readResult> drz_bs300read (string v_ServiceId)
        {
            ObjectParameter v_ServiceIdParameter;
            if (v_ServiceId != null)
            {
                v_ServiceIdParameter = new ObjectParameter("v_ServiceId", v_ServiceId);
            }
            else
            {
                v_ServiceIdParameter = new ObjectParameter("v_ServiceId", typeof(string));
            }
            return base.ExecuteFunction<drz_bs300readResult>("SigesoftEntitiesModel.drz_bs300read", v_ServiceIdParameter);
        }

    
        /// <summary>
        /// There are no comments for drz_bs300write in the schema.
        /// </summary>
        public void drz_bs300write (string v_ServiceId, string v_ComponentFieldId, string v_ResultComponentField)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.drz_bs300write";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter v_ServiceIdParameter = new EntityParameter("v_ServiceId", System.Data.DbType.String);
                if (v_ServiceId != null)
                  v_ServiceIdParameter.Value = v_ServiceId;
                command.Parameters.Add(v_ServiceIdParameter);
                EntityParameter v_ComponentFieldIdParameter = new EntityParameter("v_ComponentFieldId", System.Data.DbType.String);
                if (v_ComponentFieldId != null)
                  v_ComponentFieldIdParameter.Value = v_ComponentFieldId;
                command.Parameters.Add(v_ComponentFieldIdParameter);
                EntityParameter v_ResultComponentFieldParameter = new EntityParameter("v_ResultComponentField", System.Data.DbType.String);
                if (v_ResultComponentField != null)
                  v_ResultComponentFieldParameter.Value = v_ResultComponentField;
                command.Parameters.Add(v_ResultComponentFieldParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for enlazarserviciofactura in the schema.
        /// </summary>
        public void enlazarserviciofactura (string v_ServiceId, string cdoc_serie, string cdoc_nro, global::System.Nullable<decimal> prec_venta, string cusu_crea, string v_comment)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.enlazarserviciofactura";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter v_ServiceIdParameter = new EntityParameter("v_ServiceId", System.Data.DbType.String);
                if (v_ServiceId != null)
                  v_ServiceIdParameter.Value = v_ServiceId;
                command.Parameters.Add(v_ServiceIdParameter);
                EntityParameter cdoc_serieParameter = new EntityParameter("cdoc_serie", System.Data.DbType.String);
                if (cdoc_serie != null)
                  cdoc_serieParameter.Value = cdoc_serie;
                command.Parameters.Add(cdoc_serieParameter);
                EntityParameter cdoc_nroParameter = new EntityParameter("cdoc_nro", System.Data.DbType.String);
                if (cdoc_nro != null)
                  cdoc_nroParameter.Value = cdoc_nro;
                command.Parameters.Add(cdoc_nroParameter);
                EntityParameter prec_ventaParameter = new EntityParameter("prec_venta", System.Data.DbType.Decimal);
                if (prec_venta.HasValue)
                  prec_ventaParameter.Value = prec_venta;
                command.Parameters.Add(prec_ventaParameter);
                EntityParameter cusu_creaParameter = new EntityParameter("cusu_crea", System.Data.DbType.String);
                if (cusu_crea != null)
                  cusu_creaParameter.Value = cusu_crea;
                command.Parameters.Add(cusu_creaParameter);
                EntityParameter v_commentParameter = new EntityParameter("v_comment", System.Data.DbType.String);
                if (v_comment != null)
                  v_commentParameter.Value = v_comment;
                command.Parameters.Add(v_commentParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for getallcampaniascovid in the schema.
        /// </summary>
        public ObjectResult<getallcampaniascovidResult> getallcampaniascovid ()
        {
            return base.ExecuteFunction<getallcampaniascovidResult>("SigesoftEntitiesModel.getallcampaniascovid");
        }

    
        /// <summary>
        /// There are no comments for getpositivoscovid in the schema.
        /// </summary>
        public ObjectResult<getpositivoscovidResult> getpositivoscovid (global::System.Nullable<System.DateTime> pdatBeginDate, global::System.Nullable<System.DateTime> pdatEndDate, string OrganizationId)
        {
            ObjectParameter pdatBeginDateParameter;
            if (pdatBeginDate.HasValue)
            {
                pdatBeginDateParameter = new ObjectParameter("pdatBeginDate", pdatBeginDate);
            }
            else
            {
                pdatBeginDateParameter = new ObjectParameter("pdatBeginDate", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter pdatEndDateParameter;
            if (pdatEndDate.HasValue)
            {
                pdatEndDateParameter = new ObjectParameter("pdatEndDate", pdatEndDate);
            }
            else
            {
                pdatEndDateParameter = new ObjectParameter("pdatEndDate", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter OrganizationIdParameter;
            if (OrganizationId != null)
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", OrganizationId);
            }
            else
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", typeof(string));
            }
            return base.ExecuteFunction<getpositivoscovidResult>("SigesoftEntitiesModel.getpositivoscovid", pdatBeginDateParameter, pdatEndDateParameter, OrganizationIdParameter);
        }

    
        /// <summary>
        /// There are no comments for getservicespagedandfilteredfullnode in the schema.
        /// </summary>
        public ObjectResult<getservicespagedandfilteredfullnodeResult> getservicespagedandfilteredfullnode (global::System.Nullable<System.DateTime> pdatBeginDate, global::System.Nullable<System.DateTime> pdatEndDate)
        {
            ObjectParameter pdatBeginDateParameter;
            if (pdatBeginDate.HasValue)
            {
                pdatBeginDateParameter = new ObjectParameter("pdatBeginDate", pdatBeginDate);
            }
            else
            {
                pdatBeginDateParameter = new ObjectParameter("pdatBeginDate", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter pdatEndDateParameter;
            if (pdatEndDate.HasValue)
            {
                pdatEndDateParameter = new ObjectParameter("pdatEndDate", pdatEndDate);
            }
            else
            {
                pdatEndDateParameter = new ObjectParameter("pdatEndDate", typeof(global::System.Nullable<System.DateTime>));
            }
            return base.ExecuteFunction<getservicespagedandfilteredfullnodeResult>("SigesoftEntitiesModel.getservicespagedandfilteredfullnode", pdatBeginDateParameter, pdatEndDateParameter);
        }

    
        /// <summary>
        /// There are no comments for insertarinterface in the schema.
        /// </summary>
        public void insertarinterface (string ServiceId, string ComponentId, string ResultComponent)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.insertarinterface";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceIdParameter = new EntityParameter("ServiceId", System.Data.DbType.String);
                if (ServiceId != null)
                  ServiceIdParameter.Value = ServiceId;
                command.Parameters.Add(ServiceIdParameter);
                EntityParameter ComponentIdParameter = new EntityParameter("ComponentId", System.Data.DbType.String);
                if (ComponentId != null)
                  ComponentIdParameter.Value = ComponentId;
                command.Parameters.Add(ComponentIdParameter);
                EntityParameter ResultComponentParameter = new EntityParameter("ResultComponent", System.Data.DbType.String);
                if (ResultComponent != null)
                  ResultComponentParameter.Value = ResultComponent;
                command.Parameters.Add(ResultComponentParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for liberarpacientecategoria in the schema.
        /// </summary>
        public ObjectResult<atenderpacientecategoriaResult> liberarpacientecategoria (global::System.Nullable<int> categoria, string serviceid)
        {
            ObjectParameter categoriaParameter;
            if (categoria.HasValue)
            {
                categoriaParameter = new ObjectParameter("categoria", categoria);
            }
            else
            {
                categoriaParameter = new ObjectParameter("categoria", typeof(global::System.Nullable<int>));
            }
            ObjectParameter serviceidParameter;
            if (serviceid != null)
            {
                serviceidParameter = new ObjectParameter("serviceid", serviceid);
            }
            else
            {
                serviceidParameter = new ObjectParameter("serviceid", typeof(string));
            }
            return base.ExecuteFunction<atenderpacientecategoriaResult>("SigesoftEntitiesModel.liberarpacientecategoria", categoriaParameter, serviceidParameter);
        }

    
        /// <summary>
        /// There are no comments for llamarpacientecategoria in the schema.
        /// </summary>
        public ObjectResult<atenderpacientecategoriaResult> llamarpacientecategoria (global::System.Nullable<int> categoria, string serviceid)
        {
            ObjectParameter categoriaParameter;
            if (categoria.HasValue)
            {
                categoriaParameter = new ObjectParameter("categoria", categoria);
            }
            else
            {
                categoriaParameter = new ObjectParameter("categoria", typeof(global::System.Nullable<int>));
            }
            ObjectParameter serviceidParameter;
            if (serviceid != null)
            {
                serviceidParameter = new ObjectParameter("serviceid", serviceid);
            }
            else
            {
                serviceidParameter = new ObjectParameter("serviceid", typeof(string));
            }
            return base.ExecuteFunction<atenderpacientecategoriaResult>("SigesoftEntitiesModel.llamarpacientecategoria", categoriaParameter, serviceidParameter);
        }

    
        /// <summary>
        /// There are no comments for obteneragendaporcategoria in the schema.
        /// </summary>
        public ObjectResult<obteneragendaporcategoriaResult> obteneragendaporcategoria (global::System.Nullable<int> categoria)
        {
            ObjectParameter categoriaParameter;
            if (categoria.HasValue)
            {
                categoriaParameter = new ObjectParameter("categoria", categoria);
            }
            else
            {
                categoriaParameter = new ObjectParameter("categoria", typeof(global::System.Nullable<int>));
            }
            return base.ExecuteFunction<obteneragendaporcategoriaResult>("SigesoftEntitiesModel.obteneragendaporcategoria", categoriaParameter);
        }

    
        /// <summary>
        /// There are no comments for obteneragendaporcategorianodo in the schema.
        /// </summary>
        public ObjectResult<obteneragendaporcategoriaResult> obteneragendaporcategorianodo (global::System.Nullable<int> categoria, string nodeid)
        {
            ObjectParameter categoriaParameter;
            if (categoria.HasValue)
            {
                categoriaParameter = new ObjectParameter("categoria", categoria);
            }
            else
            {
                categoriaParameter = new ObjectParameter("categoria", typeof(global::System.Nullable<int>));
            }
            ObjectParameter nodeidParameter;
            if (nodeid != null)
            {
                nodeidParameter = new ObjectParameter("nodeid", nodeid);
            }
            else
            {
                nodeidParameter = new ObjectParameter("nodeid", typeof(string));
            }
            return base.ExecuteFunction<obteneragendaporcategoriaResult>("SigesoftEntitiesModel.obteneragendaporcategorianodo", categoriaParameter, nodeidParameter);
        }

    
        /// <summary>
        /// There are no comments for obtenerdetalladoservicios in the schema.
        /// </summary>
        public ObjectResult<obtenerdetalladoserviciosResult> obtenerdetalladoservicios (global::System.Nullable<System.DateTime> fecha_ini, global::System.Nullable<System.DateTime> fecha_fin, string cliente)
        {
            ObjectParameter fecha_iniParameter;
            if (fecha_ini.HasValue)
            {
                fecha_iniParameter = new ObjectParameter("fecha_ini", fecha_ini);
            }
            else
            {
                fecha_iniParameter = new ObjectParameter("fecha_ini", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter fecha_finParameter;
            if (fecha_fin.HasValue)
            {
                fecha_finParameter = new ObjectParameter("fecha_fin", fecha_fin);
            }
            else
            {
                fecha_finParameter = new ObjectParameter("fecha_fin", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter clienteParameter;
            if (cliente != null)
            {
                clienteParameter = new ObjectParameter("cliente", cliente);
            }
            else
            {
                clienteParameter = new ObjectParameter("cliente", typeof(string));
            }
            return base.ExecuteFunction<obtenerdetalladoserviciosResult>("SigesoftEntitiesModel.obtenerdetalladoservicios", fecha_iniParameter, fecha_finParameter, clienteParameter);
        }

    
        /// <summary>
        /// There are no comments for obtenerestadoxcomponentes in the schema.
        /// </summary>
        public ObjectResult<obtenerestadoxcomponentesResult> obtenerestadoxcomponentes (string serviceid)
        {
            ObjectParameter serviceidParameter;
            if (serviceid != null)
            {
                serviceidParameter = new ObjectParameter("serviceid", serviceid);
            }
            else
            {
                serviceidParameter = new ObjectParameter("serviceid", typeof(string));
            }
            return base.ExecuteFunction<obtenerestadoxcomponentesResult>("SigesoftEntitiesModel.obtenerestadoxcomponentes", serviceidParameter);
        }

    
        /// <summary>
        /// There are no comments for obtenerhojatrabajolab in the schema.
        /// </summary>
        public ObjectResult<obtenerhojatrabajolabResult> obtenerhojatrabajolab (global::System.Nullable<System.DateTime> Fi, global::System.Nullable<System.DateTime> Ff)
        {
            ObjectParameter FiParameter;
            if (Fi.HasValue)
            {
                FiParameter = new ObjectParameter("Fi", Fi);
            }
            else
            {
                FiParameter = new ObjectParameter("Fi", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter FfParameter;
            if (Ff.HasValue)
            {
                FfParameter = new ObjectParameter("Ff", Ff);
            }
            else
            {
                FfParameter = new ObjectParameter("Ff", typeof(global::System.Nullable<System.DateTime>));
            }
            return base.ExecuteFunction<obtenerhojatrabajolabResult>("SigesoftEntitiesModel.obtenerhojatrabajolab", FiParameter, FfParameter);
        }

    
        /// <summary>
        /// There are no comments for obtenerresultados_webxsystemuser in the schema.
        /// </summary>
        public ObjectResult<obtenerresultados_webxsystemuserResult> obtenerresultados_webxsystemuser (global::System.Nullable<System.DateTime> fecha_ini, global::System.Nullable<System.DateTime> fecha_fin, global::System.Nullable<int> systemuserid)
        {
            ObjectParameter fecha_iniParameter;
            if (fecha_ini.HasValue)
            {
                fecha_iniParameter = new ObjectParameter("fecha_ini", fecha_ini);
            }
            else
            {
                fecha_iniParameter = new ObjectParameter("fecha_ini", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter fecha_finParameter;
            if (fecha_fin.HasValue)
            {
                fecha_finParameter = new ObjectParameter("fecha_fin", fecha_fin);
            }
            else
            {
                fecha_finParameter = new ObjectParameter("fecha_fin", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter systemuseridParameter;
            if (systemuserid.HasValue)
            {
                systemuseridParameter = new ObjectParameter("systemuserid", systemuserid);
            }
            else
            {
                systemuseridParameter = new ObjectParameter("systemuserid", typeof(global::System.Nullable<int>));
            }
            return base.ExecuteFunction<obtenerresultados_webxsystemuserResult>("SigesoftEntitiesModel.obtenerresultados_webxsystemuser", fecha_iniParameter, fecha_finParameter, systemuseridParameter);
        }

    
        /// <summary>
        /// There are no comments for obtenerresultados_webxsystemuser2 in the schema.
        /// </summary>
        public void obtenerresultados_webxsystemuser2 (global::System.Nullable<System.DateTime> fecha_ini, global::System.Nullable<System.DateTime> fecha_fin, global::System.Nullable<int> systemuserid, string paciente, string empresa, string protocolo)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.obtenerresultados_webxsystemuser2";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter fecha_iniParameter = new EntityParameter("fecha_ini", System.Data.DbType.DateTime);
                if (fecha_ini.HasValue)
                  fecha_iniParameter.Value = fecha_ini;
                command.Parameters.Add(fecha_iniParameter);
                EntityParameter fecha_finParameter = new EntityParameter("fecha_fin", System.Data.DbType.DateTime);
                if (fecha_fin.HasValue)
                  fecha_finParameter.Value = fecha_fin;
                command.Parameters.Add(fecha_finParameter);
                EntityParameter systemuseridParameter = new EntityParameter("systemuserid", System.Data.DbType.Int32);
                if (systemuserid.HasValue)
                  systemuseridParameter.Value = systemuserid;
                command.Parameters.Add(systemuseridParameter);
                EntityParameter pacienteParameter = new EntityParameter("paciente", System.Data.DbType.String);
                if (paciente != null)
                  pacienteParameter.Value = paciente;
                command.Parameters.Add(pacienteParameter);
                EntityParameter empresaParameter = new EntityParameter("empresa", System.Data.DbType.String);
                if (empresa != null)
                  empresaParameter.Value = empresa;
                command.Parameters.Add(empresaParameter);
                EntityParameter protocoloParameter = new EntityParameter("protocolo", System.Data.DbType.String);
                if (protocolo != null)
                  protocoloParameter.Value = protocolo;
                command.Parameters.Add(protocoloParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for obtenersabanafull in the schema.
        /// </summary>
        public void obtenersabanafull (global::System.Nullable<System.DateTime> Fi, global::System.Nullable<System.DateTime> Ff, global::System.Nullable<int> i_SystemUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.obtenersabanafull";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter FiParameter = new EntityParameter("Fi", System.Data.DbType.DateTime);
                if (Fi.HasValue)
                  FiParameter.Value = Fi;
                command.Parameters.Add(FiParameter);
                EntityParameter FfParameter = new EntityParameter("Ff", System.Data.DbType.DateTime);
                if (Ff.HasValue)
                  FfParameter.Value = Ff;
                command.Parameters.Add(FfParameter);
                EntityParameter i_SystemUserIdParameter = new EntityParameter("i_SystemUserId", System.Data.DbType.Int32);
                if (i_SystemUserId.HasValue)
                  i_SystemUserIdParameter.Value = i_SystemUserId;
                command.Parameters.Add(i_SystemUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for obtenersabanafullx in the schema.
        /// </summary>
        public void obtenersabanafullx (global::System.Nullable<System.DateTime> Fi, global::System.Nullable<System.DateTime> Ff, global::System.Nullable<int> i_SystemUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.obtenersabanafullx";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter FiParameter = new EntityParameter("Fi", System.Data.DbType.DateTime);
                if (Fi.HasValue)
                  FiParameter.Value = Fi;
                command.Parameters.Add(FiParameter);
                EntityParameter FfParameter = new EntityParameter("Ff", System.Data.DbType.DateTime);
                if (Ff.HasValue)
                  FfParameter.Value = Ff;
                command.Parameters.Add(FfParameter);
                EntityParameter i_SystemUserIdParameter = new EntityParameter("i_SystemUserId", System.Data.DbType.Int32);
                if (i_SystemUserId.HasValue)
                  i_SystemUserIdParameter.Value = i_SystemUserId;
                command.Parameters.Add(i_SystemUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for obtenersabanaxclientefull in the schema.
        /// </summary>
        public void obtenersabanaxclientefull (global::System.Nullable<System.DateTime> Fi, global::System.Nullable<System.DateTime> Ff, string v_Cliente)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.obtenersabanaxclientefull";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter FiParameter = new EntityParameter("Fi", System.Data.DbType.DateTime);
                if (Fi.HasValue)
                  FiParameter.Value = Fi;
                command.Parameters.Add(FiParameter);
                EntityParameter FfParameter = new EntityParameter("Ff", System.Data.DbType.DateTime);
                if (Ff.HasValue)
                  FfParameter.Value = Ff;
                command.Parameters.Add(FfParameter);
                EntityParameter v_ClienteParameter = new EntityParameter("v_Cliente", System.Data.DbType.String);
                if (v_Cliente != null)
                  v_ClienteParameter.Value = v_Cliente;
                command.Parameters.Add(v_ClienteParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for obtenerservicios in the schema.
        /// </summary>
        public ObjectResult<obtenerserviciosResult> obtenerservicios (global::System.Nullable<System.DateTime> Fi, global::System.Nullable<System.DateTime> Ff)
        {
            ObjectParameter FiParameter;
            if (Fi.HasValue)
            {
                FiParameter = new ObjectParameter("Fi", Fi);
            }
            else
            {
                FiParameter = new ObjectParameter("Fi", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter FfParameter;
            if (Ff.HasValue)
            {
                FfParameter = new ObjectParameter("Ff", Ff);
            }
            else
            {
                FfParameter = new ObjectParameter("Ff", typeof(global::System.Nullable<System.DateTime>));
            }
            return base.ExecuteFunction<obtenerserviciosResult>("SigesoftEntitiesModel.obtenerservicios", FiParameter, FfParameter);
        }

    
        /// <summary>
        /// There are no comments for obtenerserviciosxpaciente in the schema.
        /// </summary>
        public ObjectResult<obtenerserviciosxpacienteResult> obtenerserviciosxpaciente (global::System.Nullable<System.DateTime> fecha_ini, global::System.Nullable<System.DateTime> fecha_fin, string cliente)
        {
            ObjectParameter fecha_iniParameter;
            if (fecha_ini.HasValue)
            {
                fecha_iniParameter = new ObjectParameter("fecha_ini", fecha_ini);
            }
            else
            {
                fecha_iniParameter = new ObjectParameter("fecha_ini", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter fecha_finParameter;
            if (fecha_fin.HasValue)
            {
                fecha_finParameter = new ObjectParameter("fecha_fin", fecha_fin);
            }
            else
            {
                fecha_finParameter = new ObjectParameter("fecha_fin", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter clienteParameter;
            if (cliente != null)
            {
                clienteParameter = new ObjectParameter("cliente", cliente);
            }
            else
            {
                clienteParameter = new ObjectParameter("cliente", typeof(string));
            }
            return base.ExecuteFunction<obtenerserviciosxpacienteResult>("SigesoftEntitiesModel.obtenerserviciosxpaciente", fecha_iniParameter, fecha_finParameter, clienteParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_background_servicios_anteriores in the schema.
        /// </summary>
        public ObjectResult<regcovid_background_servicios_anterioresResult> regcovid_background_servicios_anteriores (string Dni)
        {
            ObjectParameter DniParameter;
            if (Dni != null)
            {
                DniParameter = new ObjectParameter("Dni", Dni);
            }
            else
            {
                DniParameter = new ObjectParameter("Dni", typeof(string));
            }
            return base.ExecuteFunction<regcovid_background_servicios_anterioresResult>("SigesoftEntitiesModel.regcovid_background_servicios_anteriores", DniParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_delete_brand in the schema.
        /// </summary>
        public ObjectResult<regcovid_delete_brandResult> regcovid_delete_brand (global::System.Nullable<int> iId)
        {
            ObjectParameter iIdParameter;
            if (iId.HasValue)
            {
                iIdParameter = new ObjectParameter("iId", iId);
            }
            else
            {
                iIdParameter = new ObjectParameter("iId", typeof(global::System.Nullable<int>));
            }
            return base.ExecuteFunction<regcovid_delete_brandResult>("SigesoftEntitiesModel.regcovid_delete_brand", iIdParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_delete_testdevice in the schema.
        /// </summary>
        public ObjectResult<regcovid_delete_brandResult> regcovid_delete_testdevice (global::System.Nullable<int> iId)
        {
            ObjectParameter iIdParameter;
            if (iId.HasValue)
            {
                iIdParameter = new ObjectParameter("iId", iId);
            }
            else
            {
                iIdParameter = new ObjectParameter("iId", typeof(global::System.Nullable<int>));
            }
            return base.ExecuteFunction<regcovid_delete_brandResult>("SigesoftEntitiesModel.regcovid_delete_testdevice", iIdParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_eliminarserviciobyserviceid in the schema.
        /// </summary>
        public void regcovid_eliminarserviciobyserviceid (string ServiceId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.regcovid_eliminarserviciobyserviceid";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceIdParameter = new EntityParameter("ServiceId", System.Data.DbType.String);
                if (ServiceId != null)
                  ServiceIdParameter.Value = ServiceId;
                command.Parameters.Add(ServiceIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for regcovid_get_empresas_empleadoras in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_empresas_empleadorasResult> regcovid_get_empresas_empleadoras (string Filtro)
        {
            ObjectParameter FiltroParameter;
            if (Filtro != null)
            {
                FiltroParameter = new ObjectParameter("Filtro", Filtro);
            }
            else
            {
                FiltroParameter = new ObjectParameter("Filtro", typeof(string));
            }
            return base.ExecuteFunction<regcovid_get_empresas_empleadorasResult>("SigesoftEntitiesModel.regcovid_get_empresas_empleadoras", FiltroParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_get_nodes in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_nodesResult> regcovid_get_nodes ()
        {
            return base.ExecuteFunction<regcovid_get_nodesResult>("SigesoftEntitiesModel.regcovid_get_nodes");
        }

    
        /// <summary>
        /// There are no comments for regcovid_get_protocolid in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_protocolidResult> regcovid_get_protocolid (string OrganizationId, string ComponentId)
        {
            ObjectParameter OrganizationIdParameter;
            if (OrganizationId != null)
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", OrganizationId);
            }
            else
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", typeof(string));
            }
            ObjectParameter ComponentIdParameter;
            if (ComponentId != null)
            {
                ComponentIdParameter = new ObjectParameter("ComponentId", ComponentId);
            }
            else
            {
                ComponentIdParameter = new ObjectParameter("ComponentId", typeof(string));
            }
            return base.ExecuteFunction<regcovid_get_protocolidResult>("SigesoftEntitiesModel.regcovid_get_protocolid", OrganizationIdParameter, ComponentIdParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_get_sedes in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_sedesResult> regcovid_get_sedes (string OrganizationId)
        {
            ObjectParameter OrganizationIdParameter;
            if (OrganizationId != null)
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", OrganizationId);
            }
            else
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", typeof(string));
            }
            return base.ExecuteFunction<regcovid_get_sedesResult>("SigesoftEntitiesModel.regcovid_get_sedes", OrganizationIdParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_get_systemparameters in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_systemparametersResult> regcovid_get_systemparameters (global::System.Nullable<int> GroupId)
        {
            ObjectParameter GroupIdParameter;
            if (GroupId.HasValue)
            {
                GroupIdParameter = new ObjectParameter("GroupId", GroupId);
            }
            else
            {
                GroupIdParameter = new ObjectParameter("GroupId", typeof(global::System.Nullable<int>));
            }
            return base.ExecuteFunction<regcovid_get_systemparametersResult>("SigesoftEntitiesModel.regcovid_get_systemparameters", GroupIdParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_get_values_component in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_values_componentResult> regcovid_get_values_component (string ServiceId, string ComponentId)
        {
            ObjectParameter ServiceIdParameter;
            if (ServiceId != null)
            {
                ServiceIdParameter = new ObjectParameter("ServiceId", ServiceId);
            }
            else
            {
                ServiceIdParameter = new ObjectParameter("ServiceId", typeof(string));
            }
            ObjectParameter ComponentIdParameter;
            if (ComponentId != null)
            {
                ComponentIdParameter = new ObjectParameter("ComponentId", ComponentId);
            }
            else
            {
                ComponentIdParameter = new ObjectParameter("ComponentId", typeof(string));
            }
            return base.ExecuteFunction<regcovid_get_values_componentResult>("SigesoftEntitiesModel.regcovid_get_values_component", ServiceIdParameter, ComponentIdParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_get_worker_from_hcactualizado in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_worker_from_hcactualizadoResult> regcovid_get_worker_from_hcactualizado (string Filtro)
        {
            ObjectParameter FiltroParameter;
            if (Filtro != null)
            {
                FiltroParameter = new ObjectParameter("Filtro", Filtro);
            }
            else
            {
                FiltroParameter = new ObjectParameter("Filtro", typeof(string));
            }
            return base.ExecuteFunction<regcovid_get_worker_from_hcactualizadoResult>("SigesoftEntitiesModel.regcovid_get_worker_from_hcactualizado", FiltroParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_indicadores in the schema.
        /// </summary>
        public ObjectResult<regcovid_indicadoresResult> regcovid_indicadores (string Node, global::System.Nullable<System.DateTime> FechaServicioStart, global::System.Nullable<System.DateTime> FechaServicioEnd)
        {
            ObjectParameter NodeParameter;
            if (Node != null)
            {
                NodeParameter = new ObjectParameter("Node", Node);
            }
            else
            {
                NodeParameter = new ObjectParameter("Node", typeof(string));
            }
            ObjectParameter FechaServicioStartParameter;
            if (FechaServicioStart.HasValue)
            {
                FechaServicioStartParameter = new ObjectParameter("FechaServicioStart", FechaServicioStart);
            }
            else
            {
                FechaServicioStartParameter = new ObjectParameter("FechaServicioStart", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter FechaServicioEndParameter;
            if (FechaServicioEnd.HasValue)
            {
                FechaServicioEndParameter = new ObjectParameter("FechaServicioEnd", FechaServicioEnd);
            }
            else
            {
                FechaServicioEndParameter = new ObjectParameter("FechaServicioEnd", typeof(global::System.Nullable<System.DateTime>));
            }
            return base.ExecuteFunction<regcovid_indicadoresResult>("SigesoftEntitiesModel.regcovid_indicadores", NodeParameter, FechaServicioStartParameter, FechaServicioEndParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_insert_brand in the schema.
        /// </summary>
        public ObjectResult<regcovid_delete_brandResult> regcovid_insert_brand (string vName)
        {
            ObjectParameter vNameParameter;
            if (vName != null)
            {
                vNameParameter = new ObjectParameter("vName", vName);
            }
            else
            {
                vNameParameter = new ObjectParameter("vName", typeof(string));
            }
            return base.ExecuteFunction<regcovid_delete_brandResult>("SigesoftEntitiesModel.regcovid_insert_brand", vNameParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_insert_empresas_empleadoras in the schema.
        /// </summary>
        public void regcovid_insert_empresas_empleadoras (string Nombre)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.regcovid_insert_empresas_empleadoras";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter NombreParameter = new EntityParameter("Nombre", System.Data.DbType.String);
                if (Nombre != null)
                  NombreParameter.Value = Nombre;
                command.Parameters.Add(NombreParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for regcovid_insert_testdevice in the schema.
        /// </summary>
        public ObjectResult<regcovid_delete_brandResult> regcovid_insert_testdevice (string vName, string vDescription, global::System.Nullable<int> iIdBrand, string vLot, global::System.Nullable<System.DateTime> dDueDate)
        {
            ObjectParameter vNameParameter;
            if (vName != null)
            {
                vNameParameter = new ObjectParameter("vName", vName);
            }
            else
            {
                vNameParameter = new ObjectParameter("vName", typeof(string));
            }
            ObjectParameter vDescriptionParameter;
            if (vDescription != null)
            {
                vDescriptionParameter = new ObjectParameter("vDescription", vDescription);
            }
            else
            {
                vDescriptionParameter = new ObjectParameter("vDescription", typeof(string));
            }
            ObjectParameter iIdBrandParameter;
            if (iIdBrand.HasValue)
            {
                iIdBrandParameter = new ObjectParameter("iIdBrand", iIdBrand);
            }
            else
            {
                iIdBrandParameter = new ObjectParameter("iIdBrand", typeof(global::System.Nullable<int>));
            }
            ObjectParameter vLotParameter;
            if (vLot != null)
            {
                vLotParameter = new ObjectParameter("vLot", vLot);
            }
            else
            {
                vLotParameter = new ObjectParameter("vLot", typeof(string));
            }
            ObjectParameter dDueDateParameter;
            if (dDueDate.HasValue)
            {
                dDueDateParameter = new ObjectParameter("dDueDate", dDueDate);
            }
            else
            {
                dDueDateParameter = new ObjectParameter("dDueDate", typeof(global::System.Nullable<System.DateTime>));
            }
            return base.ExecuteFunction<regcovid_delete_brandResult>("SigesoftEntitiesModel.regcovid_insert_testdevice", vNameParameter, vDescriptionParameter, iIdBrandParameter, vLotParameter, dDueDateParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_insertservice in the schema.
        /// </summary>
        public void regcovid_insertservice (string ServiceId, string ProtocolId, string PersonId, string EmpresaFacturacionId, string Sede, global::System.Nullable<int> TipoEmpresaCovidId, string TecnicoCovid, global::System.Nullable<int> ClinicaExternad, global::System.Nullable<int> InsertUserId, global::System.Nullable<System.DateTime> FechaExamen, string EmpresaPrincipal, string EmpresaEmpleadora, global::System.Nullable<int> ReasonExamId, global::System.Nullable<int> PlaceExamId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.regcovid_insertservice";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceIdParameter = new EntityParameter("ServiceId", System.Data.DbType.String);
                if (ServiceId != null)
                  ServiceIdParameter.Value = ServiceId;
                command.Parameters.Add(ServiceIdParameter);
                EntityParameter ProtocolIdParameter = new EntityParameter("ProtocolId", System.Data.DbType.String);
                if (ProtocolId != null)
                  ProtocolIdParameter.Value = ProtocolId;
                command.Parameters.Add(ProtocolIdParameter);
                EntityParameter PersonIdParameter = new EntityParameter("PersonId", System.Data.DbType.String);
                if (PersonId != null)
                  PersonIdParameter.Value = PersonId;
                command.Parameters.Add(PersonIdParameter);
                EntityParameter EmpresaFacturacionIdParameter = new EntityParameter("EmpresaFacturacionId", System.Data.DbType.String);
                if (EmpresaFacturacionId != null)
                  EmpresaFacturacionIdParameter.Value = EmpresaFacturacionId;
                command.Parameters.Add(EmpresaFacturacionIdParameter);
                EntityParameter SedeParameter = new EntityParameter("Sede", System.Data.DbType.String);
                if (Sede != null)
                  SedeParameter.Value = Sede;
                command.Parameters.Add(SedeParameter);
                EntityParameter TipoEmpresaCovidIdParameter = new EntityParameter("TipoEmpresaCovidId", System.Data.DbType.Int32);
                if (TipoEmpresaCovidId.HasValue)
                  TipoEmpresaCovidIdParameter.Value = TipoEmpresaCovidId;
                command.Parameters.Add(TipoEmpresaCovidIdParameter);
                EntityParameter TecnicoCovidParameter = new EntityParameter("TecnicoCovid", System.Data.DbType.String);
                if (TecnicoCovid != null)
                  TecnicoCovidParameter.Value = TecnicoCovid;
                command.Parameters.Add(TecnicoCovidParameter);
                EntityParameter ClinicaExternadParameter = new EntityParameter("ClinicaExternad", System.Data.DbType.Int32);
                if (ClinicaExternad.HasValue)
                  ClinicaExternadParameter.Value = ClinicaExternad;
                command.Parameters.Add(ClinicaExternadParameter);
                EntityParameter InsertUserIdParameter = new EntityParameter("InsertUserId", System.Data.DbType.Int32);
                if (InsertUserId.HasValue)
                  InsertUserIdParameter.Value = InsertUserId;
                command.Parameters.Add(InsertUserIdParameter);
                EntityParameter FechaExamenParameter = new EntityParameter("FechaExamen", System.Data.DbType.DateTime);
                if (FechaExamen.HasValue)
                  FechaExamenParameter.Value = FechaExamen;
                command.Parameters.Add(FechaExamenParameter);
                EntityParameter EmpresaPrincipalParameter = new EntityParameter("EmpresaPrincipal", System.Data.DbType.String);
                if (EmpresaPrincipal != null)
                  EmpresaPrincipalParameter.Value = EmpresaPrincipal;
                command.Parameters.Add(EmpresaPrincipalParameter);
                EntityParameter EmpresaEmpleadoraParameter = new EntityParameter("EmpresaEmpleadora", System.Data.DbType.String);
                if (EmpresaEmpleadora != null)
                  EmpresaEmpleadoraParameter.Value = EmpresaEmpleadora;
                command.Parameters.Add(EmpresaEmpleadoraParameter);
                EntityParameter ReasonExamIdParameter = new EntityParameter("ReasonExamId", System.Data.DbType.Int32);
                if (ReasonExamId.HasValue)
                  ReasonExamIdParameter.Value = ReasonExamId;
                command.Parameters.Add(ReasonExamIdParameter);
                EntityParameter PlaceExamIdParameter = new EntityParameter("PlaceExamId", System.Data.DbType.Int32);
                if (PlaceExamId.HasValue)
                  PlaceExamIdParameter.Value = PlaceExamId;
                command.Parameters.Add(PlaceExamIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for regcovid_list_services in the schema.
        /// </summary>
        public regcovid_list_servicesMultipleResult regcovid_list_services (global::System.Nullable<System.DateTime> FechaServicioStart, global::System.Nullable<System.DateTime> FechaServicioEnd, global::System.Nullable<int> MedicalCenter, string ComponentId, string OrganizationId, string NodeId, string UserName)
        {

            regcovid_list_servicesMultipleResult result = new regcovid_list_servicesMultipleResult();

            DbConnection connection = ((EntityConnection)this.Connection).StoreConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

            try {
              DbCommand cmd = connection.CreateCommand();
              if(this.CommandTimeout.HasValue)
                cmd.CommandTimeout = this.CommandTimeout.Value;
              cmd.CommandType = CommandType.StoredProcedure;
              cmd.CommandText = @"dbo.REGCOVID_List_Services";

              DbParameter FechaServicioStartParameter = cmd.CreateParameter();
              FechaServicioStartParameter.ParameterName = "FechaServicioStart";
              FechaServicioStartParameter.Direction = ParameterDirection.Input;
              FechaServicioStartParameter.Value = FechaServicioStart;
              cmd.Parameters.Add(FechaServicioStartParameter);

              DbParameter FechaServicioEndParameter = cmd.CreateParameter();
              FechaServicioEndParameter.ParameterName = "FechaServicioEnd";
              FechaServicioEndParameter.Direction = ParameterDirection.Input;
              FechaServicioEndParameter.Value = FechaServicioEnd;
              cmd.Parameters.Add(FechaServicioEndParameter);

              DbParameter MedicalCenterParameter = cmd.CreateParameter();
              MedicalCenterParameter.ParameterName = "MedicalCenter";
              MedicalCenterParameter.Direction = ParameterDirection.Input;
              MedicalCenterParameter.Value = MedicalCenter;
              cmd.Parameters.Add(MedicalCenterParameter);

              DbParameter ComponentIdParameter = cmd.CreateParameter();
              ComponentIdParameter.ParameterName = "ComponentId";
              ComponentIdParameter.Direction = ParameterDirection.Input;
              ComponentIdParameter.Value = ComponentId;
              cmd.Parameters.Add(ComponentIdParameter);

              DbParameter OrganizationIdParameter = cmd.CreateParameter();
              OrganizationIdParameter.ParameterName = "OrganizationId";
              OrganizationIdParameter.Direction = ParameterDirection.Input;
              OrganizationIdParameter.Value = OrganizationId;
              cmd.Parameters.Add(OrganizationIdParameter);

              DbParameter NodeIdParameter = cmd.CreateParameter();
              NodeIdParameter.ParameterName = "NodeId";
              NodeIdParameter.Direction = ParameterDirection.Input;
              NodeIdParameter.Value = NodeId;
              cmd.Parameters.Add(NodeIdParameter);

              DbParameter UserNameParameter = cmd.CreateParameter();
              UserNameParameter.ParameterName = "UserName";
              UserNameParameter.Direction = ParameterDirection.Input;
              UserNameParameter.Value = UserName;
              cmd.Parameters.Add(UserNameParameter);

              using (IDataReader reader = cmd.ExecuteReader()) {
                while (reader.Read()) {

                  regcovid_list_servicesResult resultRow = new regcovid_list_servicesResult();
                  if (!reader.IsDBNull(0))
                    resultRow.d_ServiceDate = (global::System.DateTime)Convert.ChangeType(reader.GetValue(0), typeof(global::System.DateTime));
                  else
                    resultRow.d_ServiceDate = null;

                  if (!reader.IsDBNull(1))
                    resultRow.WorkerName = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.WorkerName = null;

                  if (!reader.IsDBNull(2))
                    resultRow.ProtocolName = (string)Convert.ChangeType(reader.GetValue(2), typeof(string));
                  else
                    resultRow.ProtocolName = null;

                  if (!reader.IsDBNull(3))
                    resultRow.OrganizationName = (string)Convert.ChangeType(reader.GetValue(3), typeof(string));
                  else
                    resultRow.OrganizationName = null;

                  if (!reader.IsDBNull(4))
                    resultRow.CurrentOccupation = (string)Convert.ChangeType(reader.GetValue(4), typeof(string));
                  else
                    resultRow.CurrentOccupation = null;

                  if (!reader.IsDBNull(5))
                    resultRow.ServiceId = (string)Convert.ChangeType(reader.GetValue(5), typeof(string));

                  if (!reader.IsDBNull(6))
                    resultRow.PersonId = (string)Convert.ChangeType(reader.GetValue(6), typeof(string));

                  if (!reader.IsDBNull(7))
                    resultRow.ComponentId = (string)Convert.ChangeType(reader.GetValue(7), typeof(string));
                  else
                    resultRow.ComponentId = null;

                  if (!reader.IsDBNull(8))
                    resultRow.IIndex = (int)Convert.ChangeType(reader.GetValue(8), typeof(int));
                  else
                    resultRow.IIndex = null;

                  if (!reader.IsDBNull(9))
                    resultRow.OrganizationId = (string)Convert.ChangeType(reader.GetValue(9), typeof(string));
                  else
                    resultRow.OrganizationId = null;

                  if (!reader.IsDBNull(10))
                    resultRow.TelephoneNumber = (string)Convert.ChangeType(reader.GetValue(10), typeof(string));
                  else
                    resultRow.TelephoneNumber = null;

                  if (!reader.IsDBNull(11))
                    resultRow.ServiceComponentId = (string)Convert.ChangeType(reader.GetValue(11), typeof(string));
                  else
                    resultRow.ServiceComponentId = null;

                  if (!reader.IsDBNull(12))
                    resultRow.EncuestaCulminada = (int)Convert.ChangeType(reader.GetValue(12), typeof(int));
                  else
                    resultRow.EncuestaCulminada = null;

                  if (!reader.IsDBNull(13))
                    resultRow.LaboratorioCulminada = (int)Convert.ChangeType(reader.GetValue(13), typeof(int));
                  else
                    resultRow.LaboratorioCulminada = null;

                  if (!reader.IsDBNull(14))
                    resultRow.ClinicaExternad = (int)Convert.ChangeType(reader.GetValue(14), typeof(int));
                  else
                    resultRow.ClinicaExternad = null;

                  if (!reader.IsDBNull(15))
                    resultRow.MedicalCenter = (string)Convert.ChangeType(reader.GetValue(15), typeof(string));
                  else
                    resultRow.MedicalCenter = null;

                  if (!reader.IsDBNull(16))
                    resultRow.TypeExam = (string)Convert.ChangeType(reader.GetValue(16), typeof(string));
                  else
                    resultRow.TypeExam = null;

                  result.regcovid_list_servicesResults.Add(resultRow);
                }

                reader.NextResult();

                while (reader.Read()) {

                  regcovid_list_servicesResult resultRow = new regcovid_list_servicesResult();
                  if (!reader.IsDBNull(0))
                    resultRow.d_ServiceDate = (global::System.DateTime)Convert.ChangeType(reader.GetValue(0), typeof(global::System.DateTime));
                  else
                    resultRow.d_ServiceDate = null;

                  if (!reader.IsDBNull(1))
                    resultRow.WorkerName = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.WorkerName = null;

                  if (!reader.IsDBNull(2))
                    resultRow.ProtocolName = (string)Convert.ChangeType(reader.GetValue(2), typeof(string));
                  else
                    resultRow.ProtocolName = null;

                  if (!reader.IsDBNull(3))
                    resultRow.OrganizationName = (string)Convert.ChangeType(reader.GetValue(3), typeof(string));
                  else
                    resultRow.OrganizationName = null;

                  if (!reader.IsDBNull(4))
                    resultRow.CurrentOccupation = (string)Convert.ChangeType(reader.GetValue(4), typeof(string));
                  else
                    resultRow.CurrentOccupation = null;

                  if (!reader.IsDBNull(5))
                    resultRow.ServiceId = (string)Convert.ChangeType(reader.GetValue(5), typeof(string));

                  if (!reader.IsDBNull(6))
                    resultRow.PersonId = (string)Convert.ChangeType(reader.GetValue(6), typeof(string));

                  if (!reader.IsDBNull(7))
                    resultRow.ComponentId = (string)Convert.ChangeType(reader.GetValue(7), typeof(string));
                  else
                    resultRow.ComponentId = null;

                  if (!reader.IsDBNull(8))
                    resultRow.IIndex = (int)Convert.ChangeType(reader.GetValue(8), typeof(int));
                  else
                    resultRow.IIndex = null;

                  if (!reader.IsDBNull(9))
                    resultRow.OrganizationId = (string)Convert.ChangeType(reader.GetValue(9), typeof(string));
                  else
                    resultRow.OrganizationId = null;

                  if (!reader.IsDBNull(10))
                    resultRow.TelephoneNumber = (string)Convert.ChangeType(reader.GetValue(10), typeof(string));
                  else
                    resultRow.TelephoneNumber = null;

                  if (!reader.IsDBNull(11))
                    resultRow.ServiceComponentId = (string)Convert.ChangeType(reader.GetValue(11), typeof(string));
                  else
                    resultRow.ServiceComponentId = null;

                  if (!reader.IsDBNull(12))
                    resultRow.EncuestaCulminada = (int)Convert.ChangeType(reader.GetValue(12), typeof(int));
                  else
                    resultRow.EncuestaCulminada = null;

                  if (!reader.IsDBNull(13))
                    resultRow.LaboratorioCulminada = (int)Convert.ChangeType(reader.GetValue(13), typeof(int));
                  else
                    resultRow.LaboratorioCulminada = null;

                  if (!reader.IsDBNull(14))
                    resultRow.ClinicaExternad = (int)Convert.ChangeType(reader.GetValue(14), typeof(int));
                  else
                    resultRow.ClinicaExternad = null;

                  if (!reader.IsDBNull(15))
                    resultRow.MedicalCenter = (string)Convert.ChangeType(reader.GetValue(15), typeof(string));
                  else
                    resultRow.MedicalCenter = null;

                  if (!reader.IsDBNull(16))
                    resultRow.TypeExam = (string)Convert.ChangeType(reader.GetValue(16), typeof(string));
                  else
                    resultRow.TypeExam = null;

                  result.regcovid_list_servicesResults.Add(resultRow);
                }

                reader.NextResult();

              }

            }
            finally {
              if (needClose)
                connection.Close();
            }
            return result;
        }

    
        /// <summary>
        /// There are no comments for regcovid_list_services_foradmin in the schema.
        /// </summary>
        public ObjectResult<regcovid_list_services_foradminResult> regcovid_list_services_foradmin (global::System.Nullable<System.DateTime> FechaServicioStart, global::System.Nullable<System.DateTime> FechaServicioEnd, string NameOrDocument)
        {
            ObjectParameter FechaServicioStartParameter;
            if (FechaServicioStart.HasValue)
            {
                FechaServicioStartParameter = new ObjectParameter("FechaServicioStart", FechaServicioStart);
            }
            else
            {
                FechaServicioStartParameter = new ObjectParameter("FechaServicioStart", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter FechaServicioEndParameter;
            if (FechaServicioEnd.HasValue)
            {
                FechaServicioEndParameter = new ObjectParameter("FechaServicioEnd", FechaServicioEnd);
            }
            else
            {
                FechaServicioEndParameter = new ObjectParameter("FechaServicioEnd", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter NameOrDocumentParameter;
            if (NameOrDocument != null)
            {
                NameOrDocumentParameter = new ObjectParameter("NameOrDocument", NameOrDocument);
            }
            else
            {
                NameOrDocumentParameter = new ObjectParameter("NameOrDocument", typeof(string));
            }
            return base.ExecuteFunction<regcovid_list_services_foradminResult>("SigesoftEntitiesModel.regcovid_list_services_foradmin", FechaServicioStartParameter, FechaServicioEndParameter, NameOrDocumentParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_positivosenviadosreg_vs_positivosrecividosvig in the schema.
        /// </summary>
        public regcovid_positivosenviadosreg_vs_positivosrecividosvigMultipleResult regcovid_positivosenviadosreg_vs_positivosrecividosvig (global::System.Nullable<System.DateTime> FechaInicio, global::System.Nullable<System.DateTime> FechaFin)
        {

            regcovid_positivosenviadosreg_vs_positivosrecividosvigMultipleResult result = new regcovid_positivosenviadosreg_vs_positivosrecividosvigMultipleResult();

            DbConnection connection = ((EntityConnection)this.Connection).StoreConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

            try {
              DbCommand cmd = connection.CreateCommand();
              if(this.CommandTimeout.HasValue)
                cmd.CommandTimeout = this.CommandTimeout.Value;
              cmd.CommandType = CommandType.StoredProcedure;
              cmd.CommandText = @"dbo.REGCOVID_PositivosEnviadosREG_vs_PositivosRecividosVIG";

              DbParameter FechaInicioParameter = cmd.CreateParameter();
              FechaInicioParameter.ParameterName = "FechaInicio";
              FechaInicioParameter.Direction = ParameterDirection.Input;
              FechaInicioParameter.Value = FechaInicio;
              cmd.Parameters.Add(FechaInicioParameter);

              DbParameter FechaFinParameter = cmd.CreateParameter();
              FechaFinParameter.ParameterName = "FechaFin";
              FechaFinParameter.Direction = ParameterDirection.Input;
              FechaFinParameter.Value = FechaFin;
              cmd.Parameters.Add(FechaFinParameter);

              using (IDataReader reader = cmd.ExecuteReader()) {
                while (reader.Read()) {

                  regcovid_positivosenviadosreg_vs_positivosrecividosvigResult resultRow = new regcovid_positivosenviadosreg_vs_positivosrecividosvigResult();
                  if (!reader.IsDBNull(0))
                    resultRow.v_ServiceId = (string)Convert.ChangeType(reader.GetValue(0), typeof(string));

                  if (!reader.IsDBNull(1))
                    resultRow.d_ServiceDate = (global::System.DateTime)Convert.ChangeType(reader.GetValue(1), typeof(global::System.DateTime));
                  else
                    resultRow.d_ServiceDate = null;

                  if (!reader.IsDBNull(2))
                    resultRow.Nombres = (string)Convert.ChangeType(reader.GetValue(2), typeof(string));
                  else
                    resultRow.Nombres = null;

                  if (!reader.IsDBNull(3))
                    resultRow.TecnicoCovid = (string)Convert.ChangeType(reader.GetValue(3), typeof(string));
                  else
                    resultRow.TecnicoCovid = null;

                  if (!reader.IsDBNull(4))
                    resultRow.ComponentFieldId = (string)Convert.ChangeType(reader.GetValue(4), typeof(string));
                  else
                    resultRow.ComponentFieldId = null;

                  if (!reader.IsDBNull(5))
                    resultRow.ServiceComponentFieldsId = (string)Convert.ChangeType(reader.GetValue(5), typeof(string));

                  if (!reader.IsDBNull(6))
                    resultRow.Value1 = (string)Convert.ChangeType(reader.GetValue(6), typeof(string));
                  else
                    resultRow.Value1 = null;

                  result.regcovid_positivosenviadosreg_vs_positivosrecividosvigResults.Add(resultRow);
                }

                reader.NextResult();

                while (reader.Read()) {

                  regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1 resultRow = new regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1();
                  if (!reader.IsDBNull(0))
                    resultRow.NombreCompleto = (string)Convert.ChangeType(reader.GetValue(0), typeof(string));

                  if (!reader.IsDBNull(1))
                    resultRow.ApePaterno = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));

                  if (!reader.IsDBNull(2))
                    resultRow.ApeMaterno = (string)Convert.ChangeType(reader.GetValue(2), typeof(string));

                  if (!reader.IsDBNull(3))
                    resultRow.Dni = (string)Convert.ChangeType(reader.GetValue(3), typeof(string));

                  result.regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1s.Add(resultRow);
                }

                reader.NextResult();

              }

            }
            finally {
              if (needClose)
                connection.Close();
            }
            return result;
        }

    
        /// <summary>
        /// There are no comments for regcovid_scheduleworker in the schema.
        /// </summary>
        public List<regcovid_scheduleworkerResult> regcovid_scheduleworker (global::System.Nullable<int> NodeId, string OrganizationId, global::System.Nullable<int> SedeId, string ProtocoloId, string FirstName, string FirstLastName, string SecondLastName, global::System.Nullable<int> DocTypeId, string DocNumber, global::System.Nullable<int> SexTypeId, global::System.Nullable<System.DateTime> Birthdate, string Mail, string TelephoneNumber, string CurrentOccupation, string AdressLocation, string NombreSede, global::System.Nullable<int> TipoEmpresaCovidId, global::System.Nullable<int> UserId, string Tecnico, global::System.Nullable<int> ClinicaExternad, global::System.Nullable<System.DateTime> FechaExamen, string EmpresaEmpleadora, global::System.Nullable<int> ReasonExamId, global::System.Nullable<int> PlaceExamId, ref string ServiceId)
        {
            ObjectParameter NodeIdParameter;
            if (NodeId.HasValue)
            {
                NodeIdParameter = new ObjectParameter("NodeId", NodeId);
            }
            else
            {
                NodeIdParameter = new ObjectParameter("NodeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter OrganizationIdParameter;
            if (OrganizationId != null)
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", OrganizationId);
            }
            else
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", typeof(string));
            }
            ObjectParameter SedeIdParameter;
            if (SedeId.HasValue)
            {
                SedeIdParameter = new ObjectParameter("SedeId", SedeId);
            }
            else
            {
                SedeIdParameter = new ObjectParameter("SedeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter ProtocoloIdParameter;
            if (ProtocoloId != null)
            {
                ProtocoloIdParameter = new ObjectParameter("ProtocoloId", ProtocoloId);
            }
            else
            {
                ProtocoloIdParameter = new ObjectParameter("ProtocoloId", typeof(string));
            }
            ObjectParameter FirstNameParameter;
            if (FirstName != null)
            {
                FirstNameParameter = new ObjectParameter("FirstName", FirstName);
            }
            else
            {
                FirstNameParameter = new ObjectParameter("FirstName", typeof(string));
            }
            ObjectParameter FirstLastNameParameter;
            if (FirstLastName != null)
            {
                FirstLastNameParameter = new ObjectParameter("FirstLastName", FirstLastName);
            }
            else
            {
                FirstLastNameParameter = new ObjectParameter("FirstLastName", typeof(string));
            }
            ObjectParameter SecondLastNameParameter;
            if (SecondLastName != null)
            {
                SecondLastNameParameter = new ObjectParameter("SecondLastName", SecondLastName);
            }
            else
            {
                SecondLastNameParameter = new ObjectParameter("SecondLastName", typeof(string));
            }
            ObjectParameter DocTypeIdParameter;
            if (DocTypeId.HasValue)
            {
                DocTypeIdParameter = new ObjectParameter("DocTypeId", DocTypeId);
            }
            else
            {
                DocTypeIdParameter = new ObjectParameter("DocTypeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter DocNumberParameter;
            if (DocNumber != null)
            {
                DocNumberParameter = new ObjectParameter("DocNumber", DocNumber);
            }
            else
            {
                DocNumberParameter = new ObjectParameter("DocNumber", typeof(string));
            }
            ObjectParameter SexTypeIdParameter;
            if (SexTypeId.HasValue)
            {
                SexTypeIdParameter = new ObjectParameter("SexTypeId", SexTypeId);
            }
            else
            {
                SexTypeIdParameter = new ObjectParameter("SexTypeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter BirthdateParameter;
            if (Birthdate.HasValue)
            {
                BirthdateParameter = new ObjectParameter("Birthdate", Birthdate);
            }
            else
            {
                BirthdateParameter = new ObjectParameter("Birthdate", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter MailParameter;
            if (Mail != null)
            {
                MailParameter = new ObjectParameter("Mail", Mail);
            }
            else
            {
                MailParameter = new ObjectParameter("Mail", typeof(string));
            }
            ObjectParameter TelephoneNumberParameter;
            if (TelephoneNumber != null)
            {
                TelephoneNumberParameter = new ObjectParameter("TelephoneNumber", TelephoneNumber);
            }
            else
            {
                TelephoneNumberParameter = new ObjectParameter("TelephoneNumber", typeof(string));
            }
            ObjectParameter CurrentOccupationParameter;
            if (CurrentOccupation != null)
            {
                CurrentOccupationParameter = new ObjectParameter("CurrentOccupation", CurrentOccupation);
            }
            else
            {
                CurrentOccupationParameter = new ObjectParameter("CurrentOccupation", typeof(string));
            }
            ObjectParameter AdressLocationParameter;
            if (AdressLocation != null)
            {
                AdressLocationParameter = new ObjectParameter("AdressLocation", AdressLocation);
            }
            else
            {
                AdressLocationParameter = new ObjectParameter("AdressLocation", typeof(string));
            }
            ObjectParameter NombreSedeParameter;
            if (NombreSede != null)
            {
                NombreSedeParameter = new ObjectParameter("NombreSede", NombreSede);
            }
            else
            {
                NombreSedeParameter = new ObjectParameter("NombreSede", typeof(string));
            }
            ObjectParameter TipoEmpresaCovidIdParameter;
            if (TipoEmpresaCovidId.HasValue)
            {
                TipoEmpresaCovidIdParameter = new ObjectParameter("TipoEmpresaCovidId", TipoEmpresaCovidId);
            }
            else
            {
                TipoEmpresaCovidIdParameter = new ObjectParameter("TipoEmpresaCovidId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter UserIdParameter;
            if (UserId.HasValue)
            {
                UserIdParameter = new ObjectParameter("UserId", UserId);
            }
            else
            {
                UserIdParameter = new ObjectParameter("UserId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter TecnicoParameter;
            if (Tecnico != null)
            {
                TecnicoParameter = new ObjectParameter("Tecnico", Tecnico);
            }
            else
            {
                TecnicoParameter = new ObjectParameter("Tecnico", typeof(string));
            }
            ObjectParameter ClinicaExternadParameter;
            if (ClinicaExternad.HasValue)
            {
                ClinicaExternadParameter = new ObjectParameter("ClinicaExternad", ClinicaExternad);
            }
            else
            {
                ClinicaExternadParameter = new ObjectParameter("ClinicaExternad", typeof(global::System.Nullable<int>));
            }
            ObjectParameter FechaExamenParameter;
            if (FechaExamen.HasValue)
            {
                FechaExamenParameter = new ObjectParameter("FechaExamen", FechaExamen);
            }
            else
            {
                FechaExamenParameter = new ObjectParameter("FechaExamen", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter EmpresaEmpleadoraParameter;
            if (EmpresaEmpleadora != null)
            {
                EmpresaEmpleadoraParameter = new ObjectParameter("EmpresaEmpleadora", EmpresaEmpleadora);
            }
            else
            {
                EmpresaEmpleadoraParameter = new ObjectParameter("EmpresaEmpleadora", typeof(string));
            }
            ObjectParameter ReasonExamIdParameter;
            if (ReasonExamId.HasValue)
            {
                ReasonExamIdParameter = new ObjectParameter("ReasonExamId", ReasonExamId);
            }
            else
            {
                ReasonExamIdParameter = new ObjectParameter("ReasonExamId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter PlaceExamIdParameter;
            if (PlaceExamId.HasValue)
            {
                PlaceExamIdParameter = new ObjectParameter("PlaceExamId", PlaceExamId);
            }
            else
            {
                PlaceExamIdParameter = new ObjectParameter("PlaceExamId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter ServiceIdParameter;
            if (ServiceId != null)
            {
                ServiceIdParameter = new ObjectParameter("ServiceId", ServiceId);
            }
            else
            {
                ServiceIdParameter = new ObjectParameter("ServiceId", typeof(string));
            }
            List<regcovid_scheduleworkerResult> result = base.ExecuteFunction<regcovid_scheduleworkerResult>("SigesoftEntitiesModel.regcovid_scheduleworker", NodeIdParameter, OrganizationIdParameter, SedeIdParameter, ProtocoloIdParameter, FirstNameParameter, FirstLastNameParameter, SecondLastNameParameter, DocTypeIdParameter, DocNumberParameter, SexTypeIdParameter, BirthdateParameter, MailParameter, TelephoneNumberParameter, CurrentOccupationParameter, AdressLocationParameter, NombreSedeParameter, TipoEmpresaCovidIdParameter, UserIdParameter, TecnicoParameter, ClinicaExternadParameter, FechaExamenParameter, EmpresaEmpleadoraParameter, ReasonExamIdParameter, PlaceExamIdParameter, ServiceIdParameter).ToList();

            if (ServiceIdParameter != null && ServiceIdParameter.Value != DBNull.Value)
              ServiceId = (string)ServiceIdParameter.Value;
            else
              ServiceId = default(string);
             return result;
        }

    
        /// <summary>
        /// There are no comments for regcovid_select_brand in the schema.
        /// </summary>
        public regcovid_select_brandMultipleResult regcovid_select_brand ()
        {

            regcovid_select_brandMultipleResult result = new regcovid_select_brandMultipleResult();

            DbConnection connection = ((EntityConnection)this.Connection).StoreConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

            try {
              DbCommand cmd = connection.CreateCommand();
              if(this.CommandTimeout.HasValue)
                cmd.CommandTimeout = this.CommandTimeout.Value;
              cmd.CommandType = CommandType.StoredProcedure;
              cmd.CommandText = @"dbo.REGCOVID_select_brand";

              using (IDataReader reader = cmd.ExecuteReader()) {
                while (reader.Read()) {

                  regcovid_select_brandResult resultRow = new regcovid_select_brandResult();
                  if (!reader.IsDBNull(0))
                    resultRow.iBrandId = (int)Convert.ChangeType(reader.GetValue(0), typeof(int));

                  if (!reader.IsDBNull(1))
                    resultRow.vBrandName = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.vBrandName = null;

                  if (!reader.IsDBNull(2))
                    resultRow.iBrandState = (bool)Convert.ChangeType(reader.GetValue(2), typeof(bool));
                  else
                    resultRow.iBrandState = null;

                  if (!reader.IsDBNull(3))
                    resultRow.iDeleted = (bool)Convert.ChangeType(reader.GetValue(3), typeof(bool));
                  else
                    resultRow.iDeleted = null;

                  result.regcovid_select_brandResults.Add(resultRow);
                }

                reader.NextResult();

                while (reader.Read()) {

                  regcovid_delete_brandResult resultRow = new regcovid_delete_brandResult();
                  if (!reader.IsDBNull(0))
                    resultRow.ErrorNumber = (int)Convert.ChangeType(reader.GetValue(0), typeof(int));
                  else
                    resultRow.ErrorNumber = null;

                  if (!reader.IsDBNull(1))
                    resultRow.ErrorMessage = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.ErrorMessage = null;

                  result.regcovid_delete_brandResults.Add(resultRow);
                }

                reader.NextResult();

              }

            }
            finally {
              if (needClose)
                connection.Close();
            }
            return result;
        }

    
        /// <summary>
        /// There are no comments for regcovid_select_testdevice in the schema.
        /// </summary>
        public regcovid_select_testdeviceMultipleResult regcovid_select_testdevice ()
        {

            regcovid_select_testdeviceMultipleResult result = new regcovid_select_testdeviceMultipleResult();

            DbConnection connection = ((EntityConnection)this.Connection).StoreConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

            try {
              DbCommand cmd = connection.CreateCommand();
              if(this.CommandTimeout.HasValue)
                cmd.CommandTimeout = this.CommandTimeout.Value;
              cmd.CommandType = CommandType.StoredProcedure;
              cmd.CommandText = @"dbo.REGCOVID_select_testdevice";

              using (IDataReader reader = cmd.ExecuteReader()) {
                while (reader.Read()) {

                  regcovid_select_testdeviceResult resultRow = new regcovid_select_testdeviceResult();
                  if (!reader.IsDBNull(0))
                    resultRow.iTestDeviceId = (int)Convert.ChangeType(reader.GetValue(0), typeof(int));

                  if (!reader.IsDBNull(1))
                    resultRow.vTestDeviceName = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.vTestDeviceName = null;

                  if (!reader.IsDBNull(2))
                    resultRow.vTestDeviceDescription = (string)Convert.ChangeType(reader.GetValue(2), typeof(string));
                  else
                    resultRow.vTestDeviceDescription = null;

                  if (!reader.IsDBNull(3))
                    resultRow.iTestDeviceIdBrand = (int)Convert.ChangeType(reader.GetValue(3), typeof(int));
                  else
                    resultRow.iTestDeviceIdBrand = null;

                  if (!reader.IsDBNull(4))
                    resultRow.vTestDeviceLot = (string)Convert.ChangeType(reader.GetValue(4), typeof(string));
                  else
                    resultRow.vTestDeviceLot = null;

                  if (!reader.IsDBNull(5))
                    resultRow.dTestDeviceDueDate = (global::System.DateTime)Convert.ChangeType(reader.GetValue(5), typeof(global::System.DateTime));
                  else
                    resultRow.dTestDeviceDueDate = null;

                  if (!reader.IsDBNull(6))
                    resultRow.iTestDeviceState = (bool)Convert.ChangeType(reader.GetValue(6), typeof(bool));
                  else
                    resultRow.iTestDeviceState = null;

                  if (!reader.IsDBNull(7))
                    resultRow.iDeleted = (bool)Convert.ChangeType(reader.GetValue(7), typeof(bool));
                  else
                    resultRow.iDeleted = null;

                  result.regcovid_select_testdeviceResults.Add(resultRow);
                }

                reader.NextResult();

                while (reader.Read()) {

                  regcovid_delete_brandResult resultRow = new regcovid_delete_brandResult();
                  if (!reader.IsDBNull(0))
                    resultRow.ErrorNumber = (int)Convert.ChangeType(reader.GetValue(0), typeof(int));
                  else
                    resultRow.ErrorNumber = null;

                  if (!reader.IsDBNull(1))
                    resultRow.ErrorMessage = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.ErrorMessage = null;

                  result.regcovid_delete_brandResults.Add(resultRow);
                }

                reader.NextResult();

              }

            }
            finally {
              if (needClose)
                connection.Close();
            }
            return result;
        }

    
        /// <summary>
        /// There are no comments for regcovid_selectbyid_brand in the schema.
        /// </summary>
        public regcovid_selectbyid_brandMultipleResult regcovid_selectbyid_brand (global::System.Nullable<int> iId)
        {

            regcovid_selectbyid_brandMultipleResult result = new regcovid_selectbyid_brandMultipleResult();

            DbConnection connection = ((EntityConnection)this.Connection).StoreConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

            try {
              DbCommand cmd = connection.CreateCommand();
              if(this.CommandTimeout.HasValue)
                cmd.CommandTimeout = this.CommandTimeout.Value;
              cmd.CommandType = CommandType.StoredProcedure;
              cmd.CommandText = @"dbo.REGCOVID_selectbyid_brand";

              DbParameter iIdParameter = cmd.CreateParameter();
              iIdParameter.ParameterName = "iId";
              iIdParameter.Direction = ParameterDirection.Input;
              iIdParameter.Value = iId;
              cmd.Parameters.Add(iIdParameter);

              using (IDataReader reader = cmd.ExecuteReader()) {
                while (reader.Read()) {

                  regcovid_select_brandResult resultRow = new regcovid_select_brandResult();
                  if (!reader.IsDBNull(0))
                    resultRow.iBrandId = (int)Convert.ChangeType(reader.GetValue(0), typeof(int));

                  if (!reader.IsDBNull(1))
                    resultRow.vBrandName = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.vBrandName = null;

                  if (!reader.IsDBNull(2))
                    resultRow.iBrandState = (bool)Convert.ChangeType(reader.GetValue(2), typeof(bool));
                  else
                    resultRow.iBrandState = null;

                  if (!reader.IsDBNull(3))
                    resultRow.iDeleted = (bool)Convert.ChangeType(reader.GetValue(3), typeof(bool));
                  else
                    resultRow.iDeleted = null;

                  result.regcovid_select_brandResults.Add(resultRow);
                }

                reader.NextResult();

                while (reader.Read()) {

                  regcovid_delete_brandResult resultRow = new regcovid_delete_brandResult();
                  if (!reader.IsDBNull(0))
                    resultRow.ErrorNumber = (int)Convert.ChangeType(reader.GetValue(0), typeof(int));
                  else
                    resultRow.ErrorNumber = null;

                  if (!reader.IsDBNull(1))
                    resultRow.ErrorMessage = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.ErrorMessage = null;

                  result.regcovid_delete_brandResults.Add(resultRow);
                }

                reader.NextResult();

              }

            }
            finally {
              if (needClose)
                connection.Close();
            }
            return result;
        }

    
        /// <summary>
        /// There are no comments for regcovid_selectbyid_testdevice in the schema.
        /// </summary>
        public regcovid_selectbyid_testdeviceMultipleResult regcovid_selectbyid_testdevice (global::System.Nullable<int> iId)
        {

            regcovid_selectbyid_testdeviceMultipleResult result = new regcovid_selectbyid_testdeviceMultipleResult();

            DbConnection connection = ((EntityConnection)this.Connection).StoreConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

            try {
              DbCommand cmd = connection.CreateCommand();
              if(this.CommandTimeout.HasValue)
                cmd.CommandTimeout = this.CommandTimeout.Value;
              cmd.CommandType = CommandType.StoredProcedure;
              cmd.CommandText = @"dbo.REGCOVID_selectbyid_testdevice";

              DbParameter iIdParameter = cmd.CreateParameter();
              iIdParameter.ParameterName = "iId";
              iIdParameter.Direction = ParameterDirection.Input;
              iIdParameter.Value = iId;
              cmd.Parameters.Add(iIdParameter);

              using (IDataReader reader = cmd.ExecuteReader()) {
                while (reader.Read()) {

                  regcovid_select_testdeviceResult resultRow = new regcovid_select_testdeviceResult();
                  if (!reader.IsDBNull(0))
                    resultRow.iTestDeviceId = (int)Convert.ChangeType(reader.GetValue(0), typeof(int));

                  if (!reader.IsDBNull(1))
                    resultRow.vTestDeviceName = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.vTestDeviceName = null;

                  if (!reader.IsDBNull(2))
                    resultRow.vTestDeviceDescription = (string)Convert.ChangeType(reader.GetValue(2), typeof(string));
                  else
                    resultRow.vTestDeviceDescription = null;

                  if (!reader.IsDBNull(3))
                    resultRow.iTestDeviceIdBrand = (int)Convert.ChangeType(reader.GetValue(3), typeof(int));
                  else
                    resultRow.iTestDeviceIdBrand = null;

                  if (!reader.IsDBNull(4))
                    resultRow.vTestDeviceLot = (string)Convert.ChangeType(reader.GetValue(4), typeof(string));
                  else
                    resultRow.vTestDeviceLot = null;

                  if (!reader.IsDBNull(5))
                    resultRow.dTestDeviceDueDate = (global::System.DateTime)Convert.ChangeType(reader.GetValue(5), typeof(global::System.DateTime));
                  else
                    resultRow.dTestDeviceDueDate = null;

                  if (!reader.IsDBNull(6))
                    resultRow.iTestDeviceState = (bool)Convert.ChangeType(reader.GetValue(6), typeof(bool));
                  else
                    resultRow.iTestDeviceState = null;

                  if (!reader.IsDBNull(7))
                    resultRow.iDeleted = (bool)Convert.ChangeType(reader.GetValue(7), typeof(bool));
                  else
                    resultRow.iDeleted = null;

                  result.regcovid_select_testdeviceResults.Add(resultRow);
                }

                reader.NextResult();

                while (reader.Read()) {

                  regcovid_delete_brandResult resultRow = new regcovid_delete_brandResult();
                  if (!reader.IsDBNull(0))
                    resultRow.ErrorNumber = (int)Convert.ChangeType(reader.GetValue(0), typeof(int));
                  else
                    resultRow.ErrorNumber = null;

                  if (!reader.IsDBNull(1))
                    resultRow.ErrorMessage = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.ErrorMessage = null;

                  result.regcovid_delete_brandResults.Add(resultRow);
                }

                reader.NextResult();

              }

            }
            finally {
              if (needClose)
                connection.Close();
            }
            return result;
        }

    
        /// <summary>
        /// There are no comments for regcovid_servicespivot in the schema.
        /// </summary>
        public void regcovid_servicespivot (global::System.Nullable<System.DateTime> FEC_INI, global::System.Nullable<System.DateTime> FEC_FIN)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.regcovid_servicespivot";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter FEC_INIParameter = new EntityParameter("FEC_INI", System.Data.DbType.DateTime);
                if (FEC_INI.HasValue)
                  FEC_INIParameter.Value = FEC_INI;
                command.Parameters.Add(FEC_INIParameter);
                EntityParameter FEC_FINParameter = new EntityParameter("FEC_FIN", System.Data.DbType.DateTime);
                if (FEC_FIN.HasValue)
                  FEC_FINParameter.Value = FEC_FIN;
                command.Parameters.Add(FEC_FINParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for regcovid_servicios_listado in the schema.
        /// </summary>
        public ObjectResult<regcovid_servicios_listadoResult> regcovid_servicios_listado (string ProtocoId, global::System.Nullable<System.DateTime> FechaInicio, global::System.Nullable<System.DateTime> FechaFin)
        {
            ObjectParameter ProtocoIdParameter;
            if (ProtocoId != null)
            {
                ProtocoIdParameter = new ObjectParameter("ProtocoId", ProtocoId);
            }
            else
            {
                ProtocoIdParameter = new ObjectParameter("ProtocoId", typeof(string));
            }
            ObjectParameter FechaInicioParameter;
            if (FechaInicio.HasValue)
            {
                FechaInicioParameter = new ObjectParameter("FechaInicio", FechaInicio);
            }
            else
            {
                FechaInicioParameter = new ObjectParameter("FechaInicio", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter FechaFinParameter;
            if (FechaFin.HasValue)
            {
                FechaFinParameter = new ObjectParameter("FechaFin", FechaFin);
            }
            else
            {
                FechaFinParameter = new ObjectParameter("FechaFin", typeof(global::System.Nullable<System.DateTime>));
            }
            return base.ExecuteFunction<regcovid_servicios_listadoResult>("SigesoftEntitiesModel.regcovid_servicios_listado", ProtocoIdParameter, FechaInicioParameter, FechaFinParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_servicios_vs_resultados in the schema.
        /// </summary>
        public regcovid_servicios_vs_resultadosMultipleResult regcovid_servicios_vs_resultados (global::System.Nullable<System.DateTime> FechaInicio, global::System.Nullable<System.DateTime> FechaFin)
        {

            regcovid_servicios_vs_resultadosMultipleResult result = new regcovid_servicios_vs_resultadosMultipleResult();

            DbConnection connection = ((EntityConnection)this.Connection).StoreConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

            try {
              DbCommand cmd = connection.CreateCommand();
              if(this.CommandTimeout.HasValue)
                cmd.CommandTimeout = this.CommandTimeout.Value;
              cmd.CommandType = CommandType.StoredProcedure;
              cmd.CommandText = @"dbo.REGCOVID_Servicios_vs_Resultados";

              DbParameter FechaInicioParameter = cmd.CreateParameter();
              FechaInicioParameter.ParameterName = "FechaInicio";
              FechaInicioParameter.Direction = ParameterDirection.Input;
              FechaInicioParameter.Value = FechaInicio;
              cmd.Parameters.Add(FechaInicioParameter);

              DbParameter FechaFinParameter = cmd.CreateParameter();
              FechaFinParameter.ParameterName = "FechaFin";
              FechaFinParameter.Direction = ParameterDirection.Input;
              FechaFinParameter.Value = FechaFin;
              cmd.Parameters.Add(FechaFinParameter);

              using (IDataReader reader = cmd.ExecuteReader()) {
                while (reader.Read()) {

                  regcovid_servicios_vs_resultadosResult resultRow = new regcovid_servicios_vs_resultadosResult();
                  if (!reader.IsDBNull(0))
                    resultRow.column0 = (string)Convert.ChangeType(reader.GetValue(0), typeof(string));
                  else
                    resultRow.column0 = null;

                  if (!reader.IsDBNull(1))
                    resultRow.v_DocNumber = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.v_DocNumber = null;

                  if (!reader.IsDBNull(2))
                    resultRow.Value1 = (string)Convert.ChangeType(reader.GetValue(2), typeof(string));
                  else
                    resultRow.Value1 = null;

                  if (!reader.IsDBNull(3))
                    resultRow.d_ServiceDate = (global::System.DateTime)Convert.ChangeType(reader.GetValue(3), typeof(global::System.DateTime));
                  else
                    resultRow.d_ServiceDate = null;

                  if (!reader.IsDBNull(4))
                    resultRow.ValueSede = (int)Convert.ChangeType(reader.GetValue(4), typeof(int));
                  else
                    resultRow.ValueSede = null;

                  if (!reader.IsDBNull(5))
                    resultRow.v_Sede = (string)Convert.ChangeType(reader.GetValue(5), typeof(string));
                  else
                    resultRow.v_Sede = null;

                  if (!reader.IsDBNull(6))
                    resultRow.v_ServiceId = (string)Convert.ChangeType(reader.GetValue(6), typeof(string));

                  if (!reader.IsDBNull(7))
                    resultRow.d_InsertDate = (global::System.DateTime)Convert.ChangeType(reader.GetValue(7), typeof(global::System.DateTime));
                  else
                    resultRow.d_InsertDate = null;

                  if (!reader.IsDBNull(8))
                    resultRow.TecnicoCovid = (string)Convert.ChangeType(reader.GetValue(8), typeof(string));
                  else
                    resultRow.TecnicoCovid = null;

                  if (!reader.IsDBNull(9))
                    resultRow.ComponentFieldId = (string)Convert.ChangeType(reader.GetValue(9), typeof(string));
                  else
                    resultRow.ComponentFieldId = null;

                  if (!reader.IsDBNull(10))
                    resultRow.ServiceComponentFieldsId = (string)Convert.ChangeType(reader.GetValue(10), typeof(string));

                  if (!reader.IsDBNull(11))
                    resultRow.CorreoEnviado = (int)Convert.ChangeType(reader.GetValue(11), typeof(int));
                  else
                    resultRow.CorreoEnviado = null;

                  result.regcovid_servicios_vs_resultadosResults.Add(resultRow);
                }

                reader.NextResult();

                while (reader.Read()) {

                  regcovid_servicios_vs_resultadosResult1 resultRow = new regcovid_servicios_vs_resultadosResult1();
                  if (!reader.IsDBNull(0))
                    resultRow.v_ServiceId = (string)Convert.ChangeType(reader.GetValue(0), typeof(string));

                  result.regcovid_servicios_vs_resultadosResult1s.Add(resultRow);
                }

                reader.NextResult();

              }

            }
            finally {
              if (needClose)
                connection.Close();
            }
            return result;
        }

    
        /// <summary>
        /// There are no comments for regcovid_sp_getempresasprincipales in the schema.
        /// </summary>
        public ObjectResult<regcovid_sp_getempresasprincipalesResult> regcovid_sp_getempresasprincipales (string username)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("username", typeof(string));
            }
            return base.ExecuteFunction<regcovid_sp_getempresasprincipalesResult>("SigesoftEntitiesModel.regcovid_sp_getempresasprincipales", usernameParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_sp_getservicepivot in the schema.
        /// </summary>
        public void regcovid_sp_getservicepivot (global::System.Nullable<System.DateTime> FEC_INI, global::System.Nullable<System.DateTime> FEC_FIN)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.regcovid_sp_getservicepivot";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter FEC_INIParameter = new EntityParameter("FEC_INI", System.Data.DbType.DateTime);
                if (FEC_INI.HasValue)
                  FEC_INIParameter.Value = FEC_INI;
                command.Parameters.Add(FEC_INIParameter);
                EntityParameter FEC_FINParameter = new EntityParameter("FEC_FIN", System.Data.DbType.DateTime);
                if (FEC_FIN.HasValue)
                  FEC_FINParameter.Value = FEC_FIN;
                command.Parameters.Add(FEC_FINParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for regcovid_update_brand in the schema.
        /// </summary>
        public ObjectResult<regcovid_delete_brandResult> regcovid_update_brand (global::System.Nullable<int> iId, string vName, global::System.Nullable<bool> iState)
        {
            ObjectParameter iIdParameter;
            if (iId.HasValue)
            {
                iIdParameter = new ObjectParameter("iId", iId);
            }
            else
            {
                iIdParameter = new ObjectParameter("iId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter vNameParameter;
            if (vName != null)
            {
                vNameParameter = new ObjectParameter("vName", vName);
            }
            else
            {
                vNameParameter = new ObjectParameter("vName", typeof(string));
            }
            ObjectParameter iStateParameter;
            if (iState.HasValue)
            {
                iStateParameter = new ObjectParameter("iState", iState);
            }
            else
            {
                iStateParameter = new ObjectParameter("iState", typeof(global::System.Nullable<bool>));
            }
            return base.ExecuteFunction<regcovid_delete_brandResult>("SigesoftEntitiesModel.regcovid_update_brand", iIdParameter, vNameParameter, iStateParameter);
        }

    
        /// <summary>
        /// There are no comments for regcovid_update_testdevice in the schema.
        /// </summary>
        public ObjectResult<regcovid_delete_brandResult> regcovid_update_testdevice (global::System.Nullable<int> iId, string vName, string vDescription, global::System.Nullable<int> iIdBrand, string vLot, global::System.Nullable<System.DateTime> dDueDate, global::System.Nullable<bool> iTestDeviceState)
        {
            ObjectParameter iIdParameter;
            if (iId.HasValue)
            {
                iIdParameter = new ObjectParameter("iId", iId);
            }
            else
            {
                iIdParameter = new ObjectParameter("iId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter vNameParameter;
            if (vName != null)
            {
                vNameParameter = new ObjectParameter("vName", vName);
            }
            else
            {
                vNameParameter = new ObjectParameter("vName", typeof(string));
            }
            ObjectParameter vDescriptionParameter;
            if (vDescription != null)
            {
                vDescriptionParameter = new ObjectParameter("vDescription", vDescription);
            }
            else
            {
                vDescriptionParameter = new ObjectParameter("vDescription", typeof(string));
            }
            ObjectParameter iIdBrandParameter;
            if (iIdBrand.HasValue)
            {
                iIdBrandParameter = new ObjectParameter("iIdBrand", iIdBrand);
            }
            else
            {
                iIdBrandParameter = new ObjectParameter("iIdBrand", typeof(global::System.Nullable<int>));
            }
            ObjectParameter vLotParameter;
            if (vLot != null)
            {
                vLotParameter = new ObjectParameter("vLot", vLot);
            }
            else
            {
                vLotParameter = new ObjectParameter("vLot", typeof(string));
            }
            ObjectParameter dDueDateParameter;
            if (dDueDate.HasValue)
            {
                dDueDateParameter = new ObjectParameter("dDueDate", dDueDate);
            }
            else
            {
                dDueDateParameter = new ObjectParameter("dDueDate", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter iTestDeviceStateParameter;
            if (iTestDeviceState.HasValue)
            {
                iTestDeviceStateParameter = new ObjectParameter("iTestDeviceState", iTestDeviceState);
            }
            else
            {
                iTestDeviceStateParameter = new ObjectParameter("iTestDeviceState", typeof(global::System.Nullable<bool>));
            }
            return base.ExecuteFunction<regcovid_delete_brandResult>("SigesoftEntitiesModel.regcovid_update_testdevice", iIdParameter, vNameParameter, vDescriptionParameter, iIdBrandParameter, vLotParameter, dDueDateParameter, iTestDeviceStateParameter);
        }

    
        /// <summary>
        /// There are no comments for reportediarioservicios in the schema.
        /// </summary>
        public void reportediarioservicios (global::System.Nullable<System.DateTime> fecha_inicio, global::System.Nullable<System.DateTime> fecha_fin)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.reportediarioservicios";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter fecha_inicioParameter = new EntityParameter("fecha_inicio", System.Data.DbType.DateTime);
                if (fecha_inicio.HasValue)
                  fecha_inicioParameter.Value = fecha_inicio;
                command.Parameters.Add(fecha_inicioParameter);
                EntityParameter fecha_finParameter = new EntityParameter("fecha_fin", System.Data.DbType.DateTime);
                if (fecha_fin.HasValue)
                  fecha_finParameter.Value = fecha_fin;
                command.Parameters.Add(fecha_finParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for salus_comprobarresultadoslaboratorio in the schema.
        /// </summary>
        public salus_comprobarresultadoslaboratorioMultipleResult salus_comprobarresultadoslaboratorio (global::System.Nullable<System.DateTime> FechaInicio, global::System.Nullable<System.DateTime> FechaFin)
        {

            salus_comprobarresultadoslaboratorioMultipleResult result = new salus_comprobarresultadoslaboratorioMultipleResult();

            DbConnection connection = ((EntityConnection)this.Connection).StoreConnection;
            bool needClose = false;
            if (connection.State != ConnectionState.Open) {
              connection.Open();
              needClose = true;
            }

            try {
              DbCommand cmd = connection.CreateCommand();
              if(this.CommandTimeout.HasValue)
                cmd.CommandTimeout = this.CommandTimeout.Value;
              cmd.CommandType = CommandType.StoredProcedure;
              cmd.CommandText = @"dbo.SALUS_ComprobarResultadosLaboratorio";

              DbParameter FechaInicioParameter = cmd.CreateParameter();
              FechaInicioParameter.ParameterName = "FechaInicio";
              FechaInicioParameter.Direction = ParameterDirection.Input;
              FechaInicioParameter.Value = FechaInicio;
              cmd.Parameters.Add(FechaInicioParameter);

              DbParameter FechaFinParameter = cmd.CreateParameter();
              FechaFinParameter.ParameterName = "FechaFin";
              FechaFinParameter.Direction = ParameterDirection.Input;
              FechaFinParameter.Value = FechaFin;
              cmd.Parameters.Add(FechaFinParameter);

              using (IDataReader reader = cmd.ExecuteReader()) {
                while (reader.Read()) {

                  salus_comprobarresultadoslaboratorioResult resultRow = new salus_comprobarresultadoslaboratorioResult();
                  if (!reader.IsDBNull(0))
                    resultRow.v_ServiceId = (string)Convert.ChangeType(reader.GetValue(0), typeof(string));

                  if (!reader.IsDBNull(1))
                    resultRow.TecnicoCovid = (string)Convert.ChangeType(reader.GetValue(1), typeof(string));
                  else
                    resultRow.TecnicoCovid = null;

                  if (!reader.IsDBNull(2))
                    resultRow.ComponentFieldId = (string)Convert.ChangeType(reader.GetValue(2), typeof(string));
                  else
                    resultRow.ComponentFieldId = null;

                  if (!reader.IsDBNull(3))
                    resultRow.ServiceComponentFieldsId = (string)Convert.ChangeType(reader.GetValue(3), typeof(string));

                  if (!reader.IsDBNull(4))
                    resultRow.Value1 = (string)Convert.ChangeType(reader.GetValue(4), typeof(string));
                  else
                    resultRow.Value1 = null;

                  result.salus_comprobarresultadoslaboratorioResults.Add(resultRow);
                }

                reader.NextResult();

                while (reader.Read()) {

                  salus_comprobarresultadoslaboratorioResult1 resultRow = new salus_comprobarresultadoslaboratorioResult1();
                  if (!reader.IsDBNull(0))
                    resultRow.column0 = (int)Convert.ChangeType(reader.GetValue(0), typeof(int));
                  else
                    resultRow.column0 = null;

                  result.salus_comprobarresultadoslaboratorioResult1s.Add(resultRow);
                }

                reader.NextResult();

              }

            }
            finally {
              if (needClose)
                connection.Close();
            }
            return result;
        }

    
        /// <summary>
        /// There are no comments for sp_delete_brand in the schema.
        /// </summary>
        public void sp_delete_brand (global::System.Nullable<int> iId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.sp_delete_brand";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter iIdParameter = new EntityParameter("iId", System.Data.DbType.Int32);
                if (iId.HasValue)
                  iIdParameter.Value = iId;
                command.Parameters.Add(iIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for sp_delete_testdevice in the schema.
        /// </summary>
        public void sp_delete_testdevice (global::System.Nullable<int> iId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.sp_delete_testdevice";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter iIdParameter = new EntityParameter("iId", System.Data.DbType.Int32);
                if (iId.HasValue)
                  iIdParameter.Value = iId;
                command.Parameters.Add(iIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for sp_insert_brand in the schema.
        /// </summary>
        public void sp_insert_brand (string vName)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.sp_insert_brand";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter vNameParameter = new EntityParameter("vName", System.Data.DbType.String);
                if (vName != null)
                  vNameParameter.Value = vName;
                command.Parameters.Add(vNameParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for sp_insert_testdevice in the schema.
        /// </summary>
        public void sp_insert_testdevice (string vName, string vDescription, global::System.Nullable<int> iIdBrand, string vLot, global::System.Nullable<System.DateTime> dDueDate)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.sp_insert_testdevice";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter vNameParameter = new EntityParameter("vName", System.Data.DbType.String);
                if (vName != null)
                  vNameParameter.Value = vName;
                command.Parameters.Add(vNameParameter);
                EntityParameter vDescriptionParameter = new EntityParameter("vDescription", System.Data.DbType.String);
                if (vDescription != null)
                  vDescriptionParameter.Value = vDescription;
                command.Parameters.Add(vDescriptionParameter);
                EntityParameter iIdBrandParameter = new EntityParameter("iIdBrand", System.Data.DbType.Int32);
                if (iIdBrand.HasValue)
                  iIdBrandParameter.Value = iIdBrand;
                command.Parameters.Add(iIdBrandParameter);
                EntityParameter vLotParameter = new EntityParameter("vLot", System.Data.DbType.String);
                if (vLot != null)
                  vLotParameter.Value = vLot;
                command.Parameters.Add(vLotParameter);
                EntityParameter dDueDateParameter = new EntityParameter("dDueDate", System.Data.DbType.DateTime);
                if (dDueDate.HasValue)
                  dDueDateParameter.Value = dDueDate;
                command.Parameters.Add(dDueDateParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for sp_update_brand in the schema.
        /// </summary>
        public void sp_update_brand (global::System.Nullable<int> iId, string vName, global::System.Nullable<bool> iState)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.sp_update_brand";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter iIdParameter = new EntityParameter("iId", System.Data.DbType.Int32);
                if (iId.HasValue)
                  iIdParameter.Value = iId;
                command.Parameters.Add(iIdParameter);
                EntityParameter vNameParameter = new EntityParameter("vName", System.Data.DbType.String);
                if (vName != null)
                  vNameParameter.Value = vName;
                command.Parameters.Add(vNameParameter);
                EntityParameter iStateParameter = new EntityParameter("iState", System.Data.DbType.Boolean);
                if (iState.HasValue)
                  iStateParameter.Value = iState;
                command.Parameters.Add(iStateParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for sp_update_testdevice in the schema.
        /// </summary>
        public void sp_update_testdevice (global::System.Nullable<int> iId, string vName, string vDescription, global::System.Nullable<int> iIdBrand, string vLot, global::System.Nullable<System.DateTime> dDueDate)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.sp_update_testdevice";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter iIdParameter = new EntityParameter("iId", System.Data.DbType.Int32);
                if (iId.HasValue)
                  iIdParameter.Value = iId;
                command.Parameters.Add(iIdParameter);
                EntityParameter vNameParameter = new EntityParameter("vName", System.Data.DbType.String);
                if (vName != null)
                  vNameParameter.Value = vName;
                command.Parameters.Add(vNameParameter);
                EntityParameter vDescriptionParameter = new EntityParameter("vDescription", System.Data.DbType.String);
                if (vDescription != null)
                  vDescriptionParameter.Value = vDescription;
                command.Parameters.Add(vDescriptionParameter);
                EntityParameter iIdBrandParameter = new EntityParameter("iIdBrand", System.Data.DbType.Int32);
                if (iIdBrand.HasValue)
                  iIdBrandParameter.Value = iIdBrand;
                command.Parameters.Add(iIdBrandParameter);
                EntityParameter vLotParameter = new EntityParameter("vLot", System.Data.DbType.String);
                if (vLot != null)
                  vLotParameter.Value = vLot;
                command.Parameters.Add(vLotParameter);
                EntityParameter dDueDateParameter = new EntityParameter("dDueDate", System.Data.DbType.DateTime);
                if (dDueDate.HasValue)
                  dDueDateParameter.Value = dDueDate;
                command.Parameters.Add(dDueDateParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_actualizar_valores in the schema.
        /// </summary>
        public void usp_actualizar_valores (string ServiceComponentFieldValuesId, string Value1, global::System.Nullable<int> UpdateUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_actualizar_valores";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceComponentFieldValuesIdParameter = new EntityParameter("ServiceComponentFieldValuesId", System.Data.DbType.String);
                if (ServiceComponentFieldValuesId != null)
                  ServiceComponentFieldValuesIdParameter.Value = ServiceComponentFieldValuesId;
                command.Parameters.Add(ServiceComponentFieldValuesIdParameter);
                EntityParameter Value1Parameter = new EntityParameter("Value1", System.Data.DbType.String);
                if (Value1 != null)
                  Value1Parameter.Value = Value1;
                command.Parameters.Add(Value1Parameter);
                EntityParameter UpdateUserIdParameter = new EntityParameter("UpdateUserId", System.Data.DbType.Int32);
                if (UpdateUserId.HasValue)
                  UpdateUserIdParameter.Value = UpdateUserId;
                command.Parameters.Add(UpdateUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_authorization_regcovid in the schema.
        /// </summary>
        public ObjectResult<usp_authorization_regcovidResult> usp_authorization_regcovid (global::System.Nullable<int> NodeId, string UserName, string Password)
        {
            ObjectParameter NodeIdParameter;
            if (NodeId.HasValue)
            {
                NodeIdParameter = new ObjectParameter("NodeId", NodeId);
            }
            else
            {
                NodeIdParameter = new ObjectParameter("NodeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter UserNameParameter;
            if (UserName != null)
            {
                UserNameParameter = new ObjectParameter("UserName", UserName);
            }
            else
            {
                UserNameParameter = new ObjectParameter("UserName", typeof(string));
            }
            ObjectParameter PasswordParameter;
            if (Password != null)
            {
                PasswordParameter = new ObjectParameter("Password", Password);
            }
            else
            {
                PasswordParameter = new ObjectParameter("Password", typeof(string));
            }
            return base.ExecuteFunction<usp_authorization_regcovidResult>("SigesoftEntitiesModel.usp_authorization_regcovid", NodeIdParameter, UserNameParameter, PasswordParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_cambiarestadoenvionotificacion in the schema.
        /// </summary>
        public void usp_cambiarestadoenvionotificacion (global::System.Nullable<int> IDTRABAJADOR)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_cambiarestadoenvionotificacion";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter IDTRABAJADORParameter = new EntityParameter("IDTRABAJADOR", System.Data.DbType.Int32);
                if (IDTRABAJADOR.HasValue)
                  IDTRABAJADORParameter.Value = IDTRABAJADOR;
                command.Parameters.Add(IDTRABAJADORParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_culminar_encuesta in the schema.
        /// </summary>
        public void usp_culminar_encuesta (string ServiceComponentId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_culminar_encuesta";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceComponentIdParameter = new EntityParameter("ServiceComponentId", System.Data.DbType.String);
                if (ServiceComponentId != null)
                  ServiceComponentIdParameter.Value = ServiceComponentId;
                command.Parameters.Add(ServiceComponentIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_culminar_laboratorio in the schema.
        /// </summary>
        public void usp_culminar_laboratorio (string ServiceComponentId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_culminar_laboratorio";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceComponentIdParameter = new EntityParameter("ServiceComponentId", System.Data.DbType.String);
                if (ServiceComponentId != null)
                  ServiceComponentIdParameter.Value = ServiceComponentId;
                command.Parameters.Add(ServiceComponentIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_eliminar_servicios_prueba in the schema.
        /// </summary>
        public void usp_eliminar_servicios_prueba (global::System.Nullable<System.DateTime> fecha)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_eliminar_servicios_prueba";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter fechaParameter = new EntityParameter("fecha", System.Data.DbType.DateTime);
                if (fecha.HasValue)
                  fechaParameter.Value = fecha;
                command.Parameters.Add(fechaParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_enviar_vigcovid in the schema.
        /// </summary>
        public void usp_enviar_vigcovid (string Dni, global::System.Nullable<int> Resultado, global::System.Nullable<System.DateTime> FechaExamen, global::System.Nullable<int> SedeRegCovidId, string ComponentId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_enviar_vigcovid";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter DniParameter = new EntityParameter("Dni", System.Data.DbType.String);
                if (Dni != null)
                  DniParameter.Value = Dni;
                command.Parameters.Add(DniParameter);
                EntityParameter ResultadoParameter = new EntityParameter("Resultado", System.Data.DbType.Int32);
                if (Resultado.HasValue)
                  ResultadoParameter.Value = Resultado;
                command.Parameters.Add(ResultadoParameter);
                EntityParameter FechaExamenParameter = new EntityParameter("FechaExamen", System.Data.DbType.DateTime);
                if (FechaExamen.HasValue)
                  FechaExamenParameter.Value = FechaExamen;
                command.Parameters.Add(FechaExamenParameter);
                EntityParameter SedeRegCovidIdParameter = new EntityParameter("SedeRegCovidId", System.Data.DbType.Int32);
                if (SedeRegCovidId.HasValue)
                  SedeRegCovidIdParameter.Value = SedeRegCovidId;
                command.Parameters.Add(SedeRegCovidIdParameter);
                EntityParameter ComponentIdParameter = new EntityParameter("ComponentId", System.Data.DbType.String);
                if (ComponentId != null)
                  ComponentIdParameter.Value = ComponentId;
                command.Parameters.Add(ComponentIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_get_hcactualizado in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_worker_from_hcactualizadoResult> usp_get_hcactualizado (string Filtro)
        {
            ObjectParameter FiltroParameter;
            if (Filtro != null)
            {
                FiltroParameter = new ObjectParameter("Filtro", Filtro);
            }
            else
            {
                FiltroParameter = new ObjectParameter("Filtro", typeof(string));
            }
            return base.ExecuteFunction<regcovid_get_worker_from_hcactualizadoResult>("SigesoftEntitiesModel.usp_get_hcactualizado", FiltroParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_get_hcactualizado_prueba in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_worker_from_hcactualizadoResult> usp_get_hcactualizado_prueba (string Filtro)
        {
            ObjectParameter FiltroParameter;
            if (Filtro != null)
            {
                FiltroParameter = new ObjectParameter("Filtro", Filtro);
            }
            else
            {
                FiltroParameter = new ObjectParameter("Filtro", typeof(string));
            }
            return base.ExecuteFunction<regcovid_get_worker_from_hcactualizadoResult>("SigesoftEntitiesModel.usp_get_hcactualizado_prueba", FiltroParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_get_indicadores in the schema.
        /// </summary>
        public ObjectResult<regcovid_indicadoresResult> usp_get_indicadores (string Nodo)
        {
            ObjectParameter NodoParameter;
            if (Nodo != null)
            {
                NodoParameter = new ObjectParameter("Nodo", Nodo);
            }
            else
            {
                NodoParameter = new ObjectParameter("Nodo", typeof(string));
            }
            return base.ExecuteFunction<regcovid_indicadoresResult>("SigesoftEntitiesModel.usp_get_indicadores", NodoParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_get_nodes in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_nodesResult> usp_get_nodes ()
        {
            return base.ExecuteFunction<regcovid_get_nodesResult>("SigesoftEntitiesModel.usp_get_nodes");
        }

    
        /// <summary>
        /// There are no comments for usp_get_protocolcomponentbyprotocolid in the schema.
        /// </summary>
        public ObjectResult<usp_get_protocolcomponentbyprotocolidResult> usp_get_protocolcomponentbyprotocolid (string ProtocolId)
        {
            ObjectParameter ProtocolIdParameter;
            if (ProtocolId != null)
            {
                ProtocolIdParameter = new ObjectParameter("ProtocolId", ProtocolId);
            }
            else
            {
                ProtocolIdParameter = new ObjectParameter("ProtocolId", typeof(string));
            }
            return base.ExecuteFunction<usp_get_protocolcomponentbyprotocolidResult>("SigesoftEntitiesModel.usp_get_protocolcomponentbyprotocolid", ProtocolIdParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_get_secuential in the schema.
        /// </summary>
        public ObjectResult<usp_get_secuentialResult> usp_get_secuential (global::System.Nullable<int> NodeId, global::System.Nullable<int> TableId, string Prefix)
        {
            ObjectParameter NodeIdParameter;
            if (NodeId.HasValue)
            {
                NodeIdParameter = new ObjectParameter("NodeId", NodeId);
            }
            else
            {
                NodeIdParameter = new ObjectParameter("NodeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter TableIdParameter;
            if (TableId.HasValue)
            {
                TableIdParameter = new ObjectParameter("TableId", TableId);
            }
            else
            {
                TableIdParameter = new ObjectParameter("TableId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter PrefixParameter;
            if (Prefix != null)
            {
                PrefixParameter = new ObjectParameter("Prefix", Prefix);
            }
            else
            {
                PrefixParameter = new ObjectParameter("Prefix", typeof(string));
            }
            return base.ExecuteFunction<usp_get_secuentialResult>("SigesoftEntitiesModel.usp_get_secuential", NodeIdParameter, TableIdParameter, PrefixParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_get_secuential_new in the schema.
        /// </summary>
        public void usp_get_secuential_new (global::System.Nullable<int> NodeId, global::System.Nullable<int> TableId, string Prefix, ref string Id)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_get_secuential_new";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter NodeIdParameter = new EntityParameter("NodeId", System.Data.DbType.Int32);
                if (NodeId.HasValue)
                  NodeIdParameter.Value = NodeId;
                command.Parameters.Add(NodeIdParameter);
                EntityParameter TableIdParameter = new EntityParameter("TableId", System.Data.DbType.Int32);
                if (TableId.HasValue)
                  TableIdParameter.Value = TableId;
                command.Parameters.Add(TableIdParameter);
                EntityParameter PrefixParameter = new EntityParameter("Prefix", System.Data.DbType.String);
                if (Prefix != null)
                  PrefixParameter.Value = Prefix;
                command.Parameters.Add(PrefixParameter);
                EntityParameter IdParameter = new EntityParameter("Id", System.Data.DbType.String);
                if (Id != null)
                  IdParameter.Value = Id;
                command.Parameters.Add(IdParameter);
                command.ExecuteNonQuery();
                if (IdParameter.Value != null && !(IdParameter.Value is System.DBNull))
                  Id = (string)IdParameter.Value;
                else
                  Id = default(string);
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_get_sedes in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_sedesResult> usp_get_sedes ()
        {
            return base.ExecuteFunction<regcovid_get_sedesResult>("SigesoftEntitiesModel.usp_get_sedes");
        }

    
        /// <summary>
        /// There are no comments for usp_get_servicecomponentfieldvaluesbyservicecomponentid in the schema.
        /// </summary>
        public ObjectResult<usp_get_servicecomponentfieldvaluesbyservicecomponentidResult> usp_get_servicecomponentfieldvaluesbyservicecomponentid (string ServiceComponentId)
        {
            ObjectParameter ServiceComponentIdParameter;
            if (ServiceComponentId != null)
            {
                ServiceComponentIdParameter = new ObjectParameter("ServiceComponentId", ServiceComponentId);
            }
            else
            {
                ServiceComponentIdParameter = new ObjectParameter("ServiceComponentId", typeof(string));
            }
            return base.ExecuteFunction<usp_get_servicecomponentfieldvaluesbyservicecomponentidResult>("SigesoftEntitiesModel.usp_get_servicecomponentfieldvaluesbyservicecomponentid", ServiceComponentIdParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_get_systemparameters in the schema.
        /// </summary>
        public ObjectResult<regcovid_get_systemparametersResult> usp_get_systemparameters (global::System.Nullable<int> GroupId)
        {
            ObjectParameter GroupIdParameter;
            if (GroupId.HasValue)
            {
                GroupIdParameter = new ObjectParameter("GroupId", GroupId);
            }
            else
            {
                GroupIdParameter = new ObjectParameter("GroupId", typeof(global::System.Nullable<int>));
            }
            return base.ExecuteFunction<regcovid_get_systemparametersResult>("SigesoftEntitiesModel.usp_get_systemparameters", GroupIdParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_get_valorescomponente in the schema.
        /// </summary>
        public ObjectResult<usp_get_valorescomponenteResult> usp_get_valorescomponente (string ServiceId, string ComponentId)
        {
            ObjectParameter ServiceIdParameter;
            if (ServiceId != null)
            {
                ServiceIdParameter = new ObjectParameter("ServiceId", ServiceId);
            }
            else
            {
                ServiceIdParameter = new ObjectParameter("ServiceId", typeof(string));
            }
            ObjectParameter ComponentIdParameter;
            if (ComponentId != null)
            {
                ComponentIdParameter = new ObjectParameter("ComponentId", ComponentId);
            }
            else
            {
                ComponentIdParameter = new ObjectParameter("ComponentId", typeof(string));
            }
            return base.ExecuteFunction<usp_get_valorescomponenteResult>("SigesoftEntitiesModel.usp_get_valorescomponente", ServiceIdParameter, ComponentIdParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_getpersonbydocument in the schema.
        /// </summary>
        public ObjectResult<usp_getpersonbydocumentResult> usp_getpersonbydocument (global::System.Nullable<int> TypeDoc, string DocumentNumber)
        {
            ObjectParameter TypeDocParameter;
            if (TypeDoc.HasValue)
            {
                TypeDocParameter = new ObjectParameter("TypeDoc", TypeDoc);
            }
            else
            {
                TypeDocParameter = new ObjectParameter("TypeDoc", typeof(global::System.Nullable<int>));
            }
            ObjectParameter DocumentNumberParameter;
            if (DocumentNumber != null)
            {
                DocumentNumberParameter = new ObjectParameter("DocumentNumber", DocumentNumber);
            }
            else
            {
                DocumentNumberParameter = new ObjectParameter("DocumentNumber", typeof(string));
            }
            return base.ExecuteFunction<usp_getpersonbydocumentResult>("SigesoftEntitiesModel.usp_getpersonbydocument", TypeDocParameter, DocumentNumberParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_getregisterworkes in the schema.
        /// </summary>
        public ObjectResult<usp_getregisterworkesResult> usp_getregisterworkes (string OrganizationId, string NodeId)
        {
            ObjectParameter OrganizationIdParameter;
            if (OrganizationId != null)
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", OrganizationId);
            }
            else
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", typeof(string));
            }
            ObjectParameter NodeIdParameter;
            if (NodeId != null)
            {
                NodeIdParameter = new ObjectParameter("NodeId", NodeId);
            }
            else
            {
                NodeIdParameter = new ObjectParameter("NodeId", typeof(string));
            }
            return base.ExecuteFunction<usp_getregisterworkesResult>("SigesoftEntitiesModel.usp_getregisterworkes", OrganizationIdParameter, NodeIdParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_getregisterworkesclinics in the schema.
        /// </summary>
        public ObjectResult<usp_getregisterworkesResult> usp_getregisterworkesclinics (string OrganizationId, string NodeId, global::System.Nullable<System.DateTime> Fecha)
        {
            ObjectParameter OrganizationIdParameter;
            if (OrganizationId != null)
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", OrganizationId);
            }
            else
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", typeof(string));
            }
            ObjectParameter NodeIdParameter;
            if (NodeId != null)
            {
                NodeIdParameter = new ObjectParameter("NodeId", NodeId);
            }
            else
            {
                NodeIdParameter = new ObjectParameter("NodeId", typeof(string));
            }
            ObjectParameter FechaParameter;
            if (Fecha.HasValue)
            {
                FechaParameter = new ObjectParameter("Fecha", Fecha);
            }
            else
            {
                FechaParameter = new ObjectParameter("Fecha", typeof(global::System.Nullable<System.DateTime>));
            }
            return base.ExecuteFunction<usp_getregisterworkesResult>("SigesoftEntitiesModel.usp_getregisterworkesclinics", OrganizationIdParameter, NodeIdParameter, FechaParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_insert_calendar in the schema.
        /// </summary>
        public void usp_insert_calendar (string CalendarId, string ServiceId, string PersonId, string ProtocolId, global::System.Nullable<int> InsertUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_insert_calendar";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter CalendarIdParameter = new EntityParameter("CalendarId", System.Data.DbType.String);
                if (CalendarId != null)
                  CalendarIdParameter.Value = CalendarId;
                command.Parameters.Add(CalendarIdParameter);
                EntityParameter ServiceIdParameter = new EntityParameter("ServiceId", System.Data.DbType.String);
                if (ServiceId != null)
                  ServiceIdParameter.Value = ServiceId;
                command.Parameters.Add(ServiceIdParameter);
                EntityParameter PersonIdParameter = new EntityParameter("PersonId", System.Data.DbType.String);
                if (PersonId != null)
                  PersonIdParameter.Value = PersonId;
                command.Parameters.Add(PersonIdParameter);
                EntityParameter ProtocolIdParameter = new EntityParameter("ProtocolId", System.Data.DbType.String);
                if (ProtocolId != null)
                  ProtocolIdParameter.Value = ProtocolId;
                command.Parameters.Add(ProtocolIdParameter);
                EntityParameter InsertUserIdParameter = new EntityParameter("InsertUserId", System.Data.DbType.Int32);
                if (InsertUserId.HasValue)
                  InsertUserIdParameter.Value = InsertUserId;
                command.Parameters.Add(InsertUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_insert_servicecomponent in the schema.
        /// </summary>
        public void usp_insert_servicecomponent (string ServiceComponentId, string ComponentId, string ServiceId, global::System.Nullable<decimal> Price, global::System.Nullable<int> InsertUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_insert_servicecomponent";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceComponentIdParameter = new EntityParameter("ServiceComponentId", System.Data.DbType.String);
                if (ServiceComponentId != null)
                  ServiceComponentIdParameter.Value = ServiceComponentId;
                command.Parameters.Add(ServiceComponentIdParameter);
                EntityParameter ComponentIdParameter = new EntityParameter("ComponentId", System.Data.DbType.String);
                if (ComponentId != null)
                  ComponentIdParameter.Value = ComponentId;
                command.Parameters.Add(ComponentIdParameter);
                EntityParameter ServiceIdParameter = new EntityParameter("ServiceId", System.Data.DbType.String);
                if (ServiceId != null)
                  ServiceIdParameter.Value = ServiceId;
                command.Parameters.Add(ServiceIdParameter);
                EntityParameter PriceParameter = new EntityParameter("Price", System.Data.DbType.Decimal);
                if (Price.HasValue)
                  PriceParameter.Value = Price;
                command.Parameters.Add(PriceParameter);
                EntityParameter InsertUserIdParameter = new EntityParameter("InsertUserId", System.Data.DbType.Int32);
                if (InsertUserId.HasValue)
                  InsertUserIdParameter.Value = InsertUserId;
                command.Parameters.Add(InsertUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_insert_servicecomponentfields in the schema.
        /// </summary>
        public void usp_insert_servicecomponentfields (string ServiceComponentFieldsId, string ServiceComponentId, string ComponentFieldId, global::System.Nullable<int> InsertUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_insert_servicecomponentfields";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceComponentFieldsIdParameter = new EntityParameter("ServiceComponentFieldsId", System.Data.DbType.String);
                if (ServiceComponentFieldsId != null)
                  ServiceComponentFieldsIdParameter.Value = ServiceComponentFieldsId;
                command.Parameters.Add(ServiceComponentFieldsIdParameter);
                EntityParameter ServiceComponentIdParameter = new EntityParameter("ServiceComponentId", System.Data.DbType.String);
                if (ServiceComponentId != null)
                  ServiceComponentIdParameter.Value = ServiceComponentId;
                command.Parameters.Add(ServiceComponentIdParameter);
                EntityParameter ComponentFieldIdParameter = new EntityParameter("ComponentFieldId", System.Data.DbType.String);
                if (ComponentFieldId != null)
                  ComponentFieldIdParameter.Value = ComponentFieldId;
                command.Parameters.Add(ComponentFieldIdParameter);
                EntityParameter InsertUserIdParameter = new EntityParameter("InsertUserId", System.Data.DbType.Int32);
                if (InsertUserId.HasValue)
                  InsertUserIdParameter.Value = InsertUserId;
                command.Parameters.Add(InsertUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_insert_servicecomponentfieldvalues in the schema.
        /// </summary>
        public void usp_insert_servicecomponentfieldvalues (string ServiceComponentFieldValuesId, string ServiceComponentFieldsId, string Value1, global::System.Nullable<int> InsertUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_insert_servicecomponentfieldvalues";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceComponentFieldValuesIdParameter = new EntityParameter("ServiceComponentFieldValuesId", System.Data.DbType.String);
                if (ServiceComponentFieldValuesId != null)
                  ServiceComponentFieldValuesIdParameter.Value = ServiceComponentFieldValuesId;
                command.Parameters.Add(ServiceComponentFieldValuesIdParameter);
                EntityParameter ServiceComponentFieldsIdParameter = new EntityParameter("ServiceComponentFieldsId", System.Data.DbType.String);
                if (ServiceComponentFieldsId != null)
                  ServiceComponentFieldsIdParameter.Value = ServiceComponentFieldsId;
                command.Parameters.Add(ServiceComponentFieldsIdParameter);
                EntityParameter Value1Parameter = new EntityParameter("Value1", System.Data.DbType.String);
                if (Value1 != null)
                  Value1Parameter.Value = Value1;
                command.Parameters.Add(Value1Parameter);
                EntityParameter InsertUserIdParameter = new EntityParameter("InsertUserId", System.Data.DbType.Int32);
                if (InsertUserId.HasValue)
                  InsertUserIdParameter.Value = InsertUserId;
                command.Parameters.Add(InsertUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_insert_valores in the schema.
        /// </summary>
        public void usp_insert_valores (string ServiceComponentId, string ComponentFieldId, string Value1, global::System.Nullable<int> InsertUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_insert_valores";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceComponentIdParameter = new EntityParameter("ServiceComponentId", System.Data.DbType.String);
                if (ServiceComponentId != null)
                  ServiceComponentIdParameter.Value = ServiceComponentId;
                command.Parameters.Add(ServiceComponentIdParameter);
                EntityParameter ComponentFieldIdParameter = new EntityParameter("ComponentFieldId", System.Data.DbType.String);
                if (ComponentFieldId != null)
                  ComponentFieldIdParameter.Value = ComponentFieldId;
                command.Parameters.Add(ComponentFieldIdParameter);
                EntityParameter Value1Parameter = new EntityParameter("Value1", System.Data.DbType.String);
                if (Value1 != null)
                  Value1Parameter.Value = Value1;
                command.Parameters.Add(Value1Parameter);
                EntityParameter InsertUserIdParameter = new EntityParameter("InsertUserId", System.Data.DbType.Int32);
                if (InsertUserId.HasValue)
                  InsertUserIdParameter.Value = InsertUserId;
                command.Parameters.Add(InsertUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_insert_valores_interface in the schema.
        /// </summary>
        public void usp_insert_valores_interface (ref string ServiceComponentFieldValuesIdValue, string ServiceComponentId, string ComponentFieldId, string Value1, global::System.Nullable<int> InsertUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_insert_valores_interface";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceComponentFieldValuesIdValueParameter = new EntityParameter("ServiceComponentFieldValuesIdValue", System.Data.DbType.String);
                if (ServiceComponentFieldValuesIdValue != null)
                  ServiceComponentFieldValuesIdValueParameter.Value = ServiceComponentFieldValuesIdValue;
                command.Parameters.Add(ServiceComponentFieldValuesIdValueParameter);
                EntityParameter ServiceComponentIdParameter = new EntityParameter("ServiceComponentId", System.Data.DbType.String);
                if (ServiceComponentId != null)
                  ServiceComponentIdParameter.Value = ServiceComponentId;
                command.Parameters.Add(ServiceComponentIdParameter);
                EntityParameter ComponentFieldIdParameter = new EntityParameter("ComponentFieldId", System.Data.DbType.String);
                if (ComponentFieldId != null)
                  ComponentFieldIdParameter.Value = ComponentFieldId;
                command.Parameters.Add(ComponentFieldIdParameter);
                EntityParameter Value1Parameter = new EntityParameter("Value1", System.Data.DbType.String);
                if (Value1 != null)
                  Value1Parameter.Value = Value1;
                command.Parameters.Add(Value1Parameter);
                EntityParameter InsertUserIdParameter = new EntityParameter("InsertUserId", System.Data.DbType.Int32);
                if (InsertUserId.HasValue)
                  InsertUserIdParameter.Value = InsertUserId;
                command.Parameters.Add(InsertUserIdParameter);
                command.ExecuteNonQuery();
                if (ServiceComponentFieldValuesIdValueParameter.Value != null && !(ServiceComponentFieldValuesIdValueParameter.Value is System.DBNull))
                  ServiceComponentFieldValuesIdValue = (string)ServiceComponentFieldValuesIdValueParameter.Value;
                else
                  ServiceComponentFieldValuesIdValue = default(string);
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_insertpacient in the schema.
        /// </summary>
        public void usp_insertpacient (string PersonId, global::System.Nullable<int> InsertUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_insertpacient";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter PersonIdParameter = new EntityParameter("PersonId", System.Data.DbType.String);
                if (PersonId != null)
                  PersonIdParameter.Value = PersonId;
                command.Parameters.Add(PersonIdParameter);
                EntityParameter InsertUserIdParameter = new EntityParameter("InsertUserId", System.Data.DbType.Int32);
                if (InsertUserId.HasValue)
                  InsertUserIdParameter.Value = InsertUserId;
                command.Parameters.Add(InsertUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_insertperson in the schema.
        /// </summary>
        public void usp_insertperson (string PersonId, string FirstName, string FirstLastName, string SecondLastName, global::System.Nullable<int> DocTypeId, string DocNumber, global::System.Nullable<int> SexTypeId, global::System.Nullable<System.DateTime> Birthdate, string Mail, string TelephoneNumber, string CurrentOccupation, string AdressLocation, global::System.Nullable<int> InsertUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_insertperson";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter PersonIdParameter = new EntityParameter("PersonId", System.Data.DbType.String);
                if (PersonId != null)
                  PersonIdParameter.Value = PersonId;
                command.Parameters.Add(PersonIdParameter);
                EntityParameter FirstNameParameter = new EntityParameter("FirstName", System.Data.DbType.String);
                if (FirstName != null)
                  FirstNameParameter.Value = FirstName;
                command.Parameters.Add(FirstNameParameter);
                EntityParameter FirstLastNameParameter = new EntityParameter("FirstLastName", System.Data.DbType.String);
                if (FirstLastName != null)
                  FirstLastNameParameter.Value = FirstLastName;
                command.Parameters.Add(FirstLastNameParameter);
                EntityParameter SecondLastNameParameter = new EntityParameter("SecondLastName", System.Data.DbType.String);
                if (SecondLastName != null)
                  SecondLastNameParameter.Value = SecondLastName;
                command.Parameters.Add(SecondLastNameParameter);
                EntityParameter DocTypeIdParameter = new EntityParameter("DocTypeId", System.Data.DbType.Int32);
                if (DocTypeId.HasValue)
                  DocTypeIdParameter.Value = DocTypeId;
                command.Parameters.Add(DocTypeIdParameter);
                EntityParameter DocNumberParameter = new EntityParameter("DocNumber", System.Data.DbType.String);
                if (DocNumber != null)
                  DocNumberParameter.Value = DocNumber;
                command.Parameters.Add(DocNumberParameter);
                EntityParameter SexTypeIdParameter = new EntityParameter("SexTypeId", System.Data.DbType.Int32);
                if (SexTypeId.HasValue)
                  SexTypeIdParameter.Value = SexTypeId;
                command.Parameters.Add(SexTypeIdParameter);
                EntityParameter BirthdateParameter = new EntityParameter("Birthdate", System.Data.DbType.DateTime);
                if (Birthdate.HasValue)
                  BirthdateParameter.Value = Birthdate;
                command.Parameters.Add(BirthdateParameter);
                EntityParameter MailParameter = new EntityParameter("Mail", System.Data.DbType.String);
                if (Mail != null)
                  MailParameter.Value = Mail;
                command.Parameters.Add(MailParameter);
                EntityParameter TelephoneNumberParameter = new EntityParameter("TelephoneNumber", System.Data.DbType.String);
                if (TelephoneNumber != null)
                  TelephoneNumberParameter.Value = TelephoneNumber;
                command.Parameters.Add(TelephoneNumberParameter);
                EntityParameter CurrentOccupationParameter = new EntityParameter("CurrentOccupation", System.Data.DbType.String);
                if (CurrentOccupation != null)
                  CurrentOccupationParameter.Value = CurrentOccupation;
                command.Parameters.Add(CurrentOccupationParameter);
                EntityParameter AdressLocationParameter = new EntityParameter("AdressLocation", System.Data.DbType.String);
                if (AdressLocation != null)
                  AdressLocationParameter.Value = AdressLocation;
                command.Parameters.Add(AdressLocationParameter);
                EntityParameter InsertUserIdParameter = new EntityParameter("InsertUserId", System.Data.DbType.Int32);
                if (InsertUserId.HasValue)
                  InsertUserIdParameter.Value = InsertUserId;
                command.Parameters.Add(InsertUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_insertservice in the schema.
        /// </summary>
        public void usp_insertservice (string ServiceId, string ProtocolId, string PersonId, string EmpresaFacturacionId, string Sede, global::System.Nullable<int> TipoEmpresaCovidId, string TecnicoCovid, global::System.Nullable<int> ClinicaExternad, global::System.Nullable<int> InsertUserId, global::System.Nullable<System.DateTime> FechaExamen)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_insertservice";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceIdParameter = new EntityParameter("ServiceId", System.Data.DbType.String);
                if (ServiceId != null)
                  ServiceIdParameter.Value = ServiceId;
                command.Parameters.Add(ServiceIdParameter);
                EntityParameter ProtocolIdParameter = new EntityParameter("ProtocolId", System.Data.DbType.String);
                if (ProtocolId != null)
                  ProtocolIdParameter.Value = ProtocolId;
                command.Parameters.Add(ProtocolIdParameter);
                EntityParameter PersonIdParameter = new EntityParameter("PersonId", System.Data.DbType.String);
                if (PersonId != null)
                  PersonIdParameter.Value = PersonId;
                command.Parameters.Add(PersonIdParameter);
                EntityParameter EmpresaFacturacionIdParameter = new EntityParameter("EmpresaFacturacionId", System.Data.DbType.String);
                if (EmpresaFacturacionId != null)
                  EmpresaFacturacionIdParameter.Value = EmpresaFacturacionId;
                command.Parameters.Add(EmpresaFacturacionIdParameter);
                EntityParameter SedeParameter = new EntityParameter("Sede", System.Data.DbType.String);
                if (Sede != null)
                  SedeParameter.Value = Sede;
                command.Parameters.Add(SedeParameter);
                EntityParameter TipoEmpresaCovidIdParameter = new EntityParameter("TipoEmpresaCovidId", System.Data.DbType.Int32);
                if (TipoEmpresaCovidId.HasValue)
                  TipoEmpresaCovidIdParameter.Value = TipoEmpresaCovidId;
                command.Parameters.Add(TipoEmpresaCovidIdParameter);
                EntityParameter TecnicoCovidParameter = new EntityParameter("TecnicoCovid", System.Data.DbType.String);
                if (TecnicoCovid != null)
                  TecnicoCovidParameter.Value = TecnicoCovid;
                command.Parameters.Add(TecnicoCovidParameter);
                EntityParameter ClinicaExternadParameter = new EntityParameter("ClinicaExternad", System.Data.DbType.Int32);
                if (ClinicaExternad.HasValue)
                  ClinicaExternadParameter.Value = ClinicaExternad;
                command.Parameters.Add(ClinicaExternadParameter);
                EntityParameter InsertUserIdParameter = new EntityParameter("InsertUserId", System.Data.DbType.Int32);
                if (InsertUserId.HasValue)
                  InsertUserIdParameter.Value = InsertUserId;
                command.Parameters.Add(InsertUserIdParameter);
                EntityParameter FechaExamenParameter = new EntityParameter("FechaExamen", System.Data.DbType.DateTime);
                if (FechaExamen.HasValue)
                  FechaExamenParameter.Value = FechaExamen;
                command.Parameters.Add(FechaExamenParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_insertservice_ in the schema.
        /// </summary>
        public void usp_insertservice_ (string ServiceId, string ProtocolId, string PersonId, string EmpresaFacturacionId, string Sede, global::System.Nullable<int> TipoEmpresaCovidId, string TecnicoCovid, global::System.Nullable<int> ClinicaExternad, global::System.Nullable<int> InsertUserId, global::System.Nullable<System.DateTime> FechaExamen, string EmpresaEmpleadora)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_insertservice_";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceIdParameter = new EntityParameter("ServiceId", System.Data.DbType.String);
                if (ServiceId != null)
                  ServiceIdParameter.Value = ServiceId;
                command.Parameters.Add(ServiceIdParameter);
                EntityParameter ProtocolIdParameter = new EntityParameter("ProtocolId", System.Data.DbType.String);
                if (ProtocolId != null)
                  ProtocolIdParameter.Value = ProtocolId;
                command.Parameters.Add(ProtocolIdParameter);
                EntityParameter PersonIdParameter = new EntityParameter("PersonId", System.Data.DbType.String);
                if (PersonId != null)
                  PersonIdParameter.Value = PersonId;
                command.Parameters.Add(PersonIdParameter);
                EntityParameter EmpresaFacturacionIdParameter = new EntityParameter("EmpresaFacturacionId", System.Data.DbType.String);
                if (EmpresaFacturacionId != null)
                  EmpresaFacturacionIdParameter.Value = EmpresaFacturacionId;
                command.Parameters.Add(EmpresaFacturacionIdParameter);
                EntityParameter SedeParameter = new EntityParameter("Sede", System.Data.DbType.String);
                if (Sede != null)
                  SedeParameter.Value = Sede;
                command.Parameters.Add(SedeParameter);
                EntityParameter TipoEmpresaCovidIdParameter = new EntityParameter("TipoEmpresaCovidId", System.Data.DbType.Int32);
                if (TipoEmpresaCovidId.HasValue)
                  TipoEmpresaCovidIdParameter.Value = TipoEmpresaCovidId;
                command.Parameters.Add(TipoEmpresaCovidIdParameter);
                EntityParameter TecnicoCovidParameter = new EntityParameter("TecnicoCovid", System.Data.DbType.String);
                if (TecnicoCovid != null)
                  TecnicoCovidParameter.Value = TecnicoCovid;
                command.Parameters.Add(TecnicoCovidParameter);
                EntityParameter ClinicaExternadParameter = new EntityParameter("ClinicaExternad", System.Data.DbType.Int32);
                if (ClinicaExternad.HasValue)
                  ClinicaExternadParameter.Value = ClinicaExternad;
                command.Parameters.Add(ClinicaExternadParameter);
                EntityParameter InsertUserIdParameter = new EntityParameter("InsertUserId", System.Data.DbType.Int32);
                if (InsertUserId.HasValue)
                  InsertUserIdParameter.Value = InsertUserId;
                command.Parameters.Add(InsertUserIdParameter);
                EntityParameter FechaExamenParameter = new EntityParameter("FechaExamen", System.Data.DbType.DateTime);
                if (FechaExamen.HasValue)
                  FechaExamenParameter.Value = FechaExamen;
                command.Parameters.Add(FechaExamenParameter);
                EntityParameter EmpresaEmpleadoraParameter = new EntityParameter("EmpresaEmpleadora", System.Data.DbType.String);
                if (EmpresaEmpleadora != null)
                  EmpresaEmpleadoraParameter.Value = EmpresaEmpleadora;
                command.Parameters.Add(EmpresaEmpleadoraParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_notificacion_vigcovid in the schema.
        /// </summary>
        public ObjectResult<usp_notificacion_vigcovidResult> usp_notificacion_vigcovid ()
        {
            return base.ExecuteFunction<usp_notificacion_vigcovidResult>("SigesoftEntitiesModel.usp_notificacion_vigcovid");
        }

    
        /// <summary>
        /// There are no comments for usp_regcovid_services in the schema.
        /// </summary>
        public ObjectResult<usp_regcovid_servicesResult> usp_regcovid_services (global::System.Nullable<System.DateTime> FechaServicio, global::System.Nullable<int> MedicalCenter, global::System.Nullable<int> Status, string ComponentId, string OrganizationId, string NodeId)
        {
            ObjectParameter FechaServicioParameter;
            if (FechaServicio.HasValue)
            {
                FechaServicioParameter = new ObjectParameter("FechaServicio", FechaServicio);
            }
            else
            {
                FechaServicioParameter = new ObjectParameter("FechaServicio", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter MedicalCenterParameter;
            if (MedicalCenter.HasValue)
            {
                MedicalCenterParameter = new ObjectParameter("MedicalCenter", MedicalCenter);
            }
            else
            {
                MedicalCenterParameter = new ObjectParameter("MedicalCenter", typeof(global::System.Nullable<int>));
            }
            ObjectParameter StatusParameter;
            if (Status.HasValue)
            {
                StatusParameter = new ObjectParameter("Status", Status);
            }
            else
            {
                StatusParameter = new ObjectParameter("Status", typeof(global::System.Nullable<int>));
            }
            ObjectParameter ComponentIdParameter;
            if (ComponentId != null)
            {
                ComponentIdParameter = new ObjectParameter("ComponentId", ComponentId);
            }
            else
            {
                ComponentIdParameter = new ObjectParameter("ComponentId", typeof(string));
            }
            ObjectParameter OrganizationIdParameter;
            if (OrganizationId != null)
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", OrganizationId);
            }
            else
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", typeof(string));
            }
            ObjectParameter NodeIdParameter;
            if (NodeId != null)
            {
                NodeIdParameter = new ObjectParameter("NodeId", NodeId);
            }
            else
            {
                NodeIdParameter = new ObjectParameter("NodeId", typeof(string));
            }
            return base.ExecuteFunction<usp_regcovid_servicesResult>("SigesoftEntitiesModel.usp_regcovid_services", FechaServicioParameter, MedicalCenterParameter, StatusParameter, ComponentIdParameter, OrganizationIdParameter, NodeIdParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_resultados_covid_get_persona in the schema.
        /// </summary>
        public ObjectResult<usp_resultados_covid_get_personaResult> usp_resultados_covid_get_persona (string v_OrganizationId, string v_LocationId, string v_Usuario)
        {
            ObjectParameter v_OrganizationIdParameter;
            if (v_OrganizationId != null)
            {
                v_OrganizationIdParameter = new ObjectParameter("v_OrganizationId", v_OrganizationId);
            }
            else
            {
                v_OrganizationIdParameter = new ObjectParameter("v_OrganizationId", typeof(string));
            }
            ObjectParameter v_LocationIdParameter;
            if (v_LocationId != null)
            {
                v_LocationIdParameter = new ObjectParameter("v_LocationId", v_LocationId);
            }
            else
            {
                v_LocationIdParameter = new ObjectParameter("v_LocationId", typeof(string));
            }
            ObjectParameter v_UsuarioParameter;
            if (v_Usuario != null)
            {
                v_UsuarioParameter = new ObjectParameter("v_Usuario", v_Usuario);
            }
            else
            {
                v_UsuarioParameter = new ObjectParameter("v_Usuario", typeof(string));
            }
            return base.ExecuteFunction<usp_resultados_covid_get_personaResult>("SigesoftEntitiesModel.usp_resultados_covid_get_persona", v_OrganizationIdParameter, v_LocationIdParameter, v_UsuarioParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_resultados_covid_get_resultados in the schema.
        /// </summary>
        public ObjectResult<usp_resultados_covid_get_resultadosResult> usp_resultados_covid_get_resultados (string v_OrganizationId, string v_PersonId, string v_LocationId, string v_FechaInicio, string v_FechaFinal, string v_Usuario)
        {
            ObjectParameter v_OrganizationIdParameter;
            if (v_OrganizationId != null)
            {
                v_OrganizationIdParameter = new ObjectParameter("v_OrganizationId", v_OrganizationId);
            }
            else
            {
                v_OrganizationIdParameter = new ObjectParameter("v_OrganizationId", typeof(string));
            }
            ObjectParameter v_PersonIdParameter;
            if (v_PersonId != null)
            {
                v_PersonIdParameter = new ObjectParameter("v_PersonId", v_PersonId);
            }
            else
            {
                v_PersonIdParameter = new ObjectParameter("v_PersonId", typeof(string));
            }
            ObjectParameter v_LocationIdParameter;
            if (v_LocationId != null)
            {
                v_LocationIdParameter = new ObjectParameter("v_LocationId", v_LocationId);
            }
            else
            {
                v_LocationIdParameter = new ObjectParameter("v_LocationId", typeof(string));
            }
            ObjectParameter v_FechaInicioParameter;
            if (v_FechaInicio != null)
            {
                v_FechaInicioParameter = new ObjectParameter("v_FechaInicio", v_FechaInicio);
            }
            else
            {
                v_FechaInicioParameter = new ObjectParameter("v_FechaInicio", typeof(string));
            }
            ObjectParameter v_FechaFinalParameter;
            if (v_FechaFinal != null)
            {
                v_FechaFinalParameter = new ObjectParameter("v_FechaFinal", v_FechaFinal);
            }
            else
            {
                v_FechaFinalParameter = new ObjectParameter("v_FechaFinal", typeof(string));
            }
            ObjectParameter v_UsuarioParameter;
            if (v_Usuario != null)
            {
                v_UsuarioParameter = new ObjectParameter("v_Usuario", v_Usuario);
            }
            else
            {
                v_UsuarioParameter = new ObjectParameter("v_Usuario", typeof(string));
            }
            return base.ExecuteFunction<usp_resultados_covid_get_resultadosResult>("SigesoftEntitiesModel.usp_resultados_covid_get_resultados", v_OrganizationIdParameter, v_PersonIdParameter, v_LocationIdParameter, v_FechaInicioParameter, v_FechaFinalParameter, v_UsuarioParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_resultados_covid_get_sedes in the schema.
        /// </summary>
        public ObjectResult<usp_resultados_covid_get_sedesResult> usp_resultados_covid_get_sedes (string v_OrganizationId, string v_Usuario)
        {
            ObjectParameter v_OrganizationIdParameter;
            if (v_OrganizationId != null)
            {
                v_OrganizationIdParameter = new ObjectParameter("v_OrganizationId", v_OrganizationId);
            }
            else
            {
                v_OrganizationIdParameter = new ObjectParameter("v_OrganizationId", typeof(string));
            }
            ObjectParameter v_UsuarioParameter;
            if (v_Usuario != null)
            {
                v_UsuarioParameter = new ObjectParameter("v_Usuario", v_Usuario);
            }
            else
            {
                v_UsuarioParameter = new ObjectParameter("v_Usuario", typeof(string));
            }
            return base.ExecuteFunction<usp_resultados_covid_get_sedesResult>("SigesoftEntitiesModel.usp_resultados_covid_get_sedes", v_OrganizationIdParameter, v_UsuarioParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_resultados_covid_login_externos in the schema.
        /// </summary>
        public ObjectResult<usp_resultados_covid_login_externosResult> usp_resultados_covid_login_externos (string v_Usuario, string v_Password)
        {
            ObjectParameter v_UsuarioParameter;
            if (v_Usuario != null)
            {
                v_UsuarioParameter = new ObjectParameter("v_Usuario", v_Usuario);
            }
            else
            {
                v_UsuarioParameter = new ObjectParameter("v_Usuario", typeof(string));
            }
            ObjectParameter v_PasswordParameter;
            if (v_Password != null)
            {
                v_PasswordParameter = new ObjectParameter("v_Password", v_Password);
            }
            else
            {
                v_PasswordParameter = new ObjectParameter("v_Password", typeof(string));
            }
            return base.ExecuteFunction<usp_resultados_covid_login_externosResult>("SigesoftEntitiesModel.usp_resultados_covid_login_externos", v_UsuarioParameter, v_PasswordParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_scheduleworker in the schema.
        /// </summary>
        public void usp_scheduleworker (global::System.Nullable<int> NodeId, string OrganizationId, global::System.Nullable<int> SedeId, string ProtocoloId, string FirstName, string FirstLastName, string SecondLastName, global::System.Nullable<int> DocTypeId, string DocNumber, global::System.Nullable<int> SexTypeId, global::System.Nullable<System.DateTime> Birthdate, string Mail, string TelephoneNumber, string CurrentOccupation, string AdressLocation, string NombreSede, global::System.Nullable<int> TipoEmpresaCovidId, global::System.Nullable<int> UserId, string Tecnico, global::System.Nullable<int> ClinicaExternad, global::System.Nullable<System.DateTime> FechaExamen)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_scheduleworker";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter NodeIdParameter = new EntityParameter("NodeId", System.Data.DbType.Int32);
                if (NodeId.HasValue)
                  NodeIdParameter.Value = NodeId;
                command.Parameters.Add(NodeIdParameter);
                EntityParameter OrganizationIdParameter = new EntityParameter("OrganizationId", System.Data.DbType.String);
                if (OrganizationId != null)
                  OrganizationIdParameter.Value = OrganizationId;
                command.Parameters.Add(OrganizationIdParameter);
                EntityParameter SedeIdParameter = new EntityParameter("SedeId", System.Data.DbType.Int32);
                if (SedeId.HasValue)
                  SedeIdParameter.Value = SedeId;
                command.Parameters.Add(SedeIdParameter);
                EntityParameter ProtocoloIdParameter = new EntityParameter("ProtocoloId", System.Data.DbType.String);
                if (ProtocoloId != null)
                  ProtocoloIdParameter.Value = ProtocoloId;
                command.Parameters.Add(ProtocoloIdParameter);
                EntityParameter FirstNameParameter = new EntityParameter("FirstName", System.Data.DbType.String);
                if (FirstName != null)
                  FirstNameParameter.Value = FirstName;
                command.Parameters.Add(FirstNameParameter);
                EntityParameter FirstLastNameParameter = new EntityParameter("FirstLastName", System.Data.DbType.String);
                if (FirstLastName != null)
                  FirstLastNameParameter.Value = FirstLastName;
                command.Parameters.Add(FirstLastNameParameter);
                EntityParameter SecondLastNameParameter = new EntityParameter("SecondLastName", System.Data.DbType.String);
                if (SecondLastName != null)
                  SecondLastNameParameter.Value = SecondLastName;
                command.Parameters.Add(SecondLastNameParameter);
                EntityParameter DocTypeIdParameter = new EntityParameter("DocTypeId", System.Data.DbType.Int32);
                if (DocTypeId.HasValue)
                  DocTypeIdParameter.Value = DocTypeId;
                command.Parameters.Add(DocTypeIdParameter);
                EntityParameter DocNumberParameter = new EntityParameter("DocNumber", System.Data.DbType.String);
                if (DocNumber != null)
                  DocNumberParameter.Value = DocNumber;
                command.Parameters.Add(DocNumberParameter);
                EntityParameter SexTypeIdParameter = new EntityParameter("SexTypeId", System.Data.DbType.Int32);
                if (SexTypeId.HasValue)
                  SexTypeIdParameter.Value = SexTypeId;
                command.Parameters.Add(SexTypeIdParameter);
                EntityParameter BirthdateParameter = new EntityParameter("Birthdate", System.Data.DbType.DateTime);
                if (Birthdate.HasValue)
                  BirthdateParameter.Value = Birthdate;
                command.Parameters.Add(BirthdateParameter);
                EntityParameter MailParameter = new EntityParameter("Mail", System.Data.DbType.String);
                if (Mail != null)
                  MailParameter.Value = Mail;
                command.Parameters.Add(MailParameter);
                EntityParameter TelephoneNumberParameter = new EntityParameter("TelephoneNumber", System.Data.DbType.String);
                if (TelephoneNumber != null)
                  TelephoneNumberParameter.Value = TelephoneNumber;
                command.Parameters.Add(TelephoneNumberParameter);
                EntityParameter CurrentOccupationParameter = new EntityParameter("CurrentOccupation", System.Data.DbType.String);
                if (CurrentOccupation != null)
                  CurrentOccupationParameter.Value = CurrentOccupation;
                command.Parameters.Add(CurrentOccupationParameter);
                EntityParameter AdressLocationParameter = new EntityParameter("AdressLocation", System.Data.DbType.String);
                if (AdressLocation != null)
                  AdressLocationParameter.Value = AdressLocation;
                command.Parameters.Add(AdressLocationParameter);
                EntityParameter NombreSedeParameter = new EntityParameter("NombreSede", System.Data.DbType.String);
                if (NombreSede != null)
                  NombreSedeParameter.Value = NombreSede;
                command.Parameters.Add(NombreSedeParameter);
                EntityParameter TipoEmpresaCovidIdParameter = new EntityParameter("TipoEmpresaCovidId", System.Data.DbType.Int32);
                if (TipoEmpresaCovidId.HasValue)
                  TipoEmpresaCovidIdParameter.Value = TipoEmpresaCovidId;
                command.Parameters.Add(TipoEmpresaCovidIdParameter);
                EntityParameter UserIdParameter = new EntityParameter("UserId", System.Data.DbType.Int32);
                if (UserId.HasValue)
                  UserIdParameter.Value = UserId;
                command.Parameters.Add(UserIdParameter);
                EntityParameter TecnicoParameter = new EntityParameter("Tecnico", System.Data.DbType.String);
                if (Tecnico != null)
                  TecnicoParameter.Value = Tecnico;
                command.Parameters.Add(TecnicoParameter);
                EntityParameter ClinicaExternadParameter = new EntityParameter("ClinicaExternad", System.Data.DbType.Int32);
                if (ClinicaExternad.HasValue)
                  ClinicaExternadParameter.Value = ClinicaExternad;
                command.Parameters.Add(ClinicaExternadParameter);
                EntityParameter FechaExamenParameter = new EntityParameter("FechaExamen", System.Data.DbType.DateTime);
                if (FechaExamen.HasValue)
                  FechaExamenParameter.Value = FechaExamen;
                command.Parameters.Add(FechaExamenParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_scheduleworker_interface in the schema.
        /// </summary>
        public void usp_scheduleworker_interface (global::System.Nullable<int> NodeId, string OrganizationId, global::System.Nullable<int> SedeId, string ProtocoloId, string FirstName, string FirstLastName, string SecondLastName, global::System.Nullable<int> DocTypeId, string DocNumber, global::System.Nullable<int> SexTypeId, global::System.Nullable<System.DateTime> Birthdate, string Mail, string TelephoneNumber, string CurrentOccupation, string AdressLocation, string NombreSede, global::System.Nullable<int> TipoEmpresaCovidId, global::System.Nullable<int> UserId, string Tecnico, global::System.Nullable<int> ClinicaExternad, global::System.Nullable<System.DateTime> FechaExamen, ref string ServiceComponentId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_scheduleworker_interface";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter NodeIdParameter = new EntityParameter("NodeId", System.Data.DbType.Int32);
                if (NodeId.HasValue)
                  NodeIdParameter.Value = NodeId;
                command.Parameters.Add(NodeIdParameter);
                EntityParameter OrganizationIdParameter = new EntityParameter("OrganizationId", System.Data.DbType.String);
                if (OrganizationId != null)
                  OrganizationIdParameter.Value = OrganizationId;
                command.Parameters.Add(OrganizationIdParameter);
                EntityParameter SedeIdParameter = new EntityParameter("SedeId", System.Data.DbType.Int32);
                if (SedeId.HasValue)
                  SedeIdParameter.Value = SedeId;
                command.Parameters.Add(SedeIdParameter);
                EntityParameter ProtocoloIdParameter = new EntityParameter("ProtocoloId", System.Data.DbType.String);
                if (ProtocoloId != null)
                  ProtocoloIdParameter.Value = ProtocoloId;
                command.Parameters.Add(ProtocoloIdParameter);
                EntityParameter FirstNameParameter = new EntityParameter("FirstName", System.Data.DbType.String);
                if (FirstName != null)
                  FirstNameParameter.Value = FirstName;
                command.Parameters.Add(FirstNameParameter);
                EntityParameter FirstLastNameParameter = new EntityParameter("FirstLastName", System.Data.DbType.String);
                if (FirstLastName != null)
                  FirstLastNameParameter.Value = FirstLastName;
                command.Parameters.Add(FirstLastNameParameter);
                EntityParameter SecondLastNameParameter = new EntityParameter("SecondLastName", System.Data.DbType.String);
                if (SecondLastName != null)
                  SecondLastNameParameter.Value = SecondLastName;
                command.Parameters.Add(SecondLastNameParameter);
                EntityParameter DocTypeIdParameter = new EntityParameter("DocTypeId", System.Data.DbType.Int32);
                if (DocTypeId.HasValue)
                  DocTypeIdParameter.Value = DocTypeId;
                command.Parameters.Add(DocTypeIdParameter);
                EntityParameter DocNumberParameter = new EntityParameter("DocNumber", System.Data.DbType.String);
                if (DocNumber != null)
                  DocNumberParameter.Value = DocNumber;
                command.Parameters.Add(DocNumberParameter);
                EntityParameter SexTypeIdParameter = new EntityParameter("SexTypeId", System.Data.DbType.Int32);
                if (SexTypeId.HasValue)
                  SexTypeIdParameter.Value = SexTypeId;
                command.Parameters.Add(SexTypeIdParameter);
                EntityParameter BirthdateParameter = new EntityParameter("Birthdate", System.Data.DbType.DateTime);
                if (Birthdate.HasValue)
                  BirthdateParameter.Value = Birthdate;
                command.Parameters.Add(BirthdateParameter);
                EntityParameter MailParameter = new EntityParameter("Mail", System.Data.DbType.String);
                if (Mail != null)
                  MailParameter.Value = Mail;
                command.Parameters.Add(MailParameter);
                EntityParameter TelephoneNumberParameter = new EntityParameter("TelephoneNumber", System.Data.DbType.String);
                if (TelephoneNumber != null)
                  TelephoneNumberParameter.Value = TelephoneNumber;
                command.Parameters.Add(TelephoneNumberParameter);
                EntityParameter CurrentOccupationParameter = new EntityParameter("CurrentOccupation", System.Data.DbType.String);
                if (CurrentOccupation != null)
                  CurrentOccupationParameter.Value = CurrentOccupation;
                command.Parameters.Add(CurrentOccupationParameter);
                EntityParameter AdressLocationParameter = new EntityParameter("AdressLocation", System.Data.DbType.String);
                if (AdressLocation != null)
                  AdressLocationParameter.Value = AdressLocation;
                command.Parameters.Add(AdressLocationParameter);
                EntityParameter NombreSedeParameter = new EntityParameter("NombreSede", System.Data.DbType.String);
                if (NombreSede != null)
                  NombreSedeParameter.Value = NombreSede;
                command.Parameters.Add(NombreSedeParameter);
                EntityParameter TipoEmpresaCovidIdParameter = new EntityParameter("TipoEmpresaCovidId", System.Data.DbType.Int32);
                if (TipoEmpresaCovidId.HasValue)
                  TipoEmpresaCovidIdParameter.Value = TipoEmpresaCovidId;
                command.Parameters.Add(TipoEmpresaCovidIdParameter);
                EntityParameter UserIdParameter = new EntityParameter("UserId", System.Data.DbType.Int32);
                if (UserId.HasValue)
                  UserIdParameter.Value = UserId;
                command.Parameters.Add(UserIdParameter);
                EntityParameter TecnicoParameter = new EntityParameter("Tecnico", System.Data.DbType.String);
                if (Tecnico != null)
                  TecnicoParameter.Value = Tecnico;
                command.Parameters.Add(TecnicoParameter);
                EntityParameter ClinicaExternadParameter = new EntityParameter("ClinicaExternad", System.Data.DbType.Int32);
                if (ClinicaExternad.HasValue)
                  ClinicaExternadParameter.Value = ClinicaExternad;
                command.Parameters.Add(ClinicaExternadParameter);
                EntityParameter FechaExamenParameter = new EntityParameter("FechaExamen", System.Data.DbType.DateTime);
                if (FechaExamen.HasValue)
                  FechaExamenParameter.Value = FechaExamen;
                command.Parameters.Add(FechaExamenParameter);
                EntityParameter ServiceComponentIdParameter = new EntityParameter("ServiceComponentId", System.Data.DbType.String);
                if (ServiceComponentId != null)
                  ServiceComponentIdParameter.Value = ServiceComponentId;
                command.Parameters.Add(ServiceComponentIdParameter);
                command.ExecuteNonQuery();
                if (ServiceComponentIdParameter.Value != null && !(ServiceComponentIdParameter.Value is System.DBNull))
                  ServiceComponentId = (string)ServiceComponentIdParameter.Value;
                else
                  ServiceComponentId = default(string);
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_scheduleworker_person in the schema.
        /// </summary>
        public ObjectResult<regcovid_scheduleworkerResult> usp_scheduleworker_person (global::System.Nullable<int> NodeId, string FirstName, string FirstLastName, string SecondLastName, global::System.Nullable<int> DocTypeId, string DocNumber, global::System.Nullable<int> SexTypeId, global::System.Nullable<System.DateTime> Birthdate, string Mail, string TelephoneNumber, string CurrentOccupation, string AdressLocation)
        {
            ObjectParameter NodeIdParameter;
            if (NodeId.HasValue)
            {
                NodeIdParameter = new ObjectParameter("NodeId", NodeId);
            }
            else
            {
                NodeIdParameter = new ObjectParameter("NodeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter FirstNameParameter;
            if (FirstName != null)
            {
                FirstNameParameter = new ObjectParameter("FirstName", FirstName);
            }
            else
            {
                FirstNameParameter = new ObjectParameter("FirstName", typeof(string));
            }
            ObjectParameter FirstLastNameParameter;
            if (FirstLastName != null)
            {
                FirstLastNameParameter = new ObjectParameter("FirstLastName", FirstLastName);
            }
            else
            {
                FirstLastNameParameter = new ObjectParameter("FirstLastName", typeof(string));
            }
            ObjectParameter SecondLastNameParameter;
            if (SecondLastName != null)
            {
                SecondLastNameParameter = new ObjectParameter("SecondLastName", SecondLastName);
            }
            else
            {
                SecondLastNameParameter = new ObjectParameter("SecondLastName", typeof(string));
            }
            ObjectParameter DocTypeIdParameter;
            if (DocTypeId.HasValue)
            {
                DocTypeIdParameter = new ObjectParameter("DocTypeId", DocTypeId);
            }
            else
            {
                DocTypeIdParameter = new ObjectParameter("DocTypeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter DocNumberParameter;
            if (DocNumber != null)
            {
                DocNumberParameter = new ObjectParameter("DocNumber", DocNumber);
            }
            else
            {
                DocNumberParameter = new ObjectParameter("DocNumber", typeof(string));
            }
            ObjectParameter SexTypeIdParameter;
            if (SexTypeId.HasValue)
            {
                SexTypeIdParameter = new ObjectParameter("SexTypeId", SexTypeId);
            }
            else
            {
                SexTypeIdParameter = new ObjectParameter("SexTypeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter BirthdateParameter;
            if (Birthdate.HasValue)
            {
                BirthdateParameter = new ObjectParameter("Birthdate", Birthdate);
            }
            else
            {
                BirthdateParameter = new ObjectParameter("Birthdate", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter MailParameter;
            if (Mail != null)
            {
                MailParameter = new ObjectParameter("Mail", Mail);
            }
            else
            {
                MailParameter = new ObjectParameter("Mail", typeof(string));
            }
            ObjectParameter TelephoneNumberParameter;
            if (TelephoneNumber != null)
            {
                TelephoneNumberParameter = new ObjectParameter("TelephoneNumber", TelephoneNumber);
            }
            else
            {
                TelephoneNumberParameter = new ObjectParameter("TelephoneNumber", typeof(string));
            }
            ObjectParameter CurrentOccupationParameter;
            if (CurrentOccupation != null)
            {
                CurrentOccupationParameter = new ObjectParameter("CurrentOccupation", CurrentOccupation);
            }
            else
            {
                CurrentOccupationParameter = new ObjectParameter("CurrentOccupation", typeof(string));
            }
            ObjectParameter AdressLocationParameter;
            if (AdressLocation != null)
            {
                AdressLocationParameter = new ObjectParameter("AdressLocation", AdressLocation);
            }
            else
            {
                AdressLocationParameter = new ObjectParameter("AdressLocation", typeof(string));
            }
            return base.ExecuteFunction<regcovid_scheduleworkerResult>("SigesoftEntitiesModel.usp_scheduleworker_person", NodeIdParameter, FirstNameParameter, FirstLastNameParameter, SecondLastNameParameter, DocTypeIdParameter, DocNumberParameter, SexTypeIdParameter, BirthdateParameter, MailParameter, TelephoneNumberParameter, CurrentOccupationParameter, AdressLocationParameter);
        }

    
        /// <summary>
        /// There are no comments for usp_scheduleworker_regcovidnet in the schema.
        /// </summary>
        public List<regcovid_scheduleworkerResult> usp_scheduleworker_regcovidnet (global::System.Nullable<int> NodeId, string OrganizationId, global::System.Nullable<int> SedeId, string ProtocoloId, string FirstName, string FirstLastName, string SecondLastName, global::System.Nullable<int> DocTypeId, string DocNumber, global::System.Nullable<int> SexTypeId, global::System.Nullable<System.DateTime> Birthdate, string Mail, string TelephoneNumber, string CurrentOccupation, string AdressLocation, string NombreSede, global::System.Nullable<int> TipoEmpresaCovidId, global::System.Nullable<int> UserId, string Tecnico, global::System.Nullable<int> ClinicaExternad, global::System.Nullable<System.DateTime> FechaExamen, string EmpresaEmpleadora, ref string ServiceId)
        {
            ObjectParameter NodeIdParameter;
            if (NodeId.HasValue)
            {
                NodeIdParameter = new ObjectParameter("NodeId", NodeId);
            }
            else
            {
                NodeIdParameter = new ObjectParameter("NodeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter OrganizationIdParameter;
            if (OrganizationId != null)
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", OrganizationId);
            }
            else
            {
                OrganizationIdParameter = new ObjectParameter("OrganizationId", typeof(string));
            }
            ObjectParameter SedeIdParameter;
            if (SedeId.HasValue)
            {
                SedeIdParameter = new ObjectParameter("SedeId", SedeId);
            }
            else
            {
                SedeIdParameter = new ObjectParameter("SedeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter ProtocoloIdParameter;
            if (ProtocoloId != null)
            {
                ProtocoloIdParameter = new ObjectParameter("ProtocoloId", ProtocoloId);
            }
            else
            {
                ProtocoloIdParameter = new ObjectParameter("ProtocoloId", typeof(string));
            }
            ObjectParameter FirstNameParameter;
            if (FirstName != null)
            {
                FirstNameParameter = new ObjectParameter("FirstName", FirstName);
            }
            else
            {
                FirstNameParameter = new ObjectParameter("FirstName", typeof(string));
            }
            ObjectParameter FirstLastNameParameter;
            if (FirstLastName != null)
            {
                FirstLastNameParameter = new ObjectParameter("FirstLastName", FirstLastName);
            }
            else
            {
                FirstLastNameParameter = new ObjectParameter("FirstLastName", typeof(string));
            }
            ObjectParameter SecondLastNameParameter;
            if (SecondLastName != null)
            {
                SecondLastNameParameter = new ObjectParameter("SecondLastName", SecondLastName);
            }
            else
            {
                SecondLastNameParameter = new ObjectParameter("SecondLastName", typeof(string));
            }
            ObjectParameter DocTypeIdParameter;
            if (DocTypeId.HasValue)
            {
                DocTypeIdParameter = new ObjectParameter("DocTypeId", DocTypeId);
            }
            else
            {
                DocTypeIdParameter = new ObjectParameter("DocTypeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter DocNumberParameter;
            if (DocNumber != null)
            {
                DocNumberParameter = new ObjectParameter("DocNumber", DocNumber);
            }
            else
            {
                DocNumberParameter = new ObjectParameter("DocNumber", typeof(string));
            }
            ObjectParameter SexTypeIdParameter;
            if (SexTypeId.HasValue)
            {
                SexTypeIdParameter = new ObjectParameter("SexTypeId", SexTypeId);
            }
            else
            {
                SexTypeIdParameter = new ObjectParameter("SexTypeId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter BirthdateParameter;
            if (Birthdate.HasValue)
            {
                BirthdateParameter = new ObjectParameter("Birthdate", Birthdate);
            }
            else
            {
                BirthdateParameter = new ObjectParameter("Birthdate", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter MailParameter;
            if (Mail != null)
            {
                MailParameter = new ObjectParameter("Mail", Mail);
            }
            else
            {
                MailParameter = new ObjectParameter("Mail", typeof(string));
            }
            ObjectParameter TelephoneNumberParameter;
            if (TelephoneNumber != null)
            {
                TelephoneNumberParameter = new ObjectParameter("TelephoneNumber", TelephoneNumber);
            }
            else
            {
                TelephoneNumberParameter = new ObjectParameter("TelephoneNumber", typeof(string));
            }
            ObjectParameter CurrentOccupationParameter;
            if (CurrentOccupation != null)
            {
                CurrentOccupationParameter = new ObjectParameter("CurrentOccupation", CurrentOccupation);
            }
            else
            {
                CurrentOccupationParameter = new ObjectParameter("CurrentOccupation", typeof(string));
            }
            ObjectParameter AdressLocationParameter;
            if (AdressLocation != null)
            {
                AdressLocationParameter = new ObjectParameter("AdressLocation", AdressLocation);
            }
            else
            {
                AdressLocationParameter = new ObjectParameter("AdressLocation", typeof(string));
            }
            ObjectParameter NombreSedeParameter;
            if (NombreSede != null)
            {
                NombreSedeParameter = new ObjectParameter("NombreSede", NombreSede);
            }
            else
            {
                NombreSedeParameter = new ObjectParameter("NombreSede", typeof(string));
            }
            ObjectParameter TipoEmpresaCovidIdParameter;
            if (TipoEmpresaCovidId.HasValue)
            {
                TipoEmpresaCovidIdParameter = new ObjectParameter("TipoEmpresaCovidId", TipoEmpresaCovidId);
            }
            else
            {
                TipoEmpresaCovidIdParameter = new ObjectParameter("TipoEmpresaCovidId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter UserIdParameter;
            if (UserId.HasValue)
            {
                UserIdParameter = new ObjectParameter("UserId", UserId);
            }
            else
            {
                UserIdParameter = new ObjectParameter("UserId", typeof(global::System.Nullable<int>));
            }
            ObjectParameter TecnicoParameter;
            if (Tecnico != null)
            {
                TecnicoParameter = new ObjectParameter("Tecnico", Tecnico);
            }
            else
            {
                TecnicoParameter = new ObjectParameter("Tecnico", typeof(string));
            }
            ObjectParameter ClinicaExternadParameter;
            if (ClinicaExternad.HasValue)
            {
                ClinicaExternadParameter = new ObjectParameter("ClinicaExternad", ClinicaExternad);
            }
            else
            {
                ClinicaExternadParameter = new ObjectParameter("ClinicaExternad", typeof(global::System.Nullable<int>));
            }
            ObjectParameter FechaExamenParameter;
            if (FechaExamen.HasValue)
            {
                FechaExamenParameter = new ObjectParameter("FechaExamen", FechaExamen);
            }
            else
            {
                FechaExamenParameter = new ObjectParameter("FechaExamen", typeof(global::System.Nullable<System.DateTime>));
            }
            ObjectParameter EmpresaEmpleadoraParameter;
            if (EmpresaEmpleadora != null)
            {
                EmpresaEmpleadoraParameter = new ObjectParameter("EmpresaEmpleadora", EmpresaEmpleadora);
            }
            else
            {
                EmpresaEmpleadoraParameter = new ObjectParameter("EmpresaEmpleadora", typeof(string));
            }
            ObjectParameter ServiceIdParameter;
            if (ServiceId != null)
            {
                ServiceIdParameter = new ObjectParameter("ServiceId", ServiceId);
            }
            else
            {
                ServiceIdParameter = new ObjectParameter("ServiceId", typeof(string));
            }
            List<regcovid_scheduleworkerResult> result = base.ExecuteFunction<regcovid_scheduleworkerResult>("SigesoftEntitiesModel.usp_scheduleworker_regcovidnet", NodeIdParameter, OrganizationIdParameter, SedeIdParameter, ProtocoloIdParameter, FirstNameParameter, FirstLastNameParameter, SecondLastNameParameter, DocTypeIdParameter, DocNumberParameter, SexTypeIdParameter, BirthdateParameter, MailParameter, TelephoneNumberParameter, CurrentOccupationParameter, AdressLocationParameter, NombreSedeParameter, TipoEmpresaCovidIdParameter, UserIdParameter, TecnicoParameter, ClinicaExternadParameter, FechaExamenParameter, EmpresaEmpleadoraParameter, ServiceIdParameter).ToList();

            if (ServiceIdParameter != null && ServiceIdParameter.Value != DBNull.Value)
              ServiceId = (string)ServiceIdParameter.Value;
            else
              ServiceId = default(string);
             return result;
        }

    
        /// <summary>
        /// There are no comments for usp_scheduleworker_test in the schema.
        /// </summary>
        public void usp_scheduleworker_test (global::System.Nullable<int> NodeId, string OrganizationId, global::System.Nullable<int> SedeId, string ProtocoloId, string FirstName, string FirstLastName, string SecondLastName, global::System.Nullable<int> DocTypeId, string DocNumber, global::System.Nullable<int> SexTypeId, global::System.Nullable<System.DateTime> Birthdate, string Mail, string TelephoneNumber, string CurrentOccupation, string AdressLocation, string NombreSede, global::System.Nullable<int> TipoEmpresaCovidId, global::System.Nullable<int> UserId, string Tecnico, global::System.Nullable<int> ClinicaExternad, global::System.Nullable<System.DateTime> FechaExamen)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_scheduleworker_test";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter NodeIdParameter = new EntityParameter("NodeId", System.Data.DbType.Int32);
                if (NodeId.HasValue)
                  NodeIdParameter.Value = NodeId;
                command.Parameters.Add(NodeIdParameter);
                EntityParameter OrganizationIdParameter = new EntityParameter("OrganizationId", System.Data.DbType.String);
                if (OrganizationId != null)
                  OrganizationIdParameter.Value = OrganizationId;
                command.Parameters.Add(OrganizationIdParameter);
                EntityParameter SedeIdParameter = new EntityParameter("SedeId", System.Data.DbType.Int32);
                if (SedeId.HasValue)
                  SedeIdParameter.Value = SedeId;
                command.Parameters.Add(SedeIdParameter);
                EntityParameter ProtocoloIdParameter = new EntityParameter("ProtocoloId", System.Data.DbType.String);
                if (ProtocoloId != null)
                  ProtocoloIdParameter.Value = ProtocoloId;
                command.Parameters.Add(ProtocoloIdParameter);
                EntityParameter FirstNameParameter = new EntityParameter("FirstName", System.Data.DbType.String);
                if (FirstName != null)
                  FirstNameParameter.Value = FirstName;
                command.Parameters.Add(FirstNameParameter);
                EntityParameter FirstLastNameParameter = new EntityParameter("FirstLastName", System.Data.DbType.String);
                if (FirstLastName != null)
                  FirstLastNameParameter.Value = FirstLastName;
                command.Parameters.Add(FirstLastNameParameter);
                EntityParameter SecondLastNameParameter = new EntityParameter("SecondLastName", System.Data.DbType.String);
                if (SecondLastName != null)
                  SecondLastNameParameter.Value = SecondLastName;
                command.Parameters.Add(SecondLastNameParameter);
                EntityParameter DocTypeIdParameter = new EntityParameter("DocTypeId", System.Data.DbType.Int32);
                if (DocTypeId.HasValue)
                  DocTypeIdParameter.Value = DocTypeId;
                command.Parameters.Add(DocTypeIdParameter);
                EntityParameter DocNumberParameter = new EntityParameter("DocNumber", System.Data.DbType.String);
                if (DocNumber != null)
                  DocNumberParameter.Value = DocNumber;
                command.Parameters.Add(DocNumberParameter);
                EntityParameter SexTypeIdParameter = new EntityParameter("SexTypeId", System.Data.DbType.Int32);
                if (SexTypeId.HasValue)
                  SexTypeIdParameter.Value = SexTypeId;
                command.Parameters.Add(SexTypeIdParameter);
                EntityParameter BirthdateParameter = new EntityParameter("Birthdate", System.Data.DbType.DateTime);
                if (Birthdate.HasValue)
                  BirthdateParameter.Value = Birthdate;
                command.Parameters.Add(BirthdateParameter);
                EntityParameter MailParameter = new EntityParameter("Mail", System.Data.DbType.String);
                if (Mail != null)
                  MailParameter.Value = Mail;
                command.Parameters.Add(MailParameter);
                EntityParameter TelephoneNumberParameter = new EntityParameter("TelephoneNumber", System.Data.DbType.String);
                if (TelephoneNumber != null)
                  TelephoneNumberParameter.Value = TelephoneNumber;
                command.Parameters.Add(TelephoneNumberParameter);
                EntityParameter CurrentOccupationParameter = new EntityParameter("CurrentOccupation", System.Data.DbType.String);
                if (CurrentOccupation != null)
                  CurrentOccupationParameter.Value = CurrentOccupation;
                command.Parameters.Add(CurrentOccupationParameter);
                EntityParameter AdressLocationParameter = new EntityParameter("AdressLocation", System.Data.DbType.String);
                if (AdressLocation != null)
                  AdressLocationParameter.Value = AdressLocation;
                command.Parameters.Add(AdressLocationParameter);
                EntityParameter NombreSedeParameter = new EntityParameter("NombreSede", System.Data.DbType.String);
                if (NombreSede != null)
                  NombreSedeParameter.Value = NombreSede;
                command.Parameters.Add(NombreSedeParameter);
                EntityParameter TipoEmpresaCovidIdParameter = new EntityParameter("TipoEmpresaCovidId", System.Data.DbType.Int32);
                if (TipoEmpresaCovidId.HasValue)
                  TipoEmpresaCovidIdParameter.Value = TipoEmpresaCovidId;
                command.Parameters.Add(TipoEmpresaCovidIdParameter);
                EntityParameter UserIdParameter = new EntityParameter("UserId", System.Data.DbType.Int32);
                if (UserId.HasValue)
                  UserIdParameter.Value = UserId;
                command.Parameters.Add(UserIdParameter);
                EntityParameter TecnicoParameter = new EntityParameter("Tecnico", System.Data.DbType.String);
                if (Tecnico != null)
                  TecnicoParameter.Value = Tecnico;
                command.Parameters.Add(TecnicoParameter);
                EntityParameter ClinicaExternadParameter = new EntityParameter("ClinicaExternad", System.Data.DbType.Int32);
                if (ClinicaExternad.HasValue)
                  ClinicaExternadParameter.Value = ClinicaExternad;
                command.Parameters.Add(ClinicaExternadParameter);
                EntityParameter FechaExamenParameter = new EntityParameter("FechaExamen", System.Data.DbType.DateTime);
                if (FechaExamen.HasValue)
                  FechaExamenParameter.Value = FechaExamen;
                command.Parameters.Add(FechaExamenParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_update_person in the schema.
        /// </summary>
        public void usp_update_person (string PersonId, string FirstName, string FirstLastName, string SecondLastName, global::System.Nullable<int> DocTypeId, string DocNumber, global::System.Nullable<int> SexTypeId, global::System.Nullable<System.DateTime> Birthdate, string Mail, string TelephoneNumber, string CurrentOccupation, string AdressLocation, global::System.Nullable<int> UpdateUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_update_person";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter PersonIdParameter = new EntityParameter("PersonId", System.Data.DbType.String);
                if (PersonId != null)
                  PersonIdParameter.Value = PersonId;
                command.Parameters.Add(PersonIdParameter);
                EntityParameter FirstNameParameter = new EntityParameter("FirstName", System.Data.DbType.String);
                if (FirstName != null)
                  FirstNameParameter.Value = FirstName;
                command.Parameters.Add(FirstNameParameter);
                EntityParameter FirstLastNameParameter = new EntityParameter("FirstLastName", System.Data.DbType.String);
                if (FirstLastName != null)
                  FirstLastNameParameter.Value = FirstLastName;
                command.Parameters.Add(FirstLastNameParameter);
                EntityParameter SecondLastNameParameter = new EntityParameter("SecondLastName", System.Data.DbType.String);
                if (SecondLastName != null)
                  SecondLastNameParameter.Value = SecondLastName;
                command.Parameters.Add(SecondLastNameParameter);
                EntityParameter DocTypeIdParameter = new EntityParameter("DocTypeId", System.Data.DbType.Int32);
                if (DocTypeId.HasValue)
                  DocTypeIdParameter.Value = DocTypeId;
                command.Parameters.Add(DocTypeIdParameter);
                EntityParameter DocNumberParameter = new EntityParameter("DocNumber", System.Data.DbType.String);
                if (DocNumber != null)
                  DocNumberParameter.Value = DocNumber;
                command.Parameters.Add(DocNumberParameter);
                EntityParameter SexTypeIdParameter = new EntityParameter("SexTypeId", System.Data.DbType.Int32);
                if (SexTypeId.HasValue)
                  SexTypeIdParameter.Value = SexTypeId;
                command.Parameters.Add(SexTypeIdParameter);
                EntityParameter BirthdateParameter = new EntityParameter("Birthdate", System.Data.DbType.DateTime);
                if (Birthdate.HasValue)
                  BirthdateParameter.Value = Birthdate;
                command.Parameters.Add(BirthdateParameter);
                EntityParameter MailParameter = new EntityParameter("Mail", System.Data.DbType.String);
                if (Mail != null)
                  MailParameter.Value = Mail;
                command.Parameters.Add(MailParameter);
                EntityParameter TelephoneNumberParameter = new EntityParameter("TelephoneNumber", System.Data.DbType.String);
                if (TelephoneNumber != null)
                  TelephoneNumberParameter.Value = TelephoneNumber;
                command.Parameters.Add(TelephoneNumberParameter);
                EntityParameter CurrentOccupationParameter = new EntityParameter("CurrentOccupation", System.Data.DbType.String);
                if (CurrentOccupation != null)
                  CurrentOccupationParameter.Value = CurrentOccupation;
                command.Parameters.Add(CurrentOccupationParameter);
                EntityParameter AdressLocationParameter = new EntityParameter("AdressLocation", System.Data.DbType.String);
                if (AdressLocation != null)
                  AdressLocationParameter.Value = AdressLocation;
                command.Parameters.Add(AdressLocationParameter);
                EntityParameter UpdateUserIdParameter = new EntityParameter("UpdateUserId", System.Data.DbType.Int32);
                if (UpdateUserId.HasValue)
                  UpdateUserIdParameter.Value = UpdateUserId;
                command.Parameters.Add(UpdateUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_update_servicecomponentfields in the schema.
        /// </summary>
        public void usp_update_servicecomponentfields (string ServiceComponentFieldsId, string ServiceComponentId, string ComponentId, string ComponentFieldId, global::System.Nullable<int> UpdateUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_update_servicecomponentfields";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceComponentFieldsIdParameter = new EntityParameter("ServiceComponentFieldsId", System.Data.DbType.String);
                if (ServiceComponentFieldsId != null)
                  ServiceComponentFieldsIdParameter.Value = ServiceComponentFieldsId;
                command.Parameters.Add(ServiceComponentFieldsIdParameter);
                EntityParameter ServiceComponentIdParameter = new EntityParameter("ServiceComponentId", System.Data.DbType.String);
                if (ServiceComponentId != null)
                  ServiceComponentIdParameter.Value = ServiceComponentId;
                command.Parameters.Add(ServiceComponentIdParameter);
                EntityParameter ComponentIdParameter = new EntityParameter("ComponentId", System.Data.DbType.String);
                if (ComponentId != null)
                  ComponentIdParameter.Value = ComponentId;
                command.Parameters.Add(ComponentIdParameter);
                EntityParameter ComponentFieldIdParameter = new EntityParameter("ComponentFieldId", System.Data.DbType.String);
                if (ComponentFieldId != null)
                  ComponentFieldIdParameter.Value = ComponentFieldId;
                command.Parameters.Add(ComponentFieldIdParameter);
                EntityParameter UpdateUserIdParameter = new EntityParameter("UpdateUserId", System.Data.DbType.Int32);
                if (UpdateUserId.HasValue)
                  UpdateUserIdParameter.Value = UpdateUserId;
                command.Parameters.Add(UpdateUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_update_servicecomponentfieldvalues in the schema.
        /// </summary>
        public void usp_update_servicecomponentfieldvalues (string ServiceComponentFieldValuesId, string ComponentFieldValuesId, string ServiceComponentFieldsId, string Value1, global::System.Nullable<int> UpdateUserId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.usp_update_servicecomponentfieldvalues";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter ServiceComponentFieldValuesIdParameter = new EntityParameter("ServiceComponentFieldValuesId", System.Data.DbType.String);
                if (ServiceComponentFieldValuesId != null)
                  ServiceComponentFieldValuesIdParameter.Value = ServiceComponentFieldValuesId;
                command.Parameters.Add(ServiceComponentFieldValuesIdParameter);
                EntityParameter ComponentFieldValuesIdParameter = new EntityParameter("ComponentFieldValuesId", System.Data.DbType.String);
                if (ComponentFieldValuesId != null)
                  ComponentFieldValuesIdParameter.Value = ComponentFieldValuesId;
                command.Parameters.Add(ComponentFieldValuesIdParameter);
                EntityParameter ServiceComponentFieldsIdParameter = new EntityParameter("ServiceComponentFieldsId", System.Data.DbType.String);
                if (ServiceComponentFieldsId != null)
                  ServiceComponentFieldsIdParameter.Value = ServiceComponentFieldsId;
                command.Parameters.Add(ServiceComponentFieldsIdParameter);
                EntityParameter Value1Parameter = new EntityParameter("Value1", System.Data.DbType.String);
                if (Value1 != null)
                  Value1Parameter.Value = Value1;
                command.Parameters.Add(Value1Parameter);
                EntityParameter UpdateUserIdParameter = new EntityParameter("UpdateUserId", System.Data.DbType.Int32);
                if (UpdateUserId.HasValue)
                  UpdateUserIdParameter.Value = UpdateUserId;
                command.Parameters.Add(UpdateUserIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for usp_validate_schedule in the schema.
        /// </summary>
        public ObjectResult<usp_validate_scheduleResult> usp_validate_schedule (string ProtocolId, string PersonId)
        {
            ObjectParameter ProtocolIdParameter;
            if (ProtocolId != null)
            {
                ProtocolIdParameter = new ObjectParameter("ProtocolId", ProtocolId);
            }
            else
            {
                ProtocolIdParameter = new ObjectParameter("ProtocolId", typeof(string));
            }
            ObjectParameter PersonIdParameter;
            if (PersonId != null)
            {
                PersonIdParameter = new ObjectParameter("PersonId", PersonId);
            }
            else
            {
                PersonIdParameter = new ObjectParameter("PersonId", typeof(string));
            }
            return base.ExecuteFunction<usp_validate_scheduleResult>("SigesoftEntitiesModel.usp_validate_schedule", ProtocolIdParameter, PersonIdParameter);
        }

    
        /// <summary>
        /// There are no comments for uspdeleteemployercompany in the schema.
        /// </summary>
        public void uspdeleteemployercompany (global::System.Nullable<int> EmployerCompanyId)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.uspdeleteemployercompany";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter EmployerCompanyIdParameter = new EntityParameter("EmployerCompanyId", System.Data.DbType.Int32);
                if (EmployerCompanyId.HasValue)
                  EmployerCompanyIdParameter.Value = EmployerCompanyId;
                command.Parameters.Add(EmployerCompanyIdParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for uspgetemployees in the schema.
        /// </summary>
        public ObjectResult<uspgetemployeesResult> uspgetemployees ()
        {
            return base.ExecuteFunction<uspgetemployeesResult>("SigesoftEntitiesModel.uspgetemployees");
        }

    
        /// <summary>
        /// There are no comments for uspgetemployercompanies in the schema.
        /// </summary>
        public ObjectResult<uspgetemployercompaniesResult> uspgetemployercompanies ()
        {
            return base.ExecuteFunction<uspgetemployercompaniesResult>("SigesoftEntitiesModel.uspgetemployercompanies");
        }

    
        /// <summary>
        /// There are no comments for uspgetresult in the schema.
        /// </summary>
        public ObjectResult<uspgetresultResult> uspgetresult (string v_Name)
        {
            ObjectParameter v_NameParameter;
            if (v_Name != null)
            {
                v_NameParameter = new ObjectParameter("v_Name", v_Name);
            }
            else
            {
                v_NameParameter = new ObjectParameter("v_Name", typeof(string));
            }
            return base.ExecuteFunction<uspgetresultResult>("SigesoftEntitiesModel.uspgetresult", v_NameParameter);
        }

    
        /// <summary>
        /// There are no comments for uspinsertemployee in the schema.
        /// </summary>
        public void uspinsertemployee (global::System.Nullable<int> IdentificationType, string NationalIDNumber, global::System.Nullable<int> Gender, string FirstName, string MiddleName, string LastName, global::System.Nullable<System.DateTime> BirthDate, string EmailAddress, string Job, string AddressLine1, global::System.Nullable<int> Hire, global::System.Nullable<int> Headquarter, global::System.Nullable<int> Employer)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.uspinsertemployee";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter IdentificationTypeParameter = new EntityParameter("IdentificationType", System.Data.DbType.Int32);
                if (IdentificationType.HasValue)
                  IdentificationTypeParameter.Value = IdentificationType;
                command.Parameters.Add(IdentificationTypeParameter);
                EntityParameter NationalIDNumberParameter = new EntityParameter("NationalIDNumber", System.Data.DbType.String);
                if (NationalIDNumber != null)
                  NationalIDNumberParameter.Value = NationalIDNumber;
                command.Parameters.Add(NationalIDNumberParameter);
                EntityParameter GenderParameter = new EntityParameter("Gender", System.Data.DbType.Int32);
                if (Gender.HasValue)
                  GenderParameter.Value = Gender;
                command.Parameters.Add(GenderParameter);
                EntityParameter FirstNameParameter = new EntityParameter("FirstName", System.Data.DbType.String);
                if (FirstName != null)
                  FirstNameParameter.Value = FirstName;
                command.Parameters.Add(FirstNameParameter);
                EntityParameter MiddleNameParameter = new EntityParameter("MiddleName", System.Data.DbType.String);
                if (MiddleName != null)
                  MiddleNameParameter.Value = MiddleName;
                command.Parameters.Add(MiddleNameParameter);
                EntityParameter LastNameParameter = new EntityParameter("LastName", System.Data.DbType.String);
                if (LastName != null)
                  LastNameParameter.Value = LastName;
                command.Parameters.Add(LastNameParameter);
                EntityParameter BirthDateParameter = new EntityParameter("BirthDate", System.Data.DbType.DateTime);
                if (BirthDate.HasValue)
                  BirthDateParameter.Value = BirthDate;
                command.Parameters.Add(BirthDateParameter);
                EntityParameter EmailAddressParameter = new EntityParameter("EmailAddress", System.Data.DbType.String);
                if (EmailAddress != null)
                  EmailAddressParameter.Value = EmailAddress;
                command.Parameters.Add(EmailAddressParameter);
                EntityParameter JobParameter = new EntityParameter("Job", System.Data.DbType.String);
                if (Job != null)
                  JobParameter.Value = Job;
                command.Parameters.Add(JobParameter);
                EntityParameter AddressLine1Parameter = new EntityParameter("AddressLine1", System.Data.DbType.String);
                if (AddressLine1 != null)
                  AddressLine1Parameter.Value = AddressLine1;
                command.Parameters.Add(AddressLine1Parameter);
                EntityParameter HireParameter = new EntityParameter("Hire", System.Data.DbType.Int32);
                if (Hire.HasValue)
                  HireParameter.Value = Hire;
                command.Parameters.Add(HireParameter);
                EntityParameter HeadquarterParameter = new EntityParameter("Headquarter", System.Data.DbType.Int32);
                if (Headquarter.HasValue)
                  HeadquarterParameter.Value = Headquarter;
                command.Parameters.Add(HeadquarterParameter);
                EntityParameter EmployerParameter = new EntityParameter("Employer", System.Data.DbType.Int32);
                if (Employer.HasValue)
                  EmployerParameter.Value = Employer;
                command.Parameters.Add(EmployerParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for uspinsertemployercompany in the schema.
        /// </summary>
        public void uspinsertemployercompany (string NationalIDNumber, string Name)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.uspinsertemployercompany";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter NationalIDNumberParameter = new EntityParameter("NationalIDNumber", System.Data.DbType.String);
                if (NationalIDNumber != null)
                  NationalIDNumberParameter.Value = NationalIDNumber;
                command.Parameters.Add(NationalIDNumberParameter);
                EntityParameter NameParameter = new EntityParameter("Name", System.Data.DbType.String);
                if (Name != null)
                  NameParameter.Value = Name;
                command.Parameters.Add(NameParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

    
        /// <summary>
        /// There are no comments for uspupdateemployercompany in the schema.
        /// </summary>
        public void uspupdateemployercompany (global::System.Nullable<int> EmployerCompanyId, string NationalIDNumber, string Name)
        {
            bool needClose = false;
            if (this.Connection.State != System.Data.ConnectionState.Open) {
              this.Connection.Open();
              needClose = true;
            }

			try {
              using(EntityCommand command = new EntityCommand()) 
              {
                if(this.CommandTimeout.HasValue)
                  command.CommandTimeout = this.CommandTimeout.Value;
                command.CommandType = System.Data.CommandType.StoredProcedure;
                command.CommandText = @"SigesoftEntitiesModel.uspupdateemployercompany";
                command.Connection = (EntityConnection)this.Connection;
                EntityParameter EmployerCompanyIdParameter = new EntityParameter("EmployerCompanyId", System.Data.DbType.Int32);
                if (EmployerCompanyId.HasValue)
                  EmployerCompanyIdParameter.Value = EmployerCompanyId;
                command.Parameters.Add(EmployerCompanyIdParameter);
                EntityParameter NationalIDNumberParameter = new EntityParameter("NationalIDNumber", System.Data.DbType.String);
                if (NationalIDNumber != null)
                  NationalIDNumberParameter.Value = NationalIDNumber;
                command.Parameters.Add(NationalIDNumberParameter);
                EntityParameter NameParameter = new EntityParameter("Name", System.Data.DbType.String);
                if (Name != null)
                  NameParameter.Value = Name;
                command.Parameters.Add(NameParameter);
                command.ExecuteNonQuery();
              }
            }
            finally {
              if (needClose)
                this.Connection.Close();
            }
        }

        #endregion
    }

    #endregion

    public class regcovid_list_servicesMultipleResult
    {

        public regcovid_list_servicesMultipleResult()
        {
          regcovid_list_servicesResults = new List<regcovid_list_servicesResult>();
        }

        public List<regcovid_list_servicesResult> regcovid_list_servicesResults { get; private set; }
    }

    public class regcovid_positivosenviadosreg_vs_positivosrecividosvigMultipleResult
    {

        public regcovid_positivosenviadosreg_vs_positivosrecividosvigMultipleResult()
        {
          regcovid_positivosenviadosreg_vs_positivosrecividosvigResults = new List<regcovid_positivosenviadosreg_vs_positivosrecividosvigResult>();
          regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1s = new List<regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1>();
        }

        public List<regcovid_positivosenviadosreg_vs_positivosrecividosvigResult> regcovid_positivosenviadosreg_vs_positivosrecividosvigResults { get; private set; }
        public List<regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1> regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1s { get; private set; }
    }

    public class regcovid_select_brandMultipleResult
    {

        public regcovid_select_brandMultipleResult()
        {
          regcovid_select_brandResults = new List<regcovid_select_brandResult>();
          regcovid_delete_brandResults = new List<regcovid_delete_brandResult>();
        }

        public List<regcovid_select_brandResult> regcovid_select_brandResults { get; private set; }
        public List<regcovid_delete_brandResult> regcovid_delete_brandResults { get; private set; }
    }

    public class regcovid_select_testdeviceMultipleResult
    {

        public regcovid_select_testdeviceMultipleResult()
        {
          regcovid_select_testdeviceResults = new List<regcovid_select_testdeviceResult>();
          regcovid_delete_brandResults = new List<regcovid_delete_brandResult>();
        }

        public List<regcovid_select_testdeviceResult> regcovid_select_testdeviceResults { get; private set; }
        public List<regcovid_delete_brandResult> regcovid_delete_brandResults { get; private set; }
    }

    public class regcovid_selectbyid_brandMultipleResult
    {

        public regcovid_selectbyid_brandMultipleResult()
        {
          regcovid_select_brandResults = new List<regcovid_select_brandResult>();
          regcovid_delete_brandResults = new List<regcovid_delete_brandResult>();
        }

        public List<regcovid_select_brandResult> regcovid_select_brandResults { get; private set; }
        public List<regcovid_delete_brandResult> regcovid_delete_brandResults { get; private set; }
    }

    public class regcovid_selectbyid_testdeviceMultipleResult
    {

        public regcovid_selectbyid_testdeviceMultipleResult()
        {
          regcovid_select_testdeviceResults = new List<regcovid_select_testdeviceResult>();
          regcovid_delete_brandResults = new List<regcovid_delete_brandResult>();
        }

        public List<regcovid_select_testdeviceResult> regcovid_select_testdeviceResults { get; private set; }
        public List<regcovid_delete_brandResult> regcovid_delete_brandResults { get; private set; }
    }

    public class regcovid_servicios_vs_resultadosMultipleResult
    {

        public regcovid_servicios_vs_resultadosMultipleResult()
        {
          regcovid_servicios_vs_resultadosResults = new List<regcovid_servicios_vs_resultadosResult>();
          regcovid_servicios_vs_resultadosResult1s = new List<regcovid_servicios_vs_resultadosResult1>();
        }

        public List<regcovid_servicios_vs_resultadosResult> regcovid_servicios_vs_resultadosResults { get; private set; }
        public List<regcovid_servicios_vs_resultadosResult1> regcovid_servicios_vs_resultadosResult1s { get; private set; }
    }

    public class salus_comprobarresultadoslaboratorioMultipleResult
    {

        public salus_comprobarresultadoslaboratorioMultipleResult()
        {
          salus_comprobarresultadoslaboratorioResults = new List<salus_comprobarresultadoslaboratorioResult>();
          salus_comprobarresultadoslaboratorioResult1s = new List<salus_comprobarresultadoslaboratorioResult1>();
        }

        public List<salus_comprobarresultadoslaboratorioResult> salus_comprobarresultadoslaboratorioResults { get; private set; }
        public List<salus_comprobarresultadoslaboratorioResult1> salus_comprobarresultadoslaboratorioResult1s { get; private set; }
    }
}

namespace Sigesoft.Node.WinClient.DAL
{

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.applicationhierarchy in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_ApplicationHierarchyId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="applicationhierarchy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class applicationhierarchy : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new applicationhierarchy object.
        /// </summary>
        /// <param name="i_ApplicationHierarchyId">Initial value of i_ApplicationHierarchyId.</param>
        public static applicationhierarchy Createapplicationhierarchy(int i_ApplicationHierarchyId)
        {
            applicationhierarchy applicationhierarchy = new applicationhierarchy();
            applicationhierarchy.i_ApplicationHierarchyId = i_ApplicationHierarchyId;
            return applicationhierarchy;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_ApplicationHierarchyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_ApplicationHierarchyId
        {
            get
            {
                int value = _i_ApplicationHierarchyId;
                OnGeti_ApplicationHierarchyId(ref value);
                return value;
            }
            set
            {
                if (_i_ApplicationHierarchyId != value)
                {
                  Oni_ApplicationHierarchyIdChanging(ref value);
                  ReportPropertyChanging("i_ApplicationHierarchyId");
                  _i_ApplicationHierarchyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ApplicationHierarchyId");
                  Oni_ApplicationHierarchyIdChanged();
              }
            }
        }
        private int _i_ApplicationHierarchyId;
        partial void OnGeti_ApplicationHierarchyId(ref int value);
        partial void Oni_ApplicationHierarchyIdChanging(ref int value);
        partial void Oni_ApplicationHierarchyIdChanged();
    
        /// <summary>
        /// There are no comments for i_ApplicationHierarchyTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ApplicationHierarchyTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ApplicationHierarchyTypeId;
                OnGeti_ApplicationHierarchyTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_ApplicationHierarchyTypeId != value)
                {
                  Oni_ApplicationHierarchyTypeIdChanging(ref value);
                  ReportPropertyChanging("i_ApplicationHierarchyTypeId");
                  _i_ApplicationHierarchyTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ApplicationHierarchyTypeId");
                  Oni_ApplicationHierarchyTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ApplicationHierarchyTypeId;
        partial void OnGeti_ApplicationHierarchyTypeId(ref global::System.Nullable<int> value);
        partial void Oni_ApplicationHierarchyTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ApplicationHierarchyTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_Level in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Level
        {
            get
            {
                global::System.Nullable<int> value = _i_Level;
                OnGeti_Level(ref value);
                return value;
            }
            set
            {
                if (_i_Level != value)
                {
                  Oni_LevelChanging(ref value);
                  ReportPropertyChanging("i_Level");
                  _i_Level = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Level");
                  Oni_LevelChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Level;
        partial void OnGeti_Level(ref global::System.Nullable<int> value);
        partial void Oni_LevelChanging(ref global::System.Nullable<int> value);
        partial void Oni_LevelChanged();
    
        /// <summary>
        /// There are no comments for v_Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Description
        {
            get
            {
                string value = _v_Description;
                OnGetv_Description(ref value);
                return value;
            }
            set
            {
                if (_v_Description != value)
                {
                  Onv_DescriptionChanging(ref value);
                  ReportPropertyChanging("v_Description");
                  _v_Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Description");
                  Onv_DescriptionChanged();
              }
            }
        }
        private string _v_Description;
        partial void OnGetv_Description(ref string value);
        partial void Onv_DescriptionChanging(ref string value);
        partial void Onv_DescriptionChanged();
    
        /// <summary>
        /// There are no comments for v_Form in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Form
        {
            get
            {
                string value = _v_Form;
                OnGetv_Form(ref value);
                return value;
            }
            set
            {
                if (_v_Form != value)
                {
                  Onv_FormChanging(ref value);
                  ReportPropertyChanging("v_Form");
                  _v_Form = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Form");
                  Onv_FormChanged();
              }
            }
        }
        private string _v_Form;
        partial void OnGetv_Form(ref string value);
        partial void Onv_FormChanging(ref string value);
        partial void Onv_FormChanged();
    
        /// <summary>
        /// There are no comments for v_Code in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Code
        {
            get
            {
                string value = _v_Code;
                OnGetv_Code(ref value);
                return value;
            }
            set
            {
                if (_v_Code != value)
                {
                  Onv_CodeChanging(ref value);
                  ReportPropertyChanging("v_Code");
                  _v_Code = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Code");
                  Onv_CodeChanged();
              }
            }
        }
        private string _v_Code;
        partial void OnGetv_Code(ref string value);
        partial void Onv_CodeChanging(ref string value);
        partial void Onv_CodeChanged();
    
        /// <summary>
        /// There are no comments for i_ParentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ParentId
        {
            get
            {
                global::System.Nullable<int> value = _i_ParentId;
                OnGeti_ParentId(ref value);
                return value;
            }
            set
            {
                if (_i_ParentId != value)
                {
                  Oni_ParentIdChanging(ref value);
                  ReportPropertyChanging("i_ParentId");
                  _i_ParentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ParentId");
                  Oni_ParentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ParentId;
        partial void OnGeti_ParentId(ref global::System.Nullable<int> value);
        partial void Oni_ParentIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ParentIdChanged();
    
        /// <summary>
        /// There are no comments for i_ScopeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ScopeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ScopeId;
                OnGeti_ScopeId(ref value);
                return value;
            }
            set
            {
                if (_i_ScopeId != value)
                {
                  Oni_ScopeIdChanging(ref value);
                  ReportPropertyChanging("i_ScopeId");
                  _i_ScopeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ScopeId");
                  Oni_ScopeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ScopeId;
        partial void OnGeti_ScopeId(ref global::System.Nullable<int> value);
        partial void Oni_ScopeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ScopeIdChanged();
    
        /// <summary>
        /// There are no comments for i_TypeFormId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TypeFormId
        {
            get
            {
                global::System.Nullable<int> value = _i_TypeFormId;
                OnGeti_TypeFormId(ref value);
                return value;
            }
            set
            {
                if (_i_TypeFormId != value)
                {
                  Oni_TypeFormIdChanging(ref value);
                  ReportPropertyChanging("i_TypeFormId");
                  _i_TypeFormId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TypeFormId");
                  Oni_TypeFormIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TypeFormId;
        partial void OnGeti_TypeFormId(ref global::System.Nullable<int> value);
        partial void Oni_TypeFormIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TypeFormIdChanged();
    
        /// <summary>
        /// There are no comments for i_ExternalUserFunctionalityTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ExternalUserFunctionalityTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ExternalUserFunctionalityTypeId;
                OnGeti_ExternalUserFunctionalityTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_ExternalUserFunctionalityTypeId != value)
                {
                  Oni_ExternalUserFunctionalityTypeIdChanging(ref value);
                  ReportPropertyChanging("i_ExternalUserFunctionalityTypeId");
                  _i_ExternalUserFunctionalityTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ExternalUserFunctionalityTypeId");
                  Oni_ExternalUserFunctionalityTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ExternalUserFunctionalityTypeId;
        partial void OnGeti_ExternalUserFunctionalityTypeId(ref global::System.Nullable<int> value);
        partial void Oni_ExternalUserFunctionalityTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ExternalUserFunctionalityTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for protocolsystemuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_AppHerarchy_ProtocolSystemUser_i_AppHerarchyId", "protocolsystemuser")]
        public EntityCollection<protocolsystemuser> protocolsystemuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<protocolsystemuser>("Sigesoft.Node.WinClient.DAL.FK_AppHerarchy_ProtocolSystemUser_i_AppHerarchyId", "protocolsystemuser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<protocolsystemuser>("Sigesoft.Node.WinClient.DAL.FK_AppHerarchy_ProtocolSystemUser_i_AppHerarchyId", "protocolsystemuser", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for rolenodeprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_applicationhierarchy_rolenodeprofile_i_ApplicationHierarchyI", "rolenodeprofile")]
        public EntityCollection<rolenodeprofile> rolenodeprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<rolenodeprofile>("Sigesoft.Node.WinClient.DAL.Fk_applicationhierarchy_rolenodeprofile_i_ApplicationHierarchyI", "rolenodeprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<rolenodeprofile>("Sigesoft.Node.WinClient.DAL.Fk_applicationhierarchy_rolenodeprofile_i_ApplicationHierarchyI", "rolenodeprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemusergobalprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ApplicationHerarchy_SystemUserGlobal_i_ApplicationId", "systemusergobalprofile")]
        public EntityCollection<systemusergobalprofile> systemusergobalprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<systemusergobalprofile>("Sigesoft.Node.WinClient.DAL.Fk_ApplicationHerarchy_SystemUserGlobal_i_ApplicationId", "systemusergobalprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<systemusergobalprofile>("Sigesoft.Node.WinClient.DAL.Fk_ApplicationHerarchy_SystemUserGlobal_i_ApplicationId", "systemusergobalprofile", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.area in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_AreaId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="area")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class area : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new area object.
        /// </summary>
        /// <param name="v_AreaId">Initial value of v_AreaId.</param>
        public static area Createarea(string v_AreaId)
        {
            area area = new area();
            area.v_AreaId = v_AreaId;
            return area;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_AreaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_AreaId
        {
            get
            {
                string value = _v_AreaId;
                OnGetv_AreaId(ref value);
                return value;
            }
            set
            {
                if (_v_AreaId != value)
                {
                  Onv_AreaIdChanging(ref value);
                  ReportPropertyChanging("v_AreaId");
                  _v_AreaId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_AreaId");
                  Onv_AreaIdChanged();
              }
            }
        }
        private string _v_AreaId;
        partial void OnGetv_AreaId(ref string value);
        partial void Onv_AreaIdChanging(ref string value);
        partial void Onv_AreaIdChanged();
    
        /// <summary>
        /// There are no comments for v_LocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LocationId
        {
            get
            {
                string value = _v_LocationId;
                OnGetv_LocationId(ref value);
                return value;
            }
            set
            {
                if (_v_LocationId != value)
                {
                  Onv_LocationIdChanging(ref value);
                  ReportPropertyChanging("v_LocationId");
                  _v_LocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LocationId");
                  Onv_LocationIdChanged();
              }
            }
        }
        private string _v_LocationId;
        partial void OnGetv_LocationId(ref string value);
        partial void Onv_LocationIdChanging(ref string value);
        partial void Onv_LocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for location in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_Area_v_AreaCode", "location")]
        public location location
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_Area_v_AreaCode", "location").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_Area_v_AreaCode", "location").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for location in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<location> locationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_Area_v_AreaCode", "location");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_Area_v_AreaCode", "location", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_Area_v_AreaCode", "location").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for ges in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Area_Ges_v_AreaCode", "ges")]
        public EntityCollection<ges> ges
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<ges>("Sigesoft.Node.WinClient.DAL.Fk_Area_Ges_v_AreaCode", "ges");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<ges>("Sigesoft.Node.WinClient.DAL.Fk_Area_Ges_v_AreaCode", "ges", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.attentioninarea in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_AttentionInAreaId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="attentioninarea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class attentioninarea : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new attentioninarea object.
        /// </summary>
        /// <param name="v_AttentionInAreaId">Initial value of v_AttentionInAreaId.</param>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        public static attentioninarea Createattentioninarea(string v_AttentionInAreaId, int i_NodeId)
        {
            attentioninarea attentioninarea = new attentioninarea();
            attentioninarea.v_AttentionInAreaId = v_AttentionInAreaId;
            attentioninarea.i_NodeId = i_NodeId;
            return attentioninarea;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_AttentionInAreaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_AttentionInAreaId
        {
            get
            {
                string value = _v_AttentionInAreaId;
                OnGetv_AttentionInAreaId(ref value);
                return value;
            }
            set
            {
                if (_v_AttentionInAreaId != value)
                {
                  Onv_AttentionInAreaIdChanging(ref value);
                  ReportPropertyChanging("v_AttentionInAreaId");
                  _v_AttentionInAreaId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_AttentionInAreaId");
                  Onv_AttentionInAreaIdChanged();
              }
            }
        }
        private string _v_AttentionInAreaId;
        partial void OnGetv_AttentionInAreaId(ref string value);
        partial void Onv_AttentionInAreaIdChanging(ref string value);
        partial void Onv_AttentionInAreaIdChanged();
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for v_OfficeNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OfficeNumber
        {
            get
            {
                string value = _v_OfficeNumber;
                OnGetv_OfficeNumber(ref value);
                return value;
            }
            set
            {
                if (_v_OfficeNumber != value)
                {
                  Onv_OfficeNumberChanging(ref value);
                  ReportPropertyChanging("v_OfficeNumber");
                  _v_OfficeNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OfficeNumber");
                  Onv_OfficeNumberChanged();
              }
            }
        }
        private string _v_OfficeNumber;
        partial void OnGetv_OfficeNumber(ref string value);
        partial void Onv_OfficeNumberChanging(ref string value);
        partial void Onv_OfficeNumberChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_AttentionInArea_i_NodeId", "node")]
        public node node
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_AttentionInArea_i_NodeId", "node").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_AttentionInArea_i_NodeId", "node").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<node> nodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_AttentionInArea_i_NodeId", "node");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_AttentionInArea_i_NodeId", "node", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_AttentionInArea_i_NodeId", "node").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for attentioninareacomponent in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_AttentionArea_AttentionAreaComponent_v_AttentionAreaId", "attentioninareacomponent")]
        public EntityCollection<attentioninareacomponent> attentioninareacomponent
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<attentioninareacomponent>("Sigesoft.Node.WinClient.DAL.Fk_AttentionArea_AttentionAreaComponent_v_AttentionAreaId", "attentioninareacomponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<attentioninareacomponent>("Sigesoft.Node.WinClient.DAL.Fk_AttentionArea_AttentionAreaComponent_v_AttentionAreaId", "attentioninareacomponent", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.attentioninareacomponent in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_AttentioninAreaComponentId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="attentioninareacomponent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class attentioninareacomponent : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new attentioninareacomponent object.
        /// </summary>
        /// <param name="v_AttentioninAreaComponentId">Initial value of v_AttentioninAreaComponentId.</param>
        public static attentioninareacomponent Createattentioninareacomponent(string v_AttentioninAreaComponentId)
        {
            attentioninareacomponent attentioninareacomponent = new attentioninareacomponent();
            attentioninareacomponent.v_AttentioninAreaComponentId = v_AttentioninAreaComponentId;
            return attentioninareacomponent;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_AttentioninAreaComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_AttentioninAreaComponentId
        {
            get
            {
                string value = _v_AttentioninAreaComponentId;
                OnGetv_AttentioninAreaComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_AttentioninAreaComponentId != value)
                {
                  Onv_AttentioninAreaComponentIdChanging(ref value);
                  ReportPropertyChanging("v_AttentioninAreaComponentId");
                  _v_AttentioninAreaComponentId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_AttentioninAreaComponentId");
                  Onv_AttentioninAreaComponentIdChanged();
              }
            }
        }
        private string _v_AttentioninAreaComponentId;
        partial void OnGetv_AttentioninAreaComponentId(ref string value);
        partial void Onv_AttentioninAreaComponentIdChanging(ref string value);
        partial void Onv_AttentioninAreaComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_AttentionInAreaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AttentionInAreaId
        {
            get
            {
                string value = _v_AttentionInAreaId;
                OnGetv_AttentionInAreaId(ref value);
                return value;
            }
            set
            {
                if (_v_AttentionInAreaId != value)
                {
                  Onv_AttentionInAreaIdChanging(ref value);
                  ReportPropertyChanging("v_AttentionInAreaId");
                  _v_AttentionInAreaId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AttentionInAreaId");
                  Onv_AttentionInAreaIdChanged();
              }
            }
        }
        private string _v_AttentionInAreaId;
        partial void OnGetv_AttentionInAreaId(ref string value);
        partial void Onv_AttentionInAreaIdChanging(ref string value);
        partial void Onv_AttentionInAreaIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for attentioninarea in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_AttentionArea_AttentionAreaComponent_v_AttentionAreaId", "attentioninarea")]
        public attentioninarea attentioninarea
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<attentioninarea>("Sigesoft.Node.WinClient.DAL.Fk_AttentionArea_AttentionAreaComponent_v_AttentionAreaId", "attentioninarea").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<attentioninarea>("Sigesoft.Node.WinClient.DAL.Fk_AttentionArea_AttentionAreaComponent_v_AttentionAreaId", "attentioninarea").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for attentioninarea in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<attentioninarea> attentioninareaReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<attentioninarea>("Sigesoft.Node.WinClient.DAL.Fk_AttentionArea_AttentionAreaComponent_v_AttentionAreaId", "attentioninarea");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<attentioninarea>("Sigesoft.Node.WinClient.DAL.Fk_AttentionArea_AttentionAreaComponent_v_AttentionAreaId", "attentioninarea", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<attentioninarea>("Sigesoft.Node.WinClient.DAL.Fk_AttentionArea_AttentionAreaComponent_v_AttentionAreaId", "attentioninarea").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_AttentionAreaComponent_v_ComponentId", "component")]
        public component component
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_AttentionAreaComponent_v_ComponentId", "component").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_AttentionAreaComponent_v_ComponentId", "component").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<component> componentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_AttentionAreaComponent_v_ComponentId", "component");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_AttentionAreaComponent_v_ComponentId", "component", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_AttentionAreaComponent_v_ComponentId", "component").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.authorizedperson in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_AuthorizedPersonId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="authorizedperson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class authorizedperson : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new authorizedperson object.
        /// </summary>
        /// <param name="v_AuthorizedPersonId">Initial value of v_AuthorizedPersonId.</param>
        public static authorizedperson Createauthorizedperson(string v_AuthorizedPersonId)
        {
            authorizedperson authorizedperson = new authorizedperson();
            authorizedperson.v_AuthorizedPersonId = v_AuthorizedPersonId;
            return authorizedperson;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_AuthorizedPersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_AuthorizedPersonId
        {
            get
            {
                string value = _v_AuthorizedPersonId;
                OnGetv_AuthorizedPersonId(ref value);
                return value;
            }
            set
            {
                if (_v_AuthorizedPersonId != value)
                {
                  Onv_AuthorizedPersonIdChanging(ref value);
                  ReportPropertyChanging("v_AuthorizedPersonId");
                  _v_AuthorizedPersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_AuthorizedPersonId");
                  Onv_AuthorizedPersonIdChanged();
              }
            }
        }
        private string _v_AuthorizedPersonId;
        partial void OnGetv_AuthorizedPersonId(ref string value);
        partial void Onv_AuthorizedPersonIdChanging(ref string value);
        partial void Onv_AuthorizedPersonIdChanged();
    
        /// <summary>
        /// There are no comments for v_FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FirstName
        {
            get
            {
                string value = _v_FirstName;
                OnGetv_FirstName(ref value);
                return value;
            }
            set
            {
                if (_v_FirstName != value)
                {
                  Onv_FirstNameChanging(ref value);
                  ReportPropertyChanging("v_FirstName");
                  _v_FirstName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FirstName");
                  Onv_FirstNameChanged();
              }
            }
        }
        private string _v_FirstName;
        partial void OnGetv_FirstName(ref string value);
        partial void Onv_FirstNameChanging(ref string value);
        partial void Onv_FirstNameChanged();
    
        /// <summary>
        /// There are no comments for v_FirstLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FirstLastName
        {
            get
            {
                string value = _v_FirstLastName;
                OnGetv_FirstLastName(ref value);
                return value;
            }
            set
            {
                if (_v_FirstLastName != value)
                {
                  Onv_FirstLastNameChanging(ref value);
                  ReportPropertyChanging("v_FirstLastName");
                  _v_FirstLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FirstLastName");
                  Onv_FirstLastNameChanged();
              }
            }
        }
        private string _v_FirstLastName;
        partial void OnGetv_FirstLastName(ref string value);
        partial void Onv_FirstLastNameChanging(ref string value);
        partial void Onv_FirstLastNameChanged();
    
        /// <summary>
        /// There are no comments for v_SecondLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SecondLastName
        {
            get
            {
                string value = _v_SecondLastName;
                OnGetv_SecondLastName(ref value);
                return value;
            }
            set
            {
                if (_v_SecondLastName != value)
                {
                  Onv_SecondLastNameChanging(ref value);
                  ReportPropertyChanging("v_SecondLastName");
                  _v_SecondLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SecondLastName");
                  Onv_SecondLastNameChanged();
              }
            }
        }
        private string _v_SecondLastName;
        partial void OnGetv_SecondLastName(ref string value);
        partial void Onv_SecondLastNameChanging(ref string value);
        partial void Onv_SecondLastNameChanged();
    
        /// <summary>
        /// There are no comments for i_DocTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DocTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_DocTypeId;
                OnGeti_DocTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_DocTypeId != value)
                {
                  Oni_DocTypeIdChanging(ref value);
                  ReportPropertyChanging("i_DocTypeId");
                  _i_DocTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DocTypeId");
                  Oni_DocTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DocTypeId;
        partial void OnGeti_DocTypeId(ref global::System.Nullable<int> value);
        partial void Oni_DocTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DocTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_DocTypeName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DocTypeName
        {
            get
            {
                string value = _v_DocTypeName;
                OnGetv_DocTypeName(ref value);
                return value;
            }
            set
            {
                if (_v_DocTypeName != value)
                {
                  Onv_DocTypeNameChanging(ref value);
                  ReportPropertyChanging("v_DocTypeName");
                  _v_DocTypeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DocTypeName");
                  Onv_DocTypeNameChanged();
              }
            }
        }
        private string _v_DocTypeName;
        partial void OnGetv_DocTypeName(ref string value);
        partial void Onv_DocTypeNameChanging(ref string value);
        partial void Onv_DocTypeNameChanged();
    
        /// <summary>
        /// There are no comments for v_DocNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DocNumber
        {
            get
            {
                string value = _v_DocNumber;
                OnGetv_DocNumber(ref value);
                return value;
            }
            set
            {
                if (_v_DocNumber != value)
                {
                  Onv_DocNumberChanging(ref value);
                  ReportPropertyChanging("v_DocNumber");
                  _v_DocNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DocNumber");
                  Onv_DocNumberChanged();
              }
            }
        }
        private string _v_DocNumber;
        partial void OnGetv_DocNumber(ref string value);
        partial void Onv_DocNumberChanging(ref string value);
        partial void Onv_DocNumberChanged();
    
        /// <summary>
        /// There are no comments for i_SexTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SexTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_SexTypeId;
                OnGeti_SexTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_SexTypeId != value)
                {
                  Oni_SexTypeIdChanging(ref value);
                  ReportPropertyChanging("i_SexTypeId");
                  _i_SexTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SexTypeId");
                  Oni_SexTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SexTypeId;
        partial void OnGeti_SexTypeId(ref global::System.Nullable<int> value);
        partial void Oni_SexTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SexTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_SexTypeName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SexTypeName
        {
            get
            {
                string value = _v_SexTypeName;
                OnGetv_SexTypeName(ref value);
                return value;
            }
            set
            {
                if (_v_SexTypeName != value)
                {
                  Onv_SexTypeNameChanging(ref value);
                  ReportPropertyChanging("v_SexTypeName");
                  _v_SexTypeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SexTypeName");
                  Onv_SexTypeNameChanged();
              }
            }
        }
        private string _v_SexTypeName;
        partial void OnGetv_SexTypeName(ref string value);
        partial void Onv_SexTypeNameChanging(ref string value);
        partial void Onv_SexTypeNameChanged();
    
        /// <summary>
        /// There are no comments for d_BirthDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_BirthDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_BirthDate;
                OnGetd_BirthDate(ref value);
                return value;
            }
            set
            {
                if (_d_BirthDate != value)
                {
                  Ond_BirthDateChanging(ref value);
                  ReportPropertyChanging("d_BirthDate");
                  _d_BirthDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_BirthDate");
                  Ond_BirthDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_BirthDate;
        partial void OnGetd_BirthDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BirthDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BirthDateChanged();
    
        /// <summary>
        /// There are no comments for v_OccupationName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OccupationName
        {
            get
            {
                string value = _v_OccupationName;
                OnGetv_OccupationName(ref value);
                return value;
            }
            set
            {
                if (_v_OccupationName != value)
                {
                  Onv_OccupationNameChanging(ref value);
                  ReportPropertyChanging("v_OccupationName");
                  _v_OccupationName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OccupationName");
                  Onv_OccupationNameChanged();
              }
            }
        }
        private string _v_OccupationName;
        partial void OnGetv_OccupationName(ref string value);
        partial void Onv_OccupationNameChanging(ref string value);
        partial void Onv_OccupationNameChanged();
    
        /// <summary>
        /// There are no comments for v_OrganitationName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OrganitationName
        {
            get
            {
                string value = _v_OrganitationName;
                OnGetv_OrganitationName(ref value);
                return value;
            }
            set
            {
                if (_v_OrganitationName != value)
                {
                  Onv_OrganitationNameChanging(ref value);
                  ReportPropertyChanging("v_OrganitationName");
                  _v_OrganitationName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OrganitationName");
                  Onv_OrganitationNameChanged();
              }
            }
        }
        private string _v_OrganitationName;
        partial void OnGetv_OrganitationName(ref string value);
        partial void Onv_OrganitationNameChanging(ref string value);
        partial void Onv_OrganitationNameChanged();
    
        /// <summary>
        /// There are no comments for d_EntryToMedicalCenter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_EntryToMedicalCenter
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_EntryToMedicalCenter;
                OnGetd_EntryToMedicalCenter(ref value);
                return value;
            }
            set
            {
                if (_d_EntryToMedicalCenter != value)
                {
                  Ond_EntryToMedicalCenterChanging(ref value);
                  ReportPropertyChanging("d_EntryToMedicalCenter");
                  _d_EntryToMedicalCenter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_EntryToMedicalCenter");
                  Ond_EntryToMedicalCenterChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_EntryToMedicalCenter;
        partial void OnGetd_EntryToMedicalCenter(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EntryToMedicalCenterChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EntryToMedicalCenterChanged();
    
        /// <summary>
        /// There are no comments for v_ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProtocolId
        {
            get
            {
                string value = _v_ProtocolId;
                OnGetv_ProtocolId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolId != value)
                {
                  Onv_ProtocolIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolId");
                  _v_ProtocolId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProtocolId");
                  Onv_ProtocolIdChanged();
              }
            }
        }
        private string _v_ProtocolId;
        partial void OnGetv_ProtocolId(ref string value);
        partial void Onv_ProtocolIdChanging(ref string value);
        partial void Onv_ProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProtocolName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProtocolName
        {
            get
            {
                string value = _v_ProtocolName;
                OnGetv_ProtocolName(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolName != value)
                {
                  Onv_ProtocolNameChanging(ref value);
                  ReportPropertyChanging("v_ProtocolName");
                  _v_ProtocolName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProtocolName");
                  Onv_ProtocolNameChanged();
              }
            }
        }
        private string _v_ProtocolName;
        partial void OnGetv_ProtocolName(ref string value);
        partial void Onv_ProtocolNameChanging(ref string value);
        partial void Onv_ProtocolNameChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.auxiliaryexam in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_AuxiliaryExamId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="auxiliaryexam")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class auxiliaryexam : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new auxiliaryexam object.
        /// </summary>
        /// <param name="v_AuxiliaryExamId">Initial value of v_AuxiliaryExamId.</param>
        public static auxiliaryexam Createauxiliaryexam(string v_AuxiliaryExamId)
        {
            auxiliaryexam auxiliaryexam = new auxiliaryexam();
            auxiliaryexam.v_AuxiliaryExamId = v_AuxiliaryExamId;
            return auxiliaryexam;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_AuxiliaryExamId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_AuxiliaryExamId
        {
            get
            {
                string value = _v_AuxiliaryExamId;
                OnGetv_AuxiliaryExamId(ref value);
                return value;
            }
            set
            {
                if (_v_AuxiliaryExamId != value)
                {
                  Onv_AuxiliaryExamIdChanging(ref value);
                  ReportPropertyChanging("v_AuxiliaryExamId");
                  _v_AuxiliaryExamId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_AuxiliaryExamId");
                  Onv_AuxiliaryExamIdChanged();
              }
            }
        }
        private string _v_AuxiliaryExamId;
        partial void OnGetv_AuxiliaryExamId(ref string value);
        partial void Onv_AuxiliaryExamIdChanging(ref string value);
        partial void Onv_AuxiliaryExamIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_AuxiliaryExam_v_ComponentId", "component")]
        public component component
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_AuxiliaryExam_v_ComponentId", "component").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_AuxiliaryExam_v_ComponentId", "component").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<component> componentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_AuxiliaryExam_v_ComponentId", "component");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_AuxiliaryExam_v_ComponentId", "component", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_AuxiliaryExam_v_ComponentId", "component").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_AuxiliaryExam_v_ServiceId", "service")]
        public service service
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_AuxiliaryExam_v_ServiceId", "service").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_AuxiliaryExam_v_ServiceId", "service").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<service> serviceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_AuxiliaryExam_v_ServiceId", "service");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_AuxiliaryExam_v_ServiceId", "service", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_AuxiliaryExam_v_ServiceId", "service").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.blacklistperson in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_BlackListPerson
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="blacklistperson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class blacklistperson : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new blacklistperson object.
        /// </summary>
        /// <param name="v_BlackListPerson">Initial value of v_BlackListPerson.</param>
        public static blacklistperson Createblacklistperson(string v_BlackListPerson)
        {
            blacklistperson blacklistperson = new blacklistperson();
            blacklistperson.v_BlackListPerson = v_BlackListPerson;
            return blacklistperson;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_BlackListPerson in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_BlackListPerson
        {
            get
            {
                string value = _v_BlackListPerson;
                OnGetv_BlackListPerson(ref value);
                return value;
            }
            set
            {
                if (_v_BlackListPerson != value)
                {
                  Onv_BlackListPersonChanging(ref value);
                  ReportPropertyChanging("v_BlackListPerson");
                  _v_BlackListPerson = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_BlackListPerson");
                  Onv_BlackListPersonChanged();
              }
            }
        }
        private string _v_BlackListPerson;
        partial void OnGetv_BlackListPerson(ref string value);
        partial void Onv_BlackListPersonChanging(ref string value);
        partial void Onv_BlackListPersonChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for v_Comment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Comment
        {
            get
            {
                string value = _v_Comment;
                OnGetv_Comment(ref value);
                return value;
            }
            set
            {
                if (_v_Comment != value)
                {
                  Onv_CommentChanging(ref value);
                  ReportPropertyChanging("v_Comment");
                  _v_Comment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Comment");
                  Onv_CommentChanged();
              }
            }
        }
        private string _v_Comment;
        partial void OnGetv_Comment(ref string value);
        partial void Onv_CommentChanging(ref string value);
        partial void Onv_CommentChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_Status in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Status
        {
            get
            {
                global::System.Nullable<int> value = _i_Status;
                OnGeti_Status(ref value);
                return value;
            }
            set
            {
                if (_i_Status != value)
                {
                  Oni_StatusChanging(ref value);
                  ReportPropertyChanging("i_Status");
                  _i_Status = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Status");
                  Oni_StatusChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Status;
        partial void OnGeti_Status(ref global::System.Nullable<int> value);
        partial void Oni_StatusChanging(ref global::System.Nullable<int> value);
        partial void Oni_StatusChanged();
    
        /// <summary>
        /// There are no comments for d_DateRegister in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_DateRegister
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_DateRegister;
                OnGetd_DateRegister(ref value);
                return value;
            }
            set
            {
                if (_d_DateRegister != value)
                {
                  Ond_DateRegisterChanging(ref value);
                  ReportPropertyChanging("d_DateRegister");
                  _d_DateRegister = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_DateRegister");
                  Ond_DateRegisterChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_DateRegister;
        partial void OnGetd_DateRegister(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateRegisterChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateRegisterChanged();
    
        /// <summary>
        /// There are no comments for d_DateDetection in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_DateDetection
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_DateDetection;
                OnGetd_DateDetection(ref value);
                return value;
            }
            set
            {
                if (_d_DateDetection != value)
                {
                  Ond_DateDetectionChanging(ref value);
                  ReportPropertyChanging("d_DateDetection");
                  _d_DateDetection = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_DateDetection");
                  Ond_DateDetectionChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_DateDetection;
        partial void OnGetd_DateDetection(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateDetectionChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateDetectionChanged();
    
        /// <summary>
        /// There are no comments for d_DateSolution in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_DateSolution
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_DateSolution;
                OnGetd_DateSolution(ref value);
                return value;
            }
            set
            {
                if (_d_DateSolution != value)
                {
                  Ond_DateSolutionChanging(ref value);
                  ReportPropertyChanging("d_DateSolution");
                  _d_DateSolution = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_DateSolution");
                  Ond_DateSolutionChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_DateSolution;
        partial void OnGetd_DateSolution(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateSolutionChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateSolutionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_BlackListPerson_v_PersonId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_BlackListPerson_v_PersonId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_BlackListPerson_v_PersonId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_BlackListPerson_v_PersonId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_BlackListPerson_v_PersonId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_BlackListPerson_v_PersonId", "person").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.brand in the schema.
    /// </summary>
    /// <KeyProperties>
    /// iBrandId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="brand")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class brand : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new brand object.
        /// </summary>
        /// <param name="iBrandId">Initial value of iBrandId.</param>
        public static brand Createbrand(int iBrandId)
        {
            brand brand = new brand();
            brand.iBrandId = iBrandId;
            return brand;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for iBrandId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int iBrandId
        {
            get
            {
                int value = _iBrandId;
                OnGetiBrandId(ref value);
                return value;
            }
            set
            {
                if (_iBrandId != value)
                {
                  OniBrandIdChanging(ref value);
                  ReportPropertyChanging("iBrandId");
                  _iBrandId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iBrandId");
                  OniBrandIdChanged();
              }
            }
        }
        private int _iBrandId;
        partial void OnGetiBrandId(ref int value);
        partial void OniBrandIdChanging(ref int value);
        partial void OniBrandIdChanged();
    
        /// <summary>
        /// There are no comments for vBrandName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string vBrandName
        {
            get
            {
                string value = _vBrandName;
                OnGetvBrandName(ref value);
                return value;
            }
            set
            {
                if (_vBrandName != value)
                {
                  OnvBrandNameChanging(ref value);
                  ReportPropertyChanging("vBrandName");
                  _vBrandName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("vBrandName");
                  OnvBrandNameChanged();
              }
            }
        }
        private string _vBrandName;
        partial void OnGetvBrandName(ref string value);
        partial void OnvBrandNameChanging(ref string value);
        partial void OnvBrandNameChanged();
    
        /// <summary>
        /// There are no comments for iBrandState in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> iBrandState
        {
            get
            {
                global::System.Nullable<bool> value = _iBrandState;
                OnGetiBrandState(ref value);
                return value;
            }
            set
            {
                if (_iBrandState != value)
                {
                  OniBrandStateChanging(ref value);
                  ReportPropertyChanging("iBrandState");
                  _iBrandState = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iBrandState");
                  OniBrandStateChanged();
              }
            }
        }
        private global::System.Nullable<bool> _iBrandState;
        partial void OnGetiBrandState(ref global::System.Nullable<bool> value);
        partial void OniBrandStateChanging(ref global::System.Nullable<bool> value);
        partial void OniBrandStateChanged();
    
        /// <summary>
        /// There are no comments for iDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> iDeleted
        {
            get
            {
                global::System.Nullable<bool> value = _iDeleted;
                OnGetiDeleted(ref value);
                return value;
            }
            set
            {
                if (_iDeleted != value)
                {
                  OniDeletedChanging(ref value);
                  ReportPropertyChanging("iDeleted");
                  _iDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iDeleted");
                  OniDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _iDeleted;
        partial void OnGetiDeleted(ref global::System.Nullable<bool> value);
        partial void OniDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OniDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for testdevice in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK__testdevic__iTest__0214FC18", "testdevice")]
        public EntityCollection<testdevice> testdevice
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<testdevice>("Sigesoft.Node.WinClient.DAL.FK__testdevic__iTest__0214FC18", "testdevice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<testdevice>("Sigesoft.Node.WinClient.DAL.FK__testdevic__iTest__0214FC18", "testdevice", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.calendar in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_CalendarId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="calendar")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class calendar : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new calendar object.
        /// </summary>
        /// <param name="v_CalendarId">Initial value of v_CalendarId.</param>
        public static calendar Createcalendar(string v_CalendarId)
        {
            calendar calendar = new calendar();
            calendar.v_CalendarId = v_CalendarId;
            return calendar;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_CalendarId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_CalendarId
        {
            get
            {
                string value = _v_CalendarId;
                OnGetv_CalendarId(ref value);
                return value;
            }
            set
            {
                if (_v_CalendarId != value)
                {
                  Onv_CalendarIdChanging(ref value);
                  ReportPropertyChanging("v_CalendarId");
                  _v_CalendarId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_CalendarId");
                  Onv_CalendarIdChanged();
              }
            }
        }
        private string _v_CalendarId;
        partial void OnGetv_CalendarId(ref string value);
        partial void Onv_CalendarIdChanging(ref string value);
        partial void Onv_CalendarIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for d_DateTimeCalendar in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_DateTimeCalendar
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_DateTimeCalendar;
                OnGetd_DateTimeCalendar(ref value);
                return value;
            }
            set
            {
                if (_d_DateTimeCalendar != value)
                {
                  Ond_DateTimeCalendarChanging(ref value);
                  ReportPropertyChanging("d_DateTimeCalendar");
                  _d_DateTimeCalendar = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_DateTimeCalendar");
                  Ond_DateTimeCalendarChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_DateTimeCalendar;
        partial void OnGetd_DateTimeCalendar(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateTimeCalendarChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateTimeCalendarChanged();
    
        /// <summary>
        /// There are no comments for d_CircuitStartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_CircuitStartDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_CircuitStartDate;
                OnGetd_CircuitStartDate(ref value);
                return value;
            }
            set
            {
                if (_d_CircuitStartDate != value)
                {
                  Ond_CircuitStartDateChanging(ref value);
                  ReportPropertyChanging("d_CircuitStartDate");
                  _d_CircuitStartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_CircuitStartDate");
                  Ond_CircuitStartDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_CircuitStartDate;
        partial void OnGetd_CircuitStartDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_CircuitStartDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_CircuitStartDateChanged();
    
        /// <summary>
        /// There are no comments for d_EntryTimeCM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_EntryTimeCM
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_EntryTimeCM;
                OnGetd_EntryTimeCM(ref value);
                return value;
            }
            set
            {
                if (_d_EntryTimeCM != value)
                {
                  Ond_EntryTimeCMChanging(ref value);
                  ReportPropertyChanging("d_EntryTimeCM");
                  _d_EntryTimeCM = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_EntryTimeCM");
                  Ond_EntryTimeCMChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_EntryTimeCM;
        partial void OnGetd_EntryTimeCM(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EntryTimeCMChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EntryTimeCMChanged();
    
        /// <summary>
        /// There are no comments for i_ServiceTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ServiceTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ServiceTypeId;
                OnGeti_ServiceTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceTypeId != value)
                {
                  Oni_ServiceTypeIdChanging(ref value);
                  ReportPropertyChanging("i_ServiceTypeId");
                  _i_ServiceTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceTypeId");
                  Oni_ServiceTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ServiceTypeId;
        partial void OnGeti_ServiceTypeId(ref global::System.Nullable<int> value);
        partial void Oni_ServiceTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ServiceTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_CalendarStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_CalendarStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_CalendarStatusId;
                OnGeti_CalendarStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_CalendarStatusId != value)
                {
                  Oni_CalendarStatusIdChanging(ref value);
                  ReportPropertyChanging("i_CalendarStatusId");
                  _i_CalendarStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_CalendarStatusId");
                  Oni_CalendarStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_CalendarStatusId;
        partial void OnGeti_CalendarStatusId(ref global::System.Nullable<int> value);
        partial void Oni_CalendarStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_CalendarStatusIdChanged();
    
        /// <summary>
        /// There are no comments for i_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ServiceId
        {
            get
            {
                global::System.Nullable<int> value = _i_ServiceId;
                OnGeti_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceId != value)
                {
                  Oni_ServiceIdChanging(ref value);
                  ReportPropertyChanging("i_ServiceId");
                  _i_ServiceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceId");
                  Oni_ServiceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ServiceId;
        partial void OnGeti_ServiceId(ref global::System.Nullable<int> value);
        partial void Oni_ServiceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProtocolId
        {
            get
            {
                string value = _v_ProtocolId;
                OnGetv_ProtocolId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolId != value)
                {
                  Onv_ProtocolIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolId");
                  _v_ProtocolId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProtocolId");
                  Onv_ProtocolIdChanged();
              }
            }
        }
        private string _v_ProtocolId;
        partial void OnGetv_ProtocolId(ref string value);
        partial void Onv_ProtocolIdChanging(ref string value);
        partial void Onv_ProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for i_NewContinuationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NewContinuationId
        {
            get
            {
                global::System.Nullable<int> value = _i_NewContinuationId;
                OnGeti_NewContinuationId(ref value);
                return value;
            }
            set
            {
                if (_i_NewContinuationId != value)
                {
                  Oni_NewContinuationIdChanging(ref value);
                  ReportPropertyChanging("i_NewContinuationId");
                  _i_NewContinuationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NewContinuationId");
                  Oni_NewContinuationIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NewContinuationId;
        partial void OnGeti_NewContinuationId(ref global::System.Nullable<int> value);
        partial void Oni_NewContinuationIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_NewContinuationIdChanged();
    
        /// <summary>
        /// There are no comments for i_LineStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_LineStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_LineStatusId;
                OnGeti_LineStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_LineStatusId != value)
                {
                  Oni_LineStatusIdChanging(ref value);
                  ReportPropertyChanging("i_LineStatusId");
                  _i_LineStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_LineStatusId");
                  Oni_LineStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_LineStatusId;
        partial void OnGeti_LineStatusId(ref global::System.Nullable<int> value);
        partial void Oni_LineStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_LineStatusIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsVipId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsVipId
        {
            get
            {
                global::System.Nullable<int> value = _i_IsVipId;
                OnGeti_IsVipId(ref value);
                return value;
            }
            set
            {
                if (_i_IsVipId != value)
                {
                  Oni_IsVipIdChanging(ref value);
                  ReportPropertyChanging("i_IsVipId");
                  _i_IsVipId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsVipId");
                  Oni_IsVipIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsVipId;
        partial void OnGeti_IsVipId(ref global::System.Nullable<int> value);
        partial void Oni_IsVipIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsVipIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_Calendar_v_PersonId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Calendar_v_PersonId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Calendar_v_PersonId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Calendar_v_PersonId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Calendar_v_PersonId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Calendar_v_PersonId", "person").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Calendar_v_ServiceId", "service")]
        public service service
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Calendar_v_ServiceId", "service").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Calendar_v_ServiceId", "service").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<service> serviceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Calendar_v_ServiceId", "service");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Calendar_v_ServiceId", "service", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Calendar_v_ServiceId", "service").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.campaniascovid in the schema.
    /// </summary>
    /// <KeyProperties>
    /// id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="campaniascovid")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class campaniascovid : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new campaniascovid object.
        /// </summary>
        /// <param name="id">Initial value of id.</param>
        /// <param name="sede">Initial value of Sede.</param>
        public static campaniascovid Createcampaniascovid(int id, string sede)
        {
            campaniascovid campaniascovid = new campaniascovid();
            campaniascovid.id = id;
            campaniascovid.Sede = sede;
            return campaniascovid;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int id
        {
            get
            {
                int value = _id;
                OnGetid(ref value);
                return value;
            }
            set
            {
                if (_id != value)
                {
                  OnidChanging(ref value);
                  ReportPropertyChanging("id");
                  _id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("id");
                  OnidChanged();
              }
            }
        }
        private int _id;
        partial void OnGetid(ref int value);
        partial void OnidChanging(ref int value);
        partial void OnidChanged();
    
        /// <summary>
        /// There are no comments for Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Sede
        {
            get
            {
                string value = _Sede;
                OnGetSede(ref value);
                return value;
            }
            set
            {
                if (_Sede != value)
                {
                  OnSedeChanging(ref value);
                  ReportPropertyChanging("Sede");
                  _Sede = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Sede");
                  OnSedeChanged();
              }
            }
        }
        private string _Sede;
        partial void OnGetSede(ref string value);
        partial void OnSedeChanging(ref string value);
        partial void OnSedeChanged();
    
        /// <summary>
        /// There are no comments for Area in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Area
        {
            get
            {
                string value = _Area;
                OnGetArea(ref value);
                return value;
            }
            set
            {
                if (_Area != value)
                {
                  OnAreaChanging(ref value);
                  ReportPropertyChanging("Area");
                  _Area = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Area");
                  OnAreaChanged();
              }
            }
        }
        private string _Area;
        partial void OnGetArea(ref string value);
        partial void OnAreaChanging(ref string value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// There are no comments for DNI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DNI
        {
            get
            {
                string value = _DNI;
                OnGetDNI(ref value);
                return value;
            }
            set
            {
                if (_DNI != value)
                {
                  OnDNIChanging(ref value);
                  ReportPropertyChanging("DNI");
                  _DNI = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DNI");
                  OnDNIChanged();
              }
            }
        }
        private string _DNI;
        partial void OnGetDNI(ref string value);
        partial void OnDNIChanging(ref string value);
        partial void OnDNIChanged();
    
        /// <summary>
        /// There are no comments for ApellidoMaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoMaterno
        {
            get
            {
                string value = _ApellidoMaterno;
                OnGetApellidoMaterno(ref value);
                return value;
            }
            set
            {
                if (_ApellidoMaterno != value)
                {
                  OnApellidoMaternoChanging(ref value);
                  ReportPropertyChanging("ApellidoMaterno");
                  _ApellidoMaterno = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoMaterno");
                  OnApellidoMaternoChanged();
              }
            }
        }
        private string _ApellidoMaterno;
        partial void OnGetApellidoMaterno(ref string value);
        partial void OnApellidoMaternoChanging(ref string value);
        partial void OnApellidoMaternoChanged();
    
        /// <summary>
        /// There are no comments for ApellidoPaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoPaterno
        {
            get
            {
                string value = _ApellidoPaterno;
                OnGetApellidoPaterno(ref value);
                return value;
            }
            set
            {
                if (_ApellidoPaterno != value)
                {
                  OnApellidoPaternoChanging(ref value);
                  ReportPropertyChanging("ApellidoPaterno");
                  _ApellidoPaterno = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoPaterno");
                  OnApellidoPaternoChanged();
              }
            }
        }
        private string _ApellidoPaterno;
        partial void OnGetApellidoPaterno(ref string value);
        partial void OnApellidoPaternoChanging(ref string value);
        partial void OnApellidoPaternoChanged();
    
        /// <summary>
        /// There are no comments for Nombres in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Nombres
        {
            get
            {
                string value = _Nombres;
                OnGetNombres(ref value);
                return value;
            }
            set
            {
                if (_Nombres != value)
                {
                  OnNombresChanging(ref value);
                  ReportPropertyChanging("Nombres");
                  _Nombres = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Nombres");
                  OnNombresChanged();
              }
            }
        }
        private string _Nombres;
        partial void OnGetNombres(ref string value);
        partial void OnNombresChanging(ref string value);
        partial void OnNombresChanged();
    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> Fecha
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _Fecha;
                OnGetFecha(ref value);
                return value;
            }
            set
            {
                if (_Fecha != value)
                {
                  OnFechaChanging(ref value);
                  ReportPropertyChanging("Fecha");
                  _Fecha = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Fecha");
                  OnFechaChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _Fecha;
        partial void OnGetFecha(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaChanged();
    
        /// <summary>
        /// There are no comments for Resultado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Resultado
        {
            get
            {
                string value = _Resultado;
                OnGetResultado(ref value);
                return value;
            }
            set
            {
                if (_Resultado != value)
                {
                  OnResultadoChanging(ref value);
                  ReportPropertyChanging("Resultado");
                  _Resultado = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Resultado");
                  OnResultadoChanged();
              }
            }
        }
        private string _Resultado;
        partial void OnGetResultado(ref string value);
        partial void OnResultadoChanging(ref string value);
        partial void OnResultadoChanged();
    
        /// <summary>
        /// There are no comments for Campaña in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Campaña
        {
            get
            {
                global::System.Nullable<int> value = _Campaña;
                OnGetCampaña(ref value);
                return value;
            }
            set
            {
                if (_Campaña != value)
                {
                  OnCampañaChanging(ref value);
                  ReportPropertyChanging("Campaña");
                  _Campaña = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Campaña");
                  OnCampañaChanged();
              }
            }
        }
        private global::System.Nullable<int> _Campaña;
        partial void OnGetCampaña(ref global::System.Nullable<int> value);
        partial void OnCampañaChanging(ref global::System.Nullable<int> value);
        partial void OnCampañaChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.cie10 in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_CIE10Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="cie10")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class cie10 : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new cie10 object.
        /// </summary>
        /// <param name="v_CIE10Id">Initial value of v_CIE10Id.</param>
        public static cie10 Createcie10(string v_CIE10Id)
        {
            cie10 cie10 = new cie10();
            cie10.v_CIE10Id = v_CIE10Id;
            return cie10;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_CIE10Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_CIE10Id
        {
            get
            {
                string value = _v_CIE10Id;
                OnGetv_CIE10Id(ref value);
                return value;
            }
            set
            {
                if (_v_CIE10Id != value)
                {
                  Onv_CIE10IdChanging(ref value);
                  ReportPropertyChanging("v_CIE10Id");
                  _v_CIE10Id = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_CIE10Id");
                  Onv_CIE10IdChanged();
              }
            }
        }
        private string _v_CIE10Id;
        partial void OnGetv_CIE10Id(ref string value);
        partial void Onv_CIE10IdChanging(ref string value);
        partial void Onv_CIE10IdChanged();
    
        /// <summary>
        /// There are no comments for v_CIE10Description1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CIE10Description1
        {
            get
            {
                string value = _v_CIE10Description1;
                OnGetv_CIE10Description1(ref value);
                return value;
            }
            set
            {
                if (_v_CIE10Description1 != value)
                {
                  Onv_CIE10Description1Changing(ref value);
                  ReportPropertyChanging("v_CIE10Description1");
                  _v_CIE10Description1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CIE10Description1");
                  Onv_CIE10Description1Changed();
              }
            }
        }
        private string _v_CIE10Description1;
        partial void OnGetv_CIE10Description1(ref string value);
        partial void Onv_CIE10Description1Changing(ref string value);
        partial void Onv_CIE10Description1Changed();
    
        /// <summary>
        /// There are no comments for v_CIE10Description2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CIE10Description2
        {
            get
            {
                string value = _v_CIE10Description2;
                OnGetv_CIE10Description2(ref value);
                return value;
            }
            set
            {
                if (_v_CIE10Description2 != value)
                {
                  Onv_CIE10Description2Changing(ref value);
                  ReportPropertyChanging("v_CIE10Description2");
                  _v_CIE10Description2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CIE10Description2");
                  Onv_CIE10Description2Changed();
              }
            }
        }
        private string _v_CIE10Description2;
        partial void OnGetv_CIE10Description2(ref string value);
        partial void Onv_CIE10Description2Changing(ref string value);
        partial void Onv_CIE10Description2Changed();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for diseases in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Cie10_Diseases_v_CIE10Id", "diseases")]
        public EntityCollection<diseases> diseases
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Cie10_Diseases_v_CIE10Id", "diseases");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Cie10_Diseases_v_CIE10Id", "diseases", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for dxfrecuente in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_dxfrecuente_cie10_v_CIE10Id", "dxfrecuente")]
        public EntityCollection<dxfrecuente> dxfrecuente
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<dxfrecuente>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_cie10_v_CIE10Id", "dxfrecuente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<dxfrecuente>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_cie10_v_CIE10Id", "dxfrecuente", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.clinica in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_clinicaId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="clinica")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class clinica : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new clinica object.
        /// </summary>
        /// <param name="i_clinicaId">Initial value of i_clinicaId.</param>
        public static clinica Createclinica(int i_clinicaId)
        {
            clinica clinica = new clinica();
            clinica.i_clinicaId = i_clinicaId;
            return clinica;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_clinicaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_clinicaId
        {
            get
            {
                int value = _i_clinicaId;
                OnGeti_clinicaId(ref value);
                return value;
            }
            set
            {
                if (_i_clinicaId != value)
                {
                  Oni_clinicaIdChanging(ref value);
                  ReportPropertyChanging("i_clinicaId");
                  _i_clinicaId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_clinicaId");
                  Oni_clinicaIdChanged();
              }
            }
        }
        private int _i_clinicaId;
        partial void OnGeti_clinicaId(ref int value);
        partial void Oni_clinicaIdChanging(ref int value);
        partial void Oni_clinicaIdChanged();
    
        /// <summary>
        /// There are no comments for v_Nombre in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Nombre
        {
            get
            {
                string value = _v_Nombre;
                OnGetv_Nombre(ref value);
                return value;
            }
            set
            {
                if (_v_Nombre != value)
                {
                  Onv_NombreChanging(ref value);
                  ReportPropertyChanging("v_Nombre");
                  _v_Nombre = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Nombre");
                  Onv_NombreChanged();
              }
            }
        }
        private string _v_Nombre;
        partial void OnGetv_Nombre(ref string value);
        partial void Onv_NombreChanging(ref string value);
        partial void Onv_NombreChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.component in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ComponentId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="component")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class component : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new component object.
        /// </summary>
        /// <param name="v_ComponentId">Initial value of v_ComponentId.</param>
        public static component Createcomponent(string v_ComponentId)
        {
            component component = new component();
            component.v_ComponentId = v_ComponentId;
            return component;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for i_CategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_CategoryId
        {
            get
            {
                global::System.Nullable<int> value = _i_CategoryId;
                OnGeti_CategoryId(ref value);
                return value;
            }
            set
            {
                if (_i_CategoryId != value)
                {
                  Oni_CategoryIdChanging(ref value);
                  ReportPropertyChanging("i_CategoryId");
                  _i_CategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_CategoryId");
                  Oni_CategoryIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_CategoryId;
        partial void OnGeti_CategoryId(ref global::System.Nullable<int> value);
        partial void Oni_CategoryIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_CategoryIdChanged();
    
        /// <summary>
        /// There are no comments for r_CostPrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_CostPrice
        {
            get
            {
                global::System.Nullable<float> value = _r_CostPrice;
                OnGetr_CostPrice(ref value);
                return value;
            }
            set
            {
                if (_r_CostPrice != value)
                {
                  Onr_CostPriceChanging(ref value);
                  ReportPropertyChanging("r_CostPrice");
                  _r_CostPrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_CostPrice");
                  Onr_CostPriceChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_CostPrice;
        partial void OnGetr_CostPrice(ref global::System.Nullable<float> value);
        partial void Onr_CostPriceChanging(ref global::System.Nullable<float> value);
        partial void Onr_CostPriceChanged();
    
        /// <summary>
        /// There are no comments for r_BasePrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_BasePrice
        {
            get
            {
                global::System.Nullable<float> value = _r_BasePrice;
                OnGetr_BasePrice(ref value);
                return value;
            }
            set
            {
                if (_r_BasePrice != value)
                {
                  Onr_BasePriceChanging(ref value);
                  ReportPropertyChanging("r_BasePrice");
                  _r_BasePrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_BasePrice");
                  Onr_BasePriceChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_BasePrice;
        partial void OnGetr_BasePrice(ref global::System.Nullable<float> value);
        partial void Onr_BasePriceChanging(ref global::System.Nullable<float> value);
        partial void Onr_BasePriceChanged();
    
        /// <summary>
        /// There are no comments for r_SalePrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_SalePrice
        {
            get
            {
                global::System.Nullable<float> value = _r_SalePrice;
                OnGetr_SalePrice(ref value);
                return value;
            }
            set
            {
                if (_r_SalePrice != value)
                {
                  Onr_SalePriceChanging(ref value);
                  ReportPropertyChanging("r_SalePrice");
                  _r_SalePrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_SalePrice");
                  Onr_SalePriceChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_SalePrice;
        partial void OnGetr_SalePrice(ref global::System.Nullable<float> value);
        partial void Onr_SalePriceChanging(ref global::System.Nullable<float> value);
        partial void Onr_SalePriceChanged();
    
        /// <summary>
        /// There are no comments for i_DiagnosableId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DiagnosableId
        {
            get
            {
                global::System.Nullable<int> value = _i_DiagnosableId;
                OnGeti_DiagnosableId(ref value);
                return value;
            }
            set
            {
                if (_i_DiagnosableId != value)
                {
                  Oni_DiagnosableIdChanging(ref value);
                  ReportPropertyChanging("i_DiagnosableId");
                  _i_DiagnosableId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DiagnosableId");
                  Oni_DiagnosableIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DiagnosableId;
        partial void OnGeti_DiagnosableId(ref global::System.Nullable<int> value);
        partial void Oni_DiagnosableIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DiagnosableIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsApprovedId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsApprovedId
        {
            get
            {
                global::System.Nullable<int> value = _i_IsApprovedId;
                OnGeti_IsApprovedId(ref value);
                return value;
            }
            set
            {
                if (_i_IsApprovedId != value)
                {
                  Oni_IsApprovedIdChanging(ref value);
                  ReportPropertyChanging("i_IsApprovedId");
                  _i_IsApprovedId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsApprovedId");
                  Oni_IsApprovedIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsApprovedId;
        partial void OnGeti_IsApprovedId(ref global::System.Nullable<int> value);
        partial void Oni_IsApprovedIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsApprovedIdChanged();
    
        /// <summary>
        /// There are no comments for i_ComponentTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ComponentTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ComponentTypeId;
                OnGeti_ComponentTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_ComponentTypeId != value)
                {
                  Oni_ComponentTypeIdChanging(ref value);
                  ReportPropertyChanging("i_ComponentTypeId");
                  _i_ComponentTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ComponentTypeId");
                  Oni_ComponentTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ComponentTypeId;
        partial void OnGeti_ComponentTypeId(ref global::System.Nullable<int> value);
        partial void Oni_ComponentTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ComponentTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_UIIsVisibleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UIIsVisibleId
        {
            get
            {
                global::System.Nullable<int> value = _i_UIIsVisibleId;
                OnGeti_UIIsVisibleId(ref value);
                return value;
            }
            set
            {
                if (_i_UIIsVisibleId != value)
                {
                  Oni_UIIsVisibleIdChanging(ref value);
                  ReportPropertyChanging("i_UIIsVisibleId");
                  _i_UIIsVisibleId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UIIsVisibleId");
                  Oni_UIIsVisibleIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UIIsVisibleId;
        partial void OnGeti_UIIsVisibleId(ref global::System.Nullable<int> value);
        partial void Oni_UIIsVisibleIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UIIsVisibleIdChanged();
    
        /// <summary>
        /// There are no comments for i_UIIndex in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UIIndex
        {
            get
            {
                global::System.Nullable<int> value = _i_UIIndex;
                OnGeti_UIIndex(ref value);
                return value;
            }
            set
            {
                if (_i_UIIndex != value)
                {
                  Oni_UIIndexChanging(ref value);
                  ReportPropertyChanging("i_UIIndex");
                  _i_UIIndex = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UIIndex");
                  Oni_UIIndexChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UIIndex;
        partial void OnGeti_UIIndex(ref global::System.Nullable<int> value);
        partial void Oni_UIIndexChanging(ref global::System.Nullable<int> value);
        partial void Oni_UIIndexChanged();
    
        /// <summary>
        /// There are no comments for i_ValidInDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ValidInDays
        {
            get
            {
                global::System.Nullable<int> value = _i_ValidInDays;
                OnGeti_ValidInDays(ref value);
                return value;
            }
            set
            {
                if (_i_ValidInDays != value)
                {
                  Oni_ValidInDaysChanging(ref value);
                  ReportPropertyChanging("i_ValidInDays");
                  _i_ValidInDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ValidInDays");
                  Oni_ValidInDaysChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ValidInDays;
        partial void OnGeti_ValidInDays(ref global::System.Nullable<int> value);
        partial void Oni_ValidInDaysChanging(ref global::System.Nullable<int> value);
        partial void Oni_ValidInDaysChanged();
    
        /// <summary>
        /// There are no comments for i_GroupedComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_GroupedComponentId
        {
            get
            {
                global::System.Nullable<int> value = _i_GroupedComponentId;
                OnGeti_GroupedComponentId(ref value);
                return value;
            }
            set
            {
                if (_i_GroupedComponentId != value)
                {
                  Oni_GroupedComponentIdChanging(ref value);
                  ReportPropertyChanging("i_GroupedComponentId");
                  _i_GroupedComponentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_GroupedComponentId");
                  Oni_GroupedComponentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_GroupedComponentId;
        partial void OnGeti_GroupedComponentId(ref global::System.Nullable<int> value);
        partial void Oni_GroupedComponentIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_GroupedComponentIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for attentioninareacomponent in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_AttentionAreaComponent_v_ComponentId", "attentioninareacomponent")]
        public EntityCollection<attentioninareacomponent> attentioninareacomponent
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<attentioninareacomponent>("Sigesoft.Node.WinClient.DAL.Fk_Component_AttentionAreaComponent_v_ComponentId", "attentioninareacomponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<attentioninareacomponent>("Sigesoft.Node.WinClient.DAL.Fk_Component_AttentionAreaComponent_v_ComponentId", "attentioninareacomponent", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for auxiliaryexam in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_AuxiliaryExam_v_ComponentId", "auxiliaryexam")]
        public EntityCollection<auxiliaryexam> auxiliaryexam
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<auxiliaryexam>("Sigesoft.Node.WinClient.DAL.Fk_Component_AuxiliaryExam_v_ComponentId", "auxiliaryexam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<auxiliaryexam>("Sigesoft.Node.WinClient.DAL.Fk_Component_AuxiliaryExam_v_ComponentId", "auxiliaryexam", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for componentfields in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_ComponentFields_v_MedicalExamFields", "componentfields")]
        public EntityCollection<componentfields> componentfields
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<componentfields>("Sigesoft.Node.WinClient.DAL.Fk_Component_ComponentFields_v_MedicalExamFields", "componentfields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<componentfields>("Sigesoft.Node.WinClient.DAL.Fk_Component_ComponentFields_v_MedicalExamFields", "componentfields", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for protocolcomponent in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_ProtocolComponent_v_ComponentId", "protocolcomponent")]
        public EntityCollection<protocolcomponent> protocolcomponent
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<protocolcomponent>("Sigesoft.Node.WinClient.DAL.Fk_Component_ProtocolComponent_v_ComponentId", "protocolcomponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<protocolcomponent>("Sigesoft.Node.WinClient.DAL.Fk_Component_ProtocolComponent_v_ComponentId", "protocolcomponent", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for recommendation in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_Recommendation_v_RecommendationId", "recommendation")]
        public EntityCollection<recommendation> recommendation
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<recommendation>("Sigesoft.Node.WinClient.DAL.Fk_Component_Recommendation_v_RecommendationId", "recommendation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<recommendation>("Sigesoft.Node.WinClient.DAL.Fk_Component_Recommendation_v_RecommendationId", "recommendation", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for restriction in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_Restricction_v_ComponentId", "restriction")]
        public EntityCollection<restriction> restriction
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<restriction>("Sigesoft.Node.WinClient.DAL.Fk_Component_Restricction_v_ComponentId", "restriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<restriction>("Sigesoft.Node.WinClient.DAL.Fk_Component_Restricction_v_ComponentId", "restriction", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for rolenodecomponentprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_RoleNodeComponent_v_ComponentId", "rolenodecomponentprofile")]
        public EntityCollection<rolenodecomponentprofile> rolenodecomponentprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<rolenodecomponentprofile>("Sigesoft.Node.WinClient.DAL.Fk_Component_RoleNodeComponent_v_ComponentId", "rolenodecomponentprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<rolenodecomponentprofile>("Sigesoft.Node.WinClient.DAL.Fk_Component_RoleNodeComponent_v_ComponentId", "rolenodecomponentprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponent in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_ServiceComponent_v_ComponentId", "servicecomponent")]
        public EntityCollection<servicecomponent> servicecomponent
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicecomponent>("Sigesoft.Node.WinClient.DAL.Fk_Component_ServiceComponent_v_ComponentId", "servicecomponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicecomponent>("Sigesoft.Node.WinClient.DAL.Fk_Component_ServiceComponent_v_ComponentId", "servicecomponent", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.componentfield in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ComponentFieldId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="componentfield")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class componentfield : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new componentfield object.
        /// </summary>
        /// <param name="v_ComponentFieldId">Initial value of v_ComponentFieldId.</param>
        public static componentfield Createcomponentfield(string v_ComponentFieldId)
        {
            componentfield componentfield = new componentfield();
            componentfield.v_ComponentFieldId = v_ComponentFieldId;
            return componentfield;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ComponentFieldId
        {
            get
            {
                string value = _v_ComponentFieldId;
                OnGetv_ComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldId != value)
                {
                  Onv_ComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldId");
                  _v_ComponentFieldId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ComponentFieldId");
                  Onv_ComponentFieldIdChanged();
              }
            }
        }
        private string _v_ComponentFieldId;
        partial void OnGetv_ComponentFieldId(ref string value);
        partial void Onv_ComponentFieldIdChanging(ref string value);
        partial void Onv_ComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for v_TextLabel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_TextLabel
        {
            get
            {
                string value = _v_TextLabel;
                OnGetv_TextLabel(ref value);
                return value;
            }
            set
            {
                if (_v_TextLabel != value)
                {
                  Onv_TextLabelChanging(ref value);
                  ReportPropertyChanging("v_TextLabel");
                  _v_TextLabel = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_TextLabel");
                  Onv_TextLabelChanged();
              }
            }
        }
        private string _v_TextLabel;
        partial void OnGetv_TextLabel(ref string value);
        partial void Onv_TextLabelChanging(ref string value);
        partial void Onv_TextLabelChanged();
    
        /// <summary>
        /// There are no comments for i_LabelWidth in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_LabelWidth
        {
            get
            {
                global::System.Nullable<int> value = _i_LabelWidth;
                OnGeti_LabelWidth(ref value);
                return value;
            }
            set
            {
                if (_i_LabelWidth != value)
                {
                  Oni_LabelWidthChanging(ref value);
                  ReportPropertyChanging("i_LabelWidth");
                  _i_LabelWidth = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_LabelWidth");
                  Oni_LabelWidthChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_LabelWidth;
        partial void OnGeti_LabelWidth(ref global::System.Nullable<int> value);
        partial void Oni_LabelWidthChanging(ref global::System.Nullable<int> value);
        partial void Oni_LabelWidthChanged();
    
        /// <summary>
        /// There are no comments for i_HeightLabel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_HeightLabel
        {
            get
            {
                global::System.Nullable<int> value = _i_HeightLabel;
                OnGeti_HeightLabel(ref value);
                return value;
            }
            set
            {
                if (_i_HeightLabel != value)
                {
                  Oni_HeightLabelChanging(ref value);
                  ReportPropertyChanging("i_HeightLabel");
                  _i_HeightLabel = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_HeightLabel");
                  Oni_HeightLabelChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_HeightLabel;
        partial void OnGeti_HeightLabel(ref global::System.Nullable<int> value);
        partial void Oni_HeightLabelChanging(ref global::System.Nullable<int> value);
        partial void Oni_HeightLabelChanged();
    
        /// <summary>
        /// There are no comments for v_abbreviation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_abbreviation
        {
            get
            {
                string value = _v_abbreviation;
                OnGetv_abbreviation(ref value);
                return value;
            }
            set
            {
                if (_v_abbreviation != value)
                {
                  Onv_abbreviationChanging(ref value);
                  ReportPropertyChanging("v_abbreviation");
                  _v_abbreviation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_abbreviation");
                  Onv_abbreviationChanged();
              }
            }
        }
        private string _v_abbreviation;
        partial void OnGetv_abbreviation(ref string value);
        partial void Onv_abbreviationChanging(ref string value);
        partial void Onv_abbreviationChanged();
    
        /// <summary>
        /// There are no comments for v_DefaultText in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DefaultText
        {
            get
            {
                string value = _v_DefaultText;
                OnGetv_DefaultText(ref value);
                return value;
            }
            set
            {
                if (_v_DefaultText != value)
                {
                  Onv_DefaultTextChanging(ref value);
                  ReportPropertyChanging("v_DefaultText");
                  _v_DefaultText = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DefaultText");
                  Onv_DefaultTextChanged();
              }
            }
        }
        private string _v_DefaultText;
        partial void OnGetv_DefaultText(ref string value);
        partial void Onv_DefaultTextChanging(ref string value);
        partial void Onv_DefaultTextChanged();
    
        /// <summary>
        /// There are no comments for i_ControlId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ControlId
        {
            get
            {
                global::System.Nullable<int> value = _i_ControlId;
                OnGeti_ControlId(ref value);
                return value;
            }
            set
            {
                if (_i_ControlId != value)
                {
                  Oni_ControlIdChanging(ref value);
                  ReportPropertyChanging("i_ControlId");
                  _i_ControlId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ControlId");
                  Oni_ControlIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ControlId;
        partial void OnGeti_ControlId(ref global::System.Nullable<int> value);
        partial void Oni_ControlIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ControlIdChanged();
    
        /// <summary>
        /// There are no comments for i_GroupId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_GroupId
        {
            get
            {
                global::System.Nullable<int> value = _i_GroupId;
                OnGeti_GroupId(ref value);
                return value;
            }
            set
            {
                if (_i_GroupId != value)
                {
                  Oni_GroupIdChanging(ref value);
                  ReportPropertyChanging("i_GroupId");
                  _i_GroupId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_GroupId");
                  Oni_GroupIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_GroupId;
        partial void OnGeti_GroupId(ref global::System.Nullable<int> value);
        partial void Oni_GroupIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_GroupIdChanged();
    
        /// <summary>
        /// There are no comments for i_ItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ItemId
        {
            get
            {
                global::System.Nullable<int> value = _i_ItemId;
                OnGeti_ItemId(ref value);
                return value;
            }
            set
            {
                if (_i_ItemId != value)
                {
                  Oni_ItemIdChanging(ref value);
                  ReportPropertyChanging("i_ItemId");
                  _i_ItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ItemId");
                  Oni_ItemIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ItemId;
        partial void OnGeti_ItemId(ref global::System.Nullable<int> value);
        partial void Oni_ItemIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ItemIdChanged();
    
        /// <summary>
        /// There are no comments for i_WidthControl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_WidthControl
        {
            get
            {
                global::System.Nullable<int> value = _i_WidthControl;
                OnGeti_WidthControl(ref value);
                return value;
            }
            set
            {
                if (_i_WidthControl != value)
                {
                  Oni_WidthControlChanging(ref value);
                  ReportPropertyChanging("i_WidthControl");
                  _i_WidthControl = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_WidthControl");
                  Oni_WidthControlChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_WidthControl;
        partial void OnGeti_WidthControl(ref global::System.Nullable<int> value);
        partial void Oni_WidthControlChanging(ref global::System.Nullable<int> value);
        partial void Oni_WidthControlChanged();
    
        /// <summary>
        /// There are no comments for i_HeightControl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_HeightControl
        {
            get
            {
                global::System.Nullable<int> value = _i_HeightControl;
                OnGeti_HeightControl(ref value);
                return value;
            }
            set
            {
                if (_i_HeightControl != value)
                {
                  Oni_HeightControlChanging(ref value);
                  ReportPropertyChanging("i_HeightControl");
                  _i_HeightControl = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_HeightControl");
                  Oni_HeightControlChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_HeightControl;
        partial void OnGeti_HeightControl(ref global::System.Nullable<int> value);
        partial void Oni_HeightControlChanging(ref global::System.Nullable<int> value);
        partial void Oni_HeightControlChanged();
    
        /// <summary>
        /// There are no comments for i_MaxLenght in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MaxLenght
        {
            get
            {
                global::System.Nullable<int> value = _i_MaxLenght;
                OnGeti_MaxLenght(ref value);
                return value;
            }
            set
            {
                if (_i_MaxLenght != value)
                {
                  Oni_MaxLenghtChanging(ref value);
                  ReportPropertyChanging("i_MaxLenght");
                  _i_MaxLenght = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MaxLenght");
                  Oni_MaxLenghtChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MaxLenght;
        partial void OnGeti_MaxLenght(ref global::System.Nullable<int> value);
        partial void Oni_MaxLenghtChanging(ref global::System.Nullable<int> value);
        partial void Oni_MaxLenghtChanged();
    
        /// <summary>
        /// There are no comments for i_IsRequired in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsRequired
        {
            get
            {
                global::System.Nullable<int> value = _i_IsRequired;
                OnGeti_IsRequired(ref value);
                return value;
            }
            set
            {
                if (_i_IsRequired != value)
                {
                  Oni_IsRequiredChanging(ref value);
                  ReportPropertyChanging("i_IsRequired");
                  _i_IsRequired = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsRequired");
                  Oni_IsRequiredChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsRequired;
        partial void OnGeti_IsRequired(ref global::System.Nullable<int> value);
        partial void Oni_IsRequiredChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsRequiredChanged();
    
        /// <summary>
        /// There are no comments for i_IsCalculate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsCalculate
        {
            get
            {
                global::System.Nullable<int> value = _i_IsCalculate;
                OnGeti_IsCalculate(ref value);
                return value;
            }
            set
            {
                if (_i_IsCalculate != value)
                {
                  Oni_IsCalculateChanging(ref value);
                  ReportPropertyChanging("i_IsCalculate");
                  _i_IsCalculate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsCalculate");
                  Oni_IsCalculateChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsCalculate;
        partial void OnGeti_IsCalculate(ref global::System.Nullable<int> value);
        partial void Oni_IsCalculateChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsCalculateChanged();
    
        /// <summary>
        /// There are no comments for v_Formula in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Formula
        {
            get
            {
                string value = _v_Formula;
                OnGetv_Formula(ref value);
                return value;
            }
            set
            {
                if (_v_Formula != value)
                {
                  Onv_FormulaChanging(ref value);
                  ReportPropertyChanging("v_Formula");
                  _v_Formula = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Formula");
                  Onv_FormulaChanged();
              }
            }
        }
        private string _v_Formula;
        partial void OnGetv_Formula(ref string value);
        partial void Onv_FormulaChanging(ref string value);
        partial void Onv_FormulaChanged();
    
        /// <summary>
        /// There are no comments for i_Order in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Order
        {
            get
            {
                global::System.Nullable<int> value = _i_Order;
                OnGeti_Order(ref value);
                return value;
            }
            set
            {
                if (_i_Order != value)
                {
                  Oni_OrderChanging(ref value);
                  ReportPropertyChanging("i_Order");
                  _i_Order = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Order");
                  Oni_OrderChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Order;
        partial void OnGeti_Order(ref global::System.Nullable<int> value);
        partial void Oni_OrderChanging(ref global::System.Nullable<int> value);
        partial void Oni_OrderChanged();
    
        /// <summary>
        /// There are no comments for i_MeasurementUnitId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MeasurementUnitId
        {
            get
            {
                global::System.Nullable<int> value = _i_MeasurementUnitId;
                OnGeti_MeasurementUnitId(ref value);
                return value;
            }
            set
            {
                if (_i_MeasurementUnitId != value)
                {
                  Oni_MeasurementUnitIdChanging(ref value);
                  ReportPropertyChanging("i_MeasurementUnitId");
                  _i_MeasurementUnitId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MeasurementUnitId");
                  Oni_MeasurementUnitIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MeasurementUnitId;
        partial void OnGeti_MeasurementUnitId(ref global::System.Nullable<int> value);
        partial void Oni_MeasurementUnitIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MeasurementUnitIdChanged();
    
        /// <summary>
        /// There are no comments for r_ValidateValue1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_ValidateValue1
        {
            get
            {
                global::System.Nullable<float> value = _r_ValidateValue1;
                OnGetr_ValidateValue1(ref value);
                return value;
            }
            set
            {
                if (_r_ValidateValue1 != value)
                {
                  Onr_ValidateValue1Changing(ref value);
                  ReportPropertyChanging("r_ValidateValue1");
                  _r_ValidateValue1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_ValidateValue1");
                  Onr_ValidateValue1Changed();
              }
            }
        }
        private global::System.Nullable<float> _r_ValidateValue1;
        partial void OnGetr_ValidateValue1(ref global::System.Nullable<float> value);
        partial void Onr_ValidateValue1Changing(ref global::System.Nullable<float> value);
        partial void Onr_ValidateValue1Changed();
    
        /// <summary>
        /// There are no comments for r_ValidateValue2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_ValidateValue2
        {
            get
            {
                global::System.Nullable<float> value = _r_ValidateValue2;
                OnGetr_ValidateValue2(ref value);
                return value;
            }
            set
            {
                if (_r_ValidateValue2 != value)
                {
                  Onr_ValidateValue2Changing(ref value);
                  ReportPropertyChanging("r_ValidateValue2");
                  _r_ValidateValue2 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_ValidateValue2");
                  Onr_ValidateValue2Changed();
              }
            }
        }
        private global::System.Nullable<float> _r_ValidateValue2;
        partial void OnGetr_ValidateValue2(ref global::System.Nullable<float> value);
        partial void Onr_ValidateValue2Changing(ref global::System.Nullable<float> value);
        partial void Onr_ValidateValue2Changed();
    
        /// <summary>
        /// There are no comments for i_Column in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Column
        {
            get
            {
                global::System.Nullable<int> value = _i_Column;
                OnGeti_Column(ref value);
                return value;
            }
            set
            {
                if (_i_Column != value)
                {
                  Oni_ColumnChanging(ref value);
                  ReportPropertyChanging("i_Column");
                  _i_Column = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Column");
                  Oni_ColumnChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Column;
        partial void OnGeti_Column(ref global::System.Nullable<int> value);
        partial void Oni_ColumnChanging(ref global::System.Nullable<int> value);
        partial void Oni_ColumnChanged();
    
        /// <summary>
        /// There are no comments for i_defaultIndex in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_defaultIndex
        {
            get
            {
                global::System.Nullable<int> value = _i_defaultIndex;
                OnGeti_defaultIndex(ref value);
                return value;
            }
            set
            {
                if (_i_defaultIndex != value)
                {
                  Oni_defaultIndexChanging(ref value);
                  ReportPropertyChanging("i_defaultIndex");
                  _i_defaultIndex = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_defaultIndex");
                  Oni_defaultIndexChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_defaultIndex;
        partial void OnGeti_defaultIndex(ref global::System.Nullable<int> value);
        partial void Oni_defaultIndexChanging(ref global::System.Nullable<int> value);
        partial void Oni_defaultIndexChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_NroDecimales in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NroDecimales
        {
            get
            {
                global::System.Nullable<int> value = _i_NroDecimales;
                OnGeti_NroDecimales(ref value);
                return value;
            }
            set
            {
                if (_i_NroDecimales != value)
                {
                  Oni_NroDecimalesChanging(ref value);
                  ReportPropertyChanging("i_NroDecimales");
                  _i_NroDecimales = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NroDecimales");
                  Oni_NroDecimalesChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NroDecimales;
        partial void OnGeti_NroDecimales(ref global::System.Nullable<int> value);
        partial void Oni_NroDecimalesChanging(ref global::System.Nullable<int> value);
        partial void Oni_NroDecimalesChanged();
    
        /// <summary>
        /// There are no comments for i_ReadOnly in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ReadOnly
        {
            get
            {
                global::System.Nullable<int> value = _i_ReadOnly;
                OnGeti_ReadOnly(ref value);
                return value;
            }
            set
            {
                if (_i_ReadOnly != value)
                {
                  Oni_ReadOnlyChanging(ref value);
                  ReportPropertyChanging("i_ReadOnly");
                  _i_ReadOnly = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ReadOnly");
                  Oni_ReadOnlyChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ReadOnly;
        partial void OnGeti_ReadOnly(ref global::System.Nullable<int> value);
        partial void Oni_ReadOnlyChanging(ref global::System.Nullable<int> value);
        partial void Oni_ReadOnlyChanged();
    
        /// <summary>
        /// There are no comments for i_Enabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Enabled
        {
            get
            {
                global::System.Nullable<int> value = _i_Enabled;
                OnGeti_Enabled(ref value);
                return value;
            }
            set
            {
                if (_i_Enabled != value)
                {
                  Oni_EnabledChanging(ref value);
                  ReportPropertyChanging("i_Enabled");
                  _i_Enabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Enabled");
                  Oni_EnabledChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Enabled;
        partial void OnGeti_Enabled(ref global::System.Nullable<int> value);
        partial void Oni_EnabledChanging(ref global::System.Nullable<int> value);
        partial void Oni_EnabledChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.componentfields in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ComponentId
    /// v_ComponentFieldId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="componentfields")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class componentfields : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new componentfields object.
        /// </summary>
        /// <param name="v_ComponentId">Initial value of v_ComponentId.</param>
        /// <param name="v_ComponentFieldId">Initial value of v_ComponentFieldId.</param>
        public static componentfields Createcomponentfields(string v_ComponentId, string v_ComponentFieldId)
        {
            componentfields componentfields = new componentfields();
            componentfields.v_ComponentId = v_ComponentId;
            componentfields.v_ComponentFieldId = v_ComponentFieldId;
            return componentfields;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ComponentFieldId
        {
            get
            {
                string value = _v_ComponentFieldId;
                OnGetv_ComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldId != value)
                {
                  Onv_ComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldId");
                  _v_ComponentFieldId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ComponentFieldId");
                  Onv_ComponentFieldIdChanged();
              }
            }
        }
        private string _v_ComponentFieldId;
        partial void OnGetv_ComponentFieldId(ref string value);
        partial void Onv_ComponentFieldIdChanging(ref string value);
        partial void Onv_ComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for v_Group in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Group
        {
            get
            {
                string value = _v_Group;
                OnGetv_Group(ref value);
                return value;
            }
            set
            {
                if (_v_Group != value)
                {
                  Onv_GroupChanging(ref value);
                  ReportPropertyChanging("v_Group");
                  _v_Group = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Group");
                  Onv_GroupChanged();
              }
            }
        }
        private string _v_Group;
        partial void OnGetv_Group(ref string value);
        partial void Onv_GroupChanging(ref string value);
        partial void Onv_GroupChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_ComponentFields_v_MedicalExamFields", "component")]
        public component component
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ComponentFields_v_MedicalExamFields", "component").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ComponentFields_v_MedicalExamFields", "component").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<component> componentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ComponentFields_v_MedicalExamFields", "component");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ComponentFields_v_MedicalExamFields", "component", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ComponentFields_v_MedicalExamFields", "component").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for diagnosticrepository in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ComponentField_DiagnosticRepository_v_ComponentFieldsId", "diagnosticrepository")]
        public EntityCollection<diagnosticrepository> diagnosticrepository
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_ComponentField_DiagnosticRepository_v_ComponentFieldsId", "diagnosticrepository");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_ComponentField_DiagnosticRepository_v_ComponentFieldsId", "diagnosticrepository", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentfields in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ComponentFields_ServiceComponentFields_v_MedicalExamFieldsId", "servicecomponentfields")]
        public EntityCollection<servicecomponentfields> servicecomponentfields
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicecomponentfields>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFields_ServiceComponentFields_v_MedicalExamFieldsId", "servicecomponentfields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicecomponentfields>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFields_ServiceComponentFields_v_MedicalExamFieldsId", "servicecomponentfields", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.componentfieldvalues in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ComponentFieldValuesId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="componentfieldvalues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class componentfieldvalues : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new componentfieldvalues object.
        /// </summary>
        /// <param name="v_ComponentFieldValuesId">Initial value of v_ComponentFieldValuesId.</param>
        public static componentfieldvalues Createcomponentfieldvalues(string v_ComponentFieldValuesId)
        {
            componentfieldvalues componentfieldvalues = new componentfieldvalues();
            componentfieldvalues.v_ComponentFieldValuesId = v_ComponentFieldValuesId;
            return componentfieldvalues;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ComponentFieldValuesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ComponentFieldValuesId
        {
            get
            {
                string value = _v_ComponentFieldValuesId;
                OnGetv_ComponentFieldValuesId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldValuesId != value)
                {
                  Onv_ComponentFieldValuesIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldValuesId");
                  _v_ComponentFieldValuesId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ComponentFieldValuesId");
                  Onv_ComponentFieldValuesIdChanged();
              }
            }
        }
        private string _v_ComponentFieldValuesId;
        partial void OnGetv_ComponentFieldValuesId(ref string value);
        partial void Onv_ComponentFieldValuesIdChanging(ref string value);
        partial void Onv_ComponentFieldValuesIdChanged();
    
        /// <summary>
        /// There are no comments for v_Diseases in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Diseases
        {
            get
            {
                string value = _v_Diseases;
                OnGetv_Diseases(ref value);
                return value;
            }
            set
            {
                if (_v_Diseases != value)
                {
                  Onv_DiseasesChanging(ref value);
                  ReportPropertyChanging("v_Diseases");
                  _v_Diseases = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Diseases");
                  Onv_DiseasesChanged();
              }
            }
        }
        private string _v_Diseases;
        partial void OnGetv_Diseases(ref string value);
        partial void Onv_DiseasesChanging(ref string value);
        partial void Onv_DiseasesChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentFieldId
        {
            get
            {
                string value = _v_ComponentFieldId;
                OnGetv_ComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldId != value)
                {
                  Onv_ComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldId");
                  _v_ComponentFieldId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentFieldId");
                  Onv_ComponentFieldIdChanged();
              }
            }
        }
        private string _v_ComponentFieldId;
        partial void OnGetv_ComponentFieldId(ref string value);
        partial void Onv_ComponentFieldIdChanging(ref string value);
        partial void Onv_ComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for v_AnalyzingValue1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AnalyzingValue1
        {
            get
            {
                string value = _v_AnalyzingValue1;
                OnGetv_AnalyzingValue1(ref value);
                return value;
            }
            set
            {
                if (_v_AnalyzingValue1 != value)
                {
                  Onv_AnalyzingValue1Changing(ref value);
                  ReportPropertyChanging("v_AnalyzingValue1");
                  _v_AnalyzingValue1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AnalyzingValue1");
                  Onv_AnalyzingValue1Changed();
              }
            }
        }
        private string _v_AnalyzingValue1;
        partial void OnGetv_AnalyzingValue1(ref string value);
        partial void Onv_AnalyzingValue1Changing(ref string value);
        partial void Onv_AnalyzingValue1Changed();
    
        /// <summary>
        /// There are no comments for v_AnalyzingValue2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AnalyzingValue2
        {
            get
            {
                string value = _v_AnalyzingValue2;
                OnGetv_AnalyzingValue2(ref value);
                return value;
            }
            set
            {
                if (_v_AnalyzingValue2 != value)
                {
                  Onv_AnalyzingValue2Changing(ref value);
                  ReportPropertyChanging("v_AnalyzingValue2");
                  _v_AnalyzingValue2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AnalyzingValue2");
                  Onv_AnalyzingValue2Changed();
              }
            }
        }
        private string _v_AnalyzingValue2;
        partial void OnGetv_AnalyzingValue2(ref string value);
        partial void Onv_AnalyzingValue2Changing(ref string value);
        partial void Onv_AnalyzingValue2Changed();
    
        /// <summary>
        /// There are no comments for i_OperatorId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_OperatorId
        {
            get
            {
                global::System.Nullable<int> value = _i_OperatorId;
                OnGeti_OperatorId(ref value);
                return value;
            }
            set
            {
                if (_i_OperatorId != value)
                {
                  Oni_OperatorIdChanging(ref value);
                  ReportPropertyChanging("i_OperatorId");
                  _i_OperatorId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_OperatorId");
                  Oni_OperatorIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_OperatorId;
        partial void OnGeti_OperatorId(ref global::System.Nullable<int> value);
        partial void Oni_OperatorIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_OperatorIdChanged();
    
        /// <summary>
        /// There are no comments for v_LegalStandard in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LegalStandard
        {
            get
            {
                string value = _v_LegalStandard;
                OnGetv_LegalStandard(ref value);
                return value;
            }
            set
            {
                if (_v_LegalStandard != value)
                {
                  Onv_LegalStandardChanging(ref value);
                  ReportPropertyChanging("v_LegalStandard");
                  _v_LegalStandard = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LegalStandard");
                  Onv_LegalStandardChanged();
              }
            }
        }
        private string _v_LegalStandard;
        partial void OnGetv_LegalStandard(ref string value);
        partial void Onv_LegalStandardChanging(ref string value);
        partial void Onv_LegalStandardChanged();
    
        /// <summary>
        /// There are no comments for i_IsAnormal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsAnormal
        {
            get
            {
                global::System.Nullable<int> value = _i_IsAnormal;
                OnGeti_IsAnormal(ref value);
                return value;
            }
            set
            {
                if (_i_IsAnormal != value)
                {
                  Oni_IsAnormalChanging(ref value);
                  ReportPropertyChanging("i_IsAnormal");
                  _i_IsAnormal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsAnormal");
                  Oni_IsAnormalChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsAnormal;
        partial void OnGeti_IsAnormal(ref global::System.Nullable<int> value);
        partial void Oni_IsAnormalChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsAnormalChanged();
    
        /// <summary>
        /// There are no comments for i_ValidationMonths in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ValidationMonths
        {
            get
            {
                global::System.Nullable<int> value = _i_ValidationMonths;
                OnGeti_ValidationMonths(ref value);
                return value;
            }
            set
            {
                if (_i_ValidationMonths != value)
                {
                  Oni_ValidationMonthsChanging(ref value);
                  ReportPropertyChanging("i_ValidationMonths");
                  _i_ValidationMonths = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ValidationMonths");
                  Oni_ValidationMonthsChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ValidationMonths;
        partial void OnGeti_ValidationMonths(ref global::System.Nullable<int> value);
        partial void Oni_ValidationMonthsChanging(ref global::System.Nullable<int> value);
        partial void Oni_ValidationMonthsChanged();
    
        /// <summary>
        /// There are no comments for i_GenderId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_GenderId
        {
            get
            {
                global::System.Nullable<int> value = _i_GenderId;
                OnGeti_GenderId(ref value);
                return value;
            }
            set
            {
                if (_i_GenderId != value)
                {
                  Oni_GenderIdChanging(ref value);
                  ReportPropertyChanging("i_GenderId");
                  _i_GenderId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_GenderId");
                  Oni_GenderIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_GenderId;
        partial void OnGeti_GenderId(ref global::System.Nullable<int> value);
        partial void Oni_GenderIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_GenderIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for diseases in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Diseases_ComponentFieldValues_v_Diseases", "diseases")]
        public diseases diseases
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_ComponentFieldValues_v_Diseases", "diseases").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_ComponentFieldValues_v_Diseases", "diseases").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for diseases in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<diseases> diseasesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_ComponentFieldValues_v_Diseases", "diseases");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_ComponentFieldValues_v_Diseases", "diseases", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_ComponentFieldValues_v_Diseases", "diseases").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for componentfieldvaluesrecommendation in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ComponentFieldValues_ComponentFieldVauesRecommendation_v_Com", "componentfieldvaluesrecommendation")]
        public EntityCollection<componentfieldvaluesrecommendation> componentfieldvaluesrecommendation
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<componentfieldvaluesrecommendation>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRecommendation_v_Com", "componentfieldvaluesrecommendation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<componentfieldvaluesrecommendation>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRecommendation_v_Com", "componentfieldvaluesrecommendation", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for componentfieldvaluesrestriction in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ComponentFieldValues_ComponentFieldVauesRestriction_v_Compon", "componentfieldvaluesrestriction")]
        public EntityCollection<componentfieldvaluesrestriction> componentfieldvaluesrestriction
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<componentfieldvaluesrestriction>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRestriction_v_Compon", "componentfieldvaluesrestriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<componentfieldvaluesrestriction>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRestriction_v_Compon", "componentfieldvaluesrestriction", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentfieldvalues in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ComponentFieldValues_ServiceComponentFieldValues_v_Component", "servicecomponentfieldvalues")]
        public EntityCollection<servicecomponentfieldvalues> servicecomponentfieldvalues
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicecomponentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFieldValues_ServiceComponentFieldValues_v_Component", "servicecomponentfieldvalues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicecomponentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFieldValues_ServiceComponentFieldValues_v_Component", "servicecomponentfieldvalues", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.componentfieldvaluesrecommendation in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ComponentFieldValuesRecommendationId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="componentfieldvaluesrecommendation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class componentfieldvaluesrecommendation : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new componentfieldvaluesrecommendation object.
        /// </summary>
        /// <param name="v_ComponentFieldValuesRecommendationId">Initial value of v_ComponentFieldValuesRecommendationId.</param>
        public static componentfieldvaluesrecommendation Createcomponentfieldvaluesrecommendation(string v_ComponentFieldValuesRecommendationId)
        {
            componentfieldvaluesrecommendation componentfieldvaluesrecommendation = new componentfieldvaluesrecommendation();
            componentfieldvaluesrecommendation.v_ComponentFieldValuesRecommendationId = v_ComponentFieldValuesRecommendationId;
            return componentfieldvaluesrecommendation;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ComponentFieldValuesRecommendationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ComponentFieldValuesRecommendationId
        {
            get
            {
                string value = _v_ComponentFieldValuesRecommendationId;
                OnGetv_ComponentFieldValuesRecommendationId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldValuesRecommendationId != value)
                {
                  Onv_ComponentFieldValuesRecommendationIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldValuesRecommendationId");
                  _v_ComponentFieldValuesRecommendationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ComponentFieldValuesRecommendationId");
                  Onv_ComponentFieldValuesRecommendationIdChanged();
              }
            }
        }
        private string _v_ComponentFieldValuesRecommendationId;
        partial void OnGetv_ComponentFieldValuesRecommendationId(ref string value);
        partial void Onv_ComponentFieldValuesRecommendationIdChanging(ref string value);
        partial void Onv_ComponentFieldValuesRecommendationIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentFieldValuesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentFieldValuesId
        {
            get
            {
                string value = _v_ComponentFieldValuesId;
                OnGetv_ComponentFieldValuesId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldValuesId != value)
                {
                  Onv_ComponentFieldValuesIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldValuesId");
                  _v_ComponentFieldValuesId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentFieldValuesId");
                  Onv_ComponentFieldValuesIdChanged();
              }
            }
        }
        private string _v_ComponentFieldValuesId;
        partial void OnGetv_ComponentFieldValuesId(ref string value);
        partial void Onv_ComponentFieldValuesIdChanging(ref string value);
        partial void Onv_ComponentFieldValuesIdChanged();
    
        /// <summary>
        /// There are no comments for v_MasterRecommendationRestricctionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_MasterRecommendationRestricctionId
        {
            get
            {
                string value = _v_MasterRecommendationRestricctionId;
                OnGetv_MasterRecommendationRestricctionId(ref value);
                return value;
            }
            set
            {
                if (_v_MasterRecommendationRestricctionId != value)
                {
                  Onv_MasterRecommendationRestricctionIdChanging(ref value);
                  ReportPropertyChanging("v_MasterRecommendationRestricctionId");
                  _v_MasterRecommendationRestricctionId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_MasterRecommendationRestricctionId");
                  Onv_MasterRecommendationRestricctionIdChanged();
              }
            }
        }
        private string _v_MasterRecommendationRestricctionId;
        partial void OnGetv_MasterRecommendationRestricctionId(ref string value);
        partial void Onv_MasterRecommendationRestricctionIdChanging(ref string value);
        partial void Onv_MasterRecommendationRestricctionIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for componentfieldvalues in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ComponentFieldValues_ComponentFieldVauesRecommendation_v_Com", "componentfieldvalues")]
        public componentfieldvalues componentfieldvalues
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRecommendation_v_Com", "componentfieldvalues").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRecommendation_v_Com", "componentfieldvalues").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for componentfieldvalues in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<componentfieldvalues> componentfieldvaluesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRecommendation_v_Com", "componentfieldvalues");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRecommendation_v_Com", "componentfieldvalues", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRecommendation_v_Com", "componentfieldvalues").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for masterrecommendationrestricction in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_MasterRecommendationRestricction_ComponentFieldValuesRecomme", "masterrecommendationrestricction")]
        public masterrecommendationrestricction masterrecommendationrestricction
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<masterrecommendationrestricction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRecomme", "masterrecommendationrestricction").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<masterrecommendationrestricction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRecomme", "masterrecommendationrestricction").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for masterrecommendationrestricction in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<masterrecommendationrestricction> masterrecommendationrestricctionReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<masterrecommendationrestricction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRecomme", "masterrecommendationrestricction");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<masterrecommendationrestricction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRecomme", "masterrecommendationrestricction", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<masterrecommendationrestricction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRecomme", "masterrecommendationrestricction").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.componentfieldvaluesrestriction in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ComponentFieldValuesRestrictionId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="componentfieldvaluesrestriction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class componentfieldvaluesrestriction : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new componentfieldvaluesrestriction object.
        /// </summary>
        /// <param name="v_ComponentFieldValuesRestrictionId">Initial value of v_ComponentFieldValuesRestrictionId.</param>
        public static componentfieldvaluesrestriction Createcomponentfieldvaluesrestriction(string v_ComponentFieldValuesRestrictionId)
        {
            componentfieldvaluesrestriction componentfieldvaluesrestriction = new componentfieldvaluesrestriction();
            componentfieldvaluesrestriction.v_ComponentFieldValuesRestrictionId = v_ComponentFieldValuesRestrictionId;
            return componentfieldvaluesrestriction;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ComponentFieldValuesRestrictionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ComponentFieldValuesRestrictionId
        {
            get
            {
                string value = _v_ComponentFieldValuesRestrictionId;
                OnGetv_ComponentFieldValuesRestrictionId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldValuesRestrictionId != value)
                {
                  Onv_ComponentFieldValuesRestrictionIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldValuesRestrictionId");
                  _v_ComponentFieldValuesRestrictionId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ComponentFieldValuesRestrictionId");
                  Onv_ComponentFieldValuesRestrictionIdChanged();
              }
            }
        }
        private string _v_ComponentFieldValuesRestrictionId;
        partial void OnGetv_ComponentFieldValuesRestrictionId(ref string value);
        partial void Onv_ComponentFieldValuesRestrictionIdChanging(ref string value);
        partial void Onv_ComponentFieldValuesRestrictionIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentFieldValuesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentFieldValuesId
        {
            get
            {
                string value = _v_ComponentFieldValuesId;
                OnGetv_ComponentFieldValuesId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldValuesId != value)
                {
                  Onv_ComponentFieldValuesIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldValuesId");
                  _v_ComponentFieldValuesId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentFieldValuesId");
                  Onv_ComponentFieldValuesIdChanged();
              }
            }
        }
        private string _v_ComponentFieldValuesId;
        partial void OnGetv_ComponentFieldValuesId(ref string value);
        partial void Onv_ComponentFieldValuesIdChanging(ref string value);
        partial void Onv_ComponentFieldValuesIdChanged();
    
        /// <summary>
        /// There are no comments for v_MasterRecommendationRestricctionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_MasterRecommendationRestricctionId
        {
            get
            {
                string value = _v_MasterRecommendationRestricctionId;
                OnGetv_MasterRecommendationRestricctionId(ref value);
                return value;
            }
            set
            {
                if (_v_MasterRecommendationRestricctionId != value)
                {
                  Onv_MasterRecommendationRestricctionIdChanging(ref value);
                  ReportPropertyChanging("v_MasterRecommendationRestricctionId");
                  _v_MasterRecommendationRestricctionId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_MasterRecommendationRestricctionId");
                  Onv_MasterRecommendationRestricctionIdChanged();
              }
            }
        }
        private string _v_MasterRecommendationRestricctionId;
        partial void OnGetv_MasterRecommendationRestricctionId(ref string value);
        partial void Onv_MasterRecommendationRestricctionIdChanging(ref string value);
        partial void Onv_MasterRecommendationRestricctionIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for componentfieldvalues in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ComponentFieldValues_ComponentFieldVauesRestriction_v_Compon", "componentfieldvalues")]
        public componentfieldvalues componentfieldvalues
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRestriction_v_Compon", "componentfieldvalues").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRestriction_v_Compon", "componentfieldvalues").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for componentfieldvalues in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<componentfieldvalues> componentfieldvaluesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRestriction_v_Compon", "componentfieldvalues");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRestriction_v_Compon", "componentfieldvalues", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_ComponentFieldValues_ComponentFieldVauesRestriction_v_Compon", "componentfieldvalues").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for masterrecommendationrestricction in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_MasterRecommendationRestricction_ComponentFieldValuesRestric", "masterrecommendationrestricction")]
        public masterrecommendationrestricction masterrecommendationrestricction
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<masterrecommendationrestricction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRestric", "masterrecommendationrestricction").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<masterrecommendationrestricction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRestric", "masterrecommendationrestricction").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for masterrecommendationrestricction in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<masterrecommendationrestricction> masterrecommendationrestricctionReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<masterrecommendationrestricction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRestric", "masterrecommendationrestricction");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<masterrecommendationrestricction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRestric", "masterrecommendationrestricction", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<masterrecommendationrestricction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRestric", "masterrecommendationrestricction").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.covid in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_CovidId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="covid")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class covid : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new covid object.
        /// </summary>
        /// <param name="v_CovidId">Initial value of v_CovidId.</param>
        public static covid Createcovid(string v_CovidId)
        {
            covid covid = new covid();
            covid.v_CovidId = v_CovidId;
            return covid;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_CovidId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_CovidId
        {
            get
            {
                string value = _v_CovidId;
                OnGetv_CovidId(ref value);
                return value;
            }
            set
            {
                if (_v_CovidId != value)
                {
                  Onv_CovidIdChanging(ref value);
                  ReportPropertyChanging("v_CovidId");
                  _v_CovidId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_CovidId");
                  Onv_CovidIdChanged();
              }
            }
        }
        private string _v_CovidId;
        partial void OnGetv_CovidId(ref string value);
        partial void Onv_CovidIdChanging(ref string value);
        partial void Onv_CovidIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for i_Triaje in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Triaje
        {
            get
            {
                global::System.Nullable<int> value = _i_Triaje;
                OnGeti_Triaje(ref value);
                return value;
            }
            set
            {
                if (_i_Triaje != value)
                {
                  Oni_TriajeChanging(ref value);
                  ReportPropertyChanging("i_Triaje");
                  _i_Triaje = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Triaje");
                  Oni_TriajeChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Triaje;
        partial void OnGeti_Triaje(ref global::System.Nullable<int> value);
        partial void Oni_TriajeChanging(ref global::System.Nullable<int> value);
        partial void Oni_TriajeChanged();
    
        /// <summary>
        /// There are no comments for i_Encuesta in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Encuesta
        {
            get
            {
                global::System.Nullable<int> value = _i_Encuesta;
                OnGeti_Encuesta(ref value);
                return value;
            }
            set
            {
                if (_i_Encuesta != value)
                {
                  Oni_EncuestaChanging(ref value);
                  ReportPropertyChanging("i_Encuesta");
                  _i_Encuesta = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Encuesta");
                  Oni_EncuestaChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Encuesta;
        partial void OnGeti_Encuesta(ref global::System.Nullable<int> value);
        partial void Oni_EncuestaChanging(ref global::System.Nullable<int> value);
        partial void Oni_EncuestaChanged();
    
        /// <summary>
        /// There are no comments for i_Laboratorio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Laboratorio
        {
            get
            {
                global::System.Nullable<int> value = _i_Laboratorio;
                OnGeti_Laboratorio(ref value);
                return value;
            }
            set
            {
                if (_i_Laboratorio != value)
                {
                  Oni_LaboratorioChanging(ref value);
                  ReportPropertyChanging("i_Laboratorio");
                  _i_Laboratorio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Laboratorio");
                  Oni_LaboratorioChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Laboratorio;
        partial void OnGeti_Laboratorio(ref global::System.Nullable<int> value);
        partial void Oni_LaboratorioChanging(ref global::System.Nullable<int> value);
        partial void Oni_LaboratorioChanged();
    
        /// <summary>
        /// There are no comments for i_Certificado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Certificado
        {
            get
            {
                global::System.Nullable<int> value = _i_Certificado;
                OnGeti_Certificado(ref value);
                return value;
            }
            set
            {
                if (_i_Certificado != value)
                {
                  Oni_CertificadoChanging(ref value);
                  ReportPropertyChanging("i_Certificado");
                  _i_Certificado = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Certificado");
                  Oni_CertificadoChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Certificado;
        partial void OnGeti_Certificado(ref global::System.Nullable<int> value);
        partial void Oni_CertificadoChanging(ref global::System.Nullable<int> value);
        partial void Oni_CertificadoChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.datahierarchy in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_GroupId
    /// i_ItemId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="datahierarchy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class datahierarchy : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new datahierarchy object.
        /// </summary>
        /// <param name="i_GroupId">Initial value of i_GroupId.</param>
        /// <param name="i_ItemId">Initial value of i_ItemId.</param>
        public static datahierarchy Createdatahierarchy(int i_GroupId, int i_ItemId)
        {
            datahierarchy datahierarchy = new datahierarchy();
            datahierarchy.i_GroupId = i_GroupId;
            datahierarchy.i_ItemId = i_ItemId;
            return datahierarchy;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_GroupId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_GroupId
        {
            get
            {
                int value = _i_GroupId;
                OnGeti_GroupId(ref value);
                return value;
            }
            set
            {
                if (_i_GroupId != value)
                {
                  Oni_GroupIdChanging(ref value);
                  ReportPropertyChanging("i_GroupId");
                  _i_GroupId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_GroupId");
                  Oni_GroupIdChanged();
              }
            }
        }
        private int _i_GroupId;
        partial void OnGeti_GroupId(ref int value);
        partial void Oni_GroupIdChanging(ref int value);
        partial void Oni_GroupIdChanged();
    
        /// <summary>
        /// There are no comments for i_ItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_ItemId
        {
            get
            {
                int value = _i_ItemId;
                OnGeti_ItemId(ref value);
                return value;
            }
            set
            {
                if (_i_ItemId != value)
                {
                  Oni_ItemIdChanging(ref value);
                  ReportPropertyChanging("i_ItemId");
                  _i_ItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ItemId");
                  Oni_ItemIdChanged();
              }
            }
        }
        private int _i_ItemId;
        partial void OnGeti_ItemId(ref int value);
        partial void Oni_ItemIdChanging(ref int value);
        partial void Oni_ItemIdChanged();
    
        /// <summary>
        /// There are no comments for v_Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value1
        {
            get
            {
                string value = _v_Value1;
                OnGetv_Value1(ref value);
                return value;
            }
            set
            {
                if (_v_Value1 != value)
                {
                  Onv_Value1Changing(ref value);
                  ReportPropertyChanging("v_Value1");
                  _v_Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value1");
                  Onv_Value1Changed();
              }
            }
        }
        private string _v_Value1;
        partial void OnGetv_Value1(ref string value);
        partial void Onv_Value1Changing(ref string value);
        partial void Onv_Value1Changed();
    
        /// <summary>
        /// There are no comments for v_Value2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value2
        {
            get
            {
                string value = _v_Value2;
                OnGetv_Value2(ref value);
                return value;
            }
            set
            {
                if (_v_Value2 != value)
                {
                  Onv_Value2Changing(ref value);
                  ReportPropertyChanging("v_Value2");
                  _v_Value2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value2");
                  Onv_Value2Changed();
              }
            }
        }
        private string _v_Value2;
        partial void OnGetv_Value2(ref string value);
        partial void Onv_Value2Changing(ref string value);
        partial void Onv_Value2Changed();
    
        /// <summary>
        /// There are no comments for v_Field in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Field
        {
            get
            {
                string value = _v_Field;
                OnGetv_Field(ref value);
                return value;
            }
            set
            {
                if (_v_Field != value)
                {
                  Onv_FieldChanging(ref value);
                  ReportPropertyChanging("v_Field");
                  _v_Field = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Field");
                  Onv_FieldChanged();
              }
            }
        }
        private string _v_Field;
        partial void OnGetv_Field(ref string value);
        partial void Onv_FieldChanging(ref string value);
        partial void Onv_FieldChanged();
    
        /// <summary>
        /// There are no comments for i_ParentItemId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ParentItemId
        {
            get
            {
                global::System.Nullable<int> value = _i_ParentItemId;
                OnGeti_ParentItemId(ref value);
                return value;
            }
            set
            {
                if (_i_ParentItemId != value)
                {
                  Oni_ParentItemIdChanging(ref value);
                  ReportPropertyChanging("i_ParentItemId");
                  _i_ParentItemId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ParentItemId");
                  Oni_ParentItemIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ParentItemId;
        partial void OnGeti_ParentItemId(ref global::System.Nullable<int> value);
        partial void Oni_ParentItemIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ParentItemIdChanged();
    
        /// <summary>
        /// There are no comments for i_Sort in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Sort
        {
            get
            {
                global::System.Nullable<int> value = _i_Sort;
                OnGeti_Sort(ref value);
                return value;
            }
            set
            {
                if (_i_Sort != value)
                {
                  Oni_SortChanging(ref value);
                  ReportPropertyChanging("i_Sort");
                  _i_Sort = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Sort");
                  Oni_SortChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Sort;
        partial void OnGeti_Sort(ref global::System.Nullable<int> value);
        partial void Oni_SortChanging(ref global::System.Nullable<int> value);
        partial void Oni_SortChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.deploymentfile in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_DeploymentFileId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="deploymentfile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class deploymentfile : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new deploymentfile object.
        /// </summary>
        /// <param name="i_DeploymentFileId">Initial value of i_DeploymentFileId.</param>
        public static deploymentfile Createdeploymentfile(int i_DeploymentFileId)
        {
            deploymentfile deploymentfile = new deploymentfile();
            deploymentfile.i_DeploymentFileId = i_DeploymentFileId;
            return deploymentfile;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_DeploymentFileId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_DeploymentFileId
        {
            get
            {
                int value = _i_DeploymentFileId;
                OnGeti_DeploymentFileId(ref value);
                return value;
            }
            set
            {
                if (_i_DeploymentFileId != value)
                {
                  Oni_DeploymentFileIdChanging(ref value);
                  ReportPropertyChanging("i_DeploymentFileId");
                  _i_DeploymentFileId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DeploymentFileId");
                  Oni_DeploymentFileIdChanged();
              }
            }
        }
        private int _i_DeploymentFileId;
        partial void OnGeti_DeploymentFileId(ref int value);
        partial void Oni_DeploymentFileIdChanging(ref int value);
        partial void Oni_DeploymentFileIdChanged();
    
        /// <summary>
        /// There are no comments for v_FileName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FileName
        {
            get
            {
                string value = _v_FileName;
                OnGetv_FileName(ref value);
                return value;
            }
            set
            {
                if (_v_FileName != value)
                {
                  Onv_FileNameChanging(ref value);
                  ReportPropertyChanging("v_FileName");
                  _v_FileName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FileName");
                  Onv_FileNameChanged();
              }
            }
        }
        private string _v_FileName;
        partial void OnGetv_FileName(ref string value);
        partial void Onv_FileNameChanging(ref string value);
        partial void Onv_FileNameChanged();
    
        /// <summary>
        /// There are no comments for b_FileData in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_FileData
        {
            get
            {
                byte[] value = _b_FileData;
                OnGetb_FileData(ref value);
                return value;
            }
            set
            {
                if (_b_FileData != value)
                {
                  Onb_FileDataChanging(ref value);
                  ReportPropertyChanging("b_FileData");
                  _b_FileData = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_FileData");
                  Onb_FileDataChanged();
              }
            }
        }
        private byte[] _b_FileData;
        partial void OnGetb_FileData(ref byte[] value);
        partial void Onb_FileDataChanging(ref byte[] value);
        partial void Onb_FileDataChanged();
    
        /// <summary>
        /// There are no comments for v_Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Description
        {
            get
            {
                string value = _v_Description;
                OnGetv_Description(ref value);
                return value;
            }
            set
            {
                if (_v_Description != value)
                {
                  Onv_DescriptionChanging(ref value);
                  ReportPropertyChanging("v_Description");
                  _v_Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Description");
                  Onv_DescriptionChanged();
              }
            }
        }
        private string _v_Description;
        partial void OnGetv_Description(ref string value);
        partial void Onv_DescriptionChanging(ref string value);
        partial void Onv_DescriptionChanged();
    
        /// <summary>
        /// There are no comments for i_SoftwareComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SoftwareComponentId
        {
            get
            {
                global::System.Nullable<int> value = _i_SoftwareComponentId;
                OnGeti_SoftwareComponentId(ref value);
                return value;
            }
            set
            {
                if (_i_SoftwareComponentId != value)
                {
                  Oni_SoftwareComponentIdChanging(ref value);
                  ReportPropertyChanging("i_SoftwareComponentId");
                  _i_SoftwareComponentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SoftwareComponentId");
                  Oni_SoftwareComponentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SoftwareComponentId;
        partial void OnGeti_SoftwareComponentId(ref global::System.Nullable<int> value);
        partial void Oni_SoftwareComponentIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SoftwareComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_TargetSoftwareComponentVersion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_TargetSoftwareComponentVersion
        {
            get
            {
                string value = _v_TargetSoftwareComponentVersion;
                OnGetv_TargetSoftwareComponentVersion(ref value);
                return value;
            }
            set
            {
                if (_v_TargetSoftwareComponentVersion != value)
                {
                  Onv_TargetSoftwareComponentVersionChanging(ref value);
                  ReportPropertyChanging("v_TargetSoftwareComponentVersion");
                  _v_TargetSoftwareComponentVersion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_TargetSoftwareComponentVersion");
                  Onv_TargetSoftwareComponentVersionChanged();
              }
            }
        }
        private string _v_TargetSoftwareComponentVersion;
        partial void OnGetv_TargetSoftwareComponentVersion(ref string value);
        partial void Onv_TargetSoftwareComponentVersionChanging(ref string value);
        partial void Onv_TargetSoftwareComponentVersionChanged();
    
        /// <summary>
        /// There are no comments for v_PackageFiles in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PackageFiles
        {
            get
            {
                string value = _v_PackageFiles;
                OnGetv_PackageFiles(ref value);
                return value;
            }
            set
            {
                if (_v_PackageFiles != value)
                {
                  Onv_PackageFilesChanging(ref value);
                  ReportPropertyChanging("v_PackageFiles");
                  _v_PackageFiles = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PackageFiles");
                  Onv_PackageFilesChanged();
              }
            }
        }
        private string _v_PackageFiles;
        partial void OnGetv_PackageFiles(ref string value);
        partial void Onv_PackageFilesChanging(ref string value);
        partial void Onv_PackageFilesChanged();
    
        /// <summary>
        /// There are no comments for r_PackageSizeKb in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_PackageSizeKb
        {
            get
            {
                global::System.Nullable<float> value = _r_PackageSizeKb;
                OnGetr_PackageSizeKb(ref value);
                return value;
            }
            set
            {
                if (_r_PackageSizeKb != value)
                {
                  Onr_PackageSizeKbChanging(ref value);
                  ReportPropertyChanging("r_PackageSizeKb");
                  _r_PackageSizeKb = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_PackageSizeKb");
                  Onr_PackageSizeKbChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_PackageSizeKb;
        partial void OnGetr_PackageSizeKb(ref global::System.Nullable<float> value);
        partial void Onr_PackageSizeKbChanging(ref global::System.Nullable<float> value);
        partial void Onr_PackageSizeKbChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for softwarecomponentrelease in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DeplymentFile_SoftwareComponentRelease_i_DeploymentFileId", "softwarecomponentrelease")]
        public EntityCollection<softwarecomponentrelease> softwarecomponentrelease
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<softwarecomponentrelease>("Sigesoft.Node.WinClient.DAL.Fk_DeplymentFile_SoftwareComponentRelease_i_DeploymentFileId", "softwarecomponentrelease");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<softwarecomponentrelease>("Sigesoft.Node.WinClient.DAL.Fk_DeplymentFile_SoftwareComponentRelease_i_DeploymentFileId", "softwarecomponentrelease", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.diagnosticrepository in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_DiagnosticRepositoryId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="diagnosticrepository")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class diagnosticrepository : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new diagnosticrepository object.
        /// </summary>
        /// <param name="v_DiagnosticRepositoryId">Initial value of v_DiagnosticRepositoryId.</param>
        public static diagnosticrepository Creatediagnosticrepository(string v_DiagnosticRepositoryId)
        {
            diagnosticrepository diagnosticrepository = new diagnosticrepository();
            diagnosticrepository.v_DiagnosticRepositoryId = v_DiagnosticRepositoryId;
            return diagnosticrepository;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_DiagnosticRepositoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_DiagnosticRepositoryId
        {
            get
            {
                string value = _v_DiagnosticRepositoryId;
                OnGetv_DiagnosticRepositoryId(ref value);
                return value;
            }
            set
            {
                if (_v_DiagnosticRepositoryId != value)
                {
                  Onv_DiagnosticRepositoryIdChanging(ref value);
                  ReportPropertyChanging("v_DiagnosticRepositoryId");
                  _v_DiagnosticRepositoryId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_DiagnosticRepositoryId");
                  Onv_DiagnosticRepositoryIdChanged();
              }
            }
        }
        private string _v_DiagnosticRepositoryId;
        partial void OnGetv_DiagnosticRepositoryId(ref string value);
        partial void Onv_DiagnosticRepositoryIdChanging(ref string value);
        partial void Onv_DiagnosticRepositoryIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_DiseasesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DiseasesId
        {
            get
            {
                string value = _v_DiseasesId;
                OnGetv_DiseasesId(ref value);
                return value;
            }
            set
            {
                if (_v_DiseasesId != value)
                {
                  Onv_DiseasesIdChanging(ref value);
                  ReportPropertyChanging("v_DiseasesId");
                  _v_DiseasesId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DiseasesId");
                  Onv_DiseasesIdChanged();
              }
            }
        }
        private string _v_DiseasesId;
        partial void OnGetv_DiseasesId(ref string value);
        partial void Onv_DiseasesIdChanging(ref string value);
        partial void Onv_DiseasesIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentFieldId
        {
            get
            {
                string value = _v_ComponentFieldId;
                OnGetv_ComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldId != value)
                {
                  Onv_ComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldId");
                  _v_ComponentFieldId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentFieldId");
                  Onv_ComponentFieldIdChanged();
              }
            }
        }
        private string _v_ComponentFieldId;
        partial void OnGetv_ComponentFieldId(ref string value);
        partial void Onv_ComponentFieldIdChanging(ref string value);
        partial void Onv_ComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for i_AutoManualId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_AutoManualId
        {
            get
            {
                global::System.Nullable<int> value = _i_AutoManualId;
                OnGeti_AutoManualId(ref value);
                return value;
            }
            set
            {
                if (_i_AutoManualId != value)
                {
                  Oni_AutoManualIdChanging(ref value);
                  ReportPropertyChanging("i_AutoManualId");
                  _i_AutoManualId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_AutoManualId");
                  Oni_AutoManualIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_AutoManualId;
        partial void OnGeti_AutoManualId(ref global::System.Nullable<int> value);
        partial void Oni_AutoManualIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_AutoManualIdChanged();
    
        /// <summary>
        /// There are no comments for i_PreQualificationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_PreQualificationId
        {
            get
            {
                global::System.Nullable<int> value = _i_PreQualificationId;
                OnGeti_PreQualificationId(ref value);
                return value;
            }
            set
            {
                if (_i_PreQualificationId != value)
                {
                  Oni_PreQualificationIdChanging(ref value);
                  ReportPropertyChanging("i_PreQualificationId");
                  _i_PreQualificationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_PreQualificationId");
                  Oni_PreQualificationIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_PreQualificationId;
        partial void OnGeti_PreQualificationId(ref global::System.Nullable<int> value);
        partial void Oni_PreQualificationIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_PreQualificationIdChanged();
    
        /// <summary>
        /// There are no comments for i_FinalQualificationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_FinalQualificationId
        {
            get
            {
                global::System.Nullable<int> value = _i_FinalQualificationId;
                OnGeti_FinalQualificationId(ref value);
                return value;
            }
            set
            {
                if (_i_FinalQualificationId != value)
                {
                  Oni_FinalQualificationIdChanging(ref value);
                  ReportPropertyChanging("i_FinalQualificationId");
                  _i_FinalQualificationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_FinalQualificationId");
                  Oni_FinalQualificationIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_FinalQualificationId;
        partial void OnGeti_FinalQualificationId(ref global::System.Nullable<int> value);
        partial void Oni_FinalQualificationIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_FinalQualificationIdChanged();
    
        /// <summary>
        /// There are no comments for i_DiagnosticTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DiagnosticTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_DiagnosticTypeId;
                OnGeti_DiagnosticTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_DiagnosticTypeId != value)
                {
                  Oni_DiagnosticTypeIdChanging(ref value);
                  ReportPropertyChanging("i_DiagnosticTypeId");
                  _i_DiagnosticTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DiagnosticTypeId");
                  Oni_DiagnosticTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DiagnosticTypeId;
        partial void OnGeti_DiagnosticTypeId(ref global::System.Nullable<int> value);
        partial void Oni_DiagnosticTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DiagnosticTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsSentToAntecedent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsSentToAntecedent
        {
            get
            {
                global::System.Nullable<int> value = _i_IsSentToAntecedent;
                OnGeti_IsSentToAntecedent(ref value);
                return value;
            }
            set
            {
                if (_i_IsSentToAntecedent != value)
                {
                  Oni_IsSentToAntecedentChanging(ref value);
                  ReportPropertyChanging("i_IsSentToAntecedent");
                  _i_IsSentToAntecedent = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsSentToAntecedent");
                  Oni_IsSentToAntecedentChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsSentToAntecedent;
        partial void OnGeti_IsSentToAntecedent(ref global::System.Nullable<int> value);
        partial void Oni_IsSentToAntecedentChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsSentToAntecedentChanged();
    
        /// <summary>
        /// There are no comments for d_ExpirationDateDiagnostic in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ExpirationDateDiagnostic
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ExpirationDateDiagnostic;
                OnGetd_ExpirationDateDiagnostic(ref value);
                return value;
            }
            set
            {
                if (_d_ExpirationDateDiagnostic != value)
                {
                  Ond_ExpirationDateDiagnosticChanging(ref value);
                  ReportPropertyChanging("d_ExpirationDateDiagnostic");
                  _d_ExpirationDateDiagnostic = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ExpirationDateDiagnostic");
                  Ond_ExpirationDateDiagnosticChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ExpirationDateDiagnostic;
        partial void OnGetd_ExpirationDateDiagnostic(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ExpirationDateDiagnosticChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ExpirationDateDiagnosticChanged();
    
        /// <summary>
        /// There are no comments for i_GenerateMedicalBreak in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_GenerateMedicalBreak
        {
            get
            {
                global::System.Nullable<int> value = _i_GenerateMedicalBreak;
                OnGeti_GenerateMedicalBreak(ref value);
                return value;
            }
            set
            {
                if (_i_GenerateMedicalBreak != value)
                {
                  Oni_GenerateMedicalBreakChanging(ref value);
                  ReportPropertyChanging("i_GenerateMedicalBreak");
                  _i_GenerateMedicalBreak = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_GenerateMedicalBreak");
                  Oni_GenerateMedicalBreakChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_GenerateMedicalBreak;
        partial void OnGeti_GenerateMedicalBreak(ref global::System.Nullable<int> value);
        partial void Oni_GenerateMedicalBreakChanging(ref global::System.Nullable<int> value);
        partial void Oni_GenerateMedicalBreakChanged();
    
        /// <summary>
        /// There are no comments for v_Recomendations in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Recomendations
        {
            get
            {
                string value = _v_Recomendations;
                OnGetv_Recomendations(ref value);
                return value;
            }
            set
            {
                if (_v_Recomendations != value)
                {
                  Onv_RecomendationsChanging(ref value);
                  ReportPropertyChanging("v_Recomendations");
                  _v_Recomendations = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Recomendations");
                  Onv_RecomendationsChanged();
              }
            }
        }
        private string _v_Recomendations;
        partial void OnGetv_Recomendations(ref string value);
        partial void Onv_RecomendationsChanging(ref string value);
        partial void Onv_RecomendationsChanged();
    
        /// <summary>
        /// There are no comments for i_DiagnosticSourceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DiagnosticSourceId
        {
            get
            {
                global::System.Nullable<int> value = _i_DiagnosticSourceId;
                OnGeti_DiagnosticSourceId(ref value);
                return value;
            }
            set
            {
                if (_i_DiagnosticSourceId != value)
                {
                  Oni_DiagnosticSourceIdChanging(ref value);
                  ReportPropertyChanging("i_DiagnosticSourceId");
                  _i_DiagnosticSourceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DiagnosticSourceId");
                  Oni_DiagnosticSourceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DiagnosticSourceId;
        partial void OnGeti_DiagnosticSourceId(ref global::System.Nullable<int> value);
        partial void Oni_DiagnosticSourceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DiagnosticSourceIdChanged();
    
        /// <summary>
        /// There are no comments for i_ShapeAccidentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ShapeAccidentId
        {
            get
            {
                global::System.Nullable<int> value = _i_ShapeAccidentId;
                OnGeti_ShapeAccidentId(ref value);
                return value;
            }
            set
            {
                if (_i_ShapeAccidentId != value)
                {
                  Oni_ShapeAccidentIdChanging(ref value);
                  ReportPropertyChanging("i_ShapeAccidentId");
                  _i_ShapeAccidentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ShapeAccidentId");
                  Oni_ShapeAccidentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ShapeAccidentId;
        partial void OnGeti_ShapeAccidentId(ref global::System.Nullable<int> value);
        partial void Oni_ShapeAccidentIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ShapeAccidentIdChanged();
    
        /// <summary>
        /// There are no comments for i_BodyPartId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_BodyPartId
        {
            get
            {
                global::System.Nullable<int> value = _i_BodyPartId;
                OnGeti_BodyPartId(ref value);
                return value;
            }
            set
            {
                if (_i_BodyPartId != value)
                {
                  Oni_BodyPartIdChanging(ref value);
                  ReportPropertyChanging("i_BodyPartId");
                  _i_BodyPartId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_BodyPartId");
                  Oni_BodyPartIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_BodyPartId;
        partial void OnGeti_BodyPartId(ref global::System.Nullable<int> value);
        partial void Oni_BodyPartIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_BodyPartIdChanged();
    
        /// <summary>
        /// There are no comments for i_ClassificationOfWorkAccidentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ClassificationOfWorkAccidentId
        {
            get
            {
                global::System.Nullable<int> value = _i_ClassificationOfWorkAccidentId;
                OnGeti_ClassificationOfWorkAccidentId(ref value);
                return value;
            }
            set
            {
                if (_i_ClassificationOfWorkAccidentId != value)
                {
                  Oni_ClassificationOfWorkAccidentIdChanging(ref value);
                  ReportPropertyChanging("i_ClassificationOfWorkAccidentId");
                  _i_ClassificationOfWorkAccidentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ClassificationOfWorkAccidentId");
                  Oni_ClassificationOfWorkAccidentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ClassificationOfWorkAccidentId;
        partial void OnGeti_ClassificationOfWorkAccidentId(ref global::System.Nullable<int> value);
        partial void Oni_ClassificationOfWorkAccidentIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ClassificationOfWorkAccidentIdChanged();
    
        /// <summary>
        /// There are no comments for i_RiskFactorId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_RiskFactorId
        {
            get
            {
                global::System.Nullable<int> value = _i_RiskFactorId;
                OnGeti_RiskFactorId(ref value);
                return value;
            }
            set
            {
                if (_i_RiskFactorId != value)
                {
                  Oni_RiskFactorIdChanging(ref value);
                  ReportPropertyChanging("i_RiskFactorId");
                  _i_RiskFactorId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_RiskFactorId");
                  Oni_RiskFactorIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_RiskFactorId;
        partial void OnGeti_RiskFactorId(ref global::System.Nullable<int> value);
        partial void Oni_RiskFactorIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_RiskFactorIdChanged();
    
        /// <summary>
        /// There are no comments for i_ClassificationOfWorkdiseaseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ClassificationOfWorkdiseaseId
        {
            get
            {
                global::System.Nullable<int> value = _i_ClassificationOfWorkdiseaseId;
                OnGeti_ClassificationOfWorkdiseaseId(ref value);
                return value;
            }
            set
            {
                if (_i_ClassificationOfWorkdiseaseId != value)
                {
                  Oni_ClassificationOfWorkdiseaseIdChanging(ref value);
                  ReportPropertyChanging("i_ClassificationOfWorkdiseaseId");
                  _i_ClassificationOfWorkdiseaseId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ClassificationOfWorkdiseaseId");
                  Oni_ClassificationOfWorkdiseaseIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ClassificationOfWorkdiseaseId;
        partial void OnGeti_ClassificationOfWorkdiseaseId(ref global::System.Nullable<int> value);
        partial void Oni_ClassificationOfWorkdiseaseIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ClassificationOfWorkdiseaseIdChanged();
    
        /// <summary>
        /// There are no comments for i_SendToInterconsultationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SendToInterconsultationId
        {
            get
            {
                global::System.Nullable<int> value = _i_SendToInterconsultationId;
                OnGeti_SendToInterconsultationId(ref value);
                return value;
            }
            set
            {
                if (_i_SendToInterconsultationId != value)
                {
                  Oni_SendToInterconsultationIdChanging(ref value);
                  ReportPropertyChanging("i_SendToInterconsultationId");
                  _i_SendToInterconsultationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SendToInterconsultationId");
                  Oni_SendToInterconsultationIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SendToInterconsultationId;
        partial void OnGeti_SendToInterconsultationId(ref global::System.Nullable<int> value);
        partial void Oni_SendToInterconsultationIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SendToInterconsultationIdChanged();
    
        /// <summary>
        /// There are no comments for i_InterconsultationDestinationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InterconsultationDestinationId
        {
            get
            {
                global::System.Nullable<int> value = _i_InterconsultationDestinationId;
                OnGeti_InterconsultationDestinationId(ref value);
                return value;
            }
            set
            {
                if (_i_InterconsultationDestinationId != value)
                {
                  Oni_InterconsultationDestinationIdChanging(ref value);
                  ReportPropertyChanging("i_InterconsultationDestinationId");
                  _i_InterconsultationDestinationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InterconsultationDestinationId");
                  Oni_InterconsultationDestinationIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InterconsultationDestinationId;
        partial void OnGeti_InterconsultationDestinationId(ref global::System.Nullable<int> value);
        partial void Oni_InterconsultationDestinationIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InterconsultationDestinationIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for v_InterconsultationDestinationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_InterconsultationDestinationId
        {
            get
            {
                string value = _v_InterconsultationDestinationId;
                OnGetv_InterconsultationDestinationId(ref value);
                return value;
            }
            set
            {
                if (_v_InterconsultationDestinationId != value)
                {
                  Onv_InterconsultationDestinationIdChanging(ref value);
                  ReportPropertyChanging("v_InterconsultationDestinationId");
                  _v_InterconsultationDestinationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_InterconsultationDestinationId");
                  Onv_InterconsultationDestinationIdChanged();
              }
            }
        }
        private string _v_InterconsultationDestinationId;
        partial void OnGetv_InterconsultationDestinationId(ref string value);
        partial void Onv_InterconsultationDestinationIdChanging(ref string value);
        partial void Onv_InterconsultationDestinationIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_DiagnosticRepository_v_ServiceId", "service")]
        public service service
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_DiagnosticRepository_v_ServiceId", "service").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_DiagnosticRepository_v_ServiceId", "service").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<service> serviceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_DiagnosticRepository_v_ServiceId", "service");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_DiagnosticRepository_v_ServiceId", "service", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_DiagnosticRepository_v_ServiceId", "service").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for componentfields in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ComponentField_DiagnosticRepository_v_ComponentFieldsId", "componentfields")]
        public componentfields componentfields
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfields>("Sigesoft.Node.WinClient.DAL.Fk_ComponentField_DiagnosticRepository_v_ComponentFieldsId", "componentfields").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfields>("Sigesoft.Node.WinClient.DAL.Fk_ComponentField_DiagnosticRepository_v_ComponentFieldsId", "componentfields").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for componentfields in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<componentfields> componentfieldsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfields>("Sigesoft.Node.WinClient.DAL.Fk_ComponentField_DiagnosticRepository_v_ComponentFieldsId", "componentfields");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<componentfields>("Sigesoft.Node.WinClient.DAL.Fk_ComponentField_DiagnosticRepository_v_ComponentFieldsId", "componentfields", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfields>("Sigesoft.Node.WinClient.DAL.Fk_ComponentField_DiagnosticRepository_v_ComponentFieldsId", "componentfields").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for diseases in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DiseasesId_DiagnosticRepository_v_DiseasesId", "diseases")]
        public diseases diseases
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_DiseasesId_DiagnosticRepository_v_DiseasesId", "diseases").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_DiseasesId_DiagnosticRepository_v_DiseasesId", "diseases").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for diseases in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<diseases> diseasesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_DiseasesId_DiagnosticRepository_v_DiseasesId", "diseases");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_DiseasesId_DiagnosticRepository_v_DiseasesId", "diseases", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_DiseasesId_DiagnosticRepository_v_DiseasesId", "diseases").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for recommendation in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DiagnosticRepository_Recommendation_v_DiagnosticRepositoryId", "recommendation")]
        public EntityCollection<recommendation> recommendation
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<recommendation>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_Recommendation_v_DiagnosticRepositoryId", "recommendation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<recommendation>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_Recommendation_v_DiagnosticRepositoryId", "recommendation", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for restriction in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DiagnosticRepository_RestrictionByDiagnostic_v_DiagnosticRep", "restriction")]
        public EntityCollection<restriction> restriction
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<restriction>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_RestrictionByDiagnostic_v_DiagnosticRep", "restriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<restriction>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_RestrictionByDiagnostic_v_DiagnosticRep", "restriction", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.diseases in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_DiseasesId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="diseases")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class diseases : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new diseases object.
        /// </summary>
        /// <param name="v_DiseasesId">Initial value of v_DiseasesId.</param>
        public static diseases Creatediseases(string v_DiseasesId)
        {
            diseases diseases = new diseases();
            diseases.v_DiseasesId = v_DiseasesId;
            return diseases;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_DiseasesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_DiseasesId
        {
            get
            {
                string value = _v_DiseasesId;
                OnGetv_DiseasesId(ref value);
                return value;
            }
            set
            {
                if (_v_DiseasesId != value)
                {
                  Onv_DiseasesIdChanging(ref value);
                  ReportPropertyChanging("v_DiseasesId");
                  _v_DiseasesId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_DiseasesId");
                  Onv_DiseasesIdChanged();
              }
            }
        }
        private string _v_DiseasesId;
        partial void OnGetv_DiseasesId(ref string value);
        partial void Onv_DiseasesIdChanging(ref string value);
        partial void Onv_DiseasesIdChanged();
    
        /// <summary>
        /// There are no comments for v_CIE10Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CIE10Id
        {
            get
            {
                string value = _v_CIE10Id;
                OnGetv_CIE10Id(ref value);
                return value;
            }
            set
            {
                if (_v_CIE10Id != value)
                {
                  Onv_CIE10IdChanging(ref value);
                  ReportPropertyChanging("v_CIE10Id");
                  _v_CIE10Id = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CIE10Id");
                  Onv_CIE10IdChanged();
              }
            }
        }
        private string _v_CIE10Id;
        partial void OnGetv_CIE10Id(ref string value);
        partial void Onv_CIE10IdChanging(ref string value);
        partial void Onv_CIE10IdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for componentfieldvalues in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Diseases_ComponentFieldValues_v_Diseases", "componentfieldvalues")]
        public EntityCollection<componentfieldvalues> componentfieldvalues
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_ComponentFieldValues_v_Diseases", "componentfieldvalues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_ComponentFieldValues_v_Diseases", "componentfieldvalues", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for diagnosticrepository in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DiseasesId_DiagnosticRepository_v_DiseasesId", "diagnosticrepository")]
        public EntityCollection<diagnosticrepository> diagnosticrepository
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiseasesId_DiagnosticRepository_v_DiseasesId", "diagnosticrepository");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiseasesId_DiagnosticRepository_v_DiseasesId", "diagnosticrepository", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for cie10 in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Cie10_Diseases_v_CIE10Id", "cie10")]
        public cie10 cie10
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<cie10>("Sigesoft.Node.WinClient.DAL.Fk_Cie10_Diseases_v_CIE10Id", "cie10").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<cie10>("Sigesoft.Node.WinClient.DAL.Fk_Cie10_Diseases_v_CIE10Id", "cie10").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for cie10 in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<cie10> cie10Reference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<cie10>("Sigesoft.Node.WinClient.DAL.Fk_Cie10_Diseases_v_CIE10Id", "cie10");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<cie10>("Sigesoft.Node.WinClient.DAL.Fk_Cie10_Diseases_v_CIE10Id", "cie10", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<cie10>("Sigesoft.Node.WinClient.DAL.Fk_Cie10_Diseases_v_CIE10Id", "cie10").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for dxfrecuente in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_dxfrecuente_dxfrecuente_vDiseasesId", "dxfrecuente")]
        public EntityCollection<dxfrecuente> dxfrecuente
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<dxfrecuente>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_dxfrecuente_vDiseasesId", "dxfrecuente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<dxfrecuente>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_dxfrecuente_vDiseasesId", "dxfrecuente", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for familymedicalantecedents in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Diseases_FamilyMedicalAntecedents_v_DiseasesId", "familymedicalantecedents")]
        public EntityCollection<familymedicalantecedents> familymedicalantecedents
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<familymedicalantecedents>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_FamilyMedicalAntecedents_v_DiseasesId", "familymedicalantecedents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<familymedicalantecedents>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_FamilyMedicalAntecedents_v_DiseasesId", "familymedicalantecedents", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for personmedicalhistory in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Diseases_PersonalmMedicalHistory_v_DiseasesId", "personmedicalhistory")]
        public EntityCollection<personmedicalhistory> personmedicalhistory
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<personmedicalhistory>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_PersonalmMedicalHistory_v_DiseasesId", "personmedicalhistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<personmedicalhistory>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_PersonalmMedicalHistory_v_DiseasesId", "personmedicalhistory", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.dxfrecuente in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_DxFrecuenteId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="dxfrecuente")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dxfrecuente : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new dxfrecuente object.
        /// </summary>
        /// <param name="v_DxFrecuenteId">Initial value of v_DxFrecuenteId.</param>
        public static dxfrecuente Createdxfrecuente(string v_DxFrecuenteId)
        {
            dxfrecuente dxfrecuente = new dxfrecuente();
            dxfrecuente.v_DxFrecuenteId = v_DxFrecuenteId;
            return dxfrecuente;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_DxFrecuenteId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_DxFrecuenteId
        {
            get
            {
                string value = _v_DxFrecuenteId;
                OnGetv_DxFrecuenteId(ref value);
                return value;
            }
            set
            {
                if (_v_DxFrecuenteId != value)
                {
                  Onv_DxFrecuenteIdChanging(ref value);
                  ReportPropertyChanging("v_DxFrecuenteId");
                  _v_DxFrecuenteId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_DxFrecuenteId");
                  Onv_DxFrecuenteIdChanged();
              }
            }
        }
        private string _v_DxFrecuenteId;
        partial void OnGetv_DxFrecuenteId(ref string value);
        partial void Onv_DxFrecuenteIdChanging(ref string value);
        partial void Onv_DxFrecuenteIdChanged();
    
        /// <summary>
        /// There are no comments for v_DiseasesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DiseasesId
        {
            get
            {
                string value = _v_DiseasesId;
                OnGetv_DiseasesId(ref value);
                return value;
            }
            set
            {
                if (_v_DiseasesId != value)
                {
                  Onv_DiseasesIdChanging(ref value);
                  ReportPropertyChanging("v_DiseasesId");
                  _v_DiseasesId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DiseasesId");
                  Onv_DiseasesIdChanged();
              }
            }
        }
        private string _v_DiseasesId;
        partial void OnGetv_DiseasesId(ref string value);
        partial void Onv_DiseasesIdChanging(ref string value);
        partial void Onv_DiseasesIdChanged();
    
        /// <summary>
        /// There are no comments for v_CIE10Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CIE10Id
        {
            get
            {
                string value = _v_CIE10Id;
                OnGetv_CIE10Id(ref value);
                return value;
            }
            set
            {
                if (_v_CIE10Id != value)
                {
                  Onv_CIE10IdChanging(ref value);
                  ReportPropertyChanging("v_CIE10Id");
                  _v_CIE10Id = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CIE10Id");
                  Onv_CIE10IdChanged();
              }
            }
        }
        private string _v_CIE10Id;
        partial void OnGetv_CIE10Id(ref string value);
        partial void Onv_CIE10IdChanging(ref string value);
        partial void Onv_CIE10IdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for cie10 in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_dxfrecuente_cie10_v_CIE10Id", "cie10")]
        public cie10 cie10
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<cie10>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_cie10_v_CIE10Id", "cie10").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<cie10>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_cie10_v_CIE10Id", "cie10").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for cie10 in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<cie10> cie10Reference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<cie10>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_cie10_v_CIE10Id", "cie10");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<cie10>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_cie10_v_CIE10Id", "cie10", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<cie10>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_cie10_v_CIE10Id", "cie10").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for diseases in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_dxfrecuente_dxfrecuente_vDiseasesId", "diseases")]
        public diseases diseases
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_dxfrecuente_vDiseasesId", "diseases").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_dxfrecuente_vDiseasesId", "diseases").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for diseases in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<diseases> diseasesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_dxfrecuente_vDiseasesId", "diseases");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_dxfrecuente_vDiseasesId", "diseases", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuente_dxfrecuente_vDiseasesId", "diseases").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for dxfrecuentedetalle in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_dxfrecuentedetalle_dxfrecuentedetalle_v_DxFrecuenteId", "dxfrecuentedetalle")]
        public EntityCollection<dxfrecuentedetalle> dxfrecuentedetalle
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<dxfrecuentedetalle>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuentedetalle_dxfrecuentedetalle_v_DxFrecuenteId", "dxfrecuentedetalle");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<dxfrecuentedetalle>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuentedetalle_dxfrecuentedetalle_v_DxFrecuenteId", "dxfrecuentedetalle", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.dxfrecuentedetalle in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_DxFrecuenteDetalleId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="dxfrecuentedetalle")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dxfrecuentedetalle : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new dxfrecuentedetalle object.
        /// </summary>
        /// <param name="v_DxFrecuenteDetalleId">Initial value of v_DxFrecuenteDetalleId.</param>
        public static dxfrecuentedetalle Createdxfrecuentedetalle(string v_DxFrecuenteDetalleId)
        {
            dxfrecuentedetalle dxfrecuentedetalle = new dxfrecuentedetalle();
            dxfrecuentedetalle.v_DxFrecuenteDetalleId = v_DxFrecuenteDetalleId;
            return dxfrecuentedetalle;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_DxFrecuenteDetalleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_DxFrecuenteDetalleId
        {
            get
            {
                string value = _v_DxFrecuenteDetalleId;
                OnGetv_DxFrecuenteDetalleId(ref value);
                return value;
            }
            set
            {
                if (_v_DxFrecuenteDetalleId != value)
                {
                  Onv_DxFrecuenteDetalleIdChanging(ref value);
                  ReportPropertyChanging("v_DxFrecuenteDetalleId");
                  _v_DxFrecuenteDetalleId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_DxFrecuenteDetalleId");
                  Onv_DxFrecuenteDetalleIdChanged();
              }
            }
        }
        private string _v_DxFrecuenteDetalleId;
        partial void OnGetv_DxFrecuenteDetalleId(ref string value);
        partial void Onv_DxFrecuenteDetalleIdChanging(ref string value);
        partial void Onv_DxFrecuenteDetalleIdChanged();
    
        /// <summary>
        /// There are no comments for v_DxFrecuenteId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DxFrecuenteId
        {
            get
            {
                string value = _v_DxFrecuenteId;
                OnGetv_DxFrecuenteId(ref value);
                return value;
            }
            set
            {
                if (_v_DxFrecuenteId != value)
                {
                  Onv_DxFrecuenteIdChanging(ref value);
                  ReportPropertyChanging("v_DxFrecuenteId");
                  _v_DxFrecuenteId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DxFrecuenteId");
                  Onv_DxFrecuenteIdChanged();
              }
            }
        }
        private string _v_DxFrecuenteId;
        partial void OnGetv_DxFrecuenteId(ref string value);
        partial void Onv_DxFrecuenteIdChanging(ref string value);
        partial void Onv_DxFrecuenteIdChanged();
    
        /// <summary>
        /// There are no comments for v_MasterRecommendationRestricctionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_MasterRecommendationRestricctionId
        {
            get
            {
                string value = _v_MasterRecommendationRestricctionId;
                OnGetv_MasterRecommendationRestricctionId(ref value);
                return value;
            }
            set
            {
                if (_v_MasterRecommendationRestricctionId != value)
                {
                  Onv_MasterRecommendationRestricctionIdChanging(ref value);
                  ReportPropertyChanging("v_MasterRecommendationRestricctionId");
                  _v_MasterRecommendationRestricctionId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_MasterRecommendationRestricctionId");
                  Onv_MasterRecommendationRestricctionIdChanged();
              }
            }
        }
        private string _v_MasterRecommendationRestricctionId;
        partial void OnGetv_MasterRecommendationRestricctionId(ref string value);
        partial void Onv_MasterRecommendationRestricctionIdChanging(ref string value);
        partial void Onv_MasterRecommendationRestricctionIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for dxfrecuente in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_dxfrecuentedetalle_dxfrecuentedetalle_v_DxFrecuenteId", "dxfrecuente")]
        public dxfrecuente dxfrecuente
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<dxfrecuente>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuentedetalle_dxfrecuentedetalle_v_DxFrecuenteId", "dxfrecuente").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<dxfrecuente>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuentedetalle_dxfrecuentedetalle_v_DxFrecuenteId", "dxfrecuente").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for dxfrecuente in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<dxfrecuente> dxfrecuenteReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<dxfrecuente>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuentedetalle_dxfrecuentedetalle_v_DxFrecuenteId", "dxfrecuente");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<dxfrecuente>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuentedetalle_dxfrecuentedetalle_v_DxFrecuenteId", "dxfrecuente", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<dxfrecuente>("Sigesoft.Node.WinClient.DAL.FK_dxfrecuentedetalle_dxfrecuentedetalle_v_DxFrecuenteId", "dxfrecuente").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.employee in the schema.
    /// </summary>
    /// <KeyProperties>
    /// EmployeeId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class employee : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new employee object.
        /// </summary>
        /// <param name="employeeId">Initial value of EmployeeId.</param>
        /// <param name="identificationType">Initial value of IdentificationType.</param>
        /// <param name="nationalIDNumber">Initial value of NationalIDNumber.</param>
        /// <param name="gender">Initial value of Gender.</param>
        /// <param name="firstName">Initial value of FirstName.</param>
        /// <param name="lastName">Initial value of LastName.</param>
        /// <param name="emailAddress">Initial value of EmailAddress.</param>
        /// <param name="job">Initial value of Job.</param>
        /// <param name="addressLine1">Initial value of AddressLine1.</param>
        public static employee Createemployee(int employeeId, int identificationType, string nationalIDNumber, int gender, string firstName, string lastName, string emailAddress, string job, string addressLine1)
        {
            employee employee = new employee();
            employee.EmployeeId = employeeId;
            employee.IdentificationType = identificationType;
            employee.NationalIDNumber = nationalIDNumber;
            employee.Gender = gender;
            employee.FirstName = firstName;
            employee.LastName = lastName;
            employee.EmailAddress = emailAddress;
            employee.Job = job;
            employee.AddressLine1 = addressLine1;
            return employee;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for EmployeeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int EmployeeId
        {
            get
            {
                int value = _EmployeeId;
                OnGetEmployeeId(ref value);
                return value;
            }
            set
            {
                if (_EmployeeId != value)
                {
                  OnEmployeeIdChanging(ref value);
                  ReportPropertyChanging("EmployeeId");
                  _EmployeeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmployeeId");
                  OnEmployeeIdChanged();
              }
            }
        }
        private int _EmployeeId;
        partial void OnGetEmployeeId(ref int value);
        partial void OnEmployeeIdChanging(ref int value);
        partial void OnEmployeeIdChanged();
    
        /// <summary>
        /// There are no comments for IdentificationType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int IdentificationType
        {
            get
            {
                int value = _IdentificationType;
                OnGetIdentificationType(ref value);
                return value;
            }
            set
            {
                if (_IdentificationType != value)
                {
                  OnIdentificationTypeChanging(ref value);
                  ReportPropertyChanging("IdentificationType");
                  _IdentificationType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdentificationType");
                  OnIdentificationTypeChanged();
              }
            }
        }
        private int _IdentificationType;
        partial void OnGetIdentificationType(ref int value);
        partial void OnIdentificationTypeChanging(ref int value);
        partial void OnIdentificationTypeChanged();
    
        /// <summary>
        /// There are no comments for NationalIDNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string NationalIDNumber
        {
            get
            {
                string value = _NationalIDNumber;
                OnGetNationalIDNumber(ref value);
                return value;
            }
            set
            {
                if (_NationalIDNumber != value)
                {
                  OnNationalIDNumberChanging(ref value);
                  ReportPropertyChanging("NationalIDNumber");
                  _NationalIDNumber = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NationalIDNumber");
                  OnNationalIDNumberChanged();
              }
            }
        }
        private string _NationalIDNumber;
        partial void OnGetNationalIDNumber(ref string value);
        partial void OnNationalIDNumberChanging(ref string value);
        partial void OnNationalIDNumberChanged();
    
        /// <summary>
        /// There are no comments for Gender in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int Gender
        {
            get
            {
                int value = _Gender;
                OnGetGender(ref value);
                return value;
            }
            set
            {
                if (_Gender != value)
                {
                  OnGenderChanging(ref value);
                  ReportPropertyChanging("Gender");
                  _Gender = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Gender");
                  OnGenderChanged();
              }
            }
        }
        private int _Gender;
        partial void OnGetGender(ref int value);
        partial void OnGenderChanging(ref int value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// There are no comments for FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                string value = _FirstName;
                OnGetFirstName(ref value);
                return value;
            }
            set
            {
                if (_FirstName != value)
                {
                  OnFirstNameChanging(ref value);
                  ReportPropertyChanging("FirstName");
                  _FirstName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FirstName");
                  OnFirstNameChanged();
              }
            }
        }
        private string _FirstName;
        partial void OnGetFirstName(ref string value);
        partial void OnFirstNameChanging(ref string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// There are no comments for MiddleName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string MiddleName
        {
            get
            {
                string value = _MiddleName;
                OnGetMiddleName(ref value);
                return value;
            }
            set
            {
                if (_MiddleName != value)
                {
                  OnMiddleNameChanging(ref value);
                  ReportPropertyChanging("MiddleName");
                  _MiddleName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MiddleName");
                  OnMiddleNameChanged();
              }
            }
        }
        private string _MiddleName;
        partial void OnGetMiddleName(ref string value);
        partial void OnMiddleNameChanging(ref string value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// There are no comments for LastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string LastName
        {
            get
            {
                string value = _LastName;
                OnGetLastName(ref value);
                return value;
            }
            set
            {
                if (_LastName != value)
                {
                  OnLastNameChanging(ref value);
                  ReportPropertyChanging("LastName");
                  _LastName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LastName");
                  OnLastNameChanged();
              }
            }
        }
        private string _LastName;
        partial void OnGetLastName(ref string value);
        partial void OnLastNameChanging(ref string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// There are no comments for BirthDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> BirthDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _BirthDate;
                OnGetBirthDate(ref value);
                return value;
            }
            set
            {
                if (_BirthDate != value)
                {
                  OnBirthDateChanging(ref value);
                  ReportPropertyChanging("BirthDate");
                  _BirthDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BirthDate");
                  OnBirthDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _BirthDate;
        partial void OnGetBirthDate(ref global::System.Nullable<System.DateTime> value);
        partial void OnBirthDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// There are no comments for EmailAddress in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string EmailAddress
        {
            get
            {
                string value = _EmailAddress;
                OnGetEmailAddress(ref value);
                return value;
            }
            set
            {
                if (_EmailAddress != value)
                {
                  OnEmailAddressChanging(ref value);
                  ReportPropertyChanging("EmailAddress");
                  _EmailAddress = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EmailAddress");
                  OnEmailAddressChanged();
              }
            }
        }
        private string _EmailAddress;
        partial void OnGetEmailAddress(ref string value);
        partial void OnEmailAddressChanging(ref string value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// There are no comments for Job in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Job
        {
            get
            {
                string value = _Job;
                OnGetJob(ref value);
                return value;
            }
            set
            {
                if (_Job != value)
                {
                  OnJobChanging(ref value);
                  ReportPropertyChanging("Job");
                  _Job = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Job");
                  OnJobChanged();
              }
            }
        }
        private string _Job;
        partial void OnGetJob(ref string value);
        partial void OnJobChanging(ref string value);
        partial void OnJobChanged();
    
        /// <summary>
        /// There are no comments for AddressLine1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string AddressLine1
        {
            get
            {
                string value = _AddressLine1;
                OnGetAddressLine1(ref value);
                return value;
            }
            set
            {
                if (_AddressLine1 != value)
                {
                  OnAddressLine1Changing(ref value);
                  ReportPropertyChanging("AddressLine1");
                  _AddressLine1 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AddressLine1");
                  OnAddressLine1Changed();
              }
            }
        }
        private string _AddressLine1;
        partial void OnGetAddressLine1(ref string value);
        partial void OnAddressLine1Changing(ref string value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// There are no comments for Hire in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Hire
        {
            get
            {
                global::System.Nullable<int> value = _Hire;
                OnGetHire(ref value);
                return value;
            }
            set
            {
                if (_Hire != value)
                {
                  OnHireChanging(ref value);
                  ReportPropertyChanging("Hire");
                  _Hire = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Hire");
                  OnHireChanged();
              }
            }
        }
        private global::System.Nullable<int> _Hire;
        partial void OnGetHire(ref global::System.Nullable<int> value);
        partial void OnHireChanging(ref global::System.Nullable<int> value);
        partial void OnHireChanged();
    
        /// <summary>
        /// There are no comments for Headquarter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Headquarter
        {
            get
            {
                global::System.Nullable<int> value = _Headquarter;
                OnGetHeadquarter(ref value);
                return value;
            }
            set
            {
                if (_Headquarter != value)
                {
                  OnHeadquarterChanging(ref value);
                  ReportPropertyChanging("Headquarter");
                  _Headquarter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Headquarter");
                  OnHeadquarterChanged();
              }
            }
        }
        private global::System.Nullable<int> _Headquarter;
        partial void OnGetHeadquarter(ref global::System.Nullable<int> value);
        partial void OnHeadquarterChanging(ref global::System.Nullable<int> value);
        partial void OnHeadquarterChanged();
    
        /// <summary>
        /// There are no comments for Employer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Employer
        {
            get
            {
                global::System.Nullable<int> value = _Employer;
                OnGetEmployer(ref value);
                return value;
            }
            set
            {
                if (_Employer != value)
                {
                  OnEmployerChanging(ref value);
                  ReportPropertyChanging("Employer");
                  _Employer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Employer");
                  OnEmployerChanged();
              }
            }
        }
        private global::System.Nullable<int> _Employer;
        partial void OnGetEmployer(ref global::System.Nullable<int> value);
        partial void OnEmployerChanging(ref global::System.Nullable<int> value);
        partial void OnEmployerChanged();
    
        /// <summary>
        /// There are no comments for ProcessedData in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> ProcessedData
        {
            get
            {
                global::System.Nullable<bool> value = _ProcessedData;
                OnGetProcessedData(ref value);
                return value;
            }
            set
            {
                if (_ProcessedData != value)
                {
                  OnProcessedDataChanging(ref value);
                  ReportPropertyChanging("ProcessedData");
                  _ProcessedData = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProcessedData");
                  OnProcessedDataChanged();
              }
            }
        }
        private global::System.Nullable<bool> _ProcessedData;
        partial void OnGetProcessedData(ref global::System.Nullable<bool> value);
        partial void OnProcessedDataChanging(ref global::System.Nullable<bool> value);
        partial void OnProcessedDataChanged();
    
        /// <summary>
        /// There are no comments for CurrentFlag in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> CurrentFlag
        {
            get
            {
                global::System.Nullable<bool> value = _CurrentFlag;
                OnGetCurrentFlag(ref value);
                return value;
            }
            set
            {
                if (_CurrentFlag != value)
                {
                  OnCurrentFlagChanging(ref value);
                  ReportPropertyChanging("CurrentFlag");
                  _CurrentFlag = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrentFlag");
                  OnCurrentFlagChanged();
              }
            }
        }
        private global::System.Nullable<bool> _CurrentFlag;
        partial void OnGetCurrentFlag(ref global::System.Nullable<bool> value);
        partial void OnCurrentFlagChanging(ref global::System.Nullable<bool> value);
        partial void OnCurrentFlagChanged();
    
        /// <summary>
        /// There are no comments for rowguid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.Guid> rowguid
        {
            get
            {
                global::System.Nullable<System.Guid> value = _rowguid;
                OnGetrowguid(ref value);
                return value;
            }
            set
            {
                if (_rowguid != value)
                {
                  OnrowguidChanging(ref value);
                  ReportPropertyChanging("rowguid");
                  _rowguid = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("rowguid");
                  OnrowguidChanged();
              }
            }
        }
        private global::System.Nullable<System.Guid> _rowguid;
        partial void OnGetrowguid(ref global::System.Nullable<System.Guid> value);
        partial void OnrowguidChanging(ref global::System.Nullable<System.Guid> value);
        partial void OnrowguidChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.employercompany in the schema.
    /// </summary>
    /// <KeyProperties>
    /// EmployerCompanyId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="employercompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class employercompany : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new employercompany object.
        /// </summary>
        /// <param name="employerCompanyId">Initial value of EmployerCompanyId.</param>
        /// <param name="name">Initial value of Name.</param>
        public static employercompany Createemployercompany(int employerCompanyId, string name)
        {
            employercompany employercompany = new employercompany();
            employercompany.EmployerCompanyId = employerCompanyId;
            employercompany.Name = name;
            return employercompany;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for EmployerCompanyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int EmployerCompanyId
        {
            get
            {
                int value = _EmployerCompanyId;
                OnGetEmployerCompanyId(ref value);
                return value;
            }
            set
            {
                if (_EmployerCompanyId != value)
                {
                  OnEmployerCompanyIdChanging(ref value);
                  ReportPropertyChanging("EmployerCompanyId");
                  _EmployerCompanyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmployerCompanyId");
                  OnEmployerCompanyIdChanged();
              }
            }
        }
        private int _EmployerCompanyId;
        partial void OnGetEmployerCompanyId(ref int value);
        partial void OnEmployerCompanyIdChanging(ref int value);
        partial void OnEmployerCompanyIdChanged();
    
        /// <summary>
        /// There are no comments for NationalIDNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string NationalIDNumber
        {
            get
            {
                string value = _NationalIDNumber;
                OnGetNationalIDNumber(ref value);
                return value;
            }
            set
            {
                if (_NationalIDNumber != value)
                {
                  OnNationalIDNumberChanging(ref value);
                  ReportPropertyChanging("NationalIDNumber");
                  _NationalIDNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NationalIDNumber");
                  OnNationalIDNumberChanged();
              }
            }
        }
        private string _NationalIDNumber;
        partial void OnGetNationalIDNumber(ref string value);
        partial void OnNationalIDNumberChanging(ref string value);
        partial void OnNationalIDNumberChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for CurrentFlag in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> CurrentFlag
        {
            get
            {
                global::System.Nullable<bool> value = _CurrentFlag;
                OnGetCurrentFlag(ref value);
                return value;
            }
            set
            {
                if (_CurrentFlag != value)
                {
                  OnCurrentFlagChanging(ref value);
                  ReportPropertyChanging("CurrentFlag");
                  _CurrentFlag = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CurrentFlag");
                  OnCurrentFlagChanged();
              }
            }
        }
        private global::System.Nullable<bool> _CurrentFlag;
        partial void OnGetCurrentFlag(ref global::System.Nullable<bool> value);
        partial void OnCurrentFlagChanging(ref global::System.Nullable<bool> value);
        partial void OnCurrentFlagChanged();
    
        /// <summary>
        /// There are no comments for rowguid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.Guid> rowguid
        {
            get
            {
                global::System.Nullable<System.Guid> value = _rowguid;
                OnGetrowguid(ref value);
                return value;
            }
            set
            {
                if (_rowguid != value)
                {
                  OnrowguidChanging(ref value);
                  ReportPropertyChanging("rowguid");
                  _rowguid = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("rowguid");
                  OnrowguidChanged();
              }
            }
        }
        private global::System.Nullable<System.Guid> _rowguid;
        partial void OnGetrowguid(ref global::System.Nullable<System.Guid> value);
        partial void OnrowguidChanging(ref global::System.Nullable<System.Guid> value);
        partial void OnrowguidChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.empresasempleadoras in the schema.
    /// </summary>
    /// <KeyProperties>
    /// EmpresaEmpleadoraId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="empresasempleadoras")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class empresasempleadoras : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new empresasempleadoras object.
        /// </summary>
        /// <param name="empresaEmpleadoraId">Initial value of EmpresaEmpleadoraId.</param>
        public static empresasempleadoras Createempresasempleadoras(int empresaEmpleadoraId)
        {
            empresasempleadoras empresasempleadoras = new empresasempleadoras();
            empresasempleadoras.EmpresaEmpleadoraId = empresaEmpleadoraId;
            return empresasempleadoras;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for EmpresaEmpleadoraId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int EmpresaEmpleadoraId
        {
            get
            {
                int value = _EmpresaEmpleadoraId;
                OnGetEmpresaEmpleadoraId(ref value);
                return value;
            }
            set
            {
                if (_EmpresaEmpleadoraId != value)
                {
                  OnEmpresaEmpleadoraIdChanging(ref value);
                  ReportPropertyChanging("EmpresaEmpleadoraId");
                  _EmpresaEmpleadoraId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmpresaEmpleadoraId");
                  OnEmpresaEmpleadoraIdChanged();
              }
            }
        }
        private int _EmpresaEmpleadoraId;
        partial void OnGetEmpresaEmpleadoraId(ref int value);
        partial void OnEmpresaEmpleadoraIdChanging(ref int value);
        partial void OnEmpresaEmpleadoraIdChanged();
    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Nombre
        {
            get
            {
                string value = _Nombre;
                OnGetNombre(ref value);
                return value;
            }
            set
            {
                if (_Nombre != value)
                {
                  OnNombreChanging(ref value);
                  ReportPropertyChanging("Nombre");
                  _Nombre = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Nombre");
                  OnNombreChanged();
              }
            }
        }
        private string _Nombre;
        partial void OnGetNombre(ref string value);
        partial void OnNombreChanging(ref string value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// There are no comments for Correo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Correo
        {
            get
            {
                string value = _Correo;
                OnGetCorreo(ref value);
                return value;
            }
            set
            {
                if (_Correo != value)
                {
                  OnCorreoChanging(ref value);
                  ReportPropertyChanging("Correo");
                  _Correo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Correo");
                  OnCorreoChanged();
              }
            }
        }
        private string _Correo;
        partial void OnGetCorreo(ref string value);
        partial void OnCorreoChanging(ref string value);
        partial void OnCorreoChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.familymedicalantecedents in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_FamilyMedicalAntecedentsId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="familymedicalantecedents")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class familymedicalantecedents : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new familymedicalantecedents object.
        /// </summary>
        /// <param name="v_FamilyMedicalAntecedentsId">Initial value of v_FamilyMedicalAntecedentsId.</param>
        public static familymedicalantecedents Createfamilymedicalantecedents(string v_FamilyMedicalAntecedentsId)
        {
            familymedicalantecedents familymedicalantecedents = new familymedicalantecedents();
            familymedicalantecedents.v_FamilyMedicalAntecedentsId = v_FamilyMedicalAntecedentsId;
            return familymedicalantecedents;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_FamilyMedicalAntecedentsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_FamilyMedicalAntecedentsId
        {
            get
            {
                string value = _v_FamilyMedicalAntecedentsId;
                OnGetv_FamilyMedicalAntecedentsId(ref value);
                return value;
            }
            set
            {
                if (_v_FamilyMedicalAntecedentsId != value)
                {
                  Onv_FamilyMedicalAntecedentsIdChanging(ref value);
                  ReportPropertyChanging("v_FamilyMedicalAntecedentsId");
                  _v_FamilyMedicalAntecedentsId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_FamilyMedicalAntecedentsId");
                  Onv_FamilyMedicalAntecedentsIdChanged();
              }
            }
        }
        private string _v_FamilyMedicalAntecedentsId;
        partial void OnGetv_FamilyMedicalAntecedentsId(ref string value);
        partial void Onv_FamilyMedicalAntecedentsIdChanging(ref string value);
        partial void Onv_FamilyMedicalAntecedentsIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for v_DiseasesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DiseasesId
        {
            get
            {
                string value = _v_DiseasesId;
                OnGetv_DiseasesId(ref value);
                return value;
            }
            set
            {
                if (_v_DiseasesId != value)
                {
                  Onv_DiseasesIdChanging(ref value);
                  ReportPropertyChanging("v_DiseasesId");
                  _v_DiseasesId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DiseasesId");
                  Onv_DiseasesIdChanged();
              }
            }
        }
        private string _v_DiseasesId;
        partial void OnGetv_DiseasesId(ref string value);
        partial void Onv_DiseasesIdChanging(ref string value);
        partial void Onv_DiseasesIdChanged();
    
        /// <summary>
        /// There are no comments for i_TypeFamilyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TypeFamilyId
        {
            get
            {
                global::System.Nullable<int> value = _i_TypeFamilyId;
                OnGeti_TypeFamilyId(ref value);
                return value;
            }
            set
            {
                if (_i_TypeFamilyId != value)
                {
                  Oni_TypeFamilyIdChanging(ref value);
                  ReportPropertyChanging("i_TypeFamilyId");
                  _i_TypeFamilyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TypeFamilyId");
                  Oni_TypeFamilyIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TypeFamilyId;
        partial void OnGeti_TypeFamilyId(ref global::System.Nullable<int> value);
        partial void Oni_TypeFamilyIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TypeFamilyIdChanged();
    
        /// <summary>
        /// There are no comments for v_Comment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Comment
        {
            get
            {
                string value = _v_Comment;
                OnGetv_Comment(ref value);
                return value;
            }
            set
            {
                if (_v_Comment != value)
                {
                  Onv_CommentChanging(ref value);
                  ReportPropertyChanging("v_Comment");
                  _v_Comment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Comment");
                  Onv_CommentChanged();
              }
            }
        }
        private string _v_Comment;
        partial void OnGetv_Comment(ref string value);
        partial void Onv_CommentChanging(ref string value);
        partial void Onv_CommentChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_AnswerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_AnswerId
        {
            get
            {
                global::System.Nullable<int> value = _i_AnswerId;
                OnGeti_AnswerId(ref value);
                return value;
            }
            set
            {
                if (_i_AnswerId != value)
                {
                  Oni_AnswerIdChanging(ref value);
                  ReportPropertyChanging("i_AnswerId");
                  _i_AnswerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_AnswerId");
                  Oni_AnswerIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_AnswerId;
        partial void OnGeti_AnswerId(ref global::System.Nullable<int> value);
        partial void Oni_AnswerIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_AnswerIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for diseases in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Diseases_FamilyMedicalAntecedents_v_DiseasesId", "diseases")]
        public diseases diseases
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_FamilyMedicalAntecedents_v_DiseasesId", "diseases").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_FamilyMedicalAntecedents_v_DiseasesId", "diseases").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for diseases in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<diseases> diseasesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_FamilyMedicalAntecedents_v_DiseasesId", "diseases");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_FamilyMedicalAntecedents_v_DiseasesId", "diseases", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_FamilyMedicalAntecedents_v_DiseasesId", "diseases").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_FamilyMedicalAntecedents_v_PersonId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_FamilyMedicalAntecedents_v_PersonId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_FamilyMedicalAntecedents_v_PersonId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_FamilyMedicalAntecedents_v_PersonId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_FamilyMedicalAntecedents_v_PersonId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_FamilyMedicalAntecedents_v_PersonId", "person").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.ges in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_GesId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="ges")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ges : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ges object.
        /// </summary>
        /// <param name="v_GesId">Initial value of v_GesId.</param>
        public static ges Createges(string v_GesId)
        {
            ges ges = new ges();
            ges.v_GesId = v_GesId;
            return ges;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_GesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_GesId
        {
            get
            {
                string value = _v_GesId;
                OnGetv_GesId(ref value);
                return value;
            }
            set
            {
                if (_v_GesId != value)
                {
                  Onv_GesIdChanging(ref value);
                  ReportPropertyChanging("v_GesId");
                  _v_GesId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_GesId");
                  Onv_GesIdChanged();
              }
            }
        }
        private string _v_GesId;
        partial void OnGetv_GesId(ref string value);
        partial void Onv_GesIdChanging(ref string value);
        partial void Onv_GesIdChanged();
    
        /// <summary>
        /// There are no comments for v_AreaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AreaId
        {
            get
            {
                string value = _v_AreaId;
                OnGetv_AreaId(ref value);
                return value;
            }
            set
            {
                if (_v_AreaId != value)
                {
                  Onv_AreaIdChanging(ref value);
                  ReportPropertyChanging("v_AreaId");
                  _v_AreaId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AreaId");
                  Onv_AreaIdChanged();
              }
            }
        }
        private string _v_AreaId;
        partial void OnGetv_AreaId(ref string value);
        partial void Onv_AreaIdChanging(ref string value);
        partial void Onv_AreaIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for area in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Area_Ges_v_AreaCode", "area")]
        public area area
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<area>("Sigesoft.Node.WinClient.DAL.Fk_Area_Ges_v_AreaCode", "area").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<area>("Sigesoft.Node.WinClient.DAL.Fk_Area_Ges_v_AreaCode", "area").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for area in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<area> areaReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<area>("Sigesoft.Node.WinClient.DAL.Fk_Area_Ges_v_AreaCode", "area");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<area>("Sigesoft.Node.WinClient.DAL.Fk_Area_Ges_v_AreaCode", "area", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<area>("Sigesoft.Node.WinClient.DAL.Fk_Area_Ges_v_AreaCode", "area").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for occupation in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Ges_Occupation_v_GesCode", "occupation")]
        public EntityCollection<occupation> occupation
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<occupation>("Sigesoft.Node.WinClient.DAL.Fk_Ges_Occupation_v_GesCode", "occupation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<occupation>("Sigesoft.Node.WinClient.DAL.Fk_Ges_Occupation_v_GesCode", "occupation", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.groupoccupation in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_GroupOccupationId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="groupoccupation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class groupoccupation : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new groupoccupation object.
        /// </summary>
        /// <param name="v_GroupOccupationId">Initial value of v_GroupOccupationId.</param>
        public static groupoccupation Creategroupoccupation(string v_GroupOccupationId)
        {
            groupoccupation groupoccupation = new groupoccupation();
            groupoccupation.v_GroupOccupationId = v_GroupOccupationId;
            return groupoccupation;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_GroupOccupationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_GroupOccupationId
        {
            get
            {
                string value = _v_GroupOccupationId;
                OnGetv_GroupOccupationId(ref value);
                return value;
            }
            set
            {
                if (_v_GroupOccupationId != value)
                {
                  Onv_GroupOccupationIdChanging(ref value);
                  ReportPropertyChanging("v_GroupOccupationId");
                  _v_GroupOccupationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_GroupOccupationId");
                  Onv_GroupOccupationIdChanged();
              }
            }
        }
        private string _v_GroupOccupationId;
        partial void OnGetv_GroupOccupationId(ref string value);
        partial void Onv_GroupOccupationIdChanging(ref string value);
        partial void Onv_GroupOccupationIdChanged();
    
        /// <summary>
        /// There are no comments for v_LocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LocationId
        {
            get
            {
                string value = _v_LocationId;
                OnGetv_LocationId(ref value);
                return value;
            }
            set
            {
                if (_v_LocationId != value)
                {
                  Onv_LocationIdChanging(ref value);
                  ReportPropertyChanging("v_LocationId");
                  _v_LocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LocationId");
                  Onv_LocationIdChanged();
              }
            }
        }
        private string _v_LocationId;
        partial void OnGetv_LocationId(ref string value);
        partial void Onv_LocationIdChanging(ref string value);
        partial void Onv_LocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for location in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_GroupOccupation_v_GroupOccupationCode", "location")]
        public location location
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_GroupOccupation_v_GroupOccupationCode", "location").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_GroupOccupation_v_GroupOccupationCode", "location").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for location in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<location> locationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_GroupOccupation_v_GroupOccupationCode", "location");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_GroupOccupation_v_GroupOccupationCode", "location", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_GroupOccupation_v_GroupOccupationCode", "location").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for occupation in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_GroupOccupation_Occupation_v_GroupOccupationCode", "occupation")]
        public EntityCollection<occupation> occupation
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<occupation>("Sigesoft.Node.WinClient.DAL.Fk_GroupOccupation_Occupation_v_GroupOccupationCode", "occupation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<occupation>("Sigesoft.Node.WinClient.DAL.Fk_GroupOccupation_Occupation_v_GroupOccupationCode", "occupation", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.hcactualizado in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_HcActualizadoId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="hcactualizado")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class hcactualizado : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new hcactualizado object.
        /// </summary>
        /// <param name="i_HcActualizadoId">Initial value of i_HcActualizadoId.</param>
        public static hcactualizado Createhcactualizado(int i_HcActualizadoId)
        {
            hcactualizado hcactualizado = new hcactualizado();
            hcactualizado.i_HcActualizadoId = i_HcActualizadoId;
            return hcactualizado;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_HcActualizadoId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_HcActualizadoId
        {
            get
            {
                int value = _i_HcActualizadoId;
                OnGeti_HcActualizadoId(ref value);
                return value;
            }
            set
            {
                if (_i_HcActualizadoId != value)
                {
                  Oni_HcActualizadoIdChanging(ref value);
                  ReportPropertyChanging("i_HcActualizadoId");
                  _i_HcActualizadoId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_HcActualizadoId");
                  Oni_HcActualizadoIdChanged();
              }
            }
        }
        private int _i_HcActualizadoId;
        partial void OnGeti_HcActualizadoId(ref int value);
        partial void Oni_HcActualizadoIdChanging(ref int value);
        partial void Oni_HcActualizadoIdChanged();
    
        /// <summary>
        /// There are no comments for HC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string HC
        {
            get
            {
                string value = _HC;
                OnGetHC(ref value);
                return value;
            }
            set
            {
                if (_HC != value)
                {
                  OnHCChanging(ref value);
                  ReportPropertyChanging("HC");
                  _HC = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("HC");
                  OnHCChanged();
              }
            }
        }
        private string _HC;
        partial void OnGetHC(ref string value);
        partial void OnHCChanging(ref string value);
        partial void OnHCChanged();
    
        /// <summary>
        /// There are no comments for EmpresaEmpleadora in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmpresaEmpleadora
        {
            get
            {
                string value = _EmpresaEmpleadora;
                OnGetEmpresaEmpleadora(ref value);
                return value;
            }
            set
            {
                if (_EmpresaEmpleadora != value)
                {
                  OnEmpresaEmpleadoraChanging(ref value);
                  ReportPropertyChanging("EmpresaEmpleadora");
                  _EmpresaEmpleadora = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmpresaEmpleadora");
                  OnEmpresaEmpleadoraChanged();
              }
            }
        }
        private string _EmpresaEmpleadora;
        partial void OnGetEmpresaEmpleadora(ref string value);
        partial void OnEmpresaEmpleadoraChanging(ref string value);
        partial void OnEmpresaEmpleadoraChanged();
    
        /// <summary>
        /// There are no comments for ApellidoPaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoPaterno
        {
            get
            {
                string value = _ApellidoPaterno;
                OnGetApellidoPaterno(ref value);
                return value;
            }
            set
            {
                if (_ApellidoPaterno != value)
                {
                  OnApellidoPaternoChanging(ref value);
                  ReportPropertyChanging("ApellidoPaterno");
                  _ApellidoPaterno = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoPaterno");
                  OnApellidoPaternoChanged();
              }
            }
        }
        private string _ApellidoPaterno;
        partial void OnGetApellidoPaterno(ref string value);
        partial void OnApellidoPaternoChanging(ref string value);
        partial void OnApellidoPaternoChanged();
    
        /// <summary>
        /// There are no comments for ApellidoMaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoMaterno
        {
            get
            {
                string value = _ApellidoMaterno;
                OnGetApellidoMaterno(ref value);
                return value;
            }
            set
            {
                if (_ApellidoMaterno != value)
                {
                  OnApellidoMaternoChanging(ref value);
                  ReportPropertyChanging("ApellidoMaterno");
                  _ApellidoMaterno = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoMaterno");
                  OnApellidoMaternoChanged();
              }
            }
        }
        private string _ApellidoMaterno;
        partial void OnGetApellidoMaterno(ref string value);
        partial void OnApellidoMaternoChanging(ref string value);
        partial void OnApellidoMaternoChanged();
    
        /// <summary>
        /// There are no comments for Nombres in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Nombres
        {
            get
            {
                string value = _Nombres;
                OnGetNombres(ref value);
                return value;
            }
            set
            {
                if (_Nombres != value)
                {
                  OnNombresChanging(ref value);
                  ReportPropertyChanging("Nombres");
                  _Nombres = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Nombres");
                  OnNombresChanged();
              }
            }
        }
        private string _Nombres;
        partial void OnGetNombres(ref string value);
        partial void OnNombresChanging(ref string value);
        partial void OnNombresChanged();
    
        /// <summary>
        /// There are no comments for Dni in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Dni
        {
            get
            {
                string value = _Dni;
                OnGetDni(ref value);
                return value;
            }
            set
            {
                if (_Dni != value)
                {
                  OnDniChanging(ref value);
                  ReportPropertyChanging("Dni");
                  _Dni = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Dni");
                  OnDniChanged();
              }
            }
        }
        private string _Dni;
        partial void OnGetDni(ref string value);
        partial void OnDniChanging(ref string value);
        partial void OnDniChanged();
    
        /// <summary>
        /// There are no comments for Sexo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sexo
        {
            get
            {
                string value = _Sexo;
                OnGetSexo(ref value);
                return value;
            }
            set
            {
                if (_Sexo != value)
                {
                  OnSexoChanging(ref value);
                  ReportPropertyChanging("Sexo");
                  _Sexo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sexo");
                  OnSexoChanged();
              }
            }
        }
        private string _Sexo;
        partial void OnGetSexo(ref string value);
        partial void OnSexoChanging(ref string value);
        partial void OnSexoChanged();
    
        /// <summary>
        /// There are no comments for Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sede
        {
            get
            {
                string value = _Sede;
                OnGetSede(ref value);
                return value;
            }
            set
            {
                if (_Sede != value)
                {
                  OnSedeChanging(ref value);
                  ReportPropertyChanging("Sede");
                  _Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sede");
                  OnSedeChanged();
              }
            }
        }
        private string _Sede;
        partial void OnGetSede(ref string value);
        partial void OnSedeChanging(ref string value);
        partial void OnSedeChanged();
    
        /// <summary>
        /// There are no comments for Puesto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Puesto
        {
            get
            {
                string value = _Puesto;
                OnGetPuesto(ref value);
                return value;
            }
            set
            {
                if (_Puesto != value)
                {
                  OnPuestoChanging(ref value);
                  ReportPropertyChanging("Puesto");
                  _Puesto = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Puesto");
                  OnPuestoChanged();
              }
            }
        }
        private string _Puesto;
        partial void OnGetPuesto(ref string value);
        partial void OnPuestoChanging(ref string value);
        partial void OnPuestoChanged();
    
        /// <summary>
        /// There are no comments for Area in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Area
        {
            get
            {
                string value = _Area;
                OnGetArea(ref value);
                return value;
            }
            set
            {
                if (_Area != value)
                {
                  OnAreaChanging(ref value);
                  ReportPropertyChanging("Area");
                  _Area = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Area");
                  OnAreaChanged();
              }
            }
        }
        private string _Area;
        partial void OnGetArea(ref string value);
        partial void OnAreaChanging(ref string value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// There are no comments for FechaNacimiento in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> FechaNacimiento
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _FechaNacimiento;
                OnGetFechaNacimiento(ref value);
                return value;
            }
            set
            {
                if (_FechaNacimiento != value)
                {
                  OnFechaNacimientoChanging(ref value);
                  ReportPropertyChanging("FechaNacimiento");
                  _FechaNacimiento = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaNacimiento");
                  OnFechaNacimientoChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _FechaNacimiento;
        partial void OnGetFechaNacimiento(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaNacimientoChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaNacimientoChanged();
    
        /// <summary>
        /// There are no comments for SedeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> SedeId
        {
            get
            {
                global::System.Nullable<int> value = _SedeId;
                OnGetSedeId(ref value);
                return value;
            }
            set
            {
                if (_SedeId != value)
                {
                  OnSedeIdChanging(ref value);
                  ReportPropertyChanging("SedeId");
                  _SedeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SedeId");
                  OnSedeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _SedeId;
        partial void OnGetSedeId(ref global::System.Nullable<int> value);
        partial void OnSedeIdChanging(ref global::System.Nullable<int> value);
        partial void OnSedeIdChanged();
    
        /// <summary>
        /// There are no comments for SexoId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> SexoId
        {
            get
            {
                global::System.Nullable<int> value = _SexoId;
                OnGetSexoId(ref value);
                return value;
            }
            set
            {
                if (_SexoId != value)
                {
                  OnSexoIdChanging(ref value);
                  ReportPropertyChanging("SexoId");
                  _SexoId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SexoId");
                  OnSexoIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _SexoId;
        partial void OnGetSexoId(ref global::System.Nullable<int> value);
        partial void OnSexoIdChanging(ref global::System.Nullable<int> value);
        partial void OnSexoIdChanged();
    
        /// <summary>
        /// There are no comments for HcId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> HcId
        {
            get
            {
                global::System.Nullable<int> value = _HcId;
                OnGetHcId(ref value);
                return value;
            }
            set
            {
                if (_HcId != value)
                {
                  OnHcIdChanging(ref value);
                  ReportPropertyChanging("HcId");
                  _HcId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HcId");
                  OnHcIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _HcId;
        partial void OnGetHcId(ref global::System.Nullable<int> value);
        partial void OnHcIdChanging(ref global::System.Nullable<int> value);
        partial void OnHcIdChanged();
    
        /// <summary>
        /// There are no comments for FechaActualizacion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> FechaActualizacion
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _FechaActualizacion;
                OnGetFechaActualizacion(ref value);
                return value;
            }
            set
            {
                if (_FechaActualizacion != value)
                {
                  OnFechaActualizacionChanging(ref value);
                  ReportPropertyChanging("FechaActualizacion");
                  _FechaActualizacion = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaActualizacion");
                  OnFechaActualizacionChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _FechaActualizacion;
        partial void OnGetFechaActualizacion(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaActualizacionChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaActualizacionChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.headcount in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_HcId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="headcount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class headcount : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new headcount object.
        /// </summary>
        /// <param name="i_HcId">Initial value of i_HcId.</param>
        public static headcount Createheadcount(int i_HcId)
        {
            headcount headcount = new headcount();
            headcount.i_HcId = i_HcId;
            return headcount;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_HcId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_HcId
        {
            get
            {
                int value = _i_HcId;
                OnGeti_HcId(ref value);
                return value;
            }
            set
            {
                if (_i_HcId != value)
                {
                  Oni_HcIdChanging(ref value);
                  ReportPropertyChanging("i_HcId");
                  _i_HcId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_HcId");
                  Oni_HcIdChanged();
              }
            }
        }
        private int _i_HcId;
        partial void OnGeti_HcId(ref int value);
        partial void Oni_HcIdChanging(ref int value);
        partial void Oni_HcIdChanged();
    
        /// <summary>
        /// There are no comments for v_Nif in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Nif
        {
            get
            {
                string value = _v_Nif;
                OnGetv_Nif(ref value);
                return value;
            }
            set
            {
                if (_v_Nif != value)
                {
                  Onv_NifChanging(ref value);
                  ReportPropertyChanging("v_Nif");
                  _v_Nif = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Nif");
                  Onv_NifChanged();
              }
            }
        }
        private string _v_Nif;
        partial void OnGetv_Nif(ref string value);
        partial void Onv_NifChanging(ref string value);
        partial void Onv_NifChanged();
    
        /// <summary>
        /// There are no comments for v_NombreCompleto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_NombreCompleto
        {
            get
            {
                string value = _v_NombreCompleto;
                OnGetv_NombreCompleto(ref value);
                return value;
            }
            set
            {
                if (_v_NombreCompleto != value)
                {
                  Onv_NombreCompletoChanging(ref value);
                  ReportPropertyChanging("v_NombreCompleto");
                  _v_NombreCompleto = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_NombreCompleto");
                  Onv_NombreCompletoChanged();
              }
            }
        }
        private string _v_NombreCompleto;
        partial void OnGetv_NombreCompleto(ref string value);
        partial void Onv_NombreCompletoChanging(ref string value);
        partial void Onv_NombreCompletoChanged();
    
        /// <summary>
        /// There are no comments for v_Soc in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Soc
        {
            get
            {
                string value = _v_Soc;
                OnGetv_Soc(ref value);
                return value;
            }
            set
            {
                if (_v_Soc != value)
                {
                  Onv_SocChanging(ref value);
                  ReportPropertyChanging("v_Soc");
                  _v_Soc = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Soc");
                  Onv_SocChanged();
              }
            }
        }
        private string _v_Soc;
        partial void OnGetv_Soc(ref string value);
        partial void Onv_SocChanging(ref string value);
        partial void Onv_SocChanged();
    
        /// <summary>
        /// There are no comments for v_Sharp in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Sharp
        {
            get
            {
                string value = _v_Sharp;
                OnGetv_Sharp(ref value);
                return value;
            }
            set
            {
                if (_v_Sharp != value)
                {
                  Onv_SharpChanging(ref value);
                  ReportPropertyChanging("v_Sharp");
                  _v_Sharp = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Sharp");
                  Onv_SharpChanged();
              }
            }
        }
        private string _v_Sharp;
        partial void OnGetv_Sharp(ref string value);
        partial void Onv_SharpChanging(ref string value);
        partial void Onv_SharpChanged();
    
        /// <summary>
        /// There are no comments for v_NroPers in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_NroPers
        {
            get
            {
                string value = _v_NroPers;
                OnGetv_NroPers(ref value);
                return value;
            }
            set
            {
                if (_v_NroPers != value)
                {
                  Onv_NroPersChanging(ref value);
                  ReportPropertyChanging("v_NroPers");
                  _v_NroPers = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_NroPers");
                  Onv_NroPersChanged();
              }
            }
        }
        private string _v_NroPers;
        partial void OnGetv_NroPers(ref string value);
        partial void Onv_NroPersChanging(ref string value);
        partial void Onv_NroPersChanged();
    
        /// <summary>
        /// There are no comments for v_Apellido in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Apellido
        {
            get
            {
                string value = _v_Apellido;
                OnGetv_Apellido(ref value);
                return value;
            }
            set
            {
                if (_v_Apellido != value)
                {
                  Onv_ApellidoChanging(ref value);
                  ReportPropertyChanging("v_Apellido");
                  _v_Apellido = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Apellido");
                  Onv_ApellidoChanged();
              }
            }
        }
        private string _v_Apellido;
        partial void OnGetv_Apellido(ref string value);
        partial void Onv_ApellidoChanging(ref string value);
        partial void Onv_ApellidoChanged();
    
        /// <summary>
        /// There are no comments for v_SegundoApellido in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SegundoApellido
        {
            get
            {
                string value = _v_SegundoApellido;
                OnGetv_SegundoApellido(ref value);
                return value;
            }
            set
            {
                if (_v_SegundoApellido != value)
                {
                  Onv_SegundoApellidoChanging(ref value);
                  ReportPropertyChanging("v_SegundoApellido");
                  _v_SegundoApellido = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SegundoApellido");
                  Onv_SegundoApellidoChanged();
              }
            }
        }
        private string _v_SegundoApellido;
        partial void OnGetv_SegundoApellido(ref string value);
        partial void Onv_SegundoApellidoChanging(ref string value);
        partial void Onv_SegundoApellidoChanged();
    
        /// <summary>
        /// There are no comments for v_NombrePila in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_NombrePila
        {
            get
            {
                string value = _v_NombrePila;
                OnGetv_NombrePila(ref value);
                return value;
            }
            set
            {
                if (_v_NombrePila != value)
                {
                  Onv_NombrePilaChanging(ref value);
                  ReportPropertyChanging("v_NombrePila");
                  _v_NombrePila = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_NombrePila");
                  Onv_NombrePilaChanged();
              }
            }
        }
        private string _v_NombrePila;
        partial void OnGetv_NombrePila(ref string value);
        partial void Onv_NombrePilaChanging(ref string value);
        partial void Onv_NombrePilaChanged();
    
        /// <summary>
        /// There are no comments for v_ClaveSexo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ClaveSexo
        {
            get
            {
                string value = _v_ClaveSexo;
                OnGetv_ClaveSexo(ref value);
                return value;
            }
            set
            {
                if (_v_ClaveSexo != value)
                {
                  Onv_ClaveSexoChanging(ref value);
                  ReportPropertyChanging("v_ClaveSexo");
                  _v_ClaveSexo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ClaveSexo");
                  Onv_ClaveSexoChanged();
              }
            }
        }
        private string _v_ClaveSexo;
        partial void OnGetv_ClaveSexo(ref string value);
        partial void Onv_ClaveSexoChanging(ref string value);
        partial void Onv_ClaveSexoChanged();
    
        /// <summary>
        /// There are no comments for v_Aliq in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Aliq
        {
            get
            {
                string value = _v_Aliq;
                OnGetv_Aliq(ref value);
                return value;
            }
            set
            {
                if (_v_Aliq != value)
                {
                  Onv_AliqChanging(ref value);
                  ReportPropertyChanging("v_Aliq");
                  _v_Aliq = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Aliq");
                  Onv_AliqChanged();
              }
            }
        }
        private string _v_Aliq;
        partial void OnGetv_Aliq(ref string value);
        partial void Onv_AliqChanging(ref string value);
        partial void Onv_AliqChanged();
    
        /// <summary>
        /// There are no comments for v_AreaNomina in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AreaNomina
        {
            get
            {
                string value = _v_AreaNomina;
                OnGetv_AreaNomina(ref value);
                return value;
            }
            set
            {
                if (_v_AreaNomina != value)
                {
                  Onv_AreaNominaChanging(ref value);
                  ReportPropertyChanging("v_AreaNomina");
                  _v_AreaNomina = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AreaNomina");
                  Onv_AreaNominaChanged();
              }
            }
        }
        private string _v_AreaNomina;
        partial void OnGetv_AreaNomina(ref string value);
        partial void Onv_AreaNominaChanging(ref string value);
        partial void Onv_AreaNominaChanged();
    
        /// <summary>
        /// There are no comments for v_SdvPer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SdvPer
        {
            get
            {
                string value = _v_SdvPer;
                OnGetv_SdvPer(ref value);
                return value;
            }
            set
            {
                if (_v_SdvPer != value)
                {
                  Onv_SdvPerChanging(ref value);
                  ReportPropertyChanging("v_SdvPer");
                  _v_SdvPer = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SdvPer");
                  Onv_SdvPerChanged();
              }
            }
        }
        private string _v_SdvPer;
        partial void OnGetv_SdvPer(ref string value);
        partial void Onv_SdvPerChanging(ref string value);
        partial void Onv_SdvPerChanged();
    
        /// <summary>
        /// There are no comments for v_SubDivPersona in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SubDivPersona
        {
            get
            {
                string value = _v_SubDivPersona;
                OnGetv_SubDivPersona(ref value);
                return value;
            }
            set
            {
                if (_v_SubDivPersona != value)
                {
                  Onv_SubDivPersonaChanging(ref value);
                  ReportPropertyChanging("v_SubDivPersona");
                  _v_SubDivPersona = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SubDivPersona");
                  Onv_SubDivPersonaChanged();
              }
            }
        }
        private string _v_SubDivPersona;
        partial void OnGetv_SubDivPersona(ref string value);
        partial void Onv_SubDivPersonaChanging(ref string value);
        partial void Onv_SubDivPersonaChanged();
    
        /// <summary>
        /// There are no comments for v_StatusOcupacion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_StatusOcupacion
        {
            get
            {
                string value = _v_StatusOcupacion;
                OnGetv_StatusOcupacion(ref value);
                return value;
            }
            set
            {
                if (_v_StatusOcupacion != value)
                {
                  Onv_StatusOcupacionChanging(ref value);
                  ReportPropertyChanging("v_StatusOcupacion");
                  _v_StatusOcupacion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_StatusOcupacion");
                  Onv_StatusOcupacionChanged();
              }
            }
        }
        private string _v_StatusOcupacion;
        partial void OnGetv_StatusOcupacion(ref string value);
        partial void Onv_StatusOcupacionChanging(ref string value);
        partial void Onv_StatusOcupacionChanged();
    
        /// <summary>
        /// There are no comments for v_Cife in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Cife
        {
            get
            {
                string value = _v_Cife;
                OnGetv_Cife(ref value);
                return value;
            }
            set
            {
                if (_v_Cife != value)
                {
                  Onv_CifeChanging(ref value);
                  ReportPropertyChanging("v_Cife");
                  _v_Cife = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Cife");
                  Onv_CifeChanged();
              }
            }
        }
        private string _v_Cife;
        partial void OnGetv_Cife(ref string value);
        partial void Onv_CifeChanging(ref string value);
        partial void Onv_CifeChanged();
    
        /// <summary>
        /// There are no comments for v_ClaseFecha in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ClaseFecha
        {
            get
            {
                string value = _v_ClaseFecha;
                OnGetv_ClaseFecha(ref value);
                return value;
            }
            set
            {
                if (_v_ClaseFecha != value)
                {
                  Onv_ClaseFechaChanging(ref value);
                  ReportPropertyChanging("v_ClaseFecha");
                  _v_ClaseFecha = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ClaseFecha");
                  Onv_ClaseFechaChanged();
              }
            }
        }
        private string _v_ClaseFecha;
        partial void OnGetv_ClaseFecha(ref string value);
        partial void Onv_ClaseFechaChanging(ref string value);
        partial void Onv_ClaseFechaChanged();
    
        /// <summary>
        /// There are no comments for d_Fecha in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_Fecha
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_Fecha;
                OnGetd_Fecha(ref value);
                return value;
            }
            set
            {
                if (_d_Fecha != value)
                {
                  Ond_FechaChanging(ref value);
                  ReportPropertyChanging("d_Fecha");
                  _d_Fecha = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_Fecha");
                  Ond_FechaChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_Fecha;
        partial void OnGetd_Fecha(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_FechaChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_FechaChanged();
    
        /// <summary>
        /// There are no comments for v_GrupoPersonal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GrupoPersonal
        {
            get
            {
                string value = _v_GrupoPersonal;
                OnGetv_GrupoPersonal(ref value);
                return value;
            }
            set
            {
                if (_v_GrupoPersonal != value)
                {
                  Onv_GrupoPersonalChanging(ref value);
                  ReportPropertyChanging("v_GrupoPersonal");
                  _v_GrupoPersonal = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GrupoPersonal");
                  Onv_GrupoPersonalChanged();
              }
            }
        }
        private string _v_GrupoPersonal;
        partial void OnGetv_GrupoPersonal(ref string value);
        partial void Onv_GrupoPersonalChanging(ref string value);
        partial void Onv_GrupoPersonalChanged();
    
        /// <summary>
        /// There are no comments for v_Posicion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Posicion
        {
            get
            {
                string value = _v_Posicion;
                OnGetv_Posicion(ref value);
                return value;
            }
            set
            {
                if (_v_Posicion != value)
                {
                  Onv_PosicionChanging(ref value);
                  ReportPropertyChanging("v_Posicion");
                  _v_Posicion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Posicion");
                  Onv_PosicionChanged();
              }
            }
        }
        private string _v_Posicion;
        partial void OnGetv_Posicion(ref string value);
        partial void Onv_PosicionChanging(ref string value);
        partial void Onv_PosicionChanged();
    
        /// <summary>
        /// There are no comments for v_PosicionNombre in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PosicionNombre
        {
            get
            {
                string value = _v_PosicionNombre;
                OnGetv_PosicionNombre(ref value);
                return value;
            }
            set
            {
                if (_v_PosicionNombre != value)
                {
                  Onv_PosicionNombreChanging(ref value);
                  ReportPropertyChanging("v_PosicionNombre");
                  _v_PosicionNombre = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PosicionNombre");
                  Onv_PosicionNombreChanged();
              }
            }
        }
        private string _v_PosicionNombre;
        partial void OnGetv_PosicionNombre(ref string value);
        partial void Onv_PosicionNombreChanging(ref string value);
        partial void Onv_PosicionNombreChanged();
    
        /// <summary>
        /// There are no comments for v_UnOrg in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_UnOrg
        {
            get
            {
                string value = _v_UnOrg;
                OnGetv_UnOrg(ref value);
                return value;
            }
            set
            {
                if (_v_UnOrg != value)
                {
                  Onv_UnOrgChanging(ref value);
                  ReportPropertyChanging("v_UnOrg");
                  _v_UnOrg = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_UnOrg");
                  Onv_UnOrgChanged();
              }
            }
        }
        private string _v_UnOrg;
        partial void OnGetv_UnOrg(ref string value);
        partial void Onv_UnOrgChanging(ref string value);
        partial void Onv_UnOrgChanged();
    
        /// <summary>
        /// There are no comments for v_UnidadOrganizativa in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_UnidadOrganizativa
        {
            get
            {
                string value = _v_UnidadOrganizativa;
                OnGetv_UnidadOrganizativa(ref value);
                return value;
            }
            set
            {
                if (_v_UnidadOrganizativa != value)
                {
                  Onv_UnidadOrganizativaChanging(ref value);
                  ReportPropertyChanging("v_UnidadOrganizativa");
                  _v_UnidadOrganizativa = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_UnidadOrganizativa");
                  Onv_UnidadOrganizativaChanged();
              }
            }
        }
        private string _v_UnidadOrganizativa;
        partial void OnGetv_UnidadOrganizativa(ref string value);
        partial void Onv_UnidadOrganizativaChanging(ref string value);
        partial void Onv_UnidadOrganizativaChanged();
    
        /// <summary>
        /// There are no comments for v_IndicadorExceptions in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_IndicadorExceptions
        {
            get
            {
                string value = _v_IndicadorExceptions;
                OnGetv_IndicadorExceptions(ref value);
                return value;
            }
            set
            {
                if (_v_IndicadorExceptions != value)
                {
                  Onv_IndicadorExceptionsChanging(ref value);
                  ReportPropertyChanging("v_IndicadorExceptions");
                  _v_IndicadorExceptions = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_IndicadorExceptions");
                  Onv_IndicadorExceptionsChanged();
              }
            }
        }
        private string _v_IndicadorExceptions;
        partial void OnGetv_IndicadorExceptions(ref string value);
        partial void Onv_IndicadorExceptionsChanging(ref string value);
        partial void Onv_IndicadorExceptionsChanged();
    
        /// <summary>
        /// There are no comments for v_DivP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DivP
        {
            get
            {
                string value = _v_DivP;
                OnGetv_DivP(ref value);
                return value;
            }
            set
            {
                if (_v_DivP != value)
                {
                  Onv_DivPChanging(ref value);
                  ReportPropertyChanging("v_DivP");
                  _v_DivP = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DivP");
                  Onv_DivPChanged();
              }
            }
        }
        private string _v_DivP;
        partial void OnGetv_DivP(ref string value);
        partial void Onv_DivPChanging(ref string value);
        partial void Onv_DivPChanged();
    
        /// <summary>
        /// There are no comments for v_DivisionPersonal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DivisionPersonal
        {
            get
            {
                string value = _v_DivisionPersonal;
                OnGetv_DivisionPersonal(ref value);
                return value;
            }
            set
            {
                if (_v_DivisionPersonal != value)
                {
                  Onv_DivisionPersonalChanging(ref value);
                  ReportPropertyChanging("v_DivisionPersonal");
                  _v_DivisionPersonal = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DivisionPersonal");
                  Onv_DivisionPersonalChanged();
              }
            }
        }
        private string _v_DivisionPersonal;
        partial void OnGetv_DivisionPersonal(ref string value);
        partial void Onv_DivisionPersonalChanging(ref string value);
        partial void Onv_DivisionPersonalChanged();
    
        /// <summary>
        /// There are no comments for v_CECoste in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CECoste
        {
            get
            {
                string value = _v_CECoste;
                OnGetv_CECoste(ref value);
                return value;
            }
            set
            {
                if (_v_CECoste != value)
                {
                  Onv_CECosteChanging(ref value);
                  ReportPropertyChanging("v_CECoste");
                  _v_CECoste = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CECoste");
                  Onv_CECosteChanged();
              }
            }
        }
        private string _v_CECoste;
        partial void OnGetv_CECoste(ref string value);
        partial void Onv_CECosteChanging(ref string value);
        partial void Onv_CECosteChanged();
    
        /// <summary>
        /// There are no comments for v_CentroCoste in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CentroCoste
        {
            get
            {
                string value = _v_CentroCoste;
                OnGetv_CentroCoste(ref value);
                return value;
            }
            set
            {
                if (_v_CentroCoste != value)
                {
                  Onv_CentroCosteChanging(ref value);
                  ReportPropertyChanging("v_CentroCoste");
                  _v_CentroCoste = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CentroCoste");
                  Onv_CentroCosteChanged();
              }
            }
        }
        private string _v_CentroCoste;
        partial void OnGetv_CentroCoste(ref string value);
        partial void Onv_CentroCosteChanging(ref string value);
        partial void Onv_CentroCosteChanged();
    
        /// <summary>
        /// There are no comments for v_RelacionLaboral in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_RelacionLaboral
        {
            get
            {
                string value = _v_RelacionLaboral;
                OnGetv_RelacionLaboral(ref value);
                return value;
            }
            set
            {
                if (_v_RelacionLaboral != value)
                {
                  Onv_RelacionLaboralChanging(ref value);
                  ReportPropertyChanging("v_RelacionLaboral");
                  _v_RelacionLaboral = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_RelacionLaboral");
                  Onv_RelacionLaboralChanged();
              }
            }
        }
        private string _v_RelacionLaboral;
        partial void OnGetv_RelacionLaboral(ref string value);
        partial void Onv_RelacionLaboralChanging(ref string value);
        partial void Onv_RelacionLaboralChanged();
    
        /// <summary>
        /// There are no comments for v_Apers in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Apers
        {
            get
            {
                string value = _v_Apers;
                OnGetv_Apers(ref value);
                return value;
            }
            set
            {
                if (_v_Apers != value)
                {
                  Onv_ApersChanging(ref value);
                  ReportPropertyChanging("v_Apers");
                  _v_Apers = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Apers");
                  Onv_ApersChanged();
              }
            }
        }
        private string _v_Apers;
        partial void OnGetv_Apers(ref string value);
        partial void Onv_ApersChanging(ref string value);
        partial void Onv_ApersChanged();
    
        /// <summary>
        /// There are no comments for v_Area in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Area
        {
            get
            {
                string value = _v_Area;
                OnGetv_Area(ref value);
                return value;
            }
            set
            {
                if (_v_Area != value)
                {
                  Onv_AreaChanging(ref value);
                  ReportPropertyChanging("v_Area");
                  _v_Area = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Area");
                  Onv_AreaChanged();
              }
            }
        }
        private string _v_Area;
        partial void OnGetv_Area(ref string value);
        partial void Onv_AreaChanging(ref string value);
        partial void Onv_AreaChanged();
    
        /// <summary>
        /// There are no comments for v_GrProf in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GrProf
        {
            get
            {
                string value = _v_GrProf;
                OnGetv_GrProf(ref value);
                return value;
            }
            set
            {
                if (_v_GrProf != value)
                {
                  Onv_GrProfChanging(ref value);
                  ReportPropertyChanging("v_GrProf");
                  _v_GrProf = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GrProf");
                  Onv_GrProfChanged();
              }
            }
        }
        private string _v_GrProf;
        partial void OnGetv_GrProf(ref string value);
        partial void Onv_GrProfChanging(ref string value);
        partial void Onv_GrProfChanged();
    
        /// <summary>
        /// There are no comments for d_Desde in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_Desde
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_Desde;
                OnGetd_Desde(ref value);
                return value;
            }
            set
            {
                if (_d_Desde != value)
                {
                  Ond_DesdeChanging(ref value);
                  ReportPropertyChanging("d_Desde");
                  _d_Desde = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_Desde");
                  Ond_DesdeChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_Desde;
        partial void OnGetd_Desde(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DesdeChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DesdeChanged();
    
        /// <summary>
        /// There are no comments for d_Hasta in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_Hasta
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_Hasta;
                OnGetd_Hasta(ref value);
                return value;
            }
            set
            {
                if (_d_Hasta != value)
                {
                  Ond_HastaChanging(ref value);
                  ReportPropertyChanging("d_Hasta");
                  _d_Hasta = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_Hasta");
                  Ond_HastaChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_Hasta;
        partial void OnGetd_Hasta(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_HastaChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_HastaChanged();
    
        /// <summary>
        /// There are no comments for v_ClaseContrato in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ClaseContrato
        {
            get
            {
                string value = _v_ClaseContrato;
                OnGetv_ClaseContrato(ref value);
                return value;
            }
            set
            {
                if (_v_ClaseContrato != value)
                {
                  Onv_ClaseContratoChanging(ref value);
                  ReportPropertyChanging("v_ClaseContrato");
                  _v_ClaseContrato = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ClaseContrato");
                  Onv_ClaseContratoChanged();
              }
            }
        }
        private string _v_ClaseContrato;
        partial void OnGetv_ClaseContrato(ref string value);
        partial void Onv_ClaseContratoChanging(ref string value);
        partial void Onv_ClaseContratoChanged();
    
        /// <summary>
        /// There are no comments for v_FinContrato in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FinContrato
        {
            get
            {
                string value = _v_FinContrato;
                OnGetv_FinContrato(ref value);
                return value;
            }
            set
            {
                if (_v_FinContrato != value)
                {
                  Onv_FinContratoChanging(ref value);
                  ReportPropertyChanging("v_FinContrato");
                  _v_FinContrato = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FinContrato");
                  Onv_FinContratoChanged();
              }
            }
        }
        private string _v_FinContrato;
        partial void OnGetv_FinContrato(ref string value);
        partial void Onv_FinContratoChanging(ref string value);
        partial void Onv_FinContratoChanged();
    
        /// <summary>
        /// There are no comments for d_FechaNacimiento in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_FechaNacimiento
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_FechaNacimiento;
                OnGetd_FechaNacimiento(ref value);
                return value;
            }
            set
            {
                if (_d_FechaNacimiento != value)
                {
                  Ond_FechaNacimientoChanging(ref value);
                  ReportPropertyChanging("d_FechaNacimiento");
                  _d_FechaNacimiento = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_FechaNacimiento");
                  Ond_FechaNacimientoChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_FechaNacimiento;
        partial void OnGetd_FechaNacimiento(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_FechaNacimientoChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_FechaNacimientoChanged();
    
        /// <summary>
        /// There are no comments for v_EPS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_EPS
        {
            get
            {
                string value = _v_EPS;
                OnGetv_EPS(ref value);
                return value;
            }
            set
            {
                if (_v_EPS != value)
                {
                  Onv_EPSChanging(ref value);
                  ReportPropertyChanging("v_EPS");
                  _v_EPS = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_EPS");
                  Onv_EPSChanged();
              }
            }
        }
        private string _v_EPS;
        partial void OnGetv_EPS(ref string value);
        partial void Onv_EPSChanging(ref string value);
        partial void Onv_EPSChanged();
    
        /// <summary>
        /// There are no comments for v_Sindicato in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Sindicato
        {
            get
            {
                string value = _v_Sindicato;
                OnGetv_Sindicato(ref value);
                return value;
            }
            set
            {
                if (_v_Sindicato != value)
                {
                  Onv_SindicatoChanging(ref value);
                  ReportPropertyChanging("v_Sindicato");
                  _v_Sindicato = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Sindicato");
                  Onv_SindicatoChanged();
              }
            }
        }
        private string _v_Sindicato;
        partial void OnGetv_Sindicato(ref string value);
        partial void Onv_SindicatoChanging(ref string value);
        partial void Onv_SindicatoChanged();
    
        /// <summary>
        /// There are no comments for i_Edad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Edad
        {
            get
            {
                global::System.Nullable<int> value = _i_Edad;
                OnGeti_Edad(ref value);
                return value;
            }
            set
            {
                if (_i_Edad != value)
                {
                  Oni_EdadChanging(ref value);
                  ReportPropertyChanging("i_Edad");
                  _i_Edad = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Edad");
                  Oni_EdadChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Edad;
        partial void OnGeti_Edad(ref global::System.Nullable<int> value);
        partial void Oni_EdadChanging(ref global::System.Nullable<int> value);
        partial void Oni_EdadChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.history in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_HistoryId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="history")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class history : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new history object.
        /// </summary>
        /// <param name="v_HistoryId">Initial value of v_HistoryId.</param>
        public static history Createhistory(string v_HistoryId)
        {
            history history = new history();
            history.v_HistoryId = v_HistoryId;
            return history;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_HistoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_HistoryId
        {
            get
            {
                string value = _v_HistoryId;
                OnGetv_HistoryId(ref value);
                return value;
            }
            set
            {
                if (_v_HistoryId != value)
                {
                  Onv_HistoryIdChanging(ref value);
                  ReportPropertyChanging("v_HistoryId");
                  _v_HistoryId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_HistoryId");
                  Onv_HistoryIdChanged();
              }
            }
        }
        private string _v_HistoryId;
        partial void OnGetv_HistoryId(ref string value);
        partial void Onv_HistoryIdChanging(ref string value);
        partial void Onv_HistoryIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for d_StartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_StartDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_StartDate;
                OnGetd_StartDate(ref value);
                return value;
            }
            set
            {
                if (_d_StartDate != value)
                {
                  Ond_StartDateChanging(ref value);
                  ReportPropertyChanging("d_StartDate");
                  _d_StartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_StartDate");
                  Ond_StartDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_StartDate;
        partial void OnGetd_StartDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_StartDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_StartDateChanged();
    
        /// <summary>
        /// There are no comments for d_EndDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_EndDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_EndDate;
                OnGetd_EndDate(ref value);
                return value;
            }
            set
            {
                if (_d_EndDate != value)
                {
                  Ond_EndDateChanging(ref value);
                  ReportPropertyChanging("d_EndDate");
                  _d_EndDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_EndDate");
                  Ond_EndDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_EndDate;
        partial void OnGetd_EndDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EndDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EndDateChanged();
    
        /// <summary>
        /// There are no comments for v_Organization in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Organization
        {
            get
            {
                string value = _v_Organization;
                OnGetv_Organization(ref value);
                return value;
            }
            set
            {
                if (_v_Organization != value)
                {
                  Onv_OrganizationChanging(ref value);
                  ReportPropertyChanging("v_Organization");
                  _v_Organization = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Organization");
                  Onv_OrganizationChanged();
              }
            }
        }
        private string _v_Organization;
        partial void OnGetv_Organization(ref string value);
        partial void Onv_OrganizationChanging(ref string value);
        partial void Onv_OrganizationChanged();
    
        /// <summary>
        /// There are no comments for v_TypeActivity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_TypeActivity
        {
            get
            {
                string value = _v_TypeActivity;
                OnGetv_TypeActivity(ref value);
                return value;
            }
            set
            {
                if (_v_TypeActivity != value)
                {
                  Onv_TypeActivityChanging(ref value);
                  ReportPropertyChanging("v_TypeActivity");
                  _v_TypeActivity = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_TypeActivity");
                  Onv_TypeActivityChanged();
              }
            }
        }
        private string _v_TypeActivity;
        partial void OnGetv_TypeActivity(ref string value);
        partial void Onv_TypeActivityChanging(ref string value);
        partial void Onv_TypeActivityChanged();
    
        /// <summary>
        /// There are no comments for i_GeografixcaHeight in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_GeografixcaHeight
        {
            get
            {
                global::System.Nullable<int> value = _i_GeografixcaHeight;
                OnGeti_GeografixcaHeight(ref value);
                return value;
            }
            set
            {
                if (_i_GeografixcaHeight != value)
                {
                  Oni_GeografixcaHeightChanging(ref value);
                  ReportPropertyChanging("i_GeografixcaHeight");
                  _i_GeografixcaHeight = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_GeografixcaHeight");
                  Oni_GeografixcaHeightChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_GeografixcaHeight;
        partial void OnGeti_GeografixcaHeight(ref global::System.Nullable<int> value);
        partial void Oni_GeografixcaHeightChanging(ref global::System.Nullable<int> value);
        partial void Oni_GeografixcaHeightChanged();
    
        /// <summary>
        /// There are no comments for v_workstation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_workstation
        {
            get
            {
                string value = _v_workstation;
                OnGetv_workstation(ref value);
                return value;
            }
            set
            {
                if (_v_workstation != value)
                {
                  Onv_workstationChanging(ref value);
                  ReportPropertyChanging("v_workstation");
                  _v_workstation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_workstation");
                  Onv_workstationChanged();
              }
            }
        }
        private string _v_workstation;
        partial void OnGetv_workstation(ref string value);
        partial void Onv_workstationChanging(ref string value);
        partial void Onv_workstationChanged();
    
        /// <summary>
        /// There are no comments for b_RubricImage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_RubricImage
        {
            get
            {
                byte[] value = _b_RubricImage;
                OnGetb_RubricImage(ref value);
                return value;
            }
            set
            {
                if (_b_RubricImage != value)
                {
                  Onb_RubricImageChanging(ref value);
                  ReportPropertyChanging("b_RubricImage");
                  _b_RubricImage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_RubricImage");
                  Onb_RubricImageChanged();
              }
            }
        }
        private byte[] _b_RubricImage;
        partial void OnGetb_RubricImage(ref byte[] value);
        partial void Onb_RubricImageChanging(ref byte[] value);
        partial void Onb_RubricImageChanged();
    
        /// <summary>
        /// There are no comments for b_FingerPrintImage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_FingerPrintImage
        {
            get
            {
                byte[] value = _b_FingerPrintImage;
                OnGetb_FingerPrintImage(ref value);
                return value;
            }
            set
            {
                if (_b_FingerPrintImage != value)
                {
                  Onb_FingerPrintImageChanging(ref value);
                  ReportPropertyChanging("b_FingerPrintImage");
                  _b_FingerPrintImage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_FingerPrintImage");
                  Onb_FingerPrintImageChanged();
              }
            }
        }
        private byte[] _b_FingerPrintImage;
        partial void OnGetb_FingerPrintImage(ref byte[] value);
        partial void Onb_FingerPrintImageChanging(ref byte[] value);
        partial void Onb_FingerPrintImageChanged();
    
        /// <summary>
        /// There are no comments for t_RubricImageText in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string t_RubricImageText
        {
            get
            {
                string value = _t_RubricImageText;
                OnGett_RubricImageText(ref value);
                return value;
            }
            set
            {
                if (_t_RubricImageText != value)
                {
                  Ont_RubricImageTextChanging(ref value);
                  ReportPropertyChanging("t_RubricImageText");
                  _t_RubricImageText = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("t_RubricImageText");
                  Ont_RubricImageTextChanged();
              }
            }
        }
        private string _t_RubricImageText;
        partial void OnGett_RubricImageText(ref string value);
        partial void Ont_RubricImageTextChanging(ref string value);
        partial void Ont_RubricImageTextChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_TypeOperationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TypeOperationId
        {
            get
            {
                global::System.Nullable<int> value = _i_TypeOperationId;
                OnGeti_TypeOperationId(ref value);
                return value;
            }
            set
            {
                if (_i_TypeOperationId != value)
                {
                  Oni_TypeOperationIdChanging(ref value);
                  ReportPropertyChanging("i_TypeOperationId");
                  _i_TypeOperationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TypeOperationId");
                  Oni_TypeOperationIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TypeOperationId;
        partial void OnGeti_TypeOperationId(ref global::System.Nullable<int> value);
        partial void Oni_TypeOperationIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TypeOperationIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_History_v_PersonId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_History_v_PersonId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_History_v_PersonId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_History_v_PersonId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_History_v_PersonId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_History_v_PersonId", "person").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for typeofeep in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_History_TypeofEPP_v_HistoryId", "typeofeep")]
        public EntityCollection<typeofeep> typeofeep
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<typeofeep>("Sigesoft.Node.WinClient.DAL.Fk_History_TypeofEPP_v_HistoryId", "typeofeep");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<typeofeep>("Sigesoft.Node.WinClient.DAL.Fk_History_TypeofEPP_v_HistoryId", "typeofeep", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for workstationdangers in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_History_WorkstationDangers_v_HistoryId", "workstationdangers")]
        public EntityCollection<workstationdangers> workstationdangers
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<workstationdangers>("Sigesoft.Node.WinClient.DAL.Fk_History_WorkstationDangers_v_HistoryId", "workstationdangers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<workstationdangers>("Sigesoft.Node.WinClient.DAL.Fk_History_WorkstationDangers_v_HistoryId", "workstationdangers", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.interfacebc300 in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_InterfaceBS300
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="interfacebc300")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class interfacebc300 : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new interfacebc300 object.
        /// </summary>
        /// <param name="i_InterfaceBS300">Initial value of i_InterfaceBS300.</param>
        public static interfacebc300 Createinterfacebc300(int i_InterfaceBS300)
        {
            interfacebc300 interfacebc300 = new interfacebc300();
            interfacebc300.i_InterfaceBS300 = i_InterfaceBS300;
            return interfacebc300;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_InterfaceBS300 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_InterfaceBS300
        {
            get
            {
                int value = _i_InterfaceBS300;
                OnGeti_InterfaceBS300(ref value);
                return value;
            }
            set
            {
                if (_i_InterfaceBS300 != value)
                {
                  Oni_InterfaceBS300Changing(ref value);
                  ReportPropertyChanging("i_InterfaceBS300");
                  _i_InterfaceBS300 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InterfaceBS300");
                  Oni_InterfaceBS300Changed();
              }
            }
        }
        private int _i_InterfaceBS300;
        partial void OnGeti_InterfaceBS300(ref int value);
        partial void Oni_InterfaceBS300Changing(ref int value);
        partial void Oni_InterfaceBS300Changed();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_ResultComponent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ResultComponent
        {
            get
            {
                string value = _v_ResultComponent;
                OnGetv_ResultComponent(ref value);
                return value;
            }
            set
            {
                if (_v_ResultComponent != value)
                {
                  Onv_ResultComponentChanging(ref value);
                  ReportPropertyChanging("v_ResultComponent");
                  _v_ResultComponent = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ResultComponent");
                  Onv_ResultComponentChanged();
              }
            }
        }
        private string _v_ResultComponent;
        partial void OnGetv_ResultComponent(ref string value);
        partial void Onv_ResultComponentChanging(ref string value);
        partial void Onv_ResultComponentChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.interfaceeso in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_InterfaceESOId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="interfaceeso")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class interfaceeso : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new interfaceeso object.
        /// </summary>
        /// <param name="i_InterfaceESOId">Initial value of i_InterfaceESOId.</param>
        public static interfaceeso Createinterfaceeso(int i_InterfaceESOId)
        {
            interfaceeso interfaceeso = new interfaceeso();
            interfaceeso.i_InterfaceESOId = i_InterfaceESOId;
            return interfaceeso;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_InterfaceESOId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_InterfaceESOId
        {
            get
            {
                int value = _i_InterfaceESOId;
                OnGeti_InterfaceESOId(ref value);
                return value;
            }
            set
            {
                if (_i_InterfaceESOId != value)
                {
                  Oni_InterfaceESOIdChanging(ref value);
                  ReportPropertyChanging("i_InterfaceESOId");
                  _i_InterfaceESOId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InterfaceESOId");
                  Oni_InterfaceESOIdChanged();
              }
            }
        }
        private int _i_InterfaceESOId;
        partial void OnGeti_InterfaceESOId(ref int value);
        partial void Oni_InterfaceESOIdChanging(ref int value);
        partial void Oni_InterfaceESOIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentFieldId
        {
            get
            {
                string value = _v_ComponentFieldId;
                OnGetv_ComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldId != value)
                {
                  Onv_ComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldId");
                  _v_ComponentFieldId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentFieldId");
                  Onv_ComponentFieldIdChanged();
              }
            }
        }
        private string _v_ComponentFieldId;
        partial void OnGetv_ComponentFieldId(ref string value);
        partial void Onv_ComponentFieldIdChanging(ref string value);
        partial void Onv_ComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for v_ResultComponent in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ResultComponent
        {
            get
            {
                string value = _v_ResultComponent;
                OnGetv_ResultComponent(ref value);
                return value;
            }
            set
            {
                if (_v_ResultComponent != value)
                {
                  Onv_ResultComponentChanging(ref value);
                  ReportPropertyChanging("v_ResultComponent");
                  _v_ResultComponent = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ResultComponent");
                  Onv_ResultComponentChanged();
              }
            }
        }
        private string _v_ResultComponent;
        partial void OnGetv_ResultComponent(ref string value);
        partial void Onv_ResultComponentChanging(ref string value);
        partial void Onv_ResultComponentChanged();
    
        /// <summary>
        /// There are no comments for i_SystemUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SystemUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_SystemUserId;
                OnGeti_SystemUserId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserId != value)
                {
                  Oni_SystemUserIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserId");
                  _i_SystemUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserId");
                  Oni_SystemUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SystemUserId;
        partial void OnGeti_SystemUserId(ref global::System.Nullable<int> value);
        partial void Oni_SystemUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SystemUserIdChanged();
    
        /// <summary>
        /// There are no comments for i_ImportStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ImportStatus
        {
            get
            {
                global::System.Nullable<int> value = _i_ImportStatus;
                OnGeti_ImportStatus(ref value);
                return value;
            }
            set
            {
                if (_i_ImportStatus != value)
                {
                  Oni_ImportStatusChanging(ref value);
                  ReportPropertyChanging("i_ImportStatus");
                  _i_ImportStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ImportStatus");
                  Oni_ImportStatusChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ImportStatus;
        partial void OnGeti_ImportStatus(ref global::System.Nullable<int> value);
        partial void Oni_ImportStatusChanging(ref global::System.Nullable<int> value);
        partial void Oni_ImportStatusChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.location in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_LocationId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="location")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class location : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new location object.
        /// </summary>
        /// <param name="v_LocationId">Initial value of v_LocationId.</param>
        public static location Createlocation(string v_LocationId)
        {
            location location = new location();
            location.v_LocationId = v_LocationId;
            return location;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_LocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_LocationId
        {
            get
            {
                string value = _v_LocationId;
                OnGetv_LocationId(ref value);
                return value;
            }
            set
            {
                if (_v_LocationId != value)
                {
                  Onv_LocationIdChanging(ref value);
                  ReportPropertyChanging("v_LocationId");
                  _v_LocationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_LocationId");
                  Onv_LocationIdChanged();
              }
            }
        }
        private string _v_LocationId;
        partial void OnGetv_LocationId(ref string value);
        partial void Onv_LocationIdChanging(ref string value);
        partial void Onv_LocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for v_Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Email
        {
            get
            {
                string value = _v_Email;
                OnGetv_Email(ref value);
                return value;
            }
            set
            {
                if (_v_Email != value)
                {
                  Onv_EmailChanging(ref value);
                  ReportPropertyChanging("v_Email");
                  _v_Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Email");
                  Onv_EmailChanged();
              }
            }
        }
        private string _v_Email;
        partial void OnGetv_Email(ref string value);
        partial void Onv_EmailChanging(ref string value);
        partial void Onv_EmailChanged();
    
        /// <summary>
        /// There are no comments for ValueSede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ValueSede
        {
            get
            {
                global::System.Nullable<int> value = _ValueSede;
                OnGetValueSede(ref value);
                return value;
            }
            set
            {
                if (_ValueSede != value)
                {
                  OnValueSedeChanging(ref value);
                  ReportPropertyChanging("ValueSede");
                  _ValueSede = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValueSede");
                  OnValueSedeChanged();
              }
            }
        }
        private global::System.Nullable<int> _ValueSede;
        partial void OnGetValueSede(ref global::System.Nullable<int> value);
        partial void OnValueSedeChanging(ref global::System.Nullable<int> value);
        partial void OnValueSedeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for area in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_Area_v_AreaCode", "area")]
        public EntityCollection<area> area
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<area>("Sigesoft.Node.WinClient.DAL.Fk_Location_Area_v_AreaCode", "area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<area>("Sigesoft.Node.WinClient.DAL.Fk_Location_Area_v_AreaCode", "area", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for groupoccupation in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_GroupOccupation_v_GroupOccupationCode", "groupoccupation")]
        public EntityCollection<groupoccupation> groupoccupation
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<groupoccupation>("Sigesoft.Node.WinClient.DAL.Fk_Location_GroupOccupation_v_GroupOccupationCode", "groupoccupation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<groupoccupation>("Sigesoft.Node.WinClient.DAL.Fk_Location_GroupOccupation_v_GroupOccupationCode", "groupoccupation", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for nodeorganizationlocationprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_NodeOrganizationLocationProfile_v_LocationId", "nodeorganizationlocationprofile")]
        public EntityCollection<nodeorganizationlocationprofile> nodeorganizationlocationprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodeorganizationlocationprofile>("Sigesoft.Node.WinClient.DAL.Fk_Location_NodeOrganizationLocationProfile_v_LocationId", "nodeorganizationlocationprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodeorganizationlocationprofile>("Sigesoft.Node.WinClient.DAL.Fk_Location_NodeOrganizationLocationProfile_v_LocationId", "nodeorganizationlocationprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for nodeorganizationlocationwarehouseprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Orga", "nodeorganizationlocationwarehouseprofile")]
        public EntityCollection<nodeorganizationlocationwarehouseprofile> nodeorganizationlocationwarehouseprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodeorganizationlocationwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Orga", "nodeorganizationlocationwarehouseprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodeorganizationlocationwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Orga", "nodeorganizationlocationwarehouseprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_Warehouse_v_LocationId", "warehouse")]
        public EntityCollection<warehouse> warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Location_Warehouse_v_LocationId", "warehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Location_Warehouse_v_LocationId", "warehouse", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.log in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_LogId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="log")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class log : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new log object.
        /// </summary>
        /// <param name="v_LogId">Initial value of v_LogId.</param>
        public static log Createlog(string v_LogId)
        {
            log log = new log();
            log.v_LogId = v_LogId;
            return log;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_LogId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_LogId
        {
            get
            {
                string value = _v_LogId;
                OnGetv_LogId(ref value);
                return value;
            }
            set
            {
                if (_v_LogId != value)
                {
                  Onv_LogIdChanging(ref value);
                  ReportPropertyChanging("v_LogId");
                  _v_LogId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_LogId");
                  Onv_LogIdChanged();
              }
            }
        }
        private string _v_LogId;
        partial void OnGetv_LogId(ref string value);
        partial void Onv_LogIdChanging(ref string value);
        partial void Onv_LogIdChanged();
    
        /// <summary>
        /// There are no comments for i_NodeLogId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NodeLogId
        {
            get
            {
                global::System.Nullable<int> value = _i_NodeLogId;
                OnGeti_NodeLogId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeLogId != value)
                {
                  Oni_NodeLogIdChanging(ref value);
                  ReportPropertyChanging("i_NodeLogId");
                  _i_NodeLogId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeLogId");
                  Oni_NodeLogIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NodeLogId;
        partial void OnGeti_NodeLogId(ref global::System.Nullable<int> value);
        partial void Oni_NodeLogIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_NodeLogIdChanged();
    
        /// <summary>
        /// There are no comments for i_EventTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_EventTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_EventTypeId;
                OnGeti_EventTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_EventTypeId != value)
                {
                  Oni_EventTypeIdChanging(ref value);
                  ReportPropertyChanging("i_EventTypeId");
                  _i_EventTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_EventTypeId");
                  Oni_EventTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_EventTypeId;
        partial void OnGeti_EventTypeId(ref global::System.Nullable<int> value);
        partial void Oni_EventTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_EventTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for d_Date in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_Date
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_Date;
                OnGetd_Date(ref value);
                return value;
            }
            set
            {
                if (_d_Date != value)
                {
                  Ond_DateChanging(ref value);
                  ReportPropertyChanging("d_Date");
                  _d_Date = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_Date");
                  Ond_DateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_Date;
        partial void OnGetd_Date(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateChanged();
    
        /// <summary>
        /// There are no comments for i_SystemUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SystemUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_SystemUserId;
                OnGeti_SystemUserId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserId != value)
                {
                  Oni_SystemUserIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserId");
                  _i_SystemUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserId");
                  Oni_SystemUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SystemUserId;
        partial void OnGeti_SystemUserId(ref global::System.Nullable<int> value);
        partial void Oni_SystemUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SystemUserIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProcessEntity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProcessEntity
        {
            get
            {
                string value = _v_ProcessEntity;
                OnGetv_ProcessEntity(ref value);
                return value;
            }
            set
            {
                if (_v_ProcessEntity != value)
                {
                  Onv_ProcessEntityChanging(ref value);
                  ReportPropertyChanging("v_ProcessEntity");
                  _v_ProcessEntity = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProcessEntity");
                  Onv_ProcessEntityChanged();
              }
            }
        }
        private string _v_ProcessEntity;
        partial void OnGetv_ProcessEntity(ref string value);
        partial void Onv_ProcessEntityChanging(ref string value);
        partial void Onv_ProcessEntityChanged();
    
        /// <summary>
        /// There are no comments for v_ElementItem in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ElementItem
        {
            get
            {
                string value = _v_ElementItem;
                OnGetv_ElementItem(ref value);
                return value;
            }
            set
            {
                if (_v_ElementItem != value)
                {
                  Onv_ElementItemChanging(ref value);
                  ReportPropertyChanging("v_ElementItem");
                  _v_ElementItem = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ElementItem");
                  Onv_ElementItemChanged();
              }
            }
        }
        private string _v_ElementItem;
        partial void OnGetv_ElementItem(ref string value);
        partial void Onv_ElementItemChanging(ref string value);
        partial void Onv_ElementItemChanged();
    
        /// <summary>
        /// There are no comments for i_Success in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Success
        {
            get
            {
                global::System.Nullable<int> value = _i_Success;
                OnGeti_Success(ref value);
                return value;
            }
            set
            {
                if (_i_Success != value)
                {
                  Oni_SuccessChanging(ref value);
                  ReportPropertyChanging("i_Success");
                  _i_Success = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Success");
                  Oni_SuccessChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Success;
        partial void OnGeti_Success(ref global::System.Nullable<int> value);
        partial void Oni_SuccessChanging(ref global::System.Nullable<int> value);
        partial void Oni_SuccessChanged();
    
        /// <summary>
        /// There are no comments for v_ErrorException in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ErrorException
        {
            get
            {
                string value = _v_ErrorException;
                OnGetv_ErrorException(ref value);
                return value;
            }
            set
            {
                if (_v_ErrorException != value)
                {
                  Onv_ErrorExceptionChanging(ref value);
                  ReportPropertyChanging("v_ErrorException");
                  _v_ErrorException = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ErrorException");
                  Onv_ErrorExceptionChanged();
              }
            }
        }
        private string _v_ErrorException;
        partial void OnGetv_ErrorException(ref string value);
        partial void Onv_ErrorExceptionChanging(ref string value);
        partial void Onv_ErrorExceptionChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.loginexterno in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_Id
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="loginexterno")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class loginexterno : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new loginexterno object.
        /// </summary>
        /// <param name="i_Id">Initial value of i_Id.</param>
        /// <param name="v_Usuario">Initial value of v_Usuario.</param>
        /// <param name="v_Password">Initial value of v_Password.</param>
        /// <param name="v_Nombres">Initial value of v_Nombres.</param>
        /// <param name="v_OrganizationId">Initial value of v_OrganizationId.</param>
        /// <param name="d_FechaRegistro">Initial value of d_FechaRegistro.</param>
        public static loginexterno Createloginexterno(int i_Id, string v_Usuario, string v_Password, string v_Nombres, string v_OrganizationId, global::System.DateTime d_FechaRegistro)
        {
            loginexterno loginexterno = new loginexterno();
            loginexterno.i_Id = i_Id;
            loginexterno.v_Usuario = v_Usuario;
            loginexterno.v_Password = v_Password;
            loginexterno.v_Nombres = v_Nombres;
            loginexterno.v_OrganizationId = v_OrganizationId;
            loginexterno.d_FechaRegistro = d_FechaRegistro;
            return loginexterno;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_Id
        {
            get
            {
                int value = _i_Id;
                OnGeti_Id(ref value);
                return value;
            }
            set
            {
                if (_i_Id != value)
                {
                  Oni_IdChanging(ref value);
                  ReportPropertyChanging("i_Id");
                  _i_Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Id");
                  Oni_IdChanged();
              }
            }
        }
        private int _i_Id;
        partial void OnGeti_Id(ref int value);
        partial void Oni_IdChanging(ref int value);
        partial void Oni_IdChanged();
    
        /// <summary>
        /// There are no comments for v_Usuario in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_Usuario
        {
            get
            {
                string value = _v_Usuario;
                OnGetv_Usuario(ref value);
                return value;
            }
            set
            {
                if (_v_Usuario != value)
                {
                  Onv_UsuarioChanging(ref value);
                  ReportPropertyChanging("v_Usuario");
                  _v_Usuario = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_Usuario");
                  Onv_UsuarioChanged();
              }
            }
        }
        private string _v_Usuario;
        partial void OnGetv_Usuario(ref string value);
        partial void Onv_UsuarioChanging(ref string value);
        partial void Onv_UsuarioChanged();
    
        /// <summary>
        /// There are no comments for v_Password in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_Password
        {
            get
            {
                string value = _v_Password;
                OnGetv_Password(ref value);
                return value;
            }
            set
            {
                if (_v_Password != value)
                {
                  Onv_PasswordChanging(ref value);
                  ReportPropertyChanging("v_Password");
                  _v_Password = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_Password");
                  Onv_PasswordChanged();
              }
            }
        }
        private string _v_Password;
        partial void OnGetv_Password(ref string value);
        partial void Onv_PasswordChanging(ref string value);
        partial void Onv_PasswordChanged();
    
        /// <summary>
        /// There are no comments for v_Nombres in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_Nombres
        {
            get
            {
                string value = _v_Nombres;
                OnGetv_Nombres(ref value);
                return value;
            }
            set
            {
                if (_v_Nombres != value)
                {
                  Onv_NombresChanging(ref value);
                  ReportPropertyChanging("v_Nombres");
                  _v_Nombres = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_Nombres");
                  Onv_NombresChanged();
              }
            }
        }
        private string _v_Nombres;
        partial void OnGetv_Nombres(ref string value);
        partial void Onv_NombresChanging(ref string value);
        partial void Onv_NombresChanged();
    
        /// <summary>
        /// There are no comments for v_Apellidos in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Apellidos
        {
            get
            {
                string value = _v_Apellidos;
                OnGetv_Apellidos(ref value);
                return value;
            }
            set
            {
                if (_v_Apellidos != value)
                {
                  Onv_ApellidosChanging(ref value);
                  ReportPropertyChanging("v_Apellidos");
                  _v_Apellidos = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Apellidos");
                  Onv_ApellidosChanged();
              }
            }
        }
        private string _v_Apellidos;
        partial void OnGetv_Apellidos(ref string value);
        partial void Onv_ApellidosChanging(ref string value);
        partial void Onv_ApellidosChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for d_FechaRegistro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime d_FechaRegistro
        {
            get
            {
                global::System.DateTime value = _d_FechaRegistro;
                OnGetd_FechaRegistro(ref value);
                return value;
            }
            set
            {
                if (_d_FechaRegistro != value)
                {
                  Ond_FechaRegistroChanging(ref value);
                  ReportPropertyChanging("d_FechaRegistro");
                  _d_FechaRegistro = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_FechaRegistro");
                  Ond_FechaRegistroChanged();
              }
            }
        }
        private global::System.DateTime _d_FechaRegistro;
        partial void OnGetd_FechaRegistro(ref global::System.DateTime value);
        partial void Ond_FechaRegistroChanging(ref global::System.DateTime value);
        partial void Ond_FechaRegistroChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.masterrecommendationrestricction in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_MasterRecommendationRestricctionId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="masterrecommendationrestricction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class masterrecommendationrestricction : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new masterrecommendationrestricction object.
        /// </summary>
        /// <param name="v_MasterRecommendationRestricctionId">Initial value of v_MasterRecommendationRestricctionId.</param>
        public static masterrecommendationrestricction Createmasterrecommendationrestricction(string v_MasterRecommendationRestricctionId)
        {
            masterrecommendationrestricction masterrecommendationrestricction = new masterrecommendationrestricction();
            masterrecommendationrestricction.v_MasterRecommendationRestricctionId = v_MasterRecommendationRestricctionId;
            return masterrecommendationrestricction;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_MasterRecommendationRestricctionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_MasterRecommendationRestricctionId
        {
            get
            {
                string value = _v_MasterRecommendationRestricctionId;
                OnGetv_MasterRecommendationRestricctionId(ref value);
                return value;
            }
            set
            {
                if (_v_MasterRecommendationRestricctionId != value)
                {
                  Onv_MasterRecommendationRestricctionIdChanging(ref value);
                  ReportPropertyChanging("v_MasterRecommendationRestricctionId");
                  _v_MasterRecommendationRestricctionId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_MasterRecommendationRestricctionId");
                  Onv_MasterRecommendationRestricctionIdChanged();
              }
            }
        }
        private string _v_MasterRecommendationRestricctionId;
        partial void OnGetv_MasterRecommendationRestricctionId(ref string value);
        partial void Onv_MasterRecommendationRestricctionIdChanging(ref string value);
        partial void Onv_MasterRecommendationRestricctionIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for i_TypifyingId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TypifyingId
        {
            get
            {
                global::System.Nullable<int> value = _i_TypifyingId;
                OnGeti_TypifyingId(ref value);
                return value;
            }
            set
            {
                if (_i_TypifyingId != value)
                {
                  Oni_TypifyingIdChanging(ref value);
                  ReportPropertyChanging("i_TypifyingId");
                  _i_TypifyingId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TypifyingId");
                  Oni_TypifyingIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TypifyingId;
        partial void OnGeti_TypifyingId(ref global::System.Nullable<int> value);
        partial void Oni_TypifyingIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TypifyingIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for componentfieldvaluesrecommendation in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_MasterRecommendationRestricction_ComponentFieldValuesRecomme", "componentfieldvaluesrecommendation")]
        public EntityCollection<componentfieldvaluesrecommendation> componentfieldvaluesrecommendation
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<componentfieldvaluesrecommendation>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRecomme", "componentfieldvaluesrecommendation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<componentfieldvaluesrecommendation>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRecomme", "componentfieldvaluesrecommendation", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for componentfieldvaluesrestriction in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_MasterRecommendationRestricction_ComponentFieldValuesRestric", "componentfieldvaluesrestriction")]
        public EntityCollection<componentfieldvaluesrestriction> componentfieldvaluesrestriction
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<componentfieldvaluesrestriction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRestric", "componentfieldvaluesrestriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<componentfieldvaluesrestriction>("Sigesoft.Node.WinClient.DAL.Fk_MasterRecommendationRestricction_ComponentFieldValuesRestric", "componentfieldvaluesrestriction", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.medication in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_MedicationId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="medication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class medication : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new medication object.
        /// </summary>
        /// <param name="v_MedicationId">Initial value of v_MedicationId.</param>
        public static medication Createmedication(string v_MedicationId)
        {
            medication medication = new medication();
            medication.v_MedicationId = v_MedicationId;
            return medication;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_MedicationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_MedicationId
        {
            get
            {
                string value = _v_MedicationId;
                OnGetv_MedicationId(ref value);
                return value;
            }
            set
            {
                if (_v_MedicationId != value)
                {
                  Onv_MedicationIdChanging(ref value);
                  ReportPropertyChanging("v_MedicationId");
                  _v_MedicationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_MedicationId");
                  Onv_MedicationIdChanged();
              }
            }
        }
        private string _v_MedicationId;
        partial void OnGetv_MedicationId(ref string value);
        partial void Onv_MedicationIdChanging(ref string value);
        partial void Onv_MedicationIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProductId
        {
            get
            {
                string value = _v_ProductId;
                OnGetv_ProductId(ref value);
                return value;
            }
            set
            {
                if (_v_ProductId != value)
                {
                  Onv_ProductIdChanging(ref value);
                  ReportPropertyChanging("v_ProductId");
                  _v_ProductId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProductId");
                  Onv_ProductIdChanged();
              }
            }
        }
        private string _v_ProductId;
        partial void OnGetv_ProductId(ref string value);
        partial void Onv_ProductIdChanging(ref string value);
        partial void Onv_ProductIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for r_Quantity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_Quantity
        {
            get
            {
                global::System.Nullable<float> value = _r_Quantity;
                OnGetr_Quantity(ref value);
                return value;
            }
            set
            {
                if (_r_Quantity != value)
                {
                  Onr_QuantityChanging(ref value);
                  ReportPropertyChanging("r_Quantity");
                  _r_Quantity = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_Quantity");
                  Onr_QuantityChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_Quantity;
        partial void OnGetr_Quantity(ref global::System.Nullable<float> value);
        partial void Onr_QuantityChanging(ref global::System.Nullable<float> value);
        partial void Onr_QuantityChanged();
    
        /// <summary>
        /// There are no comments for v_Doses in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Doses
        {
            get
            {
                string value = _v_Doses;
                OnGetv_Doses(ref value);
                return value;
            }
            set
            {
                if (_v_Doses != value)
                {
                  Onv_DosesChanging(ref value);
                  ReportPropertyChanging("v_Doses");
                  _v_Doses = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Doses");
                  Onv_DosesChanged();
              }
            }
        }
        private string _v_Doses;
        partial void OnGetv_Doses(ref string value);
        partial void Onv_DosesChanging(ref string value);
        partial void Onv_DosesChanged();
    
        /// <summary>
        /// There are no comments for i_ViaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ViaId
        {
            get
            {
                global::System.Nullable<int> value = _i_ViaId;
                OnGeti_ViaId(ref value);
                return value;
            }
            set
            {
                if (_i_ViaId != value)
                {
                  Oni_ViaIdChanging(ref value);
                  ReportPropertyChanging("i_ViaId");
                  _i_ViaId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ViaId");
                  Oni_ViaIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ViaId;
        partial void OnGeti_ViaId(ref global::System.Nullable<int> value);
        partial void Oni_ViaIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ViaIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for product in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Product_Medication_v_ProductId", "product")]
        public product product
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_Medication_v_ProductId", "product").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_Medication_v_ProductId", "product").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for product in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<product> productReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_Medication_v_ProductId", "product");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_Medication_v_ProductId", "product", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_Medication_v_ProductId", "product").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Medication_v_ServiceId", "service")]
        public service service
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Medication_v_ServiceId", "service").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Medication_v_ServiceId", "service").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<service> serviceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Medication_v_ServiceId", "service");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Medication_v_ServiceId", "service", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Medication_v_ServiceId", "service").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.movement in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_MovementId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="movement")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class movement : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new movement object.
        /// </summary>
        /// <param name="v_MovementId">Initial value of v_MovementId.</param>
        public static movement Createmovement(string v_MovementId)
        {
            movement movement = new movement();
            movement.v_MovementId = v_MovementId;
            return movement;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_MovementId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_MovementId
        {
            get
            {
                string value = _v_MovementId;
                OnGetv_MovementId(ref value);
                return value;
            }
            set
            {
                if (_v_MovementId != value)
                {
                  Onv_MovementIdChanging(ref value);
                  ReportPropertyChanging("v_MovementId");
                  _v_MovementId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_MovementId");
                  Onv_MovementIdChanged();
              }
            }
        }
        private string _v_MovementId;
        partial void OnGetv_MovementId(ref string value);
        partial void Onv_MovementIdChanging(ref string value);
        partial void Onv_MovementIdChanged();
    
        /// <summary>
        /// There are no comments for v_WarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_WarehouseId
        {
            get
            {
                string value = _v_WarehouseId;
                OnGetv_WarehouseId(ref value);
                return value;
            }
            set
            {
                if (_v_WarehouseId != value)
                {
                  Onv_WarehouseIdChanging(ref value);
                  ReportPropertyChanging("v_WarehouseId");
                  _v_WarehouseId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_WarehouseId");
                  Onv_WarehouseIdChanged();
              }
            }
        }
        private string _v_WarehouseId;
        partial void OnGetv_WarehouseId(ref string value);
        partial void Onv_WarehouseIdChanging(ref string value);
        partial void Onv_WarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for v_SupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SupplierId
        {
            get
            {
                string value = _v_SupplierId;
                OnGetv_SupplierId(ref value);
                return value;
            }
            set
            {
                if (_v_SupplierId != value)
                {
                  Onv_SupplierIdChanging(ref value);
                  ReportPropertyChanging("v_SupplierId");
                  _v_SupplierId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SupplierId");
                  Onv_SupplierIdChanged();
              }
            }
        }
        private string _v_SupplierId;
        partial void OnGetv_SupplierId(ref string value);
        partial void Onv_SupplierIdChanging(ref string value);
        partial void Onv_SupplierIdChanged();
    
        /// <summary>
        /// There are no comments for i_ProcessTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ProcessTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ProcessTypeId;
                OnGeti_ProcessTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_ProcessTypeId != value)
                {
                  Oni_ProcessTypeIdChanging(ref value);
                  ReportPropertyChanging("i_ProcessTypeId");
                  _i_ProcessTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ProcessTypeId");
                  Oni_ProcessTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ProcessTypeId;
        partial void OnGeti_ProcessTypeId(ref global::System.Nullable<int> value);
        partial void Oni_ProcessTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ProcessTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_ParentMovementId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ParentMovementId
        {
            get
            {
                string value = _v_ParentMovementId;
                OnGetv_ParentMovementId(ref value);
                return value;
            }
            set
            {
                if (_v_ParentMovementId != value)
                {
                  Onv_ParentMovementIdChanging(ref value);
                  ReportPropertyChanging("v_ParentMovementId");
                  _v_ParentMovementId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ParentMovementId");
                  Onv_ParentMovementIdChanged();
              }
            }
        }
        private string _v_ParentMovementId;
        partial void OnGetv_ParentMovementId(ref string value);
        partial void Onv_ParentMovementIdChanging(ref string value);
        partial void Onv_ParentMovementIdChanged();
    
        /// <summary>
        /// There are no comments for v_Motive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Motive
        {
            get
            {
                string value = _v_Motive;
                OnGetv_Motive(ref value);
                return value;
            }
            set
            {
                if (_v_Motive != value)
                {
                  Onv_MotiveChanging(ref value);
                  ReportPropertyChanging("v_Motive");
                  _v_Motive = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Motive");
                  Onv_MotiveChanged();
              }
            }
        }
        private string _v_Motive;
        partial void OnGetv_Motive(ref string value);
        partial void Onv_MotiveChanging(ref string value);
        partial void Onv_MotiveChanged();
    
        /// <summary>
        /// There are no comments for i_MotiveTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MotiveTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_MotiveTypeId;
                OnGeti_MotiveTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_MotiveTypeId != value)
                {
                  Oni_MotiveTypeIdChanging(ref value);
                  ReportPropertyChanging("i_MotiveTypeId");
                  _i_MotiveTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MotiveTypeId");
                  Oni_MotiveTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MotiveTypeId;
        partial void OnGeti_MotiveTypeId(ref global::System.Nullable<int> value);
        partial void Oni_MotiveTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MotiveTypeIdChanged();
    
        /// <summary>
        /// There are no comments for d_Date in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_Date
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_Date;
                OnGetd_Date(ref value);
                return value;
            }
            set
            {
                if (_d_Date != value)
                {
                  Ond_DateChanging(ref value);
                  ReportPropertyChanging("d_Date");
                  _d_Date = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_Date");
                  Ond_DateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_Date;
        partial void OnGetd_Date(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DateChanged();
    
        /// <summary>
        /// There are no comments for r_TotalQuantity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_TotalQuantity
        {
            get
            {
                global::System.Nullable<float> value = _r_TotalQuantity;
                OnGetr_TotalQuantity(ref value);
                return value;
            }
            set
            {
                if (_r_TotalQuantity != value)
                {
                  Onr_TotalQuantityChanging(ref value);
                  ReportPropertyChanging("r_TotalQuantity");
                  _r_TotalQuantity = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_TotalQuantity");
                  Onr_TotalQuantityChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_TotalQuantity;
        partial void OnGetr_TotalQuantity(ref global::System.Nullable<float> value);
        partial void Onr_TotalQuantityChanging(ref global::System.Nullable<float> value);
        partial void Onr_TotalQuantityChanged();
    
        /// <summary>
        /// There are no comments for i_MovementTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MovementTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_MovementTypeId;
                OnGeti_MovementTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_MovementTypeId != value)
                {
                  Oni_MovementTypeIdChanging(ref value);
                  ReportPropertyChanging("i_MovementTypeId");
                  _i_MovementTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MovementTypeId");
                  Oni_MovementTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MovementTypeId;
        partial void OnGeti_MovementTypeId(ref global::System.Nullable<int> value);
        partial void Oni_MovementTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MovementTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_RequireRemoteProcess in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_RequireRemoteProcess
        {
            get
            {
                global::System.Nullable<int> value = _i_RequireRemoteProcess;
                OnGeti_RequireRemoteProcess(ref value);
                return value;
            }
            set
            {
                if (_i_RequireRemoteProcess != value)
                {
                  Oni_RequireRemoteProcessChanging(ref value);
                  ReportPropertyChanging("i_RequireRemoteProcess");
                  _i_RequireRemoteProcess = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_RequireRemoteProcess");
                  Oni_RequireRemoteProcessChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_RequireRemoteProcess;
        partial void OnGeti_RequireRemoteProcess(ref global::System.Nullable<int> value);
        partial void Oni_RequireRemoteProcessChanging(ref global::System.Nullable<int> value);
        partial void Oni_RequireRemoteProcessChanged();
    
        /// <summary>
        /// There are no comments for v_RemoteWarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_RemoteWarehouseId
        {
            get
            {
                string value = _v_RemoteWarehouseId;
                OnGetv_RemoteWarehouseId(ref value);
                return value;
            }
            set
            {
                if (_v_RemoteWarehouseId != value)
                {
                  Onv_RemoteWarehouseIdChanging(ref value);
                  ReportPropertyChanging("v_RemoteWarehouseId");
                  _v_RemoteWarehouseId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_RemoteWarehouseId");
                  Onv_RemoteWarehouseIdChanged();
              }
            }
        }
        private string _v_RemoteWarehouseId;
        partial void OnGetv_RemoteWarehouseId(ref string value);
        partial void Onv_RemoteWarehouseIdChanging(ref string value);
        partial void Onv_RemoteWarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for i_CurrencyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_CurrencyId
        {
            get
            {
                global::System.Nullable<int> value = _i_CurrencyId;
                OnGeti_CurrencyId(ref value);
                return value;
            }
            set
            {
                if (_i_CurrencyId != value)
                {
                  Oni_CurrencyIdChanging(ref value);
                  ReportPropertyChanging("i_CurrencyId");
                  _i_CurrencyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_CurrencyId");
                  Oni_CurrencyIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_CurrencyId;
        partial void OnGeti_CurrencyId(ref global::System.Nullable<int> value);
        partial void Oni_CurrencyIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_CurrencyIdChanged();
    
        /// <summary>
        /// There are no comments for r_ExchangeRate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_ExchangeRate
        {
            get
            {
                global::System.Nullable<float> value = _r_ExchangeRate;
                OnGetr_ExchangeRate(ref value);
                return value;
            }
            set
            {
                if (_r_ExchangeRate != value)
                {
                  Onr_ExchangeRateChanging(ref value);
                  ReportPropertyChanging("r_ExchangeRate");
                  _r_ExchangeRate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_ExchangeRate");
                  Onr_ExchangeRateChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_ExchangeRate;
        partial void OnGetr_ExchangeRate(ref global::System.Nullable<float> value);
        partial void Onr_ExchangeRateChanging(ref global::System.Nullable<float> value);
        partial void Onr_ExchangeRateChanged();
    
        /// <summary>
        /// There are no comments for v_ReferenceDocument in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ReferenceDocument
        {
            get
            {
                string value = _v_ReferenceDocument;
                OnGetv_ReferenceDocument(ref value);
                return value;
            }
            set
            {
                if (_v_ReferenceDocument != value)
                {
                  Onv_ReferenceDocumentChanging(ref value);
                  ReportPropertyChanging("v_ReferenceDocument");
                  _v_ReferenceDocument = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ReferenceDocument");
                  Onv_ReferenceDocumentChanged();
              }
            }
        }
        private string _v_ReferenceDocument;
        partial void OnGetv_ReferenceDocument(ref string value);
        partial void Onv_ReferenceDocumentChanging(ref string value);
        partial void Onv_ReferenceDocumentChanged();
    
        /// <summary>
        /// There are no comments for i_CostCenterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_CostCenterId
        {
            get
            {
                global::System.Nullable<int> value = _i_CostCenterId;
                OnGeti_CostCenterId(ref value);
                return value;
            }
            set
            {
                if (_i_CostCenterId != value)
                {
                  Oni_CostCenterIdChanging(ref value);
                  ReportPropertyChanging("i_CostCenterId");
                  _i_CostCenterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_CostCenterId");
                  Oni_CostCenterIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_CostCenterId;
        partial void OnGeti_CostCenterId(ref global::System.Nullable<int> value);
        partial void Oni_CostCenterIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_CostCenterIdChanged();
    
        /// <summary>
        /// There are no comments for v_Observations in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Observations
        {
            get
            {
                string value = _v_Observations;
                OnGetv_Observations(ref value);
                return value;
            }
            set
            {
                if (_v_Observations != value)
                {
                  Onv_ObservationsChanging(ref value);
                  ReportPropertyChanging("v_Observations");
                  _v_Observations = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Observations");
                  Onv_ObservationsChanged();
              }
            }
        }
        private string _v_Observations;
        partial void OnGetv_Observations(ref string value);
        partial void Onv_ObservationsChanging(ref string value);
        partial void Onv_ObservationsChanged();
    
        /// <summary>
        /// There are no comments for i_IsLocallyProcessed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsLocallyProcessed
        {
            get
            {
                global::System.Nullable<int> value = _i_IsLocallyProcessed;
                OnGeti_IsLocallyProcessed(ref value);
                return value;
            }
            set
            {
                if (_i_IsLocallyProcessed != value)
                {
                  Oni_IsLocallyProcessedChanging(ref value);
                  ReportPropertyChanging("i_IsLocallyProcessed");
                  _i_IsLocallyProcessed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsLocallyProcessed");
                  Oni_IsLocallyProcessedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsLocallyProcessed;
        partial void OnGeti_IsLocallyProcessed(ref global::System.Nullable<int> value);
        partial void Oni_IsLocallyProcessedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsLocallyProcessedChanged();
    
        /// <summary>
        /// There are no comments for i_IsRemoteProcessed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsRemoteProcessed
        {
            get
            {
                global::System.Nullable<int> value = _i_IsRemoteProcessed;
                OnGeti_IsRemoteProcessed(ref value);
                return value;
            }
            set
            {
                if (_i_IsRemoteProcessed != value)
                {
                  Oni_IsRemoteProcessedChanging(ref value);
                  ReportPropertyChanging("i_IsRemoteProcessed");
                  _i_IsRemoteProcessed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsRemoteProcessed");
                  Oni_IsRemoteProcessedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsRemoteProcessed;
        partial void OnGeti_IsRemoteProcessed(ref global::System.Nullable<int> value);
        partial void Oni_IsRemoteProcessedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsRemoteProcessedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateNodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateNodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateNodeId;
                OnGeti_UpdateNodeId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateNodeId != value)
                {
                  Oni_UpdateNodeIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateNodeId");
                  _i_UpdateNodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateNodeId");
                  Oni_UpdateNodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateNodeId;
        partial void OnGeti_UpdateNodeId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for supplier in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Supplier_Movement_i_SupplierId_i_NodeId", "supplier")]
        public supplier supplier
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<supplier>("Sigesoft.Node.WinClient.DAL.Fk_Supplier_Movement_i_SupplierId_i_NodeId", "supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<supplier>("Sigesoft.Node.WinClient.DAL.Fk_Supplier_Movement_i_SupplierId_i_NodeId", "supplier").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for supplier in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<supplier> supplierReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<supplier>("Sigesoft.Node.WinClient.DAL.Fk_Supplier_Movement_i_SupplierId_i_NodeId", "supplier");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<supplier>("Sigesoft.Node.WinClient.DAL.Fk_Supplier_Movement_i_SupplierId_i_NodeId", "supplier", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<supplier>("Sigesoft.Node.WinClient.DAL.Fk_Supplier_Movement_i_SupplierId_i_NodeId", "supplier").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_Movement_i_WarehouseId", "warehouse")]
        public warehouse warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_Movement_i_WarehouseId", "warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_Movement_i_WarehouseId", "warehouse").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<warehouse> warehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_Movement_i_WarehouseId", "warehouse");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_Movement_i_WarehouseId", "warehouse", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_Movement_i_WarehouseId", "warehouse").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for movementdetail in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Movement_MovementDetail_i_MovementId", "movementdetail")]
        public EntityCollection<movementdetail> movementdetail
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<movementdetail>("Sigesoft.Node.WinClient.DAL.Fk_Movement_MovementDetail_i_MovementId", "movementdetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<movementdetail>("Sigesoft.Node.WinClient.DAL.Fk_Movement_MovementDetail_i_MovementId", "movementdetail", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.movementdetail in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_MovementId
    /// v_ProductId
    /// v_WarehouseId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="movementdetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class movementdetail : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new movementdetail object.
        /// </summary>
        /// <param name="v_MovementId">Initial value of v_MovementId.</param>
        /// <param name="v_ProductId">Initial value of v_ProductId.</param>
        /// <param name="v_WarehouseId">Initial value of v_WarehouseId.</param>
        public static movementdetail Createmovementdetail(string v_MovementId, string v_ProductId, string v_WarehouseId)
        {
            movementdetail movementdetail = new movementdetail();
            movementdetail.v_MovementId = v_MovementId;
            movementdetail.v_ProductId = v_ProductId;
            movementdetail.v_WarehouseId = v_WarehouseId;
            return movementdetail;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_MovementId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_MovementId
        {
            get
            {
                string value = _v_MovementId;
                OnGetv_MovementId(ref value);
                return value;
            }
            set
            {
                if (_v_MovementId != value)
                {
                  Onv_MovementIdChanging(ref value);
                  ReportPropertyChanging("v_MovementId");
                  _v_MovementId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_MovementId");
                  Onv_MovementIdChanged();
              }
            }
        }
        private string _v_MovementId;
        partial void OnGetv_MovementId(ref string value);
        partial void Onv_MovementIdChanging(ref string value);
        partial void Onv_MovementIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ProductId
        {
            get
            {
                string value = _v_ProductId;
                OnGetv_ProductId(ref value);
                return value;
            }
            set
            {
                if (_v_ProductId != value)
                {
                  Onv_ProductIdChanging(ref value);
                  ReportPropertyChanging("v_ProductId");
                  _v_ProductId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ProductId");
                  Onv_ProductIdChanged();
              }
            }
        }
        private string _v_ProductId;
        partial void OnGetv_ProductId(ref string value);
        partial void Onv_ProductIdChanging(ref string value);
        partial void Onv_ProductIdChanged();
    
        /// <summary>
        /// There are no comments for v_WarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_WarehouseId
        {
            get
            {
                string value = _v_WarehouseId;
                OnGetv_WarehouseId(ref value);
                return value;
            }
            set
            {
                if (_v_WarehouseId != value)
                {
                  Onv_WarehouseIdChanging(ref value);
                  ReportPropertyChanging("v_WarehouseId");
                  _v_WarehouseId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_WarehouseId");
                  Onv_WarehouseIdChanged();
              }
            }
        }
        private string _v_WarehouseId;
        partial void OnGetv_WarehouseId(ref string value);
        partial void Onv_WarehouseIdChanging(ref string value);
        partial void Onv_WarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for r_StockMax in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_StockMax
        {
            get
            {
                global::System.Nullable<float> value = _r_StockMax;
                OnGetr_StockMax(ref value);
                return value;
            }
            set
            {
                if (_r_StockMax != value)
                {
                  Onr_StockMaxChanging(ref value);
                  ReportPropertyChanging("r_StockMax");
                  _r_StockMax = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_StockMax");
                  Onr_StockMaxChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_StockMax;
        partial void OnGetr_StockMax(ref global::System.Nullable<float> value);
        partial void Onr_StockMaxChanging(ref global::System.Nullable<float> value);
        partial void Onr_StockMaxChanged();
    
        /// <summary>
        /// There are no comments for r_StockMin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_StockMin
        {
            get
            {
                global::System.Nullable<float> value = _r_StockMin;
                OnGetr_StockMin(ref value);
                return value;
            }
            set
            {
                if (_r_StockMin != value)
                {
                  Onr_StockMinChanging(ref value);
                  ReportPropertyChanging("r_StockMin");
                  _r_StockMin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_StockMin");
                  Onr_StockMinChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_StockMin;
        partial void OnGetr_StockMin(ref global::System.Nullable<float> value);
        partial void Onr_StockMinChanging(ref global::System.Nullable<float> value);
        partial void Onr_StockMinChanged();
    
        /// <summary>
        /// There are no comments for i_MovementTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MovementTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_MovementTypeId;
                OnGeti_MovementTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_MovementTypeId != value)
                {
                  Oni_MovementTypeIdChanging(ref value);
                  ReportPropertyChanging("i_MovementTypeId");
                  _i_MovementTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MovementTypeId");
                  Oni_MovementTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MovementTypeId;
        partial void OnGeti_MovementTypeId(ref global::System.Nullable<int> value);
        partial void Oni_MovementTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MovementTypeIdChanged();
    
        /// <summary>
        /// There are no comments for r_Quantity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_Quantity
        {
            get
            {
                global::System.Nullable<float> value = _r_Quantity;
                OnGetr_Quantity(ref value);
                return value;
            }
            set
            {
                if (_r_Quantity != value)
                {
                  Onr_QuantityChanging(ref value);
                  ReportPropertyChanging("r_Quantity");
                  _r_Quantity = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_Quantity");
                  Onr_QuantityChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_Quantity;
        partial void OnGetr_Quantity(ref global::System.Nullable<float> value);
        partial void Onr_QuantityChanging(ref global::System.Nullable<float> value);
        partial void Onr_QuantityChanged();
    
        /// <summary>
        /// There are no comments for r_Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_Price
        {
            get
            {
                global::System.Nullable<float> value = _r_Price;
                OnGetr_Price(ref value);
                return value;
            }
            set
            {
                if (_r_Price != value)
                {
                  Onr_PriceChanging(ref value);
                  ReportPropertyChanging("r_Price");
                  _r_Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_Price");
                  Onr_PriceChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_Price;
        partial void OnGetr_Price(ref global::System.Nullable<float> value);
        partial void Onr_PriceChanging(ref global::System.Nullable<float> value);
        partial void Onr_PriceChanged();
    
        /// <summary>
        /// There are no comments for r_SubTotal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_SubTotal
        {
            get
            {
                global::System.Nullable<float> value = _r_SubTotal;
                OnGetr_SubTotal(ref value);
                return value;
            }
            set
            {
                if (_r_SubTotal != value)
                {
                  Onr_SubTotalChanging(ref value);
                  ReportPropertyChanging("r_SubTotal");
                  _r_SubTotal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_SubTotal");
                  Onr_SubTotalChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_SubTotal;
        partial void OnGetr_SubTotal(ref global::System.Nullable<float> value);
        partial void Onr_SubTotalChanging(ref global::System.Nullable<float> value);
        partial void Onr_SubTotalChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for movement in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Movement_MovementDetail_i_MovementId", "movement")]
        public movement movement
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<movement>("Sigesoft.Node.WinClient.DAL.Fk_Movement_MovementDetail_i_MovementId", "movement").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<movement>("Sigesoft.Node.WinClient.DAL.Fk_Movement_MovementDetail_i_MovementId", "movement").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for movement in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<movement> movementReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<movement>("Sigesoft.Node.WinClient.DAL.Fk_Movement_MovementDetail_i_MovementId", "movement");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<movement>("Sigesoft.Node.WinClient.DAL.Fk_Movement_MovementDetail_i_MovementId", "movement", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<movement>("Sigesoft.Node.WinClient.DAL.Fk_Movement_MovementDetail_i_MovementId", "movement").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for product in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Product_MovementDetail_i_ProductId", "product")]
        public product product
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_MovementDetail_i_ProductId", "product").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_MovementDetail_i_ProductId", "product").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for product in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<product> productReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_MovementDetail_i_ProductId", "product");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_MovementDetail_i_ProductId", "product", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_MovementDetail_i_ProductId", "product").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_MovementDetail_i_WarehouseId", "warehouse")]
        public warehouse warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_MovementDetail_i_WarehouseId", "warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_MovementDetail_i_WarehouseId", "warehouse").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<warehouse> warehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_MovementDetail_i_WarehouseId", "warehouse");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_MovementDetail_i_WarehouseId", "warehouse", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_MovementDetail_i_WarehouseId", "warehouse").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.multimediafile in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_MultimediaFileId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="multimediafile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class multimediafile : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new multimediafile object.
        /// </summary>
        /// <param name="v_MultimediaFileId">Initial value of v_MultimediaFileId.</param>
        public static multimediafile Createmultimediafile(string v_MultimediaFileId)
        {
            multimediafile multimediafile = new multimediafile();
            multimediafile.v_MultimediaFileId = v_MultimediaFileId;
            return multimediafile;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_MultimediaFileId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_MultimediaFileId
        {
            get
            {
                string value = _v_MultimediaFileId;
                OnGetv_MultimediaFileId(ref value);
                return value;
            }
            set
            {
                if (_v_MultimediaFileId != value)
                {
                  Onv_MultimediaFileIdChanging(ref value);
                  ReportPropertyChanging("v_MultimediaFileId");
                  _v_MultimediaFileId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_MultimediaFileId");
                  Onv_MultimediaFileIdChanged();
              }
            }
        }
        private string _v_MultimediaFileId;
        partial void OnGetv_MultimediaFileId(ref string value);
        partial void Onv_MultimediaFileIdChanging(ref string value);
        partial void Onv_MultimediaFileIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for v_FileName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FileName
        {
            get
            {
                string value = _v_FileName;
                OnGetv_FileName(ref value);
                return value;
            }
            set
            {
                if (_v_FileName != value)
                {
                  Onv_FileNameChanging(ref value);
                  ReportPropertyChanging("v_FileName");
                  _v_FileName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FileName");
                  Onv_FileNameChanged();
              }
            }
        }
        private string _v_FileName;
        partial void OnGetv_FileName(ref string value);
        partial void Onv_FileNameChanging(ref string value);
        partial void Onv_FileNameChanged();
    
        /// <summary>
        /// There are no comments for b_File in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_File
        {
            get
            {
                byte[] value = _b_File;
                OnGetb_File(ref value);
                return value;
            }
            set
            {
                if (_b_File != value)
                {
                  Onb_FileChanging(ref value);
                  ReportPropertyChanging("b_File");
                  _b_File = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_File");
                  Onb_FileChanged();
              }
            }
        }
        private byte[] _b_File;
        partial void OnGetb_File(ref byte[] value);
        partial void Onb_FileChanging(ref byte[] value);
        partial void Onb_FileChanged();
    
        /// <summary>
        /// There are no comments for b_ThumbnailFile in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_ThumbnailFile
        {
            get
            {
                byte[] value = _b_ThumbnailFile;
                OnGetb_ThumbnailFile(ref value);
                return value;
            }
            set
            {
                if (_b_ThumbnailFile != value)
                {
                  Onb_ThumbnailFileChanging(ref value);
                  ReportPropertyChanging("b_ThumbnailFile");
                  _b_ThumbnailFile = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_ThumbnailFile");
                  Onb_ThumbnailFileChanged();
              }
            }
        }
        private byte[] _b_ThumbnailFile;
        partial void OnGetb_ThumbnailFile(ref byte[] value);
        partial void Onb_ThumbnailFileChanging(ref byte[] value);
        partial void Onb_ThumbnailFileChanged();
    
        /// <summary>
        /// There are no comments for v_Comment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Comment
        {
            get
            {
                string value = _v_Comment;
                OnGetv_Comment(ref value);
                return value;
            }
            set
            {
                if (_v_Comment != value)
                {
                  Onv_CommentChanging(ref value);
                  ReportPropertyChanging("v_Comment");
                  _v_Comment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Comment");
                  Onv_CommentChanged();
              }
            }
        }
        private string _v_Comment;
        partial void OnGetv_Comment(ref string value);
        partial void Onv_CommentChanging(ref string value);
        partial void Onv_CommentChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_MultimediaFile_v_PersonId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_MultimediaFile_v_PersonId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_MultimediaFile_v_PersonId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_MultimediaFile_v_PersonId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_MultimediaFile_v_PersonId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_MultimediaFile_v_PersonId", "person").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentfieldvaluesmultimedia in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_MultimediaFile_ServiceComponentFieldValuesMultimedia_v_Multi", "servicecomponentfieldvaluesmultimedia")]
        public EntityCollection<servicecomponentfieldvaluesmultimedia> servicecomponentfieldvaluesmultimedia
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicecomponentfieldvaluesmultimedia>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentFieldValuesMultimedia_v_Multi", "servicecomponentfieldvaluesmultimedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicecomponentfieldvaluesmultimedia>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentFieldValuesMultimedia_v_Multi", "servicecomponentfieldvaluesmultimedia", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentmultimedia in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_MultimediaFile_ServiceComponentMultimedia_v_MultimediaFileId", "servicecomponentmultimedia")]
        public EntityCollection<servicecomponentmultimedia> servicecomponentmultimedia
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicecomponentmultimedia>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentMultimedia_v_MultimediaFileId", "servicecomponentmultimedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicecomponentmultimedia>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentMultimedia_v_MultimediaFileId", "servicecomponentmultimedia", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicemultimedia in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_MultimediaFile_ServiceMultimedia_v_MultimediaFileId", "servicemultimedia")]
        public EntityCollection<servicemultimedia> servicemultimedia
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicemultimedia>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceMultimedia_v_MultimediaFileId", "servicemultimedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicemultimedia>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceMultimedia_v_MultimediaFileId", "servicemultimedia", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.node in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="node")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class node : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new node object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        public static node Createnode(int i_NodeId)
        {
            node node = new node();
            node.i_NodeId = i_NodeId;
            return node;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for v_Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Description
        {
            get
            {
                string value = _v_Description;
                OnGetv_Description(ref value);
                return value;
            }
            set
            {
                if (_v_Description != value)
                {
                  Onv_DescriptionChanging(ref value);
                  ReportPropertyChanging("v_Description");
                  _v_Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Description");
                  Onv_DescriptionChanged();
              }
            }
        }
        private string _v_Description;
        partial void OnGetv_Description(ref string value);
        partial void Onv_DescriptionChanging(ref string value);
        partial void Onv_DescriptionChanged();
    
        /// <summary>
        /// There are no comments for v_GeografyLocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GeografyLocationId
        {
            get
            {
                string value = _v_GeografyLocationId;
                OnGetv_GeografyLocationId(ref value);
                return value;
            }
            set
            {
                if (_v_GeografyLocationId != value)
                {
                  Onv_GeografyLocationIdChanging(ref value);
                  ReportPropertyChanging("v_GeografyLocationId");
                  _v_GeografyLocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GeografyLocationId");
                  Onv_GeografyLocationIdChanged();
              }
            }
        }
        private string _v_GeografyLocationId;
        partial void OnGetv_GeografyLocationId(ref string value);
        partial void Onv_GeografyLocationIdChanging(ref string value);
        partial void Onv_GeografyLocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_GeografyLocationDescription in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GeografyLocationDescription
        {
            get
            {
                string value = _v_GeografyLocationDescription;
                OnGetv_GeografyLocationDescription(ref value);
                return value;
            }
            set
            {
                if (_v_GeografyLocationDescription != value)
                {
                  Onv_GeografyLocationDescriptionChanging(ref value);
                  ReportPropertyChanging("v_GeografyLocationDescription");
                  _v_GeografyLocationDescription = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GeografyLocationDescription");
                  Onv_GeografyLocationDescriptionChanged();
              }
            }
        }
        private string _v_GeografyLocationDescription;
        partial void OnGetv_GeografyLocationDescription(ref string value);
        partial void Onv_GeografyLocationDescriptionChanging(ref string value);
        partial void Onv_GeografyLocationDescriptionChanged();
    
        /// <summary>
        /// There are no comments for i_NodeTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NodeTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_NodeTypeId;
                OnGeti_NodeTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeTypeId != value)
                {
                  Oni_NodeTypeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeTypeId");
                  _i_NodeTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeTypeId");
                  Oni_NodeTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NodeTypeId;
        partial void OnGeti_NodeTypeId(ref global::System.Nullable<int> value);
        partial void Oni_NodeTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_NodeTypeIdChanged();
    
        /// <summary>
        /// There are no comments for d_BeginDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_BeginDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_BeginDate;
                OnGetd_BeginDate(ref value);
                return value;
            }
            set
            {
                if (_d_BeginDate != value)
                {
                  Ond_BeginDateChanging(ref value);
                  ReportPropertyChanging("d_BeginDate");
                  _d_BeginDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_BeginDate");
                  Ond_BeginDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_BeginDate;
        partial void OnGetd_BeginDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BeginDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BeginDateChanged();
    
        /// <summary>
        /// There are no comments for d_EndDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_EndDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_EndDate;
                OnGetd_EndDate(ref value);
                return value;
            }
            set
            {
                if (_d_EndDate != value)
                {
                  Ond_EndDateChanging(ref value);
                  ReportPropertyChanging("d_EndDate");
                  _d_EndDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_EndDate");
                  Ond_EndDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_EndDate;
        partial void OnGetd_EndDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EndDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EndDateChanged();
    
        /// <summary>
        /// There are no comments for v_PharmacyWarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PharmacyWarehouseId
        {
            get
            {
                string value = _v_PharmacyWarehouseId;
                OnGetv_PharmacyWarehouseId(ref value);
                return value;
            }
            set
            {
                if (_v_PharmacyWarehouseId != value)
                {
                  Onv_PharmacyWarehouseIdChanging(ref value);
                  ReportPropertyChanging("v_PharmacyWarehouseId");
                  _v_PharmacyWarehouseId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PharmacyWarehouseId");
                  Onv_PharmacyWarehouseIdChanged();
              }
            }
        }
        private string _v_PharmacyWarehouseId;
        partial void OnGetv_PharmacyWarehouseId(ref string value);
        partial void Onv_PharmacyWarehouseIdChanging(ref string value);
        partial void Onv_PharmacyWarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for attentioninarea in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_AttentionInArea_i_NodeId", "attentioninarea")]
        public EntityCollection<attentioninarea> attentioninarea
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<attentioninarea>("Sigesoft.Node.WinClient.DAL.Fk_Node_AttentionInArea_i_NodeId", "attentioninarea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<attentioninarea>("Sigesoft.Node.WinClient.DAL.Fk_Node_AttentionInArea_i_NodeId", "attentioninarea", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for nodeorganizationlocationprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_NodeOrganizationLocationProfile_v_NodeId", "nodeorganizationlocationprofile")]
        public EntityCollection<nodeorganizationlocationprofile> nodeorganizationlocationprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodeorganizationlocationprofile>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationProfile_v_NodeId", "nodeorganizationlocationprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodeorganizationlocationprofile>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationProfile_v_NodeId", "nodeorganizationlocationprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for nodeorganizationlocationwarehouseprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_NodeOrganizationLocationWarehouseProfile_i_NodeId", "nodeorganizationlocationwarehouseprofile")]
        public EntityCollection<nodeorganizationlocationwarehouseprofile> nodeorganizationlocationwarehouseprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodeorganizationlocationwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationWarehouseProfile_i_NodeId", "nodeorganizationlocationwarehouseprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodeorganizationlocationwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationWarehouseProfile_i_NodeId", "nodeorganizationlocationwarehouseprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for nodeorganizationprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Node_Node_Organization_i_NodeId", "nodeorganizationprofile")]
        public EntityCollection<nodeorganizationprofile> nodeorganizationprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodeorganizationprofile>("Sigesoft.Node.WinClient.DAL.Pk_Node_Node_Organization_i_NodeId", "nodeorganizationprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodeorganizationprofile>("Sigesoft.Node.WinClient.DAL.Pk_Node_Node_Organization_i_NodeId", "nodeorganizationprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for nodeserviceprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_NodeServiceProfile_i_NodeId", "nodeserviceprofile")]
        public EntityCollection<nodeserviceprofile> nodeserviceprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodeserviceprofile>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeServiceProfile_i_NodeId", "nodeserviceprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodeserviceprofile>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeServiceProfile_i_NodeId", "nodeserviceprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for rolenode in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_node_rolenode_i_NodeId", "rolenode")]
        public EntityCollection<rolenode> rolenode
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<rolenode>("Sigesoft.Node.WinClient.DAL.Pk_node_rolenode_i_NodeId", "rolenode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<rolenode>("Sigesoft.Node.WinClient.DAL.Pk_node_rolenode_i_NodeId", "rolenode", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.nodedatabasestatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="nodedatabasestatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class nodedatabasestatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new nodedatabasestatus object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        public static nodedatabasestatus Createnodedatabasestatus(int i_NodeId)
        {
            nodedatabasestatus nodedatabasestatus = new nodedatabasestatus();
            nodedatabasestatus.i_NodeId = i_NodeId;
            return nodedatabasestatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for v_CurrentDatabaseVersion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CurrentDatabaseVersion
        {
            get
            {
                string value = _v_CurrentDatabaseVersion;
                OnGetv_CurrentDatabaseVersion(ref value);
                return value;
            }
            set
            {
                if (_v_CurrentDatabaseVersion != value)
                {
                  Onv_CurrentDatabaseVersionChanging(ref value);
                  ReportPropertyChanging("v_CurrentDatabaseVersion");
                  _v_CurrentDatabaseVersion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CurrentDatabaseVersion");
                  Onv_CurrentDatabaseVersionChanged();
              }
            }
        }
        private string _v_CurrentDatabaseVersion;
        partial void OnGetv_CurrentDatabaseVersion(ref string value);
        partial void Onv_CurrentDatabaseVersionChanging(ref string value);
        partial void Onv_CurrentDatabaseVersionChanged();
    
        /// <summary>
        /// There are no comments for v_PreviousDatabaseVersion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PreviousDatabaseVersion
        {
            get
            {
                string value = _v_PreviousDatabaseVersion;
                OnGetv_PreviousDatabaseVersion(ref value);
                return value;
            }
            set
            {
                if (_v_PreviousDatabaseVersion != value)
                {
                  Onv_PreviousDatabaseVersionChanging(ref value);
                  ReportPropertyChanging("v_PreviousDatabaseVersion");
                  _v_PreviousDatabaseVersion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PreviousDatabaseVersion");
                  Onv_PreviousDatabaseVersionChanged();
              }
            }
        }
        private string _v_PreviousDatabaseVersion;
        partial void OnGetv_PreviousDatabaseVersion(ref string value);
        partial void Onv_PreviousDatabaseVersionChanging(ref string value);
        partial void Onv_PreviousDatabaseVersionChanged();
    
        /// <summary>
        /// There are no comments for i_CurrentDatabaseStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_CurrentDatabaseStatus
        {
            get
            {
                global::System.Nullable<int> value = _i_CurrentDatabaseStatus;
                OnGeti_CurrentDatabaseStatus(ref value);
                return value;
            }
            set
            {
                if (_i_CurrentDatabaseStatus != value)
                {
                  Oni_CurrentDatabaseStatusChanging(ref value);
                  ReportPropertyChanging("i_CurrentDatabaseStatus");
                  _i_CurrentDatabaseStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_CurrentDatabaseStatus");
                  Oni_CurrentDatabaseStatusChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_CurrentDatabaseStatus;
        partial void OnGeti_CurrentDatabaseStatus(ref global::System.Nullable<int> value);
        partial void Oni_CurrentDatabaseStatusChanging(ref global::System.Nullable<int> value);
        partial void Oni_CurrentDatabaseStatusChanged();
    
        /// <summary>
        /// There are no comments for d_LastDatabaseUpgrade in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_LastDatabaseUpgrade
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_LastDatabaseUpgrade;
                OnGetd_LastDatabaseUpgrade(ref value);
                return value;
            }
            set
            {
                if (_d_LastDatabaseUpgrade != value)
                {
                  Ond_LastDatabaseUpgradeChanging(ref value);
                  ReportPropertyChanging("d_LastDatabaseUpgrade");
                  _d_LastDatabaseUpgrade = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_LastDatabaseUpgrade");
                  Ond_LastDatabaseUpgradeChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_LastDatabaseUpgrade;
        partial void OnGetd_LastDatabaseUpgrade(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_LastDatabaseUpgradeChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_LastDatabaseUpgradeChanged();
    
        /// <summary>
        /// There are no comments for d_LastDatabaseDataSync in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_LastDatabaseDataSync
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_LastDatabaseDataSync;
                OnGetd_LastDatabaseDataSync(ref value);
                return value;
            }
            set
            {
                if (_d_LastDatabaseDataSync != value)
                {
                  Ond_LastDatabaseDataSyncChanging(ref value);
                  ReportPropertyChanging("d_LastDatabaseDataSync");
                  _d_LastDatabaseDataSync = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_LastDatabaseDataSync");
                  Ond_LastDatabaseDataSyncChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_LastDatabaseDataSync;
        partial void OnGetd_LastDatabaseDataSync(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_LastDatabaseDataSyncChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_LastDatabaseDataSyncChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.nodeorganizationlocationprofile in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// v_OrganizationId
    /// v_LocationId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="nodeorganizationlocationprofile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class nodeorganizationlocationprofile : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new nodeorganizationlocationprofile object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        /// <param name="v_OrganizationId">Initial value of v_OrganizationId.</param>
        /// <param name="v_LocationId">Initial value of v_LocationId.</param>
        public static nodeorganizationlocationprofile Createnodeorganizationlocationprofile(int i_NodeId, string v_OrganizationId, string v_LocationId)
        {
            nodeorganizationlocationprofile nodeorganizationlocationprofile = new nodeorganizationlocationprofile();
            nodeorganizationlocationprofile.i_NodeId = i_NodeId;
            nodeorganizationlocationprofile.v_OrganizationId = v_OrganizationId;
            nodeorganizationlocationprofile.v_LocationId = v_LocationId;
            return nodeorganizationlocationprofile;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_LocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_LocationId
        {
            get
            {
                string value = _v_LocationId;
                OnGetv_LocationId(ref value);
                return value;
            }
            set
            {
                if (_v_LocationId != value)
                {
                  Onv_LocationIdChanging(ref value);
                  ReportPropertyChanging("v_LocationId");
                  _v_LocationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_LocationId");
                  Onv_LocationIdChanged();
              }
            }
        }
        private string _v_LocationId;
        partial void OnGetv_LocationId(ref string value);
        partial void Onv_LocationIdChanging(ref string value);
        partial void Onv_LocationIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for location in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_NodeOrganizationLocationProfile_v_LocationId", "location")]
        public location location
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_NodeOrganizationLocationProfile_v_LocationId", "location").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_NodeOrganizationLocationProfile_v_LocationId", "location").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for location in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<location> locationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_NodeOrganizationLocationProfile_v_LocationId", "location");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_NodeOrganizationLocationProfile_v_LocationId", "location", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_NodeOrganizationLocationProfile_v_LocationId", "location").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_NodeOrganizationLocationProfile_v_NodeId", "node")]
        public node node
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationProfile_v_NodeId", "node").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationProfile_v_NodeId", "node").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<node> nodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationProfile_v_NodeId", "node");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationProfile_v_NodeId", "node", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationProfile_v_NodeId", "node").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_NodeOrganizationLocationProfile_v_OrganizationI", "organization")]
        public organization organization
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationProfile_v_OrganizationI", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationProfile_v_OrganizationI", "organization").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationProfile_v_OrganizationI", "organization");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationProfile_v_OrganizationI", "organization", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationProfile_v_OrganizationI", "organization").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.nodeorganizationlocationwarehouseprofile in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// v_OrganizationId
    /// v_LocationId
    /// v_WarehouseId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="nodeorganizationlocationwarehouseprofile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class nodeorganizationlocationwarehouseprofile : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new nodeorganizationlocationwarehouseprofile object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        /// <param name="v_OrganizationId">Initial value of v_OrganizationId.</param>
        /// <param name="v_LocationId">Initial value of v_LocationId.</param>
        /// <param name="v_WarehouseId">Initial value of v_WarehouseId.</param>
        public static nodeorganizationlocationwarehouseprofile Createnodeorganizationlocationwarehouseprofile(int i_NodeId, string v_OrganizationId, string v_LocationId, string v_WarehouseId)
        {
            nodeorganizationlocationwarehouseprofile nodeorganizationlocationwarehouseprofile = new nodeorganizationlocationwarehouseprofile();
            nodeorganizationlocationwarehouseprofile.i_NodeId = i_NodeId;
            nodeorganizationlocationwarehouseprofile.v_OrganizationId = v_OrganizationId;
            nodeorganizationlocationwarehouseprofile.v_LocationId = v_LocationId;
            nodeorganizationlocationwarehouseprofile.v_WarehouseId = v_WarehouseId;
            return nodeorganizationlocationwarehouseprofile;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_LocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_LocationId
        {
            get
            {
                string value = _v_LocationId;
                OnGetv_LocationId(ref value);
                return value;
            }
            set
            {
                if (_v_LocationId != value)
                {
                  Onv_LocationIdChanging(ref value);
                  ReportPropertyChanging("v_LocationId");
                  _v_LocationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_LocationId");
                  Onv_LocationIdChanged();
              }
            }
        }
        private string _v_LocationId;
        partial void OnGetv_LocationId(ref string value);
        partial void Onv_LocationIdChanging(ref string value);
        partial void Onv_LocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_WarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_WarehouseId
        {
            get
            {
                string value = _v_WarehouseId;
                OnGetv_WarehouseId(ref value);
                return value;
            }
            set
            {
                if (_v_WarehouseId != value)
                {
                  Onv_WarehouseIdChanging(ref value);
                  ReportPropertyChanging("v_WarehouseId");
                  _v_WarehouseId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_WarehouseId");
                  Onv_WarehouseIdChanged();
              }
            }
        }
        private string _v_WarehouseId;
        partial void OnGetv_WarehouseId(ref string value);
        partial void Onv_WarehouseIdChanging(ref string value);
        partial void Onv_WarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for location in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Orga", "location")]
        public location location
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Orga", "location").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Orga", "location").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for location in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<location> locationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Orga", "location");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Orga", "location", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Orga", "location").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_NodeOrganizationLocationWarehouseProfile_i_NodeId", "node")]
        public node node
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationWarehouseProfile_i_NodeId", "node").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationWarehouseProfile_i_NodeId", "node").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<node> nodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationWarehouseProfile_i_NodeId", "node");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationWarehouseProfile_i_NodeId", "node", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeOrganizationLocationWarehouseProfile_i_NodeId", "node").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Loca", "organization")]
        public organization organization
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Loca", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Loca", "organization").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Loca", "organization");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Loca", "organization", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Loca", "organization").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_NodeOrganizationLocationWarehouseProfile_v_Warehou", "warehouse")]
        public warehouse warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_NodeOrganizationLocationWarehouseProfile_v_Warehou", "warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_NodeOrganizationLocationWarehouseProfile_v_Warehou", "warehouse").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<warehouse> warehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_NodeOrganizationLocationWarehouseProfile_v_Warehou", "warehouse");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_NodeOrganizationLocationWarehouseProfile_v_Warehou", "warehouse", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_NodeOrganizationLocationWarehouseProfile_v_Warehou", "warehouse").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.nodeorganizationprofile in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// v_OrganizationId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="nodeorganizationprofile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class nodeorganizationprofile : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new nodeorganizationprofile object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        /// <param name="v_OrganizationId">Initial value of v_OrganizationId.</param>
        public static nodeorganizationprofile Createnodeorganizationprofile(int i_NodeId, string v_OrganizationId)
        {
            nodeorganizationprofile nodeorganizationprofile = new nodeorganizationprofile();
            nodeorganizationprofile.i_NodeId = i_NodeId;
            nodeorganizationprofile.v_OrganizationId = v_OrganizationId;
            return nodeorganizationprofile;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Node_Node_Organization_i_NodeId", "node")]
        public node node
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Pk_Node_Node_Organization_i_NodeId", "node").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Pk_Node_Node_Organization_i_NodeId", "node").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<node> nodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Pk_Node_Node_Organization_i_NodeId", "node");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Pk_Node_Node_Organization_i_NodeId", "node", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Pk_Node_Node_Organization_i_NodeId", "node").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Organization_NodeOrganization_i_OrganizationId", "organization")]
        public organization organization
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Pk_Organization_NodeOrganization_i_OrganizationId", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Pk_Organization_NodeOrganization_i_OrganizationId", "organization").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Pk_Organization_NodeOrganization_i_OrganizationId", "organization");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Pk_Organization_NodeOrganization_i_OrganizationId", "organization", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Pk_Organization_NodeOrganization_i_OrganizationId", "organization").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.nodeserviceprofile in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_NodeServiceProfileId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="nodeserviceprofile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class nodeserviceprofile : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new nodeserviceprofile object.
        /// </summary>
        /// <param name="v_NodeServiceProfileId">Initial value of v_NodeServiceProfileId.</param>
        public static nodeserviceprofile Createnodeserviceprofile(string v_NodeServiceProfileId)
        {
            nodeserviceprofile nodeserviceprofile = new nodeserviceprofile();
            nodeserviceprofile.v_NodeServiceProfileId = v_NodeServiceProfileId;
            return nodeserviceprofile;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_NodeServiceProfileId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_NodeServiceProfileId
        {
            get
            {
                string value = _v_NodeServiceProfileId;
                OnGetv_NodeServiceProfileId(ref value);
                return value;
            }
            set
            {
                if (_v_NodeServiceProfileId != value)
                {
                  Onv_NodeServiceProfileIdChanging(ref value);
                  ReportPropertyChanging("v_NodeServiceProfileId");
                  _v_NodeServiceProfileId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_NodeServiceProfileId");
                  Onv_NodeServiceProfileIdChanged();
              }
            }
        }
        private string _v_NodeServiceProfileId;
        partial void OnGetv_NodeServiceProfileId(ref string value);
        partial void Onv_NodeServiceProfileIdChanging(ref string value);
        partial void Onv_NodeServiceProfileIdChanged();
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NodeId;
        partial void OnGeti_NodeId(ref global::System.Nullable<int> value);
        partial void Oni_NodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_ServiceTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ServiceTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ServiceTypeId;
                OnGeti_ServiceTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceTypeId != value)
                {
                  Oni_ServiceTypeIdChanging(ref value);
                  ReportPropertyChanging("i_ServiceTypeId");
                  _i_ServiceTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceTypeId");
                  Oni_ServiceTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ServiceTypeId;
        partial void OnGeti_ServiceTypeId(ref global::System.Nullable<int> value);
        partial void Oni_ServiceTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ServiceTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_MasterServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MasterServiceId
        {
            get
            {
                global::System.Nullable<int> value = _i_MasterServiceId;
                OnGeti_MasterServiceId(ref value);
                return value;
            }
            set
            {
                if (_i_MasterServiceId != value)
                {
                  Oni_MasterServiceIdChanging(ref value);
                  ReportPropertyChanging("i_MasterServiceId");
                  _i_MasterServiceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MasterServiceId");
                  Oni_MasterServiceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MasterServiceId;
        partial void OnGeti_MasterServiceId(ref global::System.Nullable<int> value);
        partial void Oni_MasterServiceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MasterServiceIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Node_NodeServiceProfile_i_NodeId", "node")]
        public node node
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeServiceProfile_i_NodeId", "node").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeServiceProfile_i_NodeId", "node").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<node> nodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeServiceProfile_i_NodeId", "node");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeServiceProfile_i_NodeId", "node", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Fk_Node_NodeServiceProfile_i_NodeId", "node").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.nodesyncstatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="nodesyncstatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class nodesyncstatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new nodesyncstatus object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        public static nodesyncstatus Createnodesyncstatus(int i_NodeId)
        {
            nodesyncstatus nodesyncstatus = new nodesyncstatus();
            nodesyncstatus.i_NodeId = i_NodeId;
            return nodesyncstatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for v_DataSyncVersion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DataSyncVersion
        {
            get
            {
                string value = _v_DataSyncVersion;
                OnGetv_DataSyncVersion(ref value);
                return value;
            }
            set
            {
                if (_v_DataSyncVersion != value)
                {
                  Onv_DataSyncVersionChanging(ref value);
                  ReportPropertyChanging("v_DataSyncVersion");
                  _v_DataSyncVersion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DataSyncVersion");
                  Onv_DataSyncVersionChanged();
              }
            }
        }
        private string _v_DataSyncVersion;
        partial void OnGetv_DataSyncVersion(ref string value);
        partial void Onv_DataSyncVersionChanging(ref string value);
        partial void Onv_DataSyncVersionChanged();
    
        /// <summary>
        /// There are no comments for i_DataSyncFrecuency in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DataSyncFrecuency
        {
            get
            {
                global::System.Nullable<int> value = _i_DataSyncFrecuency;
                OnGeti_DataSyncFrecuency(ref value);
                return value;
            }
            set
            {
                if (_i_DataSyncFrecuency != value)
                {
                  Oni_DataSyncFrecuencyChanging(ref value);
                  ReportPropertyChanging("i_DataSyncFrecuency");
                  _i_DataSyncFrecuency = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DataSyncFrecuency");
                  Oni_DataSyncFrecuencyChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DataSyncFrecuency;
        partial void OnGeti_DataSyncFrecuency(ref global::System.Nullable<int> value);
        partial void Oni_DataSyncFrecuencyChanging(ref global::System.Nullable<int> value);
        partial void Oni_DataSyncFrecuencyChanged();
    
        /// <summary>
        /// There are no comments for d_LastSuccessfulDataSync in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_LastSuccessfulDataSync
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_LastSuccessfulDataSync;
                OnGetd_LastSuccessfulDataSync(ref value);
                return value;
            }
            set
            {
                if (_d_LastSuccessfulDataSync != value)
                {
                  Ond_LastSuccessfulDataSyncChanging(ref value);
                  ReportPropertyChanging("d_LastSuccessfulDataSync");
                  _d_LastSuccessfulDataSync = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_LastSuccessfulDataSync");
                  Ond_LastSuccessfulDataSyncChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_LastSuccessfulDataSync;
        partial void OnGetd_LastSuccessfulDataSync(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_LastSuccessfulDataSyncChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_LastSuccessfulDataSyncChanged();
    
        /// <summary>
        /// There are no comments for i_LastServerProcessStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_LastServerProcessStatus
        {
            get
            {
                global::System.Nullable<int> value = _i_LastServerProcessStatus;
                OnGeti_LastServerProcessStatus(ref value);
                return value;
            }
            set
            {
                if (_i_LastServerProcessStatus != value)
                {
                  Oni_LastServerProcessStatusChanging(ref value);
                  ReportPropertyChanging("i_LastServerProcessStatus");
                  _i_LastServerProcessStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_LastServerProcessStatus");
                  Oni_LastServerProcessStatusChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_LastServerProcessStatus;
        partial void OnGeti_LastServerProcessStatus(ref global::System.Nullable<int> value);
        partial void Oni_LastServerProcessStatusChanging(ref global::System.Nullable<int> value);
        partial void Oni_LastServerProcessStatusChanged();
    
        /// <summary>
        /// There are no comments for i_LastNodeProcessStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_LastNodeProcessStatus
        {
            get
            {
                global::System.Nullable<int> value = _i_LastNodeProcessStatus;
                OnGeti_LastNodeProcessStatus(ref value);
                return value;
            }
            set
            {
                if (_i_LastNodeProcessStatus != value)
                {
                  Oni_LastNodeProcessStatusChanging(ref value);
                  ReportPropertyChanging("i_LastNodeProcessStatus");
                  _i_LastNodeProcessStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_LastNodeProcessStatus");
                  Oni_LastNodeProcessStatusChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_LastNodeProcessStatus;
        partial void OnGeti_LastNodeProcessStatus(ref global::System.Nullable<int> value);
        partial void Oni_LastNodeProcessStatusChanging(ref global::System.Nullable<int> value);
        partial void Oni_LastNodeProcessStatusChanged();
    
        /// <summary>
        /// There are no comments for d_NextDataSync in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_NextDataSync
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_NextDataSync;
                OnGetd_NextDataSync(ref value);
                return value;
            }
            set
            {
                if (_d_NextDataSync != value)
                {
                  Ond_NextDataSyncChanging(ref value);
                  ReportPropertyChanging("d_NextDataSync");
                  _d_NextDataSync = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_NextDataSync");
                  Ond_NextDataSyncChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_NextDataSync;
        partial void OnGetd_NextDataSync(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_NextDataSyncChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_NextDataSyncChanged();
    
        /// <summary>
        /// There are no comments for v_LastServerPackageFileName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LastServerPackageFileName
        {
            get
            {
                string value = _v_LastServerPackageFileName;
                OnGetv_LastServerPackageFileName(ref value);
                return value;
            }
            set
            {
                if (_v_LastServerPackageFileName != value)
                {
                  Onv_LastServerPackageFileNameChanging(ref value);
                  ReportPropertyChanging("v_LastServerPackageFileName");
                  _v_LastServerPackageFileName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LastServerPackageFileName");
                  Onv_LastServerPackageFileNameChanged();
              }
            }
        }
        private string _v_LastServerPackageFileName;
        partial void OnGetv_LastServerPackageFileName(ref string value);
        partial void Onv_LastServerPackageFileNameChanging(ref string value);
        partial void Onv_LastServerPackageFileNameChanged();
    
        /// <summary>
        /// There are no comments for v_LastServerProcessErrorMessage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LastServerProcessErrorMessage
        {
            get
            {
                string value = _v_LastServerProcessErrorMessage;
                OnGetv_LastServerProcessErrorMessage(ref value);
                return value;
            }
            set
            {
                if (_v_LastServerProcessErrorMessage != value)
                {
                  Onv_LastServerProcessErrorMessageChanging(ref value);
                  ReportPropertyChanging("v_LastServerProcessErrorMessage");
                  _v_LastServerProcessErrorMessage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LastServerProcessErrorMessage");
                  Onv_LastServerProcessErrorMessageChanged();
              }
            }
        }
        private string _v_LastServerProcessErrorMessage;
        partial void OnGetv_LastServerProcessErrorMessage(ref string value);
        partial void Onv_LastServerProcessErrorMessageChanging(ref string value);
        partial void Onv_LastServerProcessErrorMessageChanged();
    
        /// <summary>
        /// There are no comments for v_LastNodePackageFileName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LastNodePackageFileName
        {
            get
            {
                string value = _v_LastNodePackageFileName;
                OnGetv_LastNodePackageFileName(ref value);
                return value;
            }
            set
            {
                if (_v_LastNodePackageFileName != value)
                {
                  Onv_LastNodePackageFileNameChanging(ref value);
                  ReportPropertyChanging("v_LastNodePackageFileName");
                  _v_LastNodePackageFileName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LastNodePackageFileName");
                  Onv_LastNodePackageFileNameChanged();
              }
            }
        }
        private string _v_LastNodePackageFileName;
        partial void OnGetv_LastNodePackageFileName(ref string value);
        partial void Onv_LastNodePackageFileNameChanging(ref string value);
        partial void Onv_LastNodePackageFileNameChanged();
    
        /// <summary>
        /// There are no comments for v_LastNodeProcessErrorMessage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LastNodeProcessErrorMessage
        {
            get
            {
                string value = _v_LastNodeProcessErrorMessage;
                OnGetv_LastNodeProcessErrorMessage(ref value);
                return value;
            }
            set
            {
                if (_v_LastNodeProcessErrorMessage != value)
                {
                  Onv_LastNodeProcessErrorMessageChanging(ref value);
                  ReportPropertyChanging("v_LastNodeProcessErrorMessage");
                  _v_LastNodeProcessErrorMessage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LastNodeProcessErrorMessage");
                  Onv_LastNodeProcessErrorMessageChanged();
              }
            }
        }
        private string _v_LastNodeProcessErrorMessage;
        partial void OnGetv_LastNodeProcessErrorMessage(ref string value);
        partial void Onv_LastNodeProcessErrorMessageChanging(ref string value);
        partial void Onv_LastNodeProcessErrorMessageChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.noxioushabits in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_NoxiousHabitsId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="noxioushabits")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class noxioushabits : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new noxioushabits object.
        /// </summary>
        /// <param name="v_NoxiousHabitsId">Initial value of v_NoxiousHabitsId.</param>
        public static noxioushabits Createnoxioushabits(string v_NoxiousHabitsId)
        {
            noxioushabits noxioushabits = new noxioushabits();
            noxioushabits.v_NoxiousHabitsId = v_NoxiousHabitsId;
            return noxioushabits;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_NoxiousHabitsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_NoxiousHabitsId
        {
            get
            {
                string value = _v_NoxiousHabitsId;
                OnGetv_NoxiousHabitsId(ref value);
                return value;
            }
            set
            {
                if (_v_NoxiousHabitsId != value)
                {
                  Onv_NoxiousHabitsIdChanging(ref value);
                  ReportPropertyChanging("v_NoxiousHabitsId");
                  _v_NoxiousHabitsId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_NoxiousHabitsId");
                  Onv_NoxiousHabitsIdChanged();
              }
            }
        }
        private string _v_NoxiousHabitsId;
        partial void OnGetv_NoxiousHabitsId(ref string value);
        partial void Onv_NoxiousHabitsIdChanging(ref string value);
        partial void Onv_NoxiousHabitsIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for i_TypeHabitsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TypeHabitsId
        {
            get
            {
                global::System.Nullable<int> value = _i_TypeHabitsId;
                OnGeti_TypeHabitsId(ref value);
                return value;
            }
            set
            {
                if (_i_TypeHabitsId != value)
                {
                  Oni_TypeHabitsIdChanging(ref value);
                  ReportPropertyChanging("i_TypeHabitsId");
                  _i_TypeHabitsId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TypeHabitsId");
                  Oni_TypeHabitsIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TypeHabitsId;
        partial void OnGeti_TypeHabitsId(ref global::System.Nullable<int> value);
        partial void Oni_TypeHabitsIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TypeHabitsIdChanged();
    
        /// <summary>
        /// There are no comments for v_Frequency in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Frequency
        {
            get
            {
                string value = _v_Frequency;
                OnGetv_Frequency(ref value);
                return value;
            }
            set
            {
                if (_v_Frequency != value)
                {
                  Onv_FrequencyChanging(ref value);
                  ReportPropertyChanging("v_Frequency");
                  _v_Frequency = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Frequency");
                  Onv_FrequencyChanged();
              }
            }
        }
        private string _v_Frequency;
        partial void OnGetv_Frequency(ref string value);
        partial void Onv_FrequencyChanging(ref string value);
        partial void Onv_FrequencyChanged();
    
        /// <summary>
        /// There are no comments for v_Comment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Comment
        {
            get
            {
                string value = _v_Comment;
                OnGetv_Comment(ref value);
                return value;
            }
            set
            {
                if (_v_Comment != value)
                {
                  Onv_CommentChanging(ref value);
                  ReportPropertyChanging("v_Comment");
                  _v_Comment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Comment");
                  Onv_CommentChanged();
              }
            }
        }
        private string _v_Comment;
        partial void OnGetv_Comment(ref string value);
        partial void Onv_CommentChanging(ref string value);
        partial void Onv_CommentChanged();
    
        /// <summary>
        /// There are no comments for v_DescriptionHabit in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DescriptionHabit
        {
            get
            {
                string value = _v_DescriptionHabit;
                OnGetv_DescriptionHabit(ref value);
                return value;
            }
            set
            {
                if (_v_DescriptionHabit != value)
                {
                  Onv_DescriptionHabitChanging(ref value);
                  ReportPropertyChanging("v_DescriptionHabit");
                  _v_DescriptionHabit = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DescriptionHabit");
                  Onv_DescriptionHabitChanged();
              }
            }
        }
        private string _v_DescriptionHabit;
        partial void OnGetv_DescriptionHabit(ref string value);
        partial void Onv_DescriptionHabitChanging(ref string value);
        partial void Onv_DescriptionHabitChanged();
    
        /// <summary>
        /// There are no comments for v_DescriptionQuantity in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DescriptionQuantity
        {
            get
            {
                string value = _v_DescriptionQuantity;
                OnGetv_DescriptionQuantity(ref value);
                return value;
            }
            set
            {
                if (_v_DescriptionQuantity != value)
                {
                  Onv_DescriptionQuantityChanging(ref value);
                  ReportPropertyChanging("v_DescriptionQuantity");
                  _v_DescriptionQuantity = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DescriptionQuantity");
                  Onv_DescriptionQuantityChanged();
              }
            }
        }
        private string _v_DescriptionQuantity;
        partial void OnGetv_DescriptionQuantity(ref string value);
        partial void Onv_DescriptionQuantityChanging(ref string value);
        partial void Onv_DescriptionQuantityChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_AnswerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_AnswerId
        {
            get
            {
                global::System.Nullable<int> value = _i_AnswerId;
                OnGeti_AnswerId(ref value);
                return value;
            }
            set
            {
                if (_i_AnswerId != value)
                {
                  Oni_AnswerIdChanging(ref value);
                  ReportPropertyChanging("i_AnswerId");
                  _i_AnswerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_AnswerId");
                  Oni_AnswerIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_AnswerId;
        partial void OnGeti_AnswerId(ref global::System.Nullable<int> value);
        partial void Oni_AnswerIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_AnswerIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_NoxiousHabits_v_PersonId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_NoxiousHabits_v_PersonId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_NoxiousHabits_v_PersonId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_NoxiousHabits_v_PersonId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_NoxiousHabits_v_PersonId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_NoxiousHabits_v_PersonId", "person").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.occupation in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_OccupationId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="occupation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class occupation : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new occupation object.
        /// </summary>
        /// <param name="v_OccupationId">Initial value of v_OccupationId.</param>
        public static occupation Createoccupation(string v_OccupationId)
        {
            occupation occupation = new occupation();
            occupation.v_OccupationId = v_OccupationId;
            return occupation;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_OccupationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_OccupationId
        {
            get
            {
                string value = _v_OccupationId;
                OnGetv_OccupationId(ref value);
                return value;
            }
            set
            {
                if (_v_OccupationId != value)
                {
                  Onv_OccupationIdChanging(ref value);
                  ReportPropertyChanging("v_OccupationId");
                  _v_OccupationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_OccupationId");
                  Onv_OccupationIdChanged();
              }
            }
        }
        private string _v_OccupationId;
        partial void OnGetv_OccupationId(ref string value);
        partial void Onv_OccupationIdChanging(ref string value);
        partial void Onv_OccupationIdChanged();
    
        /// <summary>
        /// There are no comments for v_GesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GesId
        {
            get
            {
                string value = _v_GesId;
                OnGetv_GesId(ref value);
                return value;
            }
            set
            {
                if (_v_GesId != value)
                {
                  Onv_GesIdChanging(ref value);
                  ReportPropertyChanging("v_GesId");
                  _v_GesId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GesId");
                  Onv_GesIdChanged();
              }
            }
        }
        private string _v_GesId;
        partial void OnGetv_GesId(ref string value);
        partial void Onv_GesIdChanging(ref string value);
        partial void Onv_GesIdChanged();
    
        /// <summary>
        /// There are no comments for v_GroupOccupationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GroupOccupationId
        {
            get
            {
                string value = _v_GroupOccupationId;
                OnGetv_GroupOccupationId(ref value);
                return value;
            }
            set
            {
                if (_v_GroupOccupationId != value)
                {
                  Onv_GroupOccupationIdChanging(ref value);
                  ReportPropertyChanging("v_GroupOccupationId");
                  _v_GroupOccupationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GroupOccupationId");
                  Onv_GroupOccupationIdChanged();
              }
            }
        }
        private string _v_GroupOccupationId;
        partial void OnGetv_GroupOccupationId(ref string value);
        partial void Onv_GroupOccupationIdChanging(ref string value);
        partial void Onv_GroupOccupationIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for ges in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Ges_Occupation_v_GesCode", "ges")]
        public ges ges
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ges>("Sigesoft.Node.WinClient.DAL.Fk_Ges_Occupation_v_GesCode", "ges").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ges>("Sigesoft.Node.WinClient.DAL.Fk_Ges_Occupation_v_GesCode", "ges").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for ges in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ges> gesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ges>("Sigesoft.Node.WinClient.DAL.Fk_Ges_Occupation_v_GesCode", "ges");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<ges>("Sigesoft.Node.WinClient.DAL.Fk_Ges_Occupation_v_GesCode", "ges", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<ges>("Sigesoft.Node.WinClient.DAL.Fk_Ges_Occupation_v_GesCode", "ges").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for groupoccupation in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_GroupOccupation_Occupation_v_GroupOccupationCode", "groupoccupation")]
        public groupoccupation groupoccupation
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<groupoccupation>("Sigesoft.Node.WinClient.DAL.Fk_GroupOccupation_Occupation_v_GroupOccupationCode", "groupoccupation").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<groupoccupation>("Sigesoft.Node.WinClient.DAL.Fk_GroupOccupation_Occupation_v_GroupOccupationCode", "groupoccupation").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for groupoccupation in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<groupoccupation> groupoccupationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<groupoccupation>("Sigesoft.Node.WinClient.DAL.Fk_GroupOccupation_Occupation_v_GroupOccupationCode", "groupoccupation");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<groupoccupation>("Sigesoft.Node.WinClient.DAL.Fk_GroupOccupation_Occupation_v_GroupOccupationCode", "groupoccupation", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<groupoccupation>("Sigesoft.Node.WinClient.DAL.Fk_GroupOccupation_Occupation_v_GroupOccupationCode", "groupoccupation").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.ordenreporte in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_OrdenReporteId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="ordenreporte")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ordenreporte : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new ordenreporte object.
        /// </summary>
        /// <param name="v_OrdenReporteId">Initial value of v_OrdenReporteId.</param>
        public static ordenreporte Createordenreporte(string v_OrdenReporteId)
        {
            ordenreporte ordenreporte = new ordenreporte();
            ordenreporte.v_OrdenReporteId = v_OrdenReporteId;
            return ordenreporte;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_OrdenReporteId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_OrdenReporteId
        {
            get
            {
                string value = _v_OrdenReporteId;
                OnGetv_OrdenReporteId(ref value);
                return value;
            }
            set
            {
                if (_v_OrdenReporteId != value)
                {
                  Onv_OrdenReporteIdChanging(ref value);
                  ReportPropertyChanging("v_OrdenReporteId");
                  _v_OrdenReporteId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_OrdenReporteId");
                  Onv_OrdenReporteIdChanged();
              }
            }
        }
        private string _v_OrdenReporteId;
        partial void OnGetv_OrdenReporteId(ref string value);
        partial void Onv_OrdenReporteIdChanging(ref string value);
        partial void Onv_OrdenReporteIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_NombreReporte in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_NombreReporte
        {
            get
            {
                string value = _v_NombreReporte;
                OnGetv_NombreReporte(ref value);
                return value;
            }
            set
            {
                if (_v_NombreReporte != value)
                {
                  Onv_NombreReporteChanging(ref value);
                  ReportPropertyChanging("v_NombreReporte");
                  _v_NombreReporte = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_NombreReporte");
                  Onv_NombreReporteChanged();
              }
            }
        }
        private string _v_NombreReporte;
        partial void OnGetv_NombreReporte(ref string value);
        partial void Onv_NombreReporteChanging(ref string value);
        partial void Onv_NombreReporteChanged();
    
        /// <summary>
        /// There are no comments for v_ComponenteId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponenteId
        {
            get
            {
                string value = _v_ComponenteId;
                OnGetv_ComponenteId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponenteId != value)
                {
                  Onv_ComponenteIdChanging(ref value);
                  ReportPropertyChanging("v_ComponenteId");
                  _v_ComponenteId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponenteId");
                  Onv_ComponenteIdChanged();
              }
            }
        }
        private string _v_ComponenteId;
        partial void OnGetv_ComponenteId(ref string value);
        partial void Onv_ComponenteIdChanging(ref string value);
        partial void Onv_ComponenteIdChanged();
    
        /// <summary>
        /// There are no comments for i_Orden in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Orden
        {
            get
            {
                global::System.Nullable<int> value = _i_Orden;
                OnGeti_Orden(ref value);
                return value;
            }
            set
            {
                if (_i_Orden != value)
                {
                  Oni_OrdenChanging(ref value);
                  ReportPropertyChanging("i_Orden");
                  _i_Orden = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Orden");
                  Oni_OrdenChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Orden;
        partial void OnGeti_Orden(ref global::System.Nullable<int> value);
        partial void Oni_OrdenChanging(ref global::System.Nullable<int> value);
        partial void Oni_OrdenChanged();
    
        /// <summary>
        /// There are no comments for v_NombreCrystal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_NombreCrystal
        {
            get
            {
                string value = _v_NombreCrystal;
                OnGetv_NombreCrystal(ref value);
                return value;
            }
            set
            {
                if (_v_NombreCrystal != value)
                {
                  Onv_NombreCrystalChanging(ref value);
                  ReportPropertyChanging("v_NombreCrystal");
                  _v_NombreCrystal = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_NombreCrystal");
                  Onv_NombreCrystalChanged();
              }
            }
        }
        private string _v_NombreCrystal;
        partial void OnGetv_NombreCrystal(ref string value);
        partial void Onv_NombreCrystalChanging(ref string value);
        partial void Onv_NombreCrystalChanged();
    
        /// <summary>
        /// There are no comments for i_NombreCrystalId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NombreCrystalId
        {
            get
            {
                global::System.Nullable<int> value = _i_NombreCrystalId;
                OnGeti_NombreCrystalId(ref value);
                return value;
            }
            set
            {
                if (_i_NombreCrystalId != value)
                {
                  Oni_NombreCrystalIdChanging(ref value);
                  ReportPropertyChanging("i_NombreCrystalId");
                  _i_NombreCrystalId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NombreCrystalId");
                  Oni_NombreCrystalIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NombreCrystalId;
        partial void OnGeti_NombreCrystalId(ref global::System.Nullable<int> value);
        partial void Oni_NombreCrystalIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_NombreCrystalIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.organization in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_OrganizationId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class organization : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new organization object.
        /// </summary>
        /// <param name="v_OrganizationId">Initial value of v_OrganizationId.</param>
        public static organization Createorganization(string v_OrganizationId)
        {
            organization organization = new organization();
            organization.v_OrganizationId = v_OrganizationId;
            return organization;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationPadreId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OrganizationPadreId
        {
            get
            {
                string value = _v_OrganizationPadreId;
                OnGetv_OrganizationPadreId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationPadreId != value)
                {
                  Onv_OrganizationPadreIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationPadreId");
                  _v_OrganizationPadreId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OrganizationPadreId");
                  Onv_OrganizationPadreIdChanged();
              }
            }
        }
        private string _v_OrganizationPadreId;
        partial void OnGetv_OrganizationPadreId(ref string value);
        partial void Onv_OrganizationPadreIdChanging(ref string value);
        partial void Onv_OrganizationPadreIdChanged();
    
        /// <summary>
        /// There are no comments for i_OrganizationTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_OrganizationTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_OrganizationTypeId;
                OnGeti_OrganizationTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_OrganizationTypeId != value)
                {
                  Oni_OrganizationTypeIdChanging(ref value);
                  ReportPropertyChanging("i_OrganizationTypeId");
                  _i_OrganizationTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_OrganizationTypeId");
                  Oni_OrganizationTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_OrganizationTypeId;
        partial void OnGeti_OrganizationTypeId(ref global::System.Nullable<int> value);
        partial void Oni_OrganizationTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_OrganizationTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_SectorTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SectorTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_SectorTypeId;
                OnGeti_SectorTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_SectorTypeId != value)
                {
                  Oni_SectorTypeIdChanging(ref value);
                  ReportPropertyChanging("i_SectorTypeId");
                  _i_SectorTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SectorTypeId");
                  Oni_SectorTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SectorTypeId;
        partial void OnGeti_SectorTypeId(ref global::System.Nullable<int> value);
        partial void Oni_SectorTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SectorTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_IdentificationNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_IdentificationNumber
        {
            get
            {
                string value = _v_IdentificationNumber;
                OnGetv_IdentificationNumber(ref value);
                return value;
            }
            set
            {
                if (_v_IdentificationNumber != value)
                {
                  Onv_IdentificationNumberChanging(ref value);
                  ReportPropertyChanging("v_IdentificationNumber");
                  _v_IdentificationNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_IdentificationNumber");
                  Onv_IdentificationNumberChanged();
              }
            }
        }
        private string _v_IdentificationNumber;
        partial void OnGetv_IdentificationNumber(ref string value);
        partial void Onv_IdentificationNumberChanging(ref string value);
        partial void Onv_IdentificationNumberChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for v_Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Address
        {
            get
            {
                string value = _v_Address;
                OnGetv_Address(ref value);
                return value;
            }
            set
            {
                if (_v_Address != value)
                {
                  Onv_AddressChanging(ref value);
                  ReportPropertyChanging("v_Address");
                  _v_Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Address");
                  Onv_AddressChanged();
              }
            }
        }
        private string _v_Address;
        partial void OnGetv_Address(ref string value);
        partial void Onv_AddressChanging(ref string value);
        partial void Onv_AddressChanged();
    
        /// <summary>
        /// There are no comments for v_PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PhoneNumber
        {
            get
            {
                string value = _v_PhoneNumber;
                OnGetv_PhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_v_PhoneNumber != value)
                {
                  Onv_PhoneNumberChanging(ref value);
                  ReportPropertyChanging("v_PhoneNumber");
                  _v_PhoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PhoneNumber");
                  Onv_PhoneNumberChanged();
              }
            }
        }
        private string _v_PhoneNumber;
        partial void OnGetv_PhoneNumber(ref string value);
        partial void Onv_PhoneNumberChanging(ref string value);
        partial void Onv_PhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for v_Mail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Mail
        {
            get
            {
                string value = _v_Mail;
                OnGetv_Mail(ref value);
                return value;
            }
            set
            {
                if (_v_Mail != value)
                {
                  Onv_MailChanging(ref value);
                  ReportPropertyChanging("v_Mail");
                  _v_Mail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Mail");
                  Onv_MailChanged();
              }
            }
        }
        private string _v_Mail;
        partial void OnGetv_Mail(ref string value);
        partial void Onv_MailChanging(ref string value);
        partial void Onv_MailChanged();
    
        /// <summary>
        /// There are no comments for v_ContacName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ContacName
        {
            get
            {
                string value = _v_ContacName;
                OnGetv_ContacName(ref value);
                return value;
            }
            set
            {
                if (_v_ContacName != value)
                {
                  Onv_ContacNameChanging(ref value);
                  ReportPropertyChanging("v_ContacName");
                  _v_ContacName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ContacName");
                  Onv_ContacNameChanged();
              }
            }
        }
        private string _v_ContacName;
        partial void OnGetv_ContacName(ref string value);
        partial void Onv_ContacNameChanging(ref string value);
        partial void Onv_ContacNameChanged();
    
        /// <summary>
        /// There are no comments for v_Observation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Observation
        {
            get
            {
                string value = _v_Observation;
                OnGetv_Observation(ref value);
                return value;
            }
            set
            {
                if (_v_Observation != value)
                {
                  Onv_ObservationChanging(ref value);
                  ReportPropertyChanging("v_Observation");
                  _v_Observation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Observation");
                  Onv_ObservationChanged();
              }
            }
        }
        private string _v_Observation;
        partial void OnGetv_Observation(ref string value);
        partial void Onv_ObservationChanging(ref string value);
        partial void Onv_ObservationChanged();
    
        /// <summary>
        /// There are no comments for i_NumberQuotasOrganization in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NumberQuotasOrganization
        {
            get
            {
                global::System.Nullable<int> value = _i_NumberQuotasOrganization;
                OnGeti_NumberQuotasOrganization(ref value);
                return value;
            }
            set
            {
                if (_i_NumberQuotasOrganization != value)
                {
                  Oni_NumberQuotasOrganizationChanging(ref value);
                  ReportPropertyChanging("i_NumberQuotasOrganization");
                  _i_NumberQuotasOrganization = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NumberQuotasOrganization");
                  Oni_NumberQuotasOrganizationChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NumberQuotasOrganization;
        partial void OnGeti_NumberQuotasOrganization(ref global::System.Nullable<int> value);
        partial void Oni_NumberQuotasOrganizationChanging(ref global::System.Nullable<int> value);
        partial void Oni_NumberQuotasOrganizationChanged();
    
        /// <summary>
        /// There are no comments for i_NumberQuotasMen in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NumberQuotasMen
        {
            get
            {
                global::System.Nullable<int> value = _i_NumberQuotasMen;
                OnGeti_NumberQuotasMen(ref value);
                return value;
            }
            set
            {
                if (_i_NumberQuotasMen != value)
                {
                  Oni_NumberQuotasMenChanging(ref value);
                  ReportPropertyChanging("i_NumberQuotasMen");
                  _i_NumberQuotasMen = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NumberQuotasMen");
                  Oni_NumberQuotasMenChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NumberQuotasMen;
        partial void OnGeti_NumberQuotasMen(ref global::System.Nullable<int> value);
        partial void Oni_NumberQuotasMenChanging(ref global::System.Nullable<int> value);
        partial void Oni_NumberQuotasMenChanged();
    
        /// <summary>
        /// There are no comments for i_NumberQuotasWomen in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NumberQuotasWomen
        {
            get
            {
                global::System.Nullable<int> value = _i_NumberQuotasWomen;
                OnGeti_NumberQuotasWomen(ref value);
                return value;
            }
            set
            {
                if (_i_NumberQuotasWomen != value)
                {
                  Oni_NumberQuotasWomenChanging(ref value);
                  ReportPropertyChanging("i_NumberQuotasWomen");
                  _i_NumberQuotasWomen = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NumberQuotasWomen");
                  Oni_NumberQuotasWomenChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NumberQuotasWomen;
        partial void OnGeti_NumberQuotasWomen(ref global::System.Nullable<int> value);
        partial void Oni_NumberQuotasWomenChanging(ref global::System.Nullable<int> value);
        partial void Oni_NumberQuotasWomenChanged();
    
        /// <summary>
        /// There are no comments for i_DepartmentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DepartmentId
        {
            get
            {
                global::System.Nullable<int> value = _i_DepartmentId;
                OnGeti_DepartmentId(ref value);
                return value;
            }
            set
            {
                if (_i_DepartmentId != value)
                {
                  Oni_DepartmentIdChanging(ref value);
                  ReportPropertyChanging("i_DepartmentId");
                  _i_DepartmentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DepartmentId");
                  Oni_DepartmentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DepartmentId;
        partial void OnGeti_DepartmentId(ref global::System.Nullable<int> value);
        partial void Oni_DepartmentIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DepartmentIdChanged();
    
        /// <summary>
        /// There are no comments for i_ProvinceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ProvinceId
        {
            get
            {
                global::System.Nullable<int> value = _i_ProvinceId;
                OnGeti_ProvinceId(ref value);
                return value;
            }
            set
            {
                if (_i_ProvinceId != value)
                {
                  Oni_ProvinceIdChanging(ref value);
                  ReportPropertyChanging("i_ProvinceId");
                  _i_ProvinceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ProvinceId");
                  Oni_ProvinceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ProvinceId;
        partial void OnGeti_ProvinceId(ref global::System.Nullable<int> value);
        partial void Oni_ProvinceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ProvinceIdChanged();
    
        /// <summary>
        /// There are no comments for i_DistrictId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DistrictId
        {
            get
            {
                global::System.Nullable<int> value = _i_DistrictId;
                OnGeti_DistrictId(ref value);
                return value;
            }
            set
            {
                if (_i_DistrictId != value)
                {
                  Oni_DistrictIdChanging(ref value);
                  ReportPropertyChanging("i_DistrictId");
                  _i_DistrictId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DistrictId");
                  Oni_DistrictIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DistrictId;
        partial void OnGeti_DistrictId(ref global::System.Nullable<int> value);
        partial void Oni_DistrictIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DistrictIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for b_Image in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_Image
        {
            get
            {
                byte[] value = _b_Image;
                OnGetb_Image(ref value);
                return value;
            }
            set
            {
                if (_b_Image != value)
                {
                  Onb_ImageChanging(ref value);
                  ReportPropertyChanging("b_Image");
                  _b_Image = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_Image");
                  Onb_ImageChanged();
              }
            }
        }
        private byte[] _b_Image;
        partial void OnGetb_Image(ref byte[] value);
        partial void Onb_ImageChanging(ref byte[] value);
        partial void Onb_ImageChanged();
    
        /// <summary>
        /// There are no comments for v_ContactoMedico in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ContactoMedico
        {
            get
            {
                string value = _v_ContactoMedico;
                OnGetv_ContactoMedico(ref value);
                return value;
            }
            set
            {
                if (_v_ContactoMedico != value)
                {
                  Onv_ContactoMedicoChanging(ref value);
                  ReportPropertyChanging("v_ContactoMedico");
                  _v_ContactoMedico = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ContactoMedico");
                  Onv_ContactoMedicoChanged();
              }
            }
        }
        private string _v_ContactoMedico;
        partial void OnGetv_ContactoMedico(ref string value);
        partial void Onv_ContactoMedicoChanging(ref string value);
        partial void Onv_ContactoMedicoChanged();
    
        /// <summary>
        /// There are no comments for v_EmailMedico in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_EmailMedico
        {
            get
            {
                string value = _v_EmailMedico;
                OnGetv_EmailMedico(ref value);
                return value;
            }
            set
            {
                if (_v_EmailMedico != value)
                {
                  Onv_EmailMedicoChanging(ref value);
                  ReportPropertyChanging("v_EmailMedico");
                  _v_EmailMedico = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_EmailMedico");
                  Onv_EmailMedicoChanged();
              }
            }
        }
        private string _v_EmailMedico;
        partial void OnGetv_EmailMedico(ref string value);
        partial void Onv_EmailMedicoChanging(ref string value);
        partial void Onv_EmailMedicoChanged();
    
        /// <summary>
        /// There are no comments for r_Factor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> r_Factor
        {
            get
            {
                global::System.Nullable<decimal> value = _r_Factor;
                OnGetr_Factor(ref value);
                return value;
            }
            set
            {
                if (_r_Factor != value)
                {
                  Onr_FactorChanging(ref value);
                  ReportPropertyChanging("r_Factor");
                  _r_Factor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_Factor");
                  Onr_FactorChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _r_Factor;
        partial void OnGetr_Factor(ref global::System.Nullable<decimal> value);
        partial void Onr_FactorChanging(ref global::System.Nullable<decimal> value);
        partial void Onr_FactorChanged();
    
        /// <summary>
        /// There are no comments for r_FactorMed in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<decimal> r_FactorMed
        {
            get
            {
                global::System.Nullable<decimal> value = _r_FactorMed;
                OnGetr_FactorMed(ref value);
                return value;
            }
            set
            {
                if (_r_FactorMed != value)
                {
                  Onr_FactorMedChanging(ref value);
                  ReportPropertyChanging("r_FactorMed");
                  _r_FactorMed = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_FactorMed");
                  Onr_FactorMedChanged();
              }
            }
        }
        private global::System.Nullable<decimal> _r_FactorMed;
        partial void OnGetr_FactorMed(ref global::System.Nullable<decimal> value);
        partial void Onr_FactorMedChanging(ref global::System.Nullable<decimal> value);
        partial void Onr_FactorMedChanged();
    
        /// <summary>
        /// There are no comments for v_SectorName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SectorName
        {
            get
            {
                string value = _v_SectorName;
                OnGetv_SectorName(ref value);
                return value;
            }
            set
            {
                if (_v_SectorName != value)
                {
                  Onv_SectorNameChanging(ref value);
                  ReportPropertyChanging("v_SectorName");
                  _v_SectorName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SectorName");
                  Onv_SectorNameChanged();
              }
            }
        }
        private string _v_SectorName;
        partial void OnGetv_SectorName(ref string value);
        partial void Onv_SectorNameChanging(ref string value);
        partial void Onv_SectorNameChanged();
    
        /// <summary>
        /// There are no comments for v_SectorCodigo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SectorCodigo
        {
            get
            {
                string value = _v_SectorCodigo;
                OnGetv_SectorCodigo(ref value);
                return value;
            }
            set
            {
                if (_v_SectorCodigo != value)
                {
                  Onv_SectorCodigoChanging(ref value);
                  ReportPropertyChanging("v_SectorCodigo");
                  _v_SectorCodigo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SectorCodigo");
                  Onv_SectorCodigoChanged();
              }
            }
        }
        private string _v_SectorCodigo;
        partial void OnGetv_SectorCodigo(ref string value);
        partial void Onv_SectorCodigoChanging(ref string value);
        partial void Onv_SectorCodigoChanged();
    
        /// <summary>
        /// There are no comments for v_Contacto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Contacto
        {
            get
            {
                string value = _v_Contacto;
                OnGetv_Contacto(ref value);
                return value;
            }
            set
            {
                if (_v_Contacto != value)
                {
                  Onv_ContactoChanging(ref value);
                  ReportPropertyChanging("v_Contacto");
                  _v_Contacto = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Contacto");
                  Onv_ContactoChanged();
              }
            }
        }
        private string _v_Contacto;
        partial void OnGetv_Contacto(ref string value);
        partial void Onv_ContactoChanging(ref string value);
        partial void Onv_ContactoChanged();
    
        /// <summary>
        /// There are no comments for v_EmailContacto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_EmailContacto
        {
            get
            {
                string value = _v_EmailContacto;
                OnGetv_EmailContacto(ref value);
                return value;
            }
            set
            {
                if (_v_EmailContacto != value)
                {
                  Onv_EmailContactoChanging(ref value);
                  ReportPropertyChanging("v_EmailContacto");
                  _v_EmailContacto = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_EmailContacto");
                  Onv_EmailContactoChanged();
              }
            }
        }
        private string _v_EmailContacto;
        partial void OnGetv_EmailContacto(ref string value);
        partial void Onv_EmailContactoChanging(ref string value);
        partial void Onv_EmailContactoChanged();
    
        /// <summary>
        /// There are no comments for i_VigCovid19 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_VigCovid19
        {
            get
            {
                global::System.Nullable<int> value = _i_VigCovid19;
                OnGeti_VigCovid19(ref value);
                return value;
            }
            set
            {
                if (_i_VigCovid19 != value)
                {
                  Oni_VigCovid19Changing(ref value);
                  ReportPropertyChanging("i_VigCovid19");
                  _i_VigCovid19 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_VigCovid19");
                  Oni_VigCovid19Changed();
              }
            }
        }
        private global::System.Nullable<int> _i_VigCovid19;
        partial void OnGeti_VigCovid19(ref global::System.Nullable<int> value);
        partial void Oni_VigCovid19Changing(ref global::System.Nullable<int> value);
        partial void Oni_VigCovid19Changed();
    
        /// <summary>
        /// There are no comments for i_TipoFormatoCovid19 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TipoFormatoCovid19
        {
            get
            {
                global::System.Nullable<int> value = _i_TipoFormatoCovid19;
                OnGeti_TipoFormatoCovid19(ref value);
                return value;
            }
            set
            {
                if (_i_TipoFormatoCovid19 != value)
                {
                  Oni_TipoFormatoCovid19Changing(ref value);
                  ReportPropertyChanging("i_TipoFormatoCovid19");
                  _i_TipoFormatoCovid19 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TipoFormatoCovid19");
                  Oni_TipoFormatoCovid19Changed();
              }
            }
        }
        private global::System.Nullable<int> _i_TipoFormatoCovid19;
        partial void OnGeti_TipoFormatoCovid19(ref global::System.Nullable<int> value);
        partial void Oni_TipoFormatoCovid19Changing(ref global::System.Nullable<int> value);
        partial void Oni_TipoFormatoCovid19Changed();
    
        /// <summary>
        /// There are no comments for i_RegCovid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> i_RegCovid
        {
            get
            {
                global::System.Nullable<bool> value = _i_RegCovid;
                OnGeti_RegCovid(ref value);
                return value;
            }
            set
            {
                if (_i_RegCovid != value)
                {
                  Oni_RegCovidChanging(ref value);
                  ReportPropertyChanging("i_RegCovid");
                  _i_RegCovid = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_RegCovid");
                  Oni_RegCovidChanged();
              }
            }
        }
        private global::System.Nullable<bool> _i_RegCovid;
        partial void OnGeti_RegCovid(ref global::System.Nullable<bool> value);
        partial void Oni_RegCovidChanging(ref global::System.Nullable<bool> value);
        partial void Oni_RegCovidChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for nodeorganizationlocationprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_NodeOrganizationLocationProfile_v_OrganizationI", "nodeorganizationlocationprofile")]
        public EntityCollection<nodeorganizationlocationprofile> nodeorganizationlocationprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodeorganizationlocationprofile>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationProfile_v_OrganizationI", "nodeorganizationlocationprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodeorganizationlocationprofile>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationProfile_v_OrganizationI", "nodeorganizationlocationprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for nodeorganizationlocationwarehouseprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Loca", "nodeorganizationlocationwarehouseprofile")]
        public EntityCollection<nodeorganizationlocationwarehouseprofile> nodeorganizationlocationwarehouseprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodeorganizationlocationwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Loca", "nodeorganizationlocationwarehouseprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodeorganizationlocationwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_Organization_NodeOrganizationLocationWarehouseProfile_v_Loca", "nodeorganizationlocationwarehouseprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for nodeorganizationprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Organization_NodeOrganization_i_OrganizationId", "nodeorganizationprofile")]
        public EntityCollection<nodeorganizationprofile> nodeorganizationprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodeorganizationprofile>("Sigesoft.Node.WinClient.DAL.Pk_Organization_NodeOrganization_i_OrganizationId", "nodeorganizationprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodeorganizationprofile>("Sigesoft.Node.WinClient.DAL.Pk_Organization_NodeOrganization_i_OrganizationId", "nodeorganizationprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for portaluseraccess in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_PortalUserAccess_organization", "portaluseraccess")]
        public EntityCollection<portaluseraccess> portaluseraccess
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<portaluseraccess>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_organization", "portaluseraccess");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<portaluseraccess>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_organization", "portaluseraccess", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for usuarioregcovidorganization in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK__usuariore__v_org__71E28D02", "usuarioregcovidorganization")]
        public EntityCollection<usuarioregcovidorganization> usuarioregcovidorganization
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<usuarioregcovidorganization>("Sigesoft.Node.WinClient.DAL.FK__usuariore__v_org__71E28D02", "usuarioregcovidorganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<usuarioregcovidorganization>("Sigesoft.Node.WinClient.DAL.FK__usuariore__v_org__71E28D02", "usuarioregcovidorganization", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_Warehouse_i_OrganizationId", "warehouse")]
        public EntityCollection<warehouse> warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Organization_Warehouse_i_OrganizationId", "warehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Organization_Warehouse_i_OrganizationId", "warehouse", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.pacient in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_PersonId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="pacient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class pacient : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new pacient object.
        /// </summary>
        /// <param name="v_PersonId">Initial value of v_PersonId.</param>
        public static pacient Createpacient(string v_PersonId)
        {
            pacient pacient = new pacient();
            pacient.v_PersonId = v_PersonId;
            return pacient;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateNodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateNodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateNodeId;
                OnGeti_UpdateNodeId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateNodeId != value)
                {
                  Oni_UpdateNodeIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateNodeId");
                  _i_UpdateNodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateNodeId");
                  Oni_UpdateNodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateNodeId;
        partial void OnGeti_UpdateNodeId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_Pacient_v_PersonId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Pacient_v_PersonId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Pacient_v_PersonId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Pacient_v_PersonId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Pacient_v_PersonId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Pacient_v_PersonId", "person").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for pacientmultimediadata in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_pacient_pacientemultimediadata_v_PersonId", "pacientmultimediadata")]
        public EntityCollection<pacientmultimediadata> pacientmultimediadata
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<pacientmultimediadata>("Sigesoft.Node.WinClient.DAL.Fk_pacient_pacientemultimediadata_v_PersonId", "pacientmultimediadata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<pacientmultimediadata>("Sigesoft.Node.WinClient.DAL.Fk_pacient_pacientemultimediadata_v_PersonId", "pacientmultimediadata", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.pacientmultimediadata in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_PacientMultimediaDataId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="pacientmultimediadata")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class pacientmultimediadata : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new pacientmultimediadata object.
        /// </summary>
        /// <param name="v_PacientMultimediaDataId">Initial value of v_PacientMultimediaDataId.</param>
        public static pacientmultimediadata Createpacientmultimediadata(string v_PacientMultimediaDataId)
        {
            pacientmultimediadata pacientmultimediadata = new pacientmultimediadata();
            pacientmultimediadata.v_PacientMultimediaDataId = v_PacientMultimediaDataId;
            return pacientmultimediadata;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_PacientMultimediaDataId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_PacientMultimediaDataId
        {
            get
            {
                string value = _v_PacientMultimediaDataId;
                OnGetv_PacientMultimediaDataId(ref value);
                return value;
            }
            set
            {
                if (_v_PacientMultimediaDataId != value)
                {
                  Onv_PacientMultimediaDataIdChanging(ref value);
                  ReportPropertyChanging("v_PacientMultimediaDataId");
                  _v_PacientMultimediaDataId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_PacientMultimediaDataId");
                  Onv_PacientMultimediaDataIdChanged();
              }
            }
        }
        private string _v_PacientMultimediaDataId;
        partial void OnGetv_PacientMultimediaDataId(ref string value);
        partial void Onv_PacientMultimediaDataIdChanging(ref string value);
        partial void Onv_PacientMultimediaDataIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for pacient in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_pacient_pacientemultimediadata_v_PersonId", "pacient")]
        public pacient pacient
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<pacient>("Sigesoft.Node.WinClient.DAL.Fk_pacient_pacientemultimediadata_v_PersonId", "pacient").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<pacient>("Sigesoft.Node.WinClient.DAL.Fk_pacient_pacientemultimediadata_v_PersonId", "pacient").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for pacient in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<pacient> pacientReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<pacient>("Sigesoft.Node.WinClient.DAL.Fk_pacient_pacientemultimediadata_v_PersonId", "pacient");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<pacient>("Sigesoft.Node.WinClient.DAL.Fk_pacient_pacientemultimediadata_v_PersonId", "pacient", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<pacient>("Sigesoft.Node.WinClient.DAL.Fk_pacient_pacientemultimediadata_v_PersonId", "pacient").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.person in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_PersonId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class person : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new person object.
        /// </summary>
        /// <param name="v_PersonId">Initial value of v_PersonId.</param>
        public static person Createperson(string v_PersonId)
        {
            person person = new person();
            person.v_PersonId = v_PersonId;
            return person;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for v_FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FirstName
        {
            get
            {
                string value = _v_FirstName;
                OnGetv_FirstName(ref value);
                return value;
            }
            set
            {
                if (_v_FirstName != value)
                {
                  Onv_FirstNameChanging(ref value);
                  ReportPropertyChanging("v_FirstName");
                  _v_FirstName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FirstName");
                  Onv_FirstNameChanged();
              }
            }
        }
        private string _v_FirstName;
        partial void OnGetv_FirstName(ref string value);
        partial void Onv_FirstNameChanging(ref string value);
        partial void Onv_FirstNameChanged();
    
        /// <summary>
        /// There are no comments for v_FirstLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FirstLastName
        {
            get
            {
                string value = _v_FirstLastName;
                OnGetv_FirstLastName(ref value);
                return value;
            }
            set
            {
                if (_v_FirstLastName != value)
                {
                  Onv_FirstLastNameChanging(ref value);
                  ReportPropertyChanging("v_FirstLastName");
                  _v_FirstLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FirstLastName");
                  Onv_FirstLastNameChanged();
              }
            }
        }
        private string _v_FirstLastName;
        partial void OnGetv_FirstLastName(ref string value);
        partial void Onv_FirstLastNameChanging(ref string value);
        partial void Onv_FirstLastNameChanged();
    
        /// <summary>
        /// There are no comments for v_SecondLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SecondLastName
        {
            get
            {
                string value = _v_SecondLastName;
                OnGetv_SecondLastName(ref value);
                return value;
            }
            set
            {
                if (_v_SecondLastName != value)
                {
                  Onv_SecondLastNameChanging(ref value);
                  ReportPropertyChanging("v_SecondLastName");
                  _v_SecondLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SecondLastName");
                  Onv_SecondLastNameChanged();
              }
            }
        }
        private string _v_SecondLastName;
        partial void OnGetv_SecondLastName(ref string value);
        partial void Onv_SecondLastNameChanging(ref string value);
        partial void Onv_SecondLastNameChanged();
    
        /// <summary>
        /// There are no comments for i_DocTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DocTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_DocTypeId;
                OnGeti_DocTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_DocTypeId != value)
                {
                  Oni_DocTypeIdChanging(ref value);
                  ReportPropertyChanging("i_DocTypeId");
                  _i_DocTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DocTypeId");
                  Oni_DocTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DocTypeId;
        partial void OnGeti_DocTypeId(ref global::System.Nullable<int> value);
        partial void Oni_DocTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DocTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_DocNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DocNumber
        {
            get
            {
                string value = _v_DocNumber;
                OnGetv_DocNumber(ref value);
                return value;
            }
            set
            {
                if (_v_DocNumber != value)
                {
                  Onv_DocNumberChanging(ref value);
                  ReportPropertyChanging("v_DocNumber");
                  _v_DocNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DocNumber");
                  Onv_DocNumberChanged();
              }
            }
        }
        private string _v_DocNumber;
        partial void OnGetv_DocNumber(ref string value);
        partial void Onv_DocNumberChanging(ref string value);
        partial void Onv_DocNumberChanged();
    
        /// <summary>
        /// There are no comments for d_Birthdate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_Birthdate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_Birthdate;
                OnGetd_Birthdate(ref value);
                return value;
            }
            set
            {
                if (_d_Birthdate != value)
                {
                  Ond_BirthdateChanging(ref value);
                  ReportPropertyChanging("d_Birthdate");
                  _d_Birthdate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_Birthdate");
                  Ond_BirthdateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_Birthdate;
        partial void OnGetd_Birthdate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BirthdateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BirthdateChanged();
    
        /// <summary>
        /// There are no comments for v_BirthPlace in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_BirthPlace
        {
            get
            {
                string value = _v_BirthPlace;
                OnGetv_BirthPlace(ref value);
                return value;
            }
            set
            {
                if (_v_BirthPlace != value)
                {
                  Onv_BirthPlaceChanging(ref value);
                  ReportPropertyChanging("v_BirthPlace");
                  _v_BirthPlace = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_BirthPlace");
                  Onv_BirthPlaceChanged();
              }
            }
        }
        private string _v_BirthPlace;
        partial void OnGetv_BirthPlace(ref string value);
        partial void Onv_BirthPlaceChanging(ref string value);
        partial void Onv_BirthPlaceChanged();
    
        /// <summary>
        /// There are no comments for i_SexTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SexTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_SexTypeId;
                OnGeti_SexTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_SexTypeId != value)
                {
                  Oni_SexTypeIdChanging(ref value);
                  ReportPropertyChanging("i_SexTypeId");
                  _i_SexTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SexTypeId");
                  Oni_SexTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SexTypeId;
        partial void OnGeti_SexTypeId(ref global::System.Nullable<int> value);
        partial void Oni_SexTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SexTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_MaritalStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MaritalStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_MaritalStatusId;
                OnGeti_MaritalStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_MaritalStatusId != value)
                {
                  Oni_MaritalStatusIdChanging(ref value);
                  ReportPropertyChanging("i_MaritalStatusId");
                  _i_MaritalStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MaritalStatusId");
                  Oni_MaritalStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MaritalStatusId;
        partial void OnGeti_MaritalStatusId(ref global::System.Nullable<int> value);
        partial void Oni_MaritalStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MaritalStatusIdChanged();
    
        /// <summary>
        /// There are no comments for i_LevelOfId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_LevelOfId
        {
            get
            {
                global::System.Nullable<int> value = _i_LevelOfId;
                OnGeti_LevelOfId(ref value);
                return value;
            }
            set
            {
                if (_i_LevelOfId != value)
                {
                  Oni_LevelOfIdChanging(ref value);
                  ReportPropertyChanging("i_LevelOfId");
                  _i_LevelOfId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_LevelOfId");
                  Oni_LevelOfIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_LevelOfId;
        partial void OnGeti_LevelOfId(ref global::System.Nullable<int> value);
        partial void Oni_LevelOfIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_LevelOfIdChanged();
    
        /// <summary>
        /// There are no comments for v_TelephoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_TelephoneNumber
        {
            get
            {
                string value = _v_TelephoneNumber;
                OnGetv_TelephoneNumber(ref value);
                return value;
            }
            set
            {
                if (_v_TelephoneNumber != value)
                {
                  Onv_TelephoneNumberChanging(ref value);
                  ReportPropertyChanging("v_TelephoneNumber");
                  _v_TelephoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_TelephoneNumber");
                  Onv_TelephoneNumberChanged();
              }
            }
        }
        private string _v_TelephoneNumber;
        partial void OnGetv_TelephoneNumber(ref string value);
        partial void Onv_TelephoneNumberChanging(ref string value);
        partial void Onv_TelephoneNumberChanged();
    
        /// <summary>
        /// There are no comments for v_AdressLocation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AdressLocation
        {
            get
            {
                string value = _v_AdressLocation;
                OnGetv_AdressLocation(ref value);
                return value;
            }
            set
            {
                if (_v_AdressLocation != value)
                {
                  Onv_AdressLocationChanging(ref value);
                  ReportPropertyChanging("v_AdressLocation");
                  _v_AdressLocation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AdressLocation");
                  Onv_AdressLocationChanged();
              }
            }
        }
        private string _v_AdressLocation;
        partial void OnGetv_AdressLocation(ref string value);
        partial void Onv_AdressLocationChanging(ref string value);
        partial void Onv_AdressLocationChanged();
    
        /// <summary>
        /// There are no comments for v_GeografyLocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GeografyLocationId
        {
            get
            {
                string value = _v_GeografyLocationId;
                OnGetv_GeografyLocationId(ref value);
                return value;
            }
            set
            {
                if (_v_GeografyLocationId != value)
                {
                  Onv_GeografyLocationIdChanging(ref value);
                  ReportPropertyChanging("v_GeografyLocationId");
                  _v_GeografyLocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GeografyLocationId");
                  Onv_GeografyLocationIdChanged();
              }
            }
        }
        private string _v_GeografyLocationId;
        partial void OnGetv_GeografyLocationId(ref string value);
        partial void Onv_GeografyLocationIdChanging(ref string value);
        partial void Onv_GeografyLocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_ContactName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ContactName
        {
            get
            {
                string value = _v_ContactName;
                OnGetv_ContactName(ref value);
                return value;
            }
            set
            {
                if (_v_ContactName != value)
                {
                  Onv_ContactNameChanging(ref value);
                  ReportPropertyChanging("v_ContactName");
                  _v_ContactName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ContactName");
                  Onv_ContactNameChanged();
              }
            }
        }
        private string _v_ContactName;
        partial void OnGetv_ContactName(ref string value);
        partial void Onv_ContactNameChanging(ref string value);
        partial void Onv_ContactNameChanged();
    
        /// <summary>
        /// There are no comments for v_EmergencyPhone in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_EmergencyPhone
        {
            get
            {
                string value = _v_EmergencyPhone;
                OnGetv_EmergencyPhone(ref value);
                return value;
            }
            set
            {
                if (_v_EmergencyPhone != value)
                {
                  Onv_EmergencyPhoneChanging(ref value);
                  ReportPropertyChanging("v_EmergencyPhone");
                  _v_EmergencyPhone = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_EmergencyPhone");
                  Onv_EmergencyPhoneChanged();
              }
            }
        }
        private string _v_EmergencyPhone;
        partial void OnGetv_EmergencyPhone(ref string value);
        partial void Onv_EmergencyPhoneChanging(ref string value);
        partial void Onv_EmergencyPhoneChanged();
    
        /// <summary>
        /// There are no comments for b_PersonImage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_PersonImage
        {
            get
            {
                byte[] value = _b_PersonImage;
                OnGetb_PersonImage(ref value);
                return value;
            }
            set
            {
                if (_b_PersonImage != value)
                {
                  Onb_PersonImageChanging(ref value);
                  ReportPropertyChanging("b_PersonImage");
                  _b_PersonImage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_PersonImage");
                  Onb_PersonImageChanged();
              }
            }
        }
        private byte[] _b_PersonImage;
        partial void OnGetb_PersonImage(ref byte[] value);
        partial void Onb_PersonImageChanging(ref byte[] value);
        partial void Onb_PersonImageChanged();
    
        /// <summary>
        /// There are no comments for v_Mail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Mail
        {
            get
            {
                string value = _v_Mail;
                OnGetv_Mail(ref value);
                return value;
            }
            set
            {
                if (_v_Mail != value)
                {
                  Onv_MailChanging(ref value);
                  ReportPropertyChanging("v_Mail");
                  _v_Mail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Mail");
                  Onv_MailChanged();
              }
            }
        }
        private string _v_Mail;
        partial void OnGetv_Mail(ref string value);
        partial void Onv_MailChanging(ref string value);
        partial void Onv_MailChanged();
    
        /// <summary>
        /// There are no comments for i_BloodGroupId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_BloodGroupId
        {
            get
            {
                global::System.Nullable<int> value = _i_BloodGroupId;
                OnGeti_BloodGroupId(ref value);
                return value;
            }
            set
            {
                if (_i_BloodGroupId != value)
                {
                  Oni_BloodGroupIdChanging(ref value);
                  ReportPropertyChanging("i_BloodGroupId");
                  _i_BloodGroupId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_BloodGroupId");
                  Oni_BloodGroupIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_BloodGroupId;
        partial void OnGeti_BloodGroupId(ref global::System.Nullable<int> value);
        partial void Oni_BloodGroupIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_BloodGroupIdChanged();
    
        /// <summary>
        /// There are no comments for i_BloodFactorId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_BloodFactorId
        {
            get
            {
                global::System.Nullable<int> value = _i_BloodFactorId;
                OnGeti_BloodFactorId(ref value);
                return value;
            }
            set
            {
                if (_i_BloodFactorId != value)
                {
                  Oni_BloodFactorIdChanging(ref value);
                  ReportPropertyChanging("i_BloodFactorId");
                  _i_BloodFactorId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_BloodFactorId");
                  Oni_BloodFactorIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_BloodFactorId;
        partial void OnGeti_BloodFactorId(ref global::System.Nullable<int> value);
        partial void Oni_BloodFactorIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_BloodFactorIdChanged();
    
        /// <summary>
        /// There are no comments for b_FingerPrintTemplate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_FingerPrintTemplate
        {
            get
            {
                byte[] value = _b_FingerPrintTemplate;
                OnGetb_FingerPrintTemplate(ref value);
                return value;
            }
            set
            {
                if (_b_FingerPrintTemplate != value)
                {
                  Onb_FingerPrintTemplateChanging(ref value);
                  ReportPropertyChanging("b_FingerPrintTemplate");
                  _b_FingerPrintTemplate = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_FingerPrintTemplate");
                  Onb_FingerPrintTemplateChanged();
              }
            }
        }
        private byte[] _b_FingerPrintTemplate;
        partial void OnGetb_FingerPrintTemplate(ref byte[] value);
        partial void Onb_FingerPrintTemplateChanging(ref byte[] value);
        partial void Onb_FingerPrintTemplateChanged();
    
        /// <summary>
        /// There are no comments for b_RubricImage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_RubricImage
        {
            get
            {
                byte[] value = _b_RubricImage;
                OnGetb_RubricImage(ref value);
                return value;
            }
            set
            {
                if (_b_RubricImage != value)
                {
                  Onb_RubricImageChanging(ref value);
                  ReportPropertyChanging("b_RubricImage");
                  _b_RubricImage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_RubricImage");
                  Onb_RubricImageChanged();
              }
            }
        }
        private byte[] _b_RubricImage;
        partial void OnGetb_RubricImage(ref byte[] value);
        partial void Onb_RubricImageChanging(ref byte[] value);
        partial void Onb_RubricImageChanged();
    
        /// <summary>
        /// There are no comments for b_FingerPrintImage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_FingerPrintImage
        {
            get
            {
                byte[] value = _b_FingerPrintImage;
                OnGetb_FingerPrintImage(ref value);
                return value;
            }
            set
            {
                if (_b_FingerPrintImage != value)
                {
                  Onb_FingerPrintImageChanging(ref value);
                  ReportPropertyChanging("b_FingerPrintImage");
                  _b_FingerPrintImage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_FingerPrintImage");
                  Onb_FingerPrintImageChanged();
              }
            }
        }
        private byte[] _b_FingerPrintImage;
        partial void OnGetb_FingerPrintImage(ref byte[] value);
        partial void Onb_FingerPrintImageChanging(ref byte[] value);
        partial void Onb_FingerPrintImageChanged();
    
        /// <summary>
        /// There are no comments for t_RubricImageText in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string t_RubricImageText
        {
            get
            {
                string value = _t_RubricImageText;
                OnGett_RubricImageText(ref value);
                return value;
            }
            set
            {
                if (_t_RubricImageText != value)
                {
                  Ont_RubricImageTextChanging(ref value);
                  ReportPropertyChanging("t_RubricImageText");
                  _t_RubricImageText = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("t_RubricImageText");
                  Ont_RubricImageTextChanged();
              }
            }
        }
        private string _t_RubricImageText;
        partial void OnGett_RubricImageText(ref string value);
        partial void Ont_RubricImageTextChanging(ref string value);
        partial void Ont_RubricImageTextChanged();
    
        /// <summary>
        /// There are no comments for v_CurrentOccupation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CurrentOccupation
        {
            get
            {
                string value = _v_CurrentOccupation;
                OnGetv_CurrentOccupation(ref value);
                return value;
            }
            set
            {
                if (_v_CurrentOccupation != value)
                {
                  Onv_CurrentOccupationChanging(ref value);
                  ReportPropertyChanging("v_CurrentOccupation");
                  _v_CurrentOccupation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CurrentOccupation");
                  Onv_CurrentOccupationChanged();
              }
            }
        }
        private string _v_CurrentOccupation;
        partial void OnGetv_CurrentOccupation(ref string value);
        partial void Onv_CurrentOccupationChanging(ref string value);
        partial void Onv_CurrentOccupationChanged();
    
        /// <summary>
        /// There are no comments for i_DepartmentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DepartmentId
        {
            get
            {
                global::System.Nullable<int> value = _i_DepartmentId;
                OnGeti_DepartmentId(ref value);
                return value;
            }
            set
            {
                if (_i_DepartmentId != value)
                {
                  Oni_DepartmentIdChanging(ref value);
                  ReportPropertyChanging("i_DepartmentId");
                  _i_DepartmentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DepartmentId");
                  Oni_DepartmentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DepartmentId;
        partial void OnGeti_DepartmentId(ref global::System.Nullable<int> value);
        partial void Oni_DepartmentIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DepartmentIdChanged();
    
        /// <summary>
        /// There are no comments for i_ProvinceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ProvinceId
        {
            get
            {
                global::System.Nullable<int> value = _i_ProvinceId;
                OnGeti_ProvinceId(ref value);
                return value;
            }
            set
            {
                if (_i_ProvinceId != value)
                {
                  Oni_ProvinceIdChanging(ref value);
                  ReportPropertyChanging("i_ProvinceId");
                  _i_ProvinceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ProvinceId");
                  Oni_ProvinceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ProvinceId;
        partial void OnGeti_ProvinceId(ref global::System.Nullable<int> value);
        partial void Oni_ProvinceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ProvinceIdChanged();
    
        /// <summary>
        /// There are no comments for i_DistrictId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DistrictId
        {
            get
            {
                global::System.Nullable<int> value = _i_DistrictId;
                OnGeti_DistrictId(ref value);
                return value;
            }
            set
            {
                if (_i_DistrictId != value)
                {
                  Oni_DistrictIdChanging(ref value);
                  ReportPropertyChanging("i_DistrictId");
                  _i_DistrictId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DistrictId");
                  Oni_DistrictIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DistrictId;
        partial void OnGeti_DistrictId(ref global::System.Nullable<int> value);
        partial void Oni_DistrictIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DistrictIdChanged();
    
        /// <summary>
        /// There are no comments for i_ResidenceInWorkplaceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ResidenceInWorkplaceId
        {
            get
            {
                global::System.Nullable<int> value = _i_ResidenceInWorkplaceId;
                OnGeti_ResidenceInWorkplaceId(ref value);
                return value;
            }
            set
            {
                if (_i_ResidenceInWorkplaceId != value)
                {
                  Oni_ResidenceInWorkplaceIdChanging(ref value);
                  ReportPropertyChanging("i_ResidenceInWorkplaceId");
                  _i_ResidenceInWorkplaceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ResidenceInWorkplaceId");
                  Oni_ResidenceInWorkplaceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ResidenceInWorkplaceId;
        partial void OnGeti_ResidenceInWorkplaceId(ref global::System.Nullable<int> value);
        partial void Oni_ResidenceInWorkplaceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ResidenceInWorkplaceIdChanged();
    
        /// <summary>
        /// There are no comments for v_ResidenceTimeInWorkplace in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ResidenceTimeInWorkplace
        {
            get
            {
                string value = _v_ResidenceTimeInWorkplace;
                OnGetv_ResidenceTimeInWorkplace(ref value);
                return value;
            }
            set
            {
                if (_v_ResidenceTimeInWorkplace != value)
                {
                  Onv_ResidenceTimeInWorkplaceChanging(ref value);
                  ReportPropertyChanging("v_ResidenceTimeInWorkplace");
                  _v_ResidenceTimeInWorkplace = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ResidenceTimeInWorkplace");
                  Onv_ResidenceTimeInWorkplaceChanged();
              }
            }
        }
        private string _v_ResidenceTimeInWorkplace;
        partial void OnGetv_ResidenceTimeInWorkplace(ref string value);
        partial void Onv_ResidenceTimeInWorkplaceChanging(ref string value);
        partial void Onv_ResidenceTimeInWorkplaceChanged();
    
        /// <summary>
        /// There are no comments for i_TypeOfInsuranceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TypeOfInsuranceId
        {
            get
            {
                global::System.Nullable<int> value = _i_TypeOfInsuranceId;
                OnGeti_TypeOfInsuranceId(ref value);
                return value;
            }
            set
            {
                if (_i_TypeOfInsuranceId != value)
                {
                  Oni_TypeOfInsuranceIdChanging(ref value);
                  ReportPropertyChanging("i_TypeOfInsuranceId");
                  _i_TypeOfInsuranceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TypeOfInsuranceId");
                  Oni_TypeOfInsuranceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TypeOfInsuranceId;
        partial void OnGeti_TypeOfInsuranceId(ref global::System.Nullable<int> value);
        partial void Oni_TypeOfInsuranceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TypeOfInsuranceIdChanged();
    
        /// <summary>
        /// There are no comments for i_NumberLivingChildren in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NumberLivingChildren
        {
            get
            {
                global::System.Nullable<int> value = _i_NumberLivingChildren;
                OnGeti_NumberLivingChildren(ref value);
                return value;
            }
            set
            {
                if (_i_NumberLivingChildren != value)
                {
                  Oni_NumberLivingChildrenChanging(ref value);
                  ReportPropertyChanging("i_NumberLivingChildren");
                  _i_NumberLivingChildren = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NumberLivingChildren");
                  Oni_NumberLivingChildrenChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NumberLivingChildren;
        partial void OnGeti_NumberLivingChildren(ref global::System.Nullable<int> value);
        partial void Oni_NumberLivingChildrenChanging(ref global::System.Nullable<int> value);
        partial void Oni_NumberLivingChildrenChanged();
    
        /// <summary>
        /// There are no comments for i_NumberDependentChildren in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NumberDependentChildren
        {
            get
            {
                global::System.Nullable<int> value = _i_NumberDependentChildren;
                OnGeti_NumberDependentChildren(ref value);
                return value;
            }
            set
            {
                if (_i_NumberDependentChildren != value)
                {
                  Oni_NumberDependentChildrenChanging(ref value);
                  ReportPropertyChanging("i_NumberDependentChildren");
                  _i_NumberDependentChildren = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NumberDependentChildren");
                  Oni_NumberDependentChildrenChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NumberDependentChildren;
        partial void OnGeti_NumberDependentChildren(ref global::System.Nullable<int> value);
        partial void Oni_NumberDependentChildrenChanging(ref global::System.Nullable<int> value);
        partial void Oni_NumberDependentChildrenChanged();
    
        /// <summary>
        /// There are no comments for i_OccupationTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_OccupationTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_OccupationTypeId;
                OnGeti_OccupationTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_OccupationTypeId != value)
                {
                  Oni_OccupationTypeIdChanging(ref value);
                  ReportPropertyChanging("i_OccupationTypeId");
                  _i_OccupationTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_OccupationTypeId");
                  Oni_OccupationTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_OccupationTypeId;
        partial void OnGeti_OccupationTypeId(ref global::System.Nullable<int> value);
        partial void Oni_OccupationTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_OccupationTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_OwnerName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OwnerName
        {
            get
            {
                string value = _v_OwnerName;
                OnGetv_OwnerName(ref value);
                return value;
            }
            set
            {
                if (_v_OwnerName != value)
                {
                  Onv_OwnerNameChanging(ref value);
                  ReportPropertyChanging("v_OwnerName");
                  _v_OwnerName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OwnerName");
                  Onv_OwnerNameChanged();
              }
            }
        }
        private string _v_OwnerName;
        partial void OnGetv_OwnerName(ref string value);
        partial void Onv_OwnerNameChanging(ref string value);
        partial void Onv_OwnerNameChanged();
    
        /// <summary>
        /// There are no comments for i_NumberLiveChildren in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NumberLiveChildren
        {
            get
            {
                global::System.Nullable<int> value = _i_NumberLiveChildren;
                OnGeti_NumberLiveChildren(ref value);
                return value;
            }
            set
            {
                if (_i_NumberLiveChildren != value)
                {
                  Oni_NumberLiveChildrenChanging(ref value);
                  ReportPropertyChanging("i_NumberLiveChildren");
                  _i_NumberLiveChildren = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NumberLiveChildren");
                  Oni_NumberLiveChildrenChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NumberLiveChildren;
        partial void OnGeti_NumberLiveChildren(ref global::System.Nullable<int> value);
        partial void Oni_NumberLiveChildrenChanging(ref global::System.Nullable<int> value);
        partial void Oni_NumberLiveChildrenChanged();
    
        /// <summary>
        /// There are no comments for i_NumberDeadChildren in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NumberDeadChildren
        {
            get
            {
                global::System.Nullable<int> value = _i_NumberDeadChildren;
                OnGeti_NumberDeadChildren(ref value);
                return value;
            }
            set
            {
                if (_i_NumberDeadChildren != value)
                {
                  Oni_NumberDeadChildrenChanging(ref value);
                  ReportPropertyChanging("i_NumberDeadChildren");
                  _i_NumberDeadChildren = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NumberDeadChildren");
                  Oni_NumberDeadChildrenChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NumberDeadChildren;
        partial void OnGeti_NumberDeadChildren(ref global::System.Nullable<int> value);
        partial void Oni_NumberDeadChildrenChanging(ref global::System.Nullable<int> value);
        partial void Oni_NumberDeadChildrenChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_InsertNodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertNodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertNodeId;
                OnGeti_InsertNodeId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertNodeId != value)
                {
                  Oni_InsertNodeIdChanging(ref value);
                  ReportPropertyChanging("i_InsertNodeId");
                  _i_InsertNodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertNodeId");
                  Oni_InsertNodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertNodeId;
        partial void OnGeti_InsertNodeId(ref global::System.Nullable<int> value);
        partial void Oni_InsertNodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertNodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateNodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateNodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateNodeId;
                OnGeti_UpdateNodeId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateNodeId != value)
                {
                  Oni_UpdateNodeIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateNodeId");
                  _i_UpdateNodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateNodeId");
                  Oni_UpdateNodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateNodeId;
        partial void OnGeti_UpdateNodeId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_Relationship in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Relationship
        {
            get
            {
                global::System.Nullable<int> value = _i_Relationship;
                OnGeti_Relationship(ref value);
                return value;
            }
            set
            {
                if (_i_Relationship != value)
                {
                  Oni_RelationshipChanging(ref value);
                  ReportPropertyChanging("i_Relationship");
                  _i_Relationship = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Relationship");
                  Oni_RelationshipChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Relationship;
        partial void OnGeti_Relationship(ref global::System.Nullable<int> value);
        partial void Oni_RelationshipChanging(ref global::System.Nullable<int> value);
        partial void Oni_RelationshipChanged();
    
        /// <summary>
        /// There are no comments for v_ExploitedMineral in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ExploitedMineral
        {
            get
            {
                string value = _v_ExploitedMineral;
                OnGetv_ExploitedMineral(ref value);
                return value;
            }
            set
            {
                if (_v_ExploitedMineral != value)
                {
                  Onv_ExploitedMineralChanging(ref value);
                  ReportPropertyChanging("v_ExploitedMineral");
                  _v_ExploitedMineral = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ExploitedMineral");
                  Onv_ExploitedMineralChanged();
              }
            }
        }
        private string _v_ExploitedMineral;
        partial void OnGetv_ExploitedMineral(ref string value);
        partial void Onv_ExploitedMineralChanging(ref string value);
        partial void Onv_ExploitedMineralChanged();
    
        /// <summary>
        /// There are no comments for i_AltitudeWorkId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_AltitudeWorkId
        {
            get
            {
                global::System.Nullable<int> value = _i_AltitudeWorkId;
                OnGeti_AltitudeWorkId(ref value);
                return value;
            }
            set
            {
                if (_i_AltitudeWorkId != value)
                {
                  Oni_AltitudeWorkIdChanging(ref value);
                  ReportPropertyChanging("i_AltitudeWorkId");
                  _i_AltitudeWorkId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_AltitudeWorkId");
                  Oni_AltitudeWorkIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_AltitudeWorkId;
        partial void OnGeti_AltitudeWorkId(ref global::System.Nullable<int> value);
        partial void Oni_AltitudeWorkIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_AltitudeWorkIdChanged();
    
        /// <summary>
        /// There are no comments for i_PlaceWorkId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_PlaceWorkId
        {
            get
            {
                global::System.Nullable<int> value = _i_PlaceWorkId;
                OnGeti_PlaceWorkId(ref value);
                return value;
            }
            set
            {
                if (_i_PlaceWorkId != value)
                {
                  Oni_PlaceWorkIdChanging(ref value);
                  ReportPropertyChanging("i_PlaceWorkId");
                  _i_PlaceWorkId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_PlaceWorkId");
                  Oni_PlaceWorkIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_PlaceWorkId;
        partial void OnGeti_PlaceWorkId(ref global::System.Nullable<int> value);
        partial void Oni_PlaceWorkIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_PlaceWorkIdChanged();
    
        /// <summary>
        /// There are no comments for v_TelephoneRef in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_TelephoneRef
        {
            get
            {
                string value = _v_TelephoneRef;
                OnGetv_TelephoneRef(ref value);
                return value;
            }
            set
            {
                if (_v_TelephoneRef != value)
                {
                  Onv_TelephoneRefChanging(ref value);
                  ReportPropertyChanging("v_TelephoneRef");
                  _v_TelephoneRef = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_TelephoneRef");
                  Onv_TelephoneRefChanged();
              }
            }
        }
        private string _v_TelephoneRef;
        partial void OnGetv_TelephoneRef(ref string value);
        partial void Onv_TelephoneRefChanging(ref string value);
        partial void Onv_TelephoneRefChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for blacklistperson in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_BlackListPerson_v_PersonId", "blacklistperson")]
        public EntityCollection<blacklistperson> blacklistperson
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<blacklistperson>("Sigesoft.Node.WinClient.DAL.Fk_Person_BlackListPerson_v_PersonId", "blacklistperson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<blacklistperson>("Sigesoft.Node.WinClient.DAL.Fk_Person_BlackListPerson_v_PersonId", "blacklistperson", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for calendar in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_Calendar_v_PersonId", "calendar")]
        public EntityCollection<calendar> calendar
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<calendar>("Sigesoft.Node.WinClient.DAL.Fk_Person_Calendar_v_PersonId", "calendar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<calendar>("Sigesoft.Node.WinClient.DAL.Fk_Person_Calendar_v_PersonId", "calendar", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for familymedicalantecedents in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_FamilyMedicalAntecedents_v_PersonId", "familymedicalantecedents")]
        public EntityCollection<familymedicalantecedents> familymedicalantecedents
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<familymedicalantecedents>("Sigesoft.Node.WinClient.DAL.Fk_Person_FamilyMedicalAntecedents_v_PersonId", "familymedicalantecedents");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<familymedicalantecedents>("Sigesoft.Node.WinClient.DAL.Fk_Person_FamilyMedicalAntecedents_v_PersonId", "familymedicalantecedents", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for history in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_History_v_PersonId", "history")]
        public EntityCollection<history> history
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<history>("Sigesoft.Node.WinClient.DAL.Fk_Person_History_v_PersonId", "history");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<history>("Sigesoft.Node.WinClient.DAL.Fk_Person_History_v_PersonId", "history", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for multimediafile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_MultimediaFile_v_PersonId", "multimediafile")]
        public EntityCollection<multimediafile> multimediafile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<multimediafile>("Sigesoft.Node.WinClient.DAL.Fk_Person_MultimediaFile_v_PersonId", "multimediafile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<multimediafile>("Sigesoft.Node.WinClient.DAL.Fk_Person_MultimediaFile_v_PersonId", "multimediafile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for noxioushabits in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_NoxiousHabits_v_PersonId", "noxioushabits")]
        public EntityCollection<noxioushabits> noxioushabits
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<noxioushabits>("Sigesoft.Node.WinClient.DAL.Fk_Person_NoxiousHabits_v_PersonId", "noxioushabits");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<noxioushabits>("Sigesoft.Node.WinClient.DAL.Fk_Person_NoxiousHabits_v_PersonId", "noxioushabits", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for pacient in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_Pacient_v_PersonId", "pacient")]
        public pacient pacient
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<pacient>("Sigesoft.Node.WinClient.DAL.Fk_Person_Pacient_v_PersonId", "pacient").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<pacient>("Sigesoft.Node.WinClient.DAL.Fk_Person_Pacient_v_PersonId", "pacient").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for pacient in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<pacient> pacientReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<pacient>("Sigesoft.Node.WinClient.DAL.Fk_Person_Pacient_v_PersonId", "pacient");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<pacient>("Sigesoft.Node.WinClient.DAL.Fk_Person_Pacient_v_PersonId", "pacient", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<pacient>("Sigesoft.Node.WinClient.DAL.Fk_Person_Pacient_v_PersonId", "pacient").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for personmedicalhistory in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_PersonMedicalHistory_v_PersonId", "personmedicalhistory")]
        public EntityCollection<personmedicalhistory> personmedicalhistory
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<personmedicalhistory>("Sigesoft.Node.WinClient.DAL.Fk_Person_PersonMedicalHistory_v_PersonId", "personmedicalhistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<personmedicalhistory>("Sigesoft.Node.WinClient.DAL.Fk_Person_PersonMedicalHistory_v_PersonId", "personmedicalhistory", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for professional in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Person_Professional_v_PersonId", "professional")]
        public professional professional
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<professional>("Sigesoft.Node.WinClient.DAL.Pk_Person_Professional_v_PersonId", "professional").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<professional>("Sigesoft.Node.WinClient.DAL.Pk_Person_Professional_v_PersonId", "professional").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for professional in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<professional> professionalReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<professional>("Sigesoft.Node.WinClient.DAL.Pk_Person_Professional_v_PersonId", "professional");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<professional>("Sigesoft.Node.WinClient.DAL.Pk_Person_Professional_v_PersonId", "professional", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<professional>("Sigesoft.Node.WinClient.DAL.Pk_Person_Professional_v_PersonId", "professional").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_Service_v_PersonId", "service")]
        public EntityCollection<service> service
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<service>("Sigesoft.Node.WinClient.DAL.Fk_Person_Service_v_PersonId", "service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<service>("Sigesoft.Node.WinClient.DAL.Fk_Person_Service_v_PersonId", "service", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_SystemUser_i_PersonId_i_NodeId", "systemuser")]
        public EntityCollection<systemuser> systemuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_Person_SystemUser_i_PersonId_i_NodeId", "systemuser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_Person_SystemUser_i_PersonId_i_NodeId", "systemuser", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.personmedicalhistory in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_PersonMedicalHistoryId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="personmedicalhistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class personmedicalhistory : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new personmedicalhistory object.
        /// </summary>
        /// <param name="v_PersonMedicalHistoryId">Initial value of v_PersonMedicalHistoryId.</param>
        public static personmedicalhistory Createpersonmedicalhistory(string v_PersonMedicalHistoryId)
        {
            personmedicalhistory personmedicalhistory = new personmedicalhistory();
            personmedicalhistory.v_PersonMedicalHistoryId = v_PersonMedicalHistoryId;
            return personmedicalhistory;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_PersonMedicalHistoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_PersonMedicalHistoryId
        {
            get
            {
                string value = _v_PersonMedicalHistoryId;
                OnGetv_PersonMedicalHistoryId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonMedicalHistoryId != value)
                {
                  Onv_PersonMedicalHistoryIdChanging(ref value);
                  ReportPropertyChanging("v_PersonMedicalHistoryId");
                  _v_PersonMedicalHistoryId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_PersonMedicalHistoryId");
                  Onv_PersonMedicalHistoryIdChanged();
              }
            }
        }
        private string _v_PersonMedicalHistoryId;
        partial void OnGetv_PersonMedicalHistoryId(ref string value);
        partial void Onv_PersonMedicalHistoryIdChanging(ref string value);
        partial void Onv_PersonMedicalHistoryIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for v_DiseasesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DiseasesId
        {
            get
            {
                string value = _v_DiseasesId;
                OnGetv_DiseasesId(ref value);
                return value;
            }
            set
            {
                if (_v_DiseasesId != value)
                {
                  Onv_DiseasesIdChanging(ref value);
                  ReportPropertyChanging("v_DiseasesId");
                  _v_DiseasesId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DiseasesId");
                  Onv_DiseasesIdChanged();
              }
            }
        }
        private string _v_DiseasesId;
        partial void OnGetv_DiseasesId(ref string value);
        partial void Onv_DiseasesIdChanging(ref string value);
        partial void Onv_DiseasesIdChanged();
    
        /// <summary>
        /// There are no comments for i_TypeDiagnosticId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TypeDiagnosticId
        {
            get
            {
                global::System.Nullable<int> value = _i_TypeDiagnosticId;
                OnGeti_TypeDiagnosticId(ref value);
                return value;
            }
            set
            {
                if (_i_TypeDiagnosticId != value)
                {
                  Oni_TypeDiagnosticIdChanging(ref value);
                  ReportPropertyChanging("i_TypeDiagnosticId");
                  _i_TypeDiagnosticId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TypeDiagnosticId");
                  Oni_TypeDiagnosticIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TypeDiagnosticId;
        partial void OnGeti_TypeDiagnosticId(ref global::System.Nullable<int> value);
        partial void Oni_TypeDiagnosticIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TypeDiagnosticIdChanged();
    
        /// <summary>
        /// There are no comments for d_StartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_StartDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_StartDate;
                OnGetd_StartDate(ref value);
                return value;
            }
            set
            {
                if (_d_StartDate != value)
                {
                  Ond_StartDateChanging(ref value);
                  ReportPropertyChanging("d_StartDate");
                  _d_StartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_StartDate");
                  Ond_StartDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_StartDate;
        partial void OnGetd_StartDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_StartDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_StartDateChanged();
    
        /// <summary>
        /// There are no comments for v_DiagnosticDetail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DiagnosticDetail
        {
            get
            {
                string value = _v_DiagnosticDetail;
                OnGetv_DiagnosticDetail(ref value);
                return value;
            }
            set
            {
                if (_v_DiagnosticDetail != value)
                {
                  Onv_DiagnosticDetailChanging(ref value);
                  ReportPropertyChanging("v_DiagnosticDetail");
                  _v_DiagnosticDetail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DiagnosticDetail");
                  Onv_DiagnosticDetailChanged();
              }
            }
        }
        private string _v_DiagnosticDetail;
        partial void OnGetv_DiagnosticDetail(ref string value);
        partial void Onv_DiagnosticDetailChanging(ref string value);
        partial void Onv_DiagnosticDetailChanged();
    
        /// <summary>
        /// There are no comments for v_TreatmentSite in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_TreatmentSite
        {
            get
            {
                string value = _v_TreatmentSite;
                OnGetv_TreatmentSite(ref value);
                return value;
            }
            set
            {
                if (_v_TreatmentSite != value)
                {
                  Onv_TreatmentSiteChanging(ref value);
                  ReportPropertyChanging("v_TreatmentSite");
                  _v_TreatmentSite = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_TreatmentSite");
                  Onv_TreatmentSiteChanged();
              }
            }
        }
        private string _v_TreatmentSite;
        partial void OnGetv_TreatmentSite(ref string value);
        partial void Onv_TreatmentSiteChanging(ref string value);
        partial void Onv_TreatmentSiteChanged();
    
        /// <summary>
        /// There are no comments for i_AnswerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_AnswerId
        {
            get
            {
                global::System.Nullable<int> value = _i_AnswerId;
                OnGeti_AnswerId(ref value);
                return value;
            }
            set
            {
                if (_i_AnswerId != value)
                {
                  Oni_AnswerIdChanging(ref value);
                  ReportPropertyChanging("i_AnswerId");
                  _i_AnswerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_AnswerId");
                  Oni_AnswerIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_AnswerId;
        partial void OnGeti_AnswerId(ref global::System.Nullable<int> value);
        partial void Oni_AnswerIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_AnswerIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for diseases in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Diseases_PersonalmMedicalHistory_v_DiseasesId", "diseases")]
        public diseases diseases
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_PersonalmMedicalHistory_v_DiseasesId", "diseases").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_PersonalmMedicalHistory_v_DiseasesId", "diseases").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for diseases in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<diseases> diseasesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_PersonalmMedicalHistory_v_DiseasesId", "diseases");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_PersonalmMedicalHistory_v_DiseasesId", "diseases", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diseases>("Sigesoft.Node.WinClient.DAL.Fk_Diseases_PersonalmMedicalHistory_v_DiseasesId", "diseases").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_PersonMedicalHistory_v_PersonId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_PersonMedicalHistory_v_PersonId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_PersonMedicalHistory_v_PersonId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_PersonMedicalHistory_v_PersonId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_PersonMedicalHistory_v_PersonId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_PersonMedicalHistory_v_PersonId", "person").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.portaluser in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PortalUserId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="portaluser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class portaluser : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new portaluser object.
        /// </summary>
        /// <param name="portalUserId">Initial value of PortalUserId.</param>
        /// <param name="userName">Initial value of UserName.</param>
        /// <param name="password">Initial value of Password.</param>
        /// <param name="isDeleted">Initial value of IsDeleted.</param>
        public static portaluser Createportaluser(int portalUserId, string userName, string password, bool isDeleted)
        {
            portaluser portaluser = new portaluser();
            portaluser.PortalUserId = portalUserId;
            portaluser.UserName = userName;
            portaluser.Password = password;
            portaluser.IsDeleted = isDeleted;
            return portaluser;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PortalUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int PortalUserId
        {
            get
            {
                int value = _PortalUserId;
                OnGetPortalUserId(ref value);
                return value;
            }
            set
            {
                if (_PortalUserId != value)
                {
                  OnPortalUserIdChanging(ref value);
                  ReportPropertyChanging("PortalUserId");
                  _PortalUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PortalUserId");
                  OnPortalUserIdChanged();
              }
            }
        }
        private int _PortalUserId;
        partial void OnGetPortalUserId(ref int value);
        partial void OnPortalUserIdChanging(ref int value);
        partial void OnPortalUserIdChanged();
    
        /// <summary>
        /// There are no comments for UserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string UserName
        {
            get
            {
                string value = _UserName;
                OnGetUserName(ref value);
                return value;
            }
            set
            {
                if (_UserName != value)
                {
                  OnUserNameChanging(ref value);
                  ReportPropertyChanging("UserName");
                  _UserName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("UserName");
                  OnUserNameChanged();
              }
            }
        }
        private string _UserName;
        partial void OnGetUserName(ref string value);
        partial void OnUserNameChanging(ref string value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// There are no comments for Password in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Password
        {
            get
            {
                string value = _Password;
                OnGetPassword(ref value);
                return value;
            }
            set
            {
                if (_Password != value)
                {
                  OnPasswordChanging(ref value);
                  ReportPropertyChanging("Password");
                  _Password = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Password");
                  OnPasswordChanged();
              }
            }
        }
        private string _Password;
        partial void OnGetPassword(ref string value);
        partial void OnPasswordChanging(ref string value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// There are no comments for IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsDeleted
        {
            get
            {
                bool value = _IsDeleted;
                OnGetIsDeleted(ref value);
                return value;
            }
            set
            {
                if (_IsDeleted != value)
                {
                  OnIsDeletedChanging(ref value);
                  ReportPropertyChanging("IsDeleted");
                  _IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsDeleted");
                  OnIsDeletedChanged();
              }
            }
        }
        private bool _IsDeleted;
        partial void OnGetIsDeleted(ref bool value);
        partial void OnIsDeletedChanging(ref bool value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for portaluseraccess in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_PortalUserAccess_PortalUser", "portaluseraccess")]
        public EntityCollection<portaluseraccess> portaluseraccess
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<portaluseraccess>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_PortalUser", "portaluseraccess");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<portaluseraccess>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_PortalUser", "portaluseraccess", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for portaluserpermission in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_PortalPermission_PortalUser", "portaluserpermission")]
        public EntityCollection<portaluserpermission> portaluserpermission
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<portaluserpermission>("Sigesoft.Node.WinClient.DAL.FK_PortalPermission_PortalUser", "portaluserpermission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<portaluserpermission>("Sigesoft.Node.WinClient.DAL.FK_PortalPermission_PortalUser", "portaluserpermission", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.portaluseraccess in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PortalUserAccessId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="portaluseraccess")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class portaluseraccess : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new portaluseraccess object.
        /// </summary>
        /// <param name="portalUserAccessId">Initial value of PortalUserAccessId.</param>
        /// <param name="portalUserId">Initial value of PortalUserId.</param>
        /// <param name="organizationId">Initial value of OrganizationId.</param>
        /// <param name="isDeleted">Initial value of IsDeleted.</param>
        public static portaluseraccess Createportaluseraccess(int portalUserAccessId, int portalUserId, string organizationId, bool isDeleted)
        {
            portaluseraccess portaluseraccess = new portaluseraccess();
            portaluseraccess.PortalUserAccessId = portalUserAccessId;
            portaluseraccess.PortalUserId = portalUserId;
            portaluseraccess.OrganizationId = organizationId;
            portaluseraccess.IsDeleted = isDeleted;
            return portaluseraccess;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PortalUserAccessId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int PortalUserAccessId
        {
            get
            {
                int value = _PortalUserAccessId;
                OnGetPortalUserAccessId(ref value);
                return value;
            }
            set
            {
                if (_PortalUserAccessId != value)
                {
                  OnPortalUserAccessIdChanging(ref value);
                  ReportPropertyChanging("PortalUserAccessId");
                  _PortalUserAccessId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PortalUserAccessId");
                  OnPortalUserAccessIdChanged();
              }
            }
        }
        private int _PortalUserAccessId;
        partial void OnGetPortalUserAccessId(ref int value);
        partial void OnPortalUserAccessIdChanging(ref int value);
        partial void OnPortalUserAccessIdChanged();
    
        /// <summary>
        /// There are no comments for PortalUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int PortalUserId
        {
            get
            {
                int value = _PortalUserId;
                OnGetPortalUserId(ref value);
                return value;
            }
            set
            {
                if (_PortalUserId != value)
                {
                  OnPortalUserIdChanging(ref value);
                  ReportPropertyChanging("PortalUserId");
                  _PortalUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PortalUserId");
                  OnPortalUserIdChanged();
              }
            }
        }
        private int _PortalUserId;
        partial void OnGetPortalUserId(ref int value);
        partial void OnPortalUserIdChanging(ref int value);
        partial void OnPortalUserIdChanged();
    
        /// <summary>
        /// There are no comments for OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string OrganizationId
        {
            get
            {
                string value = _OrganizationId;
                OnGetOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_OrganizationId != value)
                {
                  OnOrganizationIdChanging(ref value);
                  ReportPropertyChanging("OrganizationId");
                  _OrganizationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OrganizationId");
                  OnOrganizationIdChanged();
              }
            }
        }
        private string _OrganizationId;
        partial void OnGetOrganizationId(ref string value);
        partial void OnOrganizationIdChanging(ref string value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsDeleted
        {
            get
            {
                bool value = _IsDeleted;
                OnGetIsDeleted(ref value);
                return value;
            }
            set
            {
                if (_IsDeleted != value)
                {
                  OnIsDeletedChanging(ref value);
                  ReportPropertyChanging("IsDeleted");
                  _IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsDeleted");
                  OnIsDeletedChanged();
              }
            }
        }
        private bool _IsDeleted;
        partial void OnGetIsDeleted(ref bool value);
        partial void OnIsDeletedChanging(ref bool value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for portaluser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_PortalUserAccess_PortalUser", "portaluser")]
        public portaluser portaluser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<portaluser>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_PortalUser", "portaluser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<portaluser>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_PortalUser", "portaluser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for portaluser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<portaluser> portaluserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<portaluser>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_PortalUser", "portaluser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<portaluser>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_PortalUser", "portaluser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<portaluser>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_PortalUser", "portaluser").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_PortalUserAccess_organization", "organization")]
        public organization organization
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_organization", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_organization", "organization").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_organization", "organization");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_organization", "organization", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.FK_PortalUserAccess_organization", "organization").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.portaluserpermission in the schema.
    /// </summary>
    /// <KeyProperties>
    /// PortalUserPermissionId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="portaluserpermission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class portaluserpermission : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new portaluserpermission object.
        /// </summary>
        /// <param name="portalUserPermissionId">Initial value of PortalUserPermissionId.</param>
        /// <param name="portalUserId">Initial value of PortalUserId.</param>
        /// <param name="isDeleted">Initial value of IsDeleted.</param>
        public static portaluserpermission Createportaluserpermission(int portalUserPermissionId, int portalUserId, bool isDeleted)
        {
            portaluserpermission portaluserpermission = new portaluserpermission();
            portaluserpermission.PortalUserPermissionId = portalUserPermissionId;
            portaluserpermission.PortalUserId = portalUserId;
            portaluserpermission.IsDeleted = isDeleted;
            return portaluserpermission;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PortalUserPermissionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int PortalUserPermissionId
        {
            get
            {
                int value = _PortalUserPermissionId;
                OnGetPortalUserPermissionId(ref value);
                return value;
            }
            set
            {
                if (_PortalUserPermissionId != value)
                {
                  OnPortalUserPermissionIdChanging(ref value);
                  ReportPropertyChanging("PortalUserPermissionId");
                  _PortalUserPermissionId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PortalUserPermissionId");
                  OnPortalUserPermissionIdChanged();
              }
            }
        }
        private int _PortalUserPermissionId;
        partial void OnGetPortalUserPermissionId(ref int value);
        partial void OnPortalUserPermissionIdChanging(ref int value);
        partial void OnPortalUserPermissionIdChanged();
    
        /// <summary>
        /// There are no comments for PortalUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int PortalUserId
        {
            get
            {
                int value = _PortalUserId;
                OnGetPortalUserId(ref value);
                return value;
            }
            set
            {
                if (_PortalUserId != value)
                {
                  OnPortalUserIdChanging(ref value);
                  ReportPropertyChanging("PortalUserId");
                  _PortalUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PortalUserId");
                  OnPortalUserIdChanged();
              }
            }
        }
        private int _PortalUserId;
        partial void OnGetPortalUserId(ref int value);
        partial void OnPortalUserIdChanging(ref int value);
        partial void OnPortalUserIdChanged();
    
        /// <summary>
        /// There are no comments for Value in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Value
        {
            get
            {
                string value = _Value;
                OnGetValue(ref value);
                return value;
            }
            set
            {
                if (_Value != value)
                {
                  OnValueChanging(ref value);
                  ReportPropertyChanging("Value");
                  _Value = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Value");
                  OnValueChanged();
              }
            }
        }
        private string _Value;
        partial void OnGetValue(ref string value);
        partial void OnValueChanging(ref string value);
        partial void OnValueChanged();
    
        /// <summary>
        /// There are no comments for IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public bool IsDeleted
        {
            get
            {
                bool value = _IsDeleted;
                OnGetIsDeleted(ref value);
                return value;
            }
            set
            {
                if (_IsDeleted != value)
                {
                  OnIsDeletedChanging(ref value);
                  ReportPropertyChanging("IsDeleted");
                  _IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IsDeleted");
                  OnIsDeletedChanged();
              }
            }
        }
        private bool _IsDeleted;
        partial void OnGetIsDeleted(ref bool value);
        partial void OnIsDeletedChanging(ref bool value);
        partial void OnIsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for portaluser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_PortalPermission_PortalUser", "portaluser")]
        public portaluser portaluser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<portaluser>("Sigesoft.Node.WinClient.DAL.FK_PortalPermission_PortalUser", "portaluser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<portaluser>("Sigesoft.Node.WinClient.DAL.FK_PortalPermission_PortalUser", "portaluser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for portaluser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<portaluser> portaluserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<portaluser>("Sigesoft.Node.WinClient.DAL.FK_PortalPermission_PortalUser", "portaluser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<portaluser>("Sigesoft.Node.WinClient.DAL.FK_PortalPermission_PortalUser", "portaluser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<portaluser>("Sigesoft.Node.WinClient.DAL.FK_PortalPermission_PortalUser", "portaluser").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.procedurebyservice in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ProcedureByServiceId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="procedurebyservice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class procedurebyservice : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new procedurebyservice object.
        /// </summary>
        /// <param name="v_ProcedureByServiceId">Initial value of v_ProcedureByServiceId.</param>
        public static procedurebyservice Createprocedurebyservice(string v_ProcedureByServiceId)
        {
            procedurebyservice procedurebyservice = new procedurebyservice();
            procedurebyservice.v_ProcedureByServiceId = v_ProcedureByServiceId;
            return procedurebyservice;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ProcedureByServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ProcedureByServiceId
        {
            get
            {
                string value = _v_ProcedureByServiceId;
                OnGetv_ProcedureByServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ProcedureByServiceId != value)
                {
                  Onv_ProcedureByServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ProcedureByServiceId");
                  _v_ProcedureByServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ProcedureByServiceId");
                  Onv_ProcedureByServiceIdChanged();
              }
            }
        }
        private string _v_ProcedureByServiceId;
        partial void OnGetv_ProcedureByServiceId(ref string value);
        partial void Onv_ProcedureByServiceIdChanging(ref string value);
        partial void Onv_ProcedureByServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for i_ProcedureId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ProcedureId
        {
            get
            {
                global::System.Nullable<int> value = _i_ProcedureId;
                OnGeti_ProcedureId(ref value);
                return value;
            }
            set
            {
                if (_i_ProcedureId != value)
                {
                  Oni_ProcedureIdChanging(ref value);
                  ReportPropertyChanging("i_ProcedureId");
                  _i_ProcedureId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ProcedureId");
                  Oni_ProcedureIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ProcedureId;
        partial void OnGeti_ProcedureId(ref global::System.Nullable<int> value);
        partial void Oni_ProcedureIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ProcedureIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_ProcedureTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ProcedureTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ProcedureTypeId;
                OnGeti_ProcedureTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_ProcedureTypeId != value)
                {
                  Oni_ProcedureTypeIdChanging(ref value);
                  ReportPropertyChanging("i_ProcedureTypeId");
                  _i_ProcedureTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ProcedureTypeId");
                  Oni_ProcedureTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ProcedureTypeId;
        partial void OnGeti_ProcedureTypeId(ref global::System.Nullable<int> value);
        partial void Oni_ProcedureTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ProcedureTypeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Procedure_v_ServiceId", "service")]
        public service service
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Procedure_v_ServiceId", "service").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Procedure_v_ServiceId", "service").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<service> serviceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Procedure_v_ServiceId", "service");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Procedure_v_ServiceId", "service", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Procedure_v_ServiceId", "service").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.product in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ProductId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class product : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new product object.
        /// </summary>
        /// <param name="v_ProductId">Initial value of v_ProductId.</param>
        public static product Createproduct(string v_ProductId)
        {
            product product = new product();
            product.v_ProductId = v_ProductId;
            return product;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ProductId
        {
            get
            {
                string value = _v_ProductId;
                OnGetv_ProductId(ref value);
                return value;
            }
            set
            {
                if (_v_ProductId != value)
                {
                  Onv_ProductIdChanging(ref value);
                  ReportPropertyChanging("v_ProductId");
                  _v_ProductId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ProductId");
                  Onv_ProductIdChanged();
              }
            }
        }
        private string _v_ProductId;
        partial void OnGetv_ProductId(ref string value);
        partial void Onv_ProductIdChanging(ref string value);
        partial void Onv_ProductIdChanged();
    
        /// <summary>
        /// There are no comments for i_CategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_CategoryId
        {
            get
            {
                global::System.Nullable<int> value = _i_CategoryId;
                OnGeti_CategoryId(ref value);
                return value;
            }
            set
            {
                if (_i_CategoryId != value)
                {
                  Oni_CategoryIdChanging(ref value);
                  ReportPropertyChanging("i_CategoryId");
                  _i_CategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_CategoryId");
                  Oni_CategoryIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_CategoryId;
        partial void OnGeti_CategoryId(ref global::System.Nullable<int> value);
        partial void Oni_CategoryIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_CategoryIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for v_GenericName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GenericName
        {
            get
            {
                string value = _v_GenericName;
                OnGetv_GenericName(ref value);
                return value;
            }
            set
            {
                if (_v_GenericName != value)
                {
                  Onv_GenericNameChanging(ref value);
                  ReportPropertyChanging("v_GenericName");
                  _v_GenericName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GenericName");
                  Onv_GenericNameChanged();
              }
            }
        }
        private string _v_GenericName;
        partial void OnGetv_GenericName(ref string value);
        partial void Onv_GenericNameChanging(ref string value);
        partial void Onv_GenericNameChanged();
    
        /// <summary>
        /// There are no comments for v_BarCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_BarCode
        {
            get
            {
                string value = _v_BarCode;
                OnGetv_BarCode(ref value);
                return value;
            }
            set
            {
                if (_v_BarCode != value)
                {
                  Onv_BarCodeChanging(ref value);
                  ReportPropertyChanging("v_BarCode");
                  _v_BarCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_BarCode");
                  Onv_BarCodeChanged();
              }
            }
        }
        private string _v_BarCode;
        partial void OnGetv_BarCode(ref string value);
        partial void Onv_BarCodeChanging(ref string value);
        partial void Onv_BarCodeChanged();
    
        /// <summary>
        /// There are no comments for v_ProductCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProductCode
        {
            get
            {
                string value = _v_ProductCode;
                OnGetv_ProductCode(ref value);
                return value;
            }
            set
            {
                if (_v_ProductCode != value)
                {
                  Onv_ProductCodeChanging(ref value);
                  ReportPropertyChanging("v_ProductCode");
                  _v_ProductCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProductCode");
                  Onv_ProductCodeChanged();
              }
            }
        }
        private string _v_ProductCode;
        partial void OnGetv_ProductCode(ref string value);
        partial void Onv_ProductCodeChanging(ref string value);
        partial void Onv_ProductCodeChanged();
    
        /// <summary>
        /// There are no comments for v_Brand in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Brand
        {
            get
            {
                string value = _v_Brand;
                OnGetv_Brand(ref value);
                return value;
            }
            set
            {
                if (_v_Brand != value)
                {
                  Onv_BrandChanging(ref value);
                  ReportPropertyChanging("v_Brand");
                  _v_Brand = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Brand");
                  Onv_BrandChanged();
              }
            }
        }
        private string _v_Brand;
        partial void OnGetv_Brand(ref string value);
        partial void Onv_BrandChanging(ref string value);
        partial void Onv_BrandChanged();
    
        /// <summary>
        /// There are no comments for v_Model in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Model
        {
            get
            {
                string value = _v_Model;
                OnGetv_Model(ref value);
                return value;
            }
            set
            {
                if (_v_Model != value)
                {
                  Onv_ModelChanging(ref value);
                  ReportPropertyChanging("v_Model");
                  _v_Model = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Model");
                  Onv_ModelChanged();
              }
            }
        }
        private string _v_Model;
        partial void OnGetv_Model(ref string value);
        partial void Onv_ModelChanging(ref string value);
        partial void Onv_ModelChanged();
    
        /// <summary>
        /// There are no comments for v_SerialNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SerialNumber
        {
            get
            {
                string value = _v_SerialNumber;
                OnGetv_SerialNumber(ref value);
                return value;
            }
            set
            {
                if (_v_SerialNumber != value)
                {
                  Onv_SerialNumberChanging(ref value);
                  ReportPropertyChanging("v_SerialNumber");
                  _v_SerialNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SerialNumber");
                  Onv_SerialNumberChanged();
              }
            }
        }
        private string _v_SerialNumber;
        partial void OnGetv_SerialNumber(ref string value);
        partial void Onv_SerialNumberChanging(ref string value);
        partial void Onv_SerialNumberChanged();
    
        /// <summary>
        /// There are no comments for d_ExpirationDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ExpirationDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ExpirationDate;
                OnGetd_ExpirationDate(ref value);
                return value;
            }
            set
            {
                if (_d_ExpirationDate != value)
                {
                  Ond_ExpirationDateChanging(ref value);
                  ReportPropertyChanging("d_ExpirationDate");
                  _d_ExpirationDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ExpirationDate");
                  Ond_ExpirationDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ExpirationDate;
        partial void OnGetd_ExpirationDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ExpirationDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ExpirationDateChanged();
    
        /// <summary>
        /// There are no comments for i_MeasurementUnitId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MeasurementUnitId
        {
            get
            {
                global::System.Nullable<int> value = _i_MeasurementUnitId;
                OnGeti_MeasurementUnitId(ref value);
                return value;
            }
            set
            {
                if (_i_MeasurementUnitId != value)
                {
                  Oni_MeasurementUnitIdChanging(ref value);
                  ReportPropertyChanging("i_MeasurementUnitId");
                  _i_MeasurementUnitId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MeasurementUnitId");
                  Oni_MeasurementUnitIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MeasurementUnitId;
        partial void OnGeti_MeasurementUnitId(ref global::System.Nullable<int> value);
        partial void Oni_MeasurementUnitIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MeasurementUnitIdChanged();
    
        /// <summary>
        /// There are no comments for r_ReferentialCostPrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_ReferentialCostPrice
        {
            get
            {
                global::System.Nullable<float> value = _r_ReferentialCostPrice;
                OnGetr_ReferentialCostPrice(ref value);
                return value;
            }
            set
            {
                if (_r_ReferentialCostPrice != value)
                {
                  Onr_ReferentialCostPriceChanging(ref value);
                  ReportPropertyChanging("r_ReferentialCostPrice");
                  _r_ReferentialCostPrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_ReferentialCostPrice");
                  Onr_ReferentialCostPriceChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_ReferentialCostPrice;
        partial void OnGetr_ReferentialCostPrice(ref global::System.Nullable<float> value);
        partial void Onr_ReferentialCostPriceChanging(ref global::System.Nullable<float> value);
        partial void Onr_ReferentialCostPriceChanged();
    
        /// <summary>
        /// There are no comments for r_ReferentialSalesPrice in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_ReferentialSalesPrice
        {
            get
            {
                global::System.Nullable<float> value = _r_ReferentialSalesPrice;
                OnGetr_ReferentialSalesPrice(ref value);
                return value;
            }
            set
            {
                if (_r_ReferentialSalesPrice != value)
                {
                  Onr_ReferentialSalesPriceChanging(ref value);
                  ReportPropertyChanging("r_ReferentialSalesPrice");
                  _r_ReferentialSalesPrice = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_ReferentialSalesPrice");
                  Onr_ReferentialSalesPriceChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_ReferentialSalesPrice;
        partial void OnGetr_ReferentialSalesPrice(ref global::System.Nullable<float> value);
        partial void Onr_ReferentialSalesPriceChanging(ref global::System.Nullable<float> value);
        partial void Onr_ReferentialSalesPriceChanged();
    
        /// <summary>
        /// There are no comments for v_Presentation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Presentation
        {
            get
            {
                string value = _v_Presentation;
                OnGetv_Presentation(ref value);
                return value;
            }
            set
            {
                if (_v_Presentation != value)
                {
                  Onv_PresentationChanging(ref value);
                  ReportPropertyChanging("v_Presentation");
                  _v_Presentation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Presentation");
                  Onv_PresentationChanged();
              }
            }
        }
        private string _v_Presentation;
        partial void OnGetv_Presentation(ref string value);
        partial void Onv_PresentationChanging(ref string value);
        partial void Onv_PresentationChanged();
    
        /// <summary>
        /// There are no comments for v_AdditionalInformation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AdditionalInformation
        {
            get
            {
                string value = _v_AdditionalInformation;
                OnGetv_AdditionalInformation(ref value);
                return value;
            }
            set
            {
                if (_v_AdditionalInformation != value)
                {
                  Onv_AdditionalInformationChanging(ref value);
                  ReportPropertyChanging("v_AdditionalInformation");
                  _v_AdditionalInformation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AdditionalInformation");
                  Onv_AdditionalInformationChanged();
              }
            }
        }
        private string _v_AdditionalInformation;
        partial void OnGetv_AdditionalInformation(ref string value);
        partial void Onv_AdditionalInformationChanging(ref string value);
        partial void Onv_AdditionalInformationChanged();
    
        /// <summary>
        /// There are no comments for b_Image in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_Image
        {
            get
            {
                byte[] value = _b_Image;
                OnGetb_Image(ref value);
                return value;
            }
            set
            {
                if (_b_Image != value)
                {
                  Onb_ImageChanging(ref value);
                  ReportPropertyChanging("b_Image");
                  _b_Image = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_Image");
                  Onb_ImageChanged();
              }
            }
        }
        private byte[] _b_Image;
        partial void OnGetb_Image(ref byte[] value);
        partial void Onb_ImageChanging(ref byte[] value);
        partial void Onb_ImageChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for medication in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Product_Medication_v_ProductId", "medication")]
        public EntityCollection<medication> medication
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<medication>("Sigesoft.Node.WinClient.DAL.Fk_Product_Medication_v_ProductId", "medication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<medication>("Sigesoft.Node.WinClient.DAL.Fk_Product_Medication_v_ProductId", "medication", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for movementdetail in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Product_MovementDetail_i_ProductId", "movementdetail")]
        public EntityCollection<movementdetail> movementdetail
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<movementdetail>("Sigesoft.Node.WinClient.DAL.Fk_Product_MovementDetail_i_ProductId", "movementdetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<movementdetail>("Sigesoft.Node.WinClient.DAL.Fk_Product_MovementDetail_i_ProductId", "movementdetail", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for productwarehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Product_ProductWarehouse_i_ProductId", "productwarehouse")]
        public EntityCollection<productwarehouse> productwarehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<productwarehouse>("Sigesoft.Node.WinClient.DAL.Fk_Product_ProductWarehouse_i_ProductId", "productwarehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<productwarehouse>("Sigesoft.Node.WinClient.DAL.Fk_Product_ProductWarehouse_i_ProductId", "productwarehouse", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.productsformigration in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_ProductForMigrationId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="productsformigration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class productsformigration : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new productsformigration object.
        /// </summary>
        /// <param name="i_ProductForMigrationId">Initial value of i_ProductForMigrationId.</param>
        public static productsformigration Createproductsformigration(int i_ProductForMigrationId)
        {
            productsformigration productsformigration = new productsformigration();
            productsformigration.i_ProductForMigrationId = i_ProductForMigrationId;
            return productsformigration;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_ProductForMigrationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_ProductForMigrationId
        {
            get
            {
                int value = _i_ProductForMigrationId;
                OnGeti_ProductForMigrationId(ref value);
                return value;
            }
            set
            {
                if (_i_ProductForMigrationId != value)
                {
                  Oni_ProductForMigrationIdChanging(ref value);
                  ReportPropertyChanging("i_ProductForMigrationId");
                  _i_ProductForMigrationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ProductForMigrationId");
                  Oni_ProductForMigrationIdChanged();
              }
            }
        }
        private int _i_ProductForMigrationId;
        partial void OnGeti_ProductForMigrationId(ref int value);
        partial void Oni_ProductForMigrationIdChanging(ref int value);
        partial void Oni_ProductForMigrationIdChanged();
    
        /// <summary>
        /// There are no comments for v_WarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_WarehouseId
        {
            get
            {
                string value = _v_WarehouseId;
                OnGetv_WarehouseId(ref value);
                return value;
            }
            set
            {
                if (_v_WarehouseId != value)
                {
                  Onv_WarehouseIdChanging(ref value);
                  ReportPropertyChanging("v_WarehouseId");
                  _v_WarehouseId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_WarehouseId");
                  Onv_WarehouseIdChanged();
              }
            }
        }
        private string _v_WarehouseId;
        partial void OnGetv_WarehouseId(ref string value);
        partial void Onv_WarehouseIdChanging(ref string value);
        partial void Onv_WarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProductId
        {
            get
            {
                string value = _v_ProductId;
                OnGetv_ProductId(ref value);
                return value;
            }
            set
            {
                if (_v_ProductId != value)
                {
                  Onv_ProductIdChanging(ref value);
                  ReportPropertyChanging("v_ProductId");
                  _v_ProductId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProductId");
                  Onv_ProductIdChanged();
              }
            }
        }
        private string _v_ProductId;
        partial void OnGetv_ProductId(ref string value);
        partial void Onv_ProductIdChanging(ref string value);
        partial void Onv_ProductIdChanged();
    
        /// <summary>
        /// There are no comments for i_CategoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_CategoryId
        {
            get
            {
                global::System.Nullable<int> value = _i_CategoryId;
                OnGeti_CategoryId(ref value);
                return value;
            }
            set
            {
                if (_i_CategoryId != value)
                {
                  Oni_CategoryIdChanging(ref value);
                  ReportPropertyChanging("i_CategoryId");
                  _i_CategoryId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_CategoryId");
                  Oni_CategoryIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_CategoryId;
        partial void OnGeti_CategoryId(ref global::System.Nullable<int> value);
        partial void Oni_CategoryIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_CategoryIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for r_StockMin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_StockMin
        {
            get
            {
                global::System.Nullable<float> value = _r_StockMin;
                OnGetr_StockMin(ref value);
                return value;
            }
            set
            {
                if (_r_StockMin != value)
                {
                  Onr_StockMinChanging(ref value);
                  ReportPropertyChanging("r_StockMin");
                  _r_StockMin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_StockMin");
                  Onr_StockMinChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_StockMin;
        partial void OnGetr_StockMin(ref global::System.Nullable<float> value);
        partial void Onr_StockMinChanging(ref global::System.Nullable<float> value);
        partial void Onr_StockMinChanged();
    
        /// <summary>
        /// There are no comments for r_StockMax in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_StockMax
        {
            get
            {
                global::System.Nullable<float> value = _r_StockMax;
                OnGetr_StockMax(ref value);
                return value;
            }
            set
            {
                if (_r_StockMax != value)
                {
                  Onr_StockMaxChanging(ref value);
                  ReportPropertyChanging("r_StockMax");
                  _r_StockMax = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_StockMax");
                  Onr_StockMaxChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_StockMax;
        partial void OnGetr_StockMax(ref global::System.Nullable<float> value);
        partial void Onr_StockMaxChanging(ref global::System.Nullable<float> value);
        partial void Onr_StockMaxChanged();
    
        /// <summary>
        /// There are no comments for r_StockActual in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_StockActual
        {
            get
            {
                global::System.Nullable<float> value = _r_StockActual;
                OnGetr_StockActual(ref value);
                return value;
            }
            set
            {
                if (_r_StockActual != value)
                {
                  Onr_StockActualChanging(ref value);
                  ReportPropertyChanging("r_StockActual");
                  _r_StockActual = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_StockActual");
                  Onr_StockActualChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_StockActual;
        partial void OnGetr_StockActual(ref global::System.Nullable<float> value);
        partial void Onr_StockActualChanging(ref global::System.Nullable<float> value);
        partial void Onr_StockActualChanged();
    
        /// <summary>
        /// There are no comments for i_MovementTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MovementTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_MovementTypeId;
                OnGeti_MovementTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_MovementTypeId != value)
                {
                  Oni_MovementTypeIdChanging(ref value);
                  ReportPropertyChanging("i_MovementTypeId");
                  _i_MovementTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MovementTypeId");
                  Oni_MovementTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MovementTypeId;
        partial void OnGeti_MovementTypeId(ref global::System.Nullable<int> value);
        partial void Oni_MovementTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MovementTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_MovementType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_MovementType
        {
            get
            {
                string value = _v_MovementType;
                OnGetv_MovementType(ref value);
                return value;
            }
            set
            {
                if (_v_MovementType != value)
                {
                  Onv_MovementTypeChanging(ref value);
                  ReportPropertyChanging("v_MovementType");
                  _v_MovementType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_MovementType");
                  Onv_MovementTypeChanged();
              }
            }
        }
        private string _v_MovementType;
        partial void OnGetv_MovementType(ref string value);
        partial void Onv_MovementTypeChanging(ref string value);
        partial void Onv_MovementTypeChanged();
    
        /// <summary>
        /// There are no comments for i_MotiveTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MotiveTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_MotiveTypeId;
                OnGeti_MotiveTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_MotiveTypeId != value)
                {
                  Oni_MotiveTypeIdChanging(ref value);
                  ReportPropertyChanging("i_MotiveTypeId");
                  _i_MotiveTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MotiveTypeId");
                  Oni_MotiveTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MotiveTypeId;
        partial void OnGeti_MotiveTypeId(ref global::System.Nullable<int> value);
        partial void Oni_MotiveTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MotiveTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_MotiveType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_MotiveType
        {
            get
            {
                string value = _v_MotiveType;
                OnGetv_MotiveType(ref value);
                return value;
            }
            set
            {
                if (_v_MotiveType != value)
                {
                  Onv_MotiveTypeChanging(ref value);
                  ReportPropertyChanging("v_MotiveType");
                  _v_MotiveType = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_MotiveType");
                  Onv_MotiveTypeChanged();
              }
            }
        }
        private string _v_MotiveType;
        partial void OnGetv_MotiveType(ref string value);
        partial void Onv_MotiveTypeChanging(ref string value);
        partial void Onv_MotiveTypeChanged();
    
        /// <summary>
        /// There are no comments for d_MovementDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_MovementDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_MovementDate;
                OnGetd_MovementDate(ref value);
                return value;
            }
            set
            {
                if (_d_MovementDate != value)
                {
                  Ond_MovementDateChanging(ref value);
                  ReportPropertyChanging("d_MovementDate");
                  _d_MovementDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_MovementDate");
                  Ond_MovementDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_MovementDate;
        partial void OnGetd_MovementDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_MovementDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_MovementDateChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.productwarehouse in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_WarehouseId
    /// v_ProductId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="productwarehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class productwarehouse : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new productwarehouse object.
        /// </summary>
        /// <param name="v_WarehouseId">Initial value of v_WarehouseId.</param>
        /// <param name="v_ProductId">Initial value of v_ProductId.</param>
        public static productwarehouse Createproductwarehouse(string v_WarehouseId, string v_ProductId)
        {
            productwarehouse productwarehouse = new productwarehouse();
            productwarehouse.v_WarehouseId = v_WarehouseId;
            productwarehouse.v_ProductId = v_ProductId;
            return productwarehouse;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_WarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_WarehouseId
        {
            get
            {
                string value = _v_WarehouseId;
                OnGetv_WarehouseId(ref value);
                return value;
            }
            set
            {
                if (_v_WarehouseId != value)
                {
                  Onv_WarehouseIdChanging(ref value);
                  ReportPropertyChanging("v_WarehouseId");
                  _v_WarehouseId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_WarehouseId");
                  Onv_WarehouseIdChanged();
              }
            }
        }
        private string _v_WarehouseId;
        partial void OnGetv_WarehouseId(ref string value);
        partial void Onv_WarehouseIdChanging(ref string value);
        partial void Onv_WarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProductId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ProductId
        {
            get
            {
                string value = _v_ProductId;
                OnGetv_ProductId(ref value);
                return value;
            }
            set
            {
                if (_v_ProductId != value)
                {
                  Onv_ProductIdChanging(ref value);
                  ReportPropertyChanging("v_ProductId");
                  _v_ProductId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ProductId");
                  Onv_ProductIdChanged();
              }
            }
        }
        private string _v_ProductId;
        partial void OnGetv_ProductId(ref string value);
        partial void Onv_ProductIdChanging(ref string value);
        partial void Onv_ProductIdChanged();
    
        /// <summary>
        /// There are no comments for r_StockMin in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_StockMin
        {
            get
            {
                global::System.Nullable<float> value = _r_StockMin;
                OnGetr_StockMin(ref value);
                return value;
            }
            set
            {
                if (_r_StockMin != value)
                {
                  Onr_StockMinChanging(ref value);
                  ReportPropertyChanging("r_StockMin");
                  _r_StockMin = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_StockMin");
                  Onr_StockMinChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_StockMin;
        partial void OnGetr_StockMin(ref global::System.Nullable<float> value);
        partial void Onr_StockMinChanging(ref global::System.Nullable<float> value);
        partial void Onr_StockMinChanged();
    
        /// <summary>
        /// There are no comments for r_StockMax in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_StockMax
        {
            get
            {
                global::System.Nullable<float> value = _r_StockMax;
                OnGetr_StockMax(ref value);
                return value;
            }
            set
            {
                if (_r_StockMax != value)
                {
                  Onr_StockMaxChanging(ref value);
                  ReportPropertyChanging("r_StockMax");
                  _r_StockMax = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_StockMax");
                  Onr_StockMaxChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_StockMax;
        partial void OnGetr_StockMax(ref global::System.Nullable<float> value);
        partial void Onr_StockMaxChanging(ref global::System.Nullable<float> value);
        partial void Onr_StockMaxChanged();
    
        /// <summary>
        /// There are no comments for r_StockActual in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_StockActual
        {
            get
            {
                global::System.Nullable<float> value = _r_StockActual;
                OnGetr_StockActual(ref value);
                return value;
            }
            set
            {
                if (_r_StockActual != value)
                {
                  Onr_StockActualChanging(ref value);
                  ReportPropertyChanging("r_StockActual");
                  _r_StockActual = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_StockActual");
                  Onr_StockActualChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_StockActual;
        partial void OnGetr_StockActual(ref global::System.Nullable<float> value);
        partial void Onr_StockActualChanging(ref global::System.Nullable<float> value);
        partial void Onr_StockActualChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for product in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Product_ProductWarehouse_i_ProductId", "product")]
        public product product
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_ProductWarehouse_i_ProductId", "product").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_ProductWarehouse_i_ProductId", "product").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for product in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<product> productReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_ProductWarehouse_i_ProductId", "product");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_ProductWarehouse_i_ProductId", "product", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<product>("Sigesoft.Node.WinClient.DAL.Fk_Product_ProductWarehouse_i_ProductId", "product").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_ProductWarehouse_i_WarehouseId", "warehouse")]
        public warehouse warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_ProductWarehouse_i_WarehouseId", "warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_ProductWarehouse_i_WarehouseId", "warehouse").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<warehouse> warehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_ProductWarehouse_i_WarehouseId", "warehouse");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_ProductWarehouse_i_WarehouseId", "warehouse", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_ProductWarehouse_i_WarehouseId", "warehouse").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.professional in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_PersonId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="professional")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class professional : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new professional object.
        /// </summary>
        /// <param name="v_PersonId">Initial value of v_PersonId.</param>
        public static professional Createprofessional(string v_PersonId)
        {
            professional professional = new professional();
            professional.v_PersonId = v_PersonId;
            return professional;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for i_ProfessionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ProfessionId
        {
            get
            {
                global::System.Nullable<int> value = _i_ProfessionId;
                OnGeti_ProfessionId(ref value);
                return value;
            }
            set
            {
                if (_i_ProfessionId != value)
                {
                  Oni_ProfessionIdChanging(ref value);
                  ReportPropertyChanging("i_ProfessionId");
                  _i_ProfessionId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ProfessionId");
                  Oni_ProfessionIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ProfessionId;
        partial void OnGeti_ProfessionId(ref global::System.Nullable<int> value);
        partial void Oni_ProfessionIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ProfessionIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProfessionalCode in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProfessionalCode
        {
            get
            {
                string value = _v_ProfessionalCode;
                OnGetv_ProfessionalCode(ref value);
                return value;
            }
            set
            {
                if (_v_ProfessionalCode != value)
                {
                  Onv_ProfessionalCodeChanging(ref value);
                  ReportPropertyChanging("v_ProfessionalCode");
                  _v_ProfessionalCode = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProfessionalCode");
                  Onv_ProfessionalCodeChanged();
              }
            }
        }
        private string _v_ProfessionalCode;
        partial void OnGetv_ProfessionalCode(ref string value);
        partial void Onv_ProfessionalCodeChanging(ref string value);
        partial void Onv_ProfessionalCodeChanged();
    
        /// <summary>
        /// There are no comments for v_ProfessionalInformation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProfessionalInformation
        {
            get
            {
                string value = _v_ProfessionalInformation;
                OnGetv_ProfessionalInformation(ref value);
                return value;
            }
            set
            {
                if (_v_ProfessionalInformation != value)
                {
                  Onv_ProfessionalInformationChanging(ref value);
                  ReportPropertyChanging("v_ProfessionalInformation");
                  _v_ProfessionalInformation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProfessionalInformation");
                  Onv_ProfessionalInformationChanged();
              }
            }
        }
        private string _v_ProfessionalInformation;
        partial void OnGetv_ProfessionalInformation(ref string value);
        partial void Onv_ProfessionalInformationChanging(ref string value);
        partial void Onv_ProfessionalInformationChanged();
    
        /// <summary>
        /// There are no comments for b_SignatureImage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public byte[] b_SignatureImage
        {
            get
            {
                byte[] value = _b_SignatureImage;
                OnGetb_SignatureImage(ref value);
                return value;
            }
            set
            {
                if (_b_SignatureImage != value)
                {
                  Onb_SignatureImageChanging(ref value);
                  ReportPropertyChanging("b_SignatureImage");
                  _b_SignatureImage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("b_SignatureImage");
                  Onb_SignatureImageChanged();
              }
            }
        }
        private byte[] _b_SignatureImage;
        partial void OnGetb_SignatureImage(ref byte[] value);
        partial void Onb_SignatureImageChanging(ref byte[] value);
        partial void Onb_SignatureImageChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateNodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateNodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateNodeId;
                OnGeti_UpdateNodeId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateNodeId != value)
                {
                  Oni_UpdateNodeIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateNodeId");
                  _i_UpdateNodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateNodeId");
                  Oni_UpdateNodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateNodeId;
        partial void OnGeti_UpdateNodeId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Person_Professional_v_PersonId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Pk_Person_Professional_v_PersonId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Pk_Person_Professional_v_PersonId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Pk_Person_Professional_v_PersonId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Pk_Person_Professional_v_PersonId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Pk_Person_Professional_v_PersonId", "person").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.protocol in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ProtocolId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="protocol")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class protocol : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new protocol object.
        /// </summary>
        /// <param name="v_ProtocolId">Initial value of v_ProtocolId.</param>
        public static protocol Createprotocol(string v_ProtocolId)
        {
            protocol protocol = new protocol();
            protocol.v_ProtocolId = v_ProtocolId;
            return protocol;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ProtocolId
        {
            get
            {
                string value = _v_ProtocolId;
                OnGetv_ProtocolId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolId != value)
                {
                  Onv_ProtocolIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolId");
                  _v_ProtocolId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ProtocolId");
                  Onv_ProtocolIdChanged();
              }
            }
        }
        private string _v_ProtocolId;
        partial void OnGetv_ProtocolId(ref string value);
        partial void Onv_ProtocolIdChanging(ref string value);
        partial void Onv_ProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for v_StatusProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> v_StatusProtocolId
        {
            get
            {
                global::System.Nullable<int> value = _v_StatusProtocolId;
                OnGetv_StatusProtocolId(ref value);
                return value;
            }
            set
            {
                if (_v_StatusProtocolId != value)
                {
                  Onv_StatusProtocolIdChanging(ref value);
                  ReportPropertyChanging("v_StatusProtocolId");
                  _v_StatusProtocolId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("v_StatusProtocolId");
                  Onv_StatusProtocolIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _v_StatusProtocolId;
        partial void OnGetv_StatusProtocolId(ref global::System.Nullable<int> value);
        partial void Onv_StatusProtocolIdChanging(ref global::System.Nullable<int> value);
        partial void Onv_StatusProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for v_EmployerOrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_EmployerOrganizationId
        {
            get
            {
                string value = _v_EmployerOrganizationId;
                OnGetv_EmployerOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_EmployerOrganizationId != value)
                {
                  Onv_EmployerOrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_EmployerOrganizationId");
                  _v_EmployerOrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_EmployerOrganizationId");
                  Onv_EmployerOrganizationIdChanged();
              }
            }
        }
        private string _v_EmployerOrganizationId;
        partial void OnGetv_EmployerOrganizationId(ref string value);
        partial void Onv_EmployerOrganizationIdChanging(ref string value);
        partial void Onv_EmployerOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_EmployerLocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_EmployerLocationId
        {
            get
            {
                string value = _v_EmployerLocationId;
                OnGetv_EmployerLocationId(ref value);
                return value;
            }
            set
            {
                if (_v_EmployerLocationId != value)
                {
                  Onv_EmployerLocationIdChanging(ref value);
                  ReportPropertyChanging("v_EmployerLocationId");
                  _v_EmployerLocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_EmployerLocationId");
                  Onv_EmployerLocationIdChanged();
              }
            }
        }
        private string _v_EmployerLocationId;
        partial void OnGetv_EmployerLocationId(ref string value);
        partial void Onv_EmployerLocationIdChanging(ref string value);
        partial void Onv_EmployerLocationIdChanged();
    
        /// <summary>
        /// There are no comments for i_EsoTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_EsoTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_EsoTypeId;
                OnGeti_EsoTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_EsoTypeId != value)
                {
                  Oni_EsoTypeIdChanging(ref value);
                  ReportPropertyChanging("i_EsoTypeId");
                  _i_EsoTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_EsoTypeId");
                  Oni_EsoTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_EsoTypeId;
        partial void OnGeti_EsoTypeId(ref global::System.Nullable<int> value);
        partial void Oni_EsoTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_EsoTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_GroupOccupationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GroupOccupationId
        {
            get
            {
                string value = _v_GroupOccupationId;
                OnGetv_GroupOccupationId(ref value);
                return value;
            }
            set
            {
                if (_v_GroupOccupationId != value)
                {
                  Onv_GroupOccupationIdChanging(ref value);
                  ReportPropertyChanging("v_GroupOccupationId");
                  _v_GroupOccupationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GroupOccupationId");
                  Onv_GroupOccupationIdChanged();
              }
            }
        }
        private string _v_GroupOccupationId;
        partial void OnGetv_GroupOccupationId(ref string value);
        partial void Onv_GroupOccupationIdChanging(ref string value);
        partial void Onv_GroupOccupationIdChanged();
    
        /// <summary>
        /// There are no comments for v_CustomerOrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CustomerOrganizationId
        {
            get
            {
                string value = _v_CustomerOrganizationId;
                OnGetv_CustomerOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_CustomerOrganizationId != value)
                {
                  Onv_CustomerOrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_CustomerOrganizationId");
                  _v_CustomerOrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CustomerOrganizationId");
                  Onv_CustomerOrganizationIdChanged();
              }
            }
        }
        private string _v_CustomerOrganizationId;
        partial void OnGetv_CustomerOrganizationId(ref string value);
        partial void Onv_CustomerOrganizationIdChanging(ref string value);
        partial void Onv_CustomerOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_CustomerLocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CustomerLocationId
        {
            get
            {
                string value = _v_CustomerLocationId;
                OnGetv_CustomerLocationId(ref value);
                return value;
            }
            set
            {
                if (_v_CustomerLocationId != value)
                {
                  Onv_CustomerLocationIdChanging(ref value);
                  ReportPropertyChanging("v_CustomerLocationId");
                  _v_CustomerLocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CustomerLocationId");
                  Onv_CustomerLocationIdChanged();
              }
            }
        }
        private string _v_CustomerLocationId;
        partial void OnGetv_CustomerLocationId(ref string value);
        partial void Onv_CustomerLocationIdChanging(ref string value);
        partial void Onv_CustomerLocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_WorkingOrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_WorkingOrganizationId
        {
            get
            {
                string value = _v_WorkingOrganizationId;
                OnGetv_WorkingOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_WorkingOrganizationId != value)
                {
                  Onv_WorkingOrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_WorkingOrganizationId");
                  _v_WorkingOrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_WorkingOrganizationId");
                  Onv_WorkingOrganizationIdChanged();
              }
            }
        }
        private string _v_WorkingOrganizationId;
        partial void OnGetv_WorkingOrganizationId(ref string value);
        partial void Onv_WorkingOrganizationIdChanging(ref string value);
        partial void Onv_WorkingOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_WorkingLocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_WorkingLocationId
        {
            get
            {
                string value = _v_WorkingLocationId;
                OnGetv_WorkingLocationId(ref value);
                return value;
            }
            set
            {
                if (_v_WorkingLocationId != value)
                {
                  Onv_WorkingLocationIdChanging(ref value);
                  ReportPropertyChanging("v_WorkingLocationId");
                  _v_WorkingLocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_WorkingLocationId");
                  Onv_WorkingLocationIdChanged();
              }
            }
        }
        private string _v_WorkingLocationId;
        partial void OnGetv_WorkingLocationId(ref string value);
        partial void Onv_WorkingLocationIdChanging(ref string value);
        partial void Onv_WorkingLocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_CostCenter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CostCenter
        {
            get
            {
                string value = _v_CostCenter;
                OnGetv_CostCenter(ref value);
                return value;
            }
            set
            {
                if (_v_CostCenter != value)
                {
                  Onv_CostCenterChanging(ref value);
                  ReportPropertyChanging("v_CostCenter");
                  _v_CostCenter = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CostCenter");
                  Onv_CostCenterChanged();
              }
            }
        }
        private string _v_CostCenter;
        partial void OnGetv_CostCenter(ref string value);
        partial void Onv_CostCenterChanging(ref string value);
        partial void Onv_CostCenterChanged();
    
        /// <summary>
        /// There are no comments for i_MasterServiceTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MasterServiceTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_MasterServiceTypeId;
                OnGeti_MasterServiceTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_MasterServiceTypeId != value)
                {
                  Oni_MasterServiceTypeIdChanging(ref value);
                  ReportPropertyChanging("i_MasterServiceTypeId");
                  _i_MasterServiceTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MasterServiceTypeId");
                  Oni_MasterServiceTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MasterServiceTypeId;
        partial void OnGeti_MasterServiceTypeId(ref global::System.Nullable<int> value);
        partial void Oni_MasterServiceTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MasterServiceTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_MasterServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MasterServiceId
        {
            get
            {
                global::System.Nullable<int> value = _i_MasterServiceId;
                OnGeti_MasterServiceId(ref value);
                return value;
            }
            set
            {
                if (_i_MasterServiceId != value)
                {
                  Oni_MasterServiceIdChanging(ref value);
                  ReportPropertyChanging("i_MasterServiceId");
                  _i_MasterServiceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MasterServiceId");
                  Oni_MasterServiceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MasterServiceId;
        partial void OnGeti_MasterServiceId(ref global::System.Nullable<int> value);
        partial void Oni_MasterServiceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MasterServiceIdChanged();
    
        /// <summary>
        /// There are no comments for i_HasVigency in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_HasVigency
        {
            get
            {
                global::System.Nullable<int> value = _i_HasVigency;
                OnGeti_HasVigency(ref value);
                return value;
            }
            set
            {
                if (_i_HasVigency != value)
                {
                  Oni_HasVigencyChanging(ref value);
                  ReportPropertyChanging("i_HasVigency");
                  _i_HasVigency = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_HasVigency");
                  Oni_HasVigencyChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_HasVigency;
        partial void OnGeti_HasVigency(ref global::System.Nullable<int> value);
        partial void Oni_HasVigencyChanging(ref global::System.Nullable<int> value);
        partial void Oni_HasVigencyChanged();
    
        /// <summary>
        /// There are no comments for i_ValidInDays in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ValidInDays
        {
            get
            {
                global::System.Nullable<int> value = _i_ValidInDays;
                OnGeti_ValidInDays(ref value);
                return value;
            }
            set
            {
                if (_i_ValidInDays != value)
                {
                  Oni_ValidInDaysChanging(ref value);
                  ReportPropertyChanging("i_ValidInDays");
                  _i_ValidInDays = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ValidInDays");
                  Oni_ValidInDaysChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ValidInDays;
        partial void OnGeti_ValidInDays(ref global::System.Nullable<int> value);
        partial void Oni_ValidInDaysChanging(ref global::System.Nullable<int> value);
        partial void Oni_ValidInDaysChanged();
    
        /// <summary>
        /// There are no comments for i_IsActive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsActive
        {
            get
            {
                global::System.Nullable<int> value = _i_IsActive;
                OnGeti_IsActive(ref value);
                return value;
            }
            set
            {
                if (_i_IsActive != value)
                {
                  Oni_IsActiveChanging(ref value);
                  ReportPropertyChanging("i_IsActive");
                  _i_IsActive = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsActive");
                  Oni_IsActiveChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsActive;
        partial void OnGeti_IsActive(ref global::System.Nullable<int> value);
        partial void Oni_IsActiveChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsActiveChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_ProfileId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ProfileId
        {
            get
            {
                global::System.Nullable<int> value = _i_ProfileId;
                OnGeti_ProfileId(ref value);
                return value;
            }
            set
            {
                if (_i_ProfileId != value)
                {
                  Oni_ProfileIdChanging(ref value);
                  ReportPropertyChanging("i_ProfileId");
                  _i_ProfileId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ProfileId");
                  Oni_ProfileIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ProfileId;
        partial void OnGeti_ProfileId(ref global::System.Nullable<int> value);
        partial void Oni_ProfileIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ProfileIdChanged();
    
        /// <summary>
        /// There are no comments for i_TypeReport in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TypeReport
        {
            get
            {
                global::System.Nullable<int> value = _i_TypeReport;
                OnGeti_TypeReport(ref value);
                return value;
            }
            set
            {
                if (_i_TypeReport != value)
                {
                  Oni_TypeReportChanging(ref value);
                  ReportPropertyChanging("i_TypeReport");
                  _i_TypeReport = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TypeReport");
                  Oni_TypeReportChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TypeReport;
        partial void OnGeti_TypeReport(ref global::System.Nullable<int> value);
        partial void Oni_TypeReportChanging(ref global::System.Nullable<int> value);
        partial void Oni_TypeReportChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for protocolcomponent in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Protocol_ProtocolComponent_v_ProtocolId", "protocolcomponent")]
        public EntityCollection<protocolcomponent> protocolcomponent
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<protocolcomponent>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ProtocolComponent_v_ProtocolId", "protocolcomponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<protocolcomponent>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ProtocolComponent_v_ProtocolId", "protocolcomponent", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for protocolsystemuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_Protocol_ProtocolSystemUser_v_ProtocolId", "protocolsystemuser")]
        public EntityCollection<protocolsystemuser> protocolsystemuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<protocolsystemuser>("Sigesoft.Node.WinClient.DAL.FK_Protocol_ProtocolSystemUser_v_ProtocolId", "protocolsystemuser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<protocolsystemuser>("Sigesoft.Node.WinClient.DAL.FK_Protocol_ProtocolSystemUser_v_ProtocolId", "protocolsystemuser", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Protocol_Service_v_ProtocolId", "service")]
        public EntityCollection<service> service
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<service>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_Service_v_ProtocolId", "service");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<service>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_Service_v_ProtocolId", "service", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for serviceorderdetail in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Protocol_ServiceOrderDetail_v_ProtocolId", "serviceorderdetail")]
        public EntityCollection<serviceorderdetail> serviceorderdetail
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<serviceorderdetail>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ServiceOrderDetail_v_ProtocolId", "serviceorderdetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<serviceorderdetail>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ServiceOrderDetail_v_ProtocolId", "serviceorderdetail", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.protocolcomponent in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ProtocolComponentId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="protocolcomponent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class protocolcomponent : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new protocolcomponent object.
        /// </summary>
        /// <param name="v_ProtocolComponentId">Initial value of v_ProtocolComponentId.</param>
        public static protocolcomponent Createprotocolcomponent(string v_ProtocolComponentId)
        {
            protocolcomponent protocolcomponent = new protocolcomponent();
            protocolcomponent.v_ProtocolComponentId = v_ProtocolComponentId;
            return protocolcomponent;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ProtocolComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ProtocolComponentId
        {
            get
            {
                string value = _v_ProtocolComponentId;
                OnGetv_ProtocolComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolComponentId != value)
                {
                  Onv_ProtocolComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolComponentId");
                  _v_ProtocolComponentId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ProtocolComponentId");
                  Onv_ProtocolComponentIdChanged();
              }
            }
        }
        private string _v_ProtocolComponentId;
        partial void OnGetv_ProtocolComponentId(ref string value);
        partial void Onv_ProtocolComponentIdChanging(ref string value);
        partial void Onv_ProtocolComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProtocolId
        {
            get
            {
                string value = _v_ProtocolId;
                OnGetv_ProtocolId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolId != value)
                {
                  Onv_ProtocolIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolId");
                  _v_ProtocolId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProtocolId");
                  Onv_ProtocolIdChanged();
              }
            }
        }
        private string _v_ProtocolId;
        partial void OnGetv_ProtocolId(ref string value);
        partial void Onv_ProtocolIdChanging(ref string value);
        partial void Onv_ProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for r_Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_Price
        {
            get
            {
                global::System.Nullable<float> value = _r_Price;
                OnGetr_Price(ref value);
                return value;
            }
            set
            {
                if (_r_Price != value)
                {
                  Onr_PriceChanging(ref value);
                  ReportPropertyChanging("r_Price");
                  _r_Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_Price");
                  Onr_PriceChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_Price;
        partial void OnGetr_Price(ref global::System.Nullable<float> value);
        partial void Onr_PriceChanging(ref global::System.Nullable<float> value);
        partial void Onr_PriceChanged();
    
        /// <summary>
        /// There are no comments for i_OperatorId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_OperatorId
        {
            get
            {
                global::System.Nullable<int> value = _i_OperatorId;
                OnGeti_OperatorId(ref value);
                return value;
            }
            set
            {
                if (_i_OperatorId != value)
                {
                  Oni_OperatorIdChanging(ref value);
                  ReportPropertyChanging("i_OperatorId");
                  _i_OperatorId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_OperatorId");
                  Oni_OperatorIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_OperatorId;
        partial void OnGeti_OperatorId(ref global::System.Nullable<int> value);
        partial void Oni_OperatorIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_OperatorIdChanged();
    
        /// <summary>
        /// There are no comments for i_Age in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Age
        {
            get
            {
                global::System.Nullable<int> value = _i_Age;
                OnGeti_Age(ref value);
                return value;
            }
            set
            {
                if (_i_Age != value)
                {
                  Oni_AgeChanging(ref value);
                  ReportPropertyChanging("i_Age");
                  _i_Age = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Age");
                  Oni_AgeChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Age;
        partial void OnGeti_Age(ref global::System.Nullable<int> value);
        partial void Oni_AgeChanging(ref global::System.Nullable<int> value);
        partial void Oni_AgeChanged();
    
        /// <summary>
        /// There are no comments for i_GenderId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_GenderId
        {
            get
            {
                global::System.Nullable<int> value = _i_GenderId;
                OnGeti_GenderId(ref value);
                return value;
            }
            set
            {
                if (_i_GenderId != value)
                {
                  Oni_GenderIdChanging(ref value);
                  ReportPropertyChanging("i_GenderId");
                  _i_GenderId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_GenderId");
                  Oni_GenderIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_GenderId;
        partial void OnGeti_GenderId(ref global::System.Nullable<int> value);
        partial void Oni_GenderIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_GenderIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsConditionalId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsConditionalId
        {
            get
            {
                global::System.Nullable<int> value = _i_IsConditionalId;
                OnGeti_IsConditionalId(ref value);
                return value;
            }
            set
            {
                if (_i_IsConditionalId != value)
                {
                  Oni_IsConditionalIdChanging(ref value);
                  ReportPropertyChanging("i_IsConditionalId");
                  _i_IsConditionalId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsConditionalId");
                  Oni_IsConditionalIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsConditionalId;
        partial void OnGeti_IsConditionalId(ref global::System.Nullable<int> value);
        partial void Oni_IsConditionalIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsConditionalIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for protocol in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Protocol_ProtocolComponent_v_ProtocolId", "protocol")]
        public protocol protocol
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ProtocolComponent_v_ProtocolId", "protocol").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ProtocolComponent_v_ProtocolId", "protocol").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for protocol in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<protocol> protocolReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ProtocolComponent_v_ProtocolId", "protocol");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ProtocolComponent_v_ProtocolId", "protocol", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ProtocolComponent_v_ProtocolId", "protocol").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_ProtocolComponent_v_ComponentId", "component")]
        public component component
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ProtocolComponent_v_ComponentId", "component").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ProtocolComponent_v_ComponentId", "component").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<component> componentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ProtocolComponent_v_ComponentId", "component");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ProtocolComponent_v_ComponentId", "component", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ProtocolComponent_v_ComponentId", "component").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.protocolregcovid in the schema.
    /// </summary>
    /// <KeyProperties>
    /// ProtocolRegcovidId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="protocolregcovid")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class protocolregcovid : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new protocolregcovid object.
        /// </summary>
        /// <param name="protocolRegcovidId">Initial value of ProtocolRegcovidId.</param>
        public static protocolregcovid Createprotocolregcovid(int protocolRegcovidId)
        {
            protocolregcovid protocolregcovid = new protocolregcovid();
            protocolregcovid.ProtocolRegcovidId = protocolRegcovidId;
            return protocolregcovid;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ProtocolRegcovidId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int ProtocolRegcovidId
        {
            get
            {
                int value = _ProtocolRegcovidId;
                OnGetProtocolRegcovidId(ref value);
                return value;
            }
            set
            {
                if (_ProtocolRegcovidId != value)
                {
                  OnProtocolRegcovidIdChanging(ref value);
                  ReportPropertyChanging("ProtocolRegcovidId");
                  _ProtocolRegcovidId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ProtocolRegcovidId");
                  OnProtocolRegcovidIdChanged();
              }
            }
        }
        private int _ProtocolRegcovidId;
        partial void OnGetProtocolRegcovidId(ref int value);
        partial void OnProtocolRegcovidIdChanging(ref int value);
        partial void OnProtocolRegcovidIdChanged();
    
        /// <summary>
        /// There are no comments for OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OrganizationId
        {
            get
            {
                string value = _OrganizationId;
                OnGetOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_OrganizationId != value)
                {
                  OnOrganizationIdChanging(ref value);
                  ReportPropertyChanging("OrganizationId");
                  _OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrganizationId");
                  OnOrganizationIdChanged();
              }
            }
        }
        private string _OrganizationId;
        partial void OnGetOrganizationId(ref string value);
        partial void OnOrganizationIdChanging(ref string value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentId
        {
            get
            {
                string value = _ComponentId;
                OnGetComponentId(ref value);
                return value;
            }
            set
            {
                if (_ComponentId != value)
                {
                  OnComponentIdChanging(ref value);
                  ReportPropertyChanging("ComponentId");
                  _ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentId");
                  OnComponentIdChanged();
              }
            }
        }
        private string _ComponentId;
        partial void OnGetComponentId(ref string value);
        partial void OnComponentIdChanging(ref string value);
        partial void OnComponentIdChanged();
    
        /// <summary>
        /// There are no comments for ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ProtocolId
        {
            get
            {
                string value = _ProtocolId;
                OnGetProtocolId(ref value);
                return value;
            }
            set
            {
                if (_ProtocolId != value)
                {
                  OnProtocolIdChanging(ref value);
                  ReportPropertyChanging("ProtocolId");
                  _ProtocolId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProtocolId");
                  OnProtocolIdChanged();
              }
            }
        }
        private string _ProtocolId;
        partial void OnGetProtocolId(ref string value);
        partial void OnProtocolIdChanging(ref string value);
        partial void OnProtocolIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.protocolsystemuser in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ProtocolSystemUserId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="protocolsystemuser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class protocolsystemuser : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new protocolsystemuser object.
        /// </summary>
        /// <param name="v_ProtocolSystemUserId">Initial value of v_ProtocolSystemUserId.</param>
        /// <param name="i_SystemUserId">Initial value of i_SystemUserId.</param>
        /// <param name="v_ProtocolId">Initial value of v_ProtocolId.</param>
        public static protocolsystemuser Createprotocolsystemuser(string v_ProtocolSystemUserId, int i_SystemUserId, string v_ProtocolId)
        {
            protocolsystemuser protocolsystemuser = new protocolsystemuser();
            protocolsystemuser.v_ProtocolSystemUserId = v_ProtocolSystemUserId;
            protocolsystemuser.i_SystemUserId = i_SystemUserId;
            protocolsystemuser.v_ProtocolId = v_ProtocolId;
            return protocolsystemuser;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ProtocolSystemUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ProtocolSystemUserId
        {
            get
            {
                string value = _v_ProtocolSystemUserId;
                OnGetv_ProtocolSystemUserId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolSystemUserId != value)
                {
                  Onv_ProtocolSystemUserIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolSystemUserId");
                  _v_ProtocolSystemUserId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ProtocolSystemUserId");
                  Onv_ProtocolSystemUserIdChanged();
              }
            }
        }
        private string _v_ProtocolSystemUserId;
        partial void OnGetv_ProtocolSystemUserId(ref string value);
        partial void Onv_ProtocolSystemUserIdChanging(ref string value);
        partial void Onv_ProtocolSystemUserIdChanged();
    
        /// <summary>
        /// There are no comments for i_SystemUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int i_SystemUserId
        {
            get
            {
                int value = _i_SystemUserId;
                OnGeti_SystemUserId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserId != value)
                {
                  Oni_SystemUserIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserId");
                  _i_SystemUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserId");
                  Oni_SystemUserIdChanged();
              }
            }
        }
        private int _i_SystemUserId;
        partial void OnGeti_SystemUserId(ref int value);
        partial void Oni_SystemUserIdChanging(ref int value);
        partial void Oni_SystemUserIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ProtocolId
        {
            get
            {
                string value = _v_ProtocolId;
                OnGetv_ProtocolId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolId != value)
                {
                  Onv_ProtocolIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolId");
                  _v_ProtocolId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ProtocolId");
                  Onv_ProtocolIdChanged();
              }
            }
        }
        private string _v_ProtocolId;
        partial void OnGetv_ProtocolId(ref string value);
        partial void Onv_ProtocolIdChanging(ref string value);
        partial void Onv_ProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for i_ApplicationHierarchyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ApplicationHierarchyId
        {
            get
            {
                global::System.Nullable<int> value = _i_ApplicationHierarchyId;
                OnGeti_ApplicationHierarchyId(ref value);
                return value;
            }
            set
            {
                if (_i_ApplicationHierarchyId != value)
                {
                  Oni_ApplicationHierarchyIdChanging(ref value);
                  ReportPropertyChanging("i_ApplicationHierarchyId");
                  _i_ApplicationHierarchyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ApplicationHierarchyId");
                  Oni_ApplicationHierarchyIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ApplicationHierarchyId;
        partial void OnGeti_ApplicationHierarchyId(ref global::System.Nullable<int> value);
        partial void Oni_ApplicationHierarchyIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ApplicationHierarchyIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for applicationhierarchy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_AppHerarchy_ProtocolSystemUser_i_AppHerarchyId", "applicationhierarchy")]
        public applicationhierarchy applicationhierarchy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.FK_AppHerarchy_ProtocolSystemUser_i_AppHerarchyId", "applicationhierarchy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.FK_AppHerarchy_ProtocolSystemUser_i_AppHerarchyId", "applicationhierarchy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for applicationhierarchy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<applicationhierarchy> applicationhierarchyReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.FK_AppHerarchy_ProtocolSystemUser_i_AppHerarchyId", "applicationhierarchy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.FK_AppHerarchy_ProtocolSystemUser_i_AppHerarchyId", "applicationhierarchy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.FK_AppHerarchy_ProtocolSystemUser_i_AppHerarchyId", "applicationhierarchy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for protocol in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_Protocol_ProtocolSystemUser_v_ProtocolId", "protocol")]
        public protocol protocol
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.FK_Protocol_ProtocolSystemUser_v_ProtocolId", "protocol").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.FK_Protocol_ProtocolSystemUser_v_ProtocolId", "protocol").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for protocol in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<protocol> protocolReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.FK_Protocol_ProtocolSystemUser_v_ProtocolId", "protocol");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.FK_Protocol_ProtocolSystemUser_v_ProtocolId", "protocol", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.FK_Protocol_ProtocolSystemUser_v_ProtocolId", "protocol").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_SystemUser_ProtocolSystemUser_i_SystemUserId", "systemuser")]
        public systemuser systemuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.FK_SystemUser_ProtocolSystemUser_i_SystemUserId", "systemuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.FK_SystemUser_ProtocolSystemUser_i_SystemUserId", "systemuser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<systemuser> systemuserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.FK_SystemUser_ProtocolSystemUser_i_SystemUserId", "systemuser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.FK_SystemUser_ProtocolSystemUser_i_SystemUserId", "systemuser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.FK_SystemUser_ProtocolSystemUser_i_SystemUserId", "systemuser").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.recommendation in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_RecommendationId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="recommendation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class recommendation : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new recommendation object.
        /// </summary>
        /// <param name="v_RecommendationId">Initial value of v_RecommendationId.</param>
        public static recommendation Createrecommendation(string v_RecommendationId)
        {
            recommendation recommendation = new recommendation();
            recommendation.v_RecommendationId = v_RecommendationId;
            return recommendation;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_RecommendationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_RecommendationId
        {
            get
            {
                string value = _v_RecommendationId;
                OnGetv_RecommendationId(ref value);
                return value;
            }
            set
            {
                if (_v_RecommendationId != value)
                {
                  Onv_RecommendationIdChanging(ref value);
                  ReportPropertyChanging("v_RecommendationId");
                  _v_RecommendationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_RecommendationId");
                  Onv_RecommendationIdChanged();
              }
            }
        }
        private string _v_RecommendationId;
        partial void OnGetv_RecommendationId(ref string value);
        partial void Onv_RecommendationIdChanging(ref string value);
        partial void Onv_RecommendationIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_DiagnosticRepositoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DiagnosticRepositoryId
        {
            get
            {
                string value = _v_DiagnosticRepositoryId;
                OnGetv_DiagnosticRepositoryId(ref value);
                return value;
            }
            set
            {
                if (_v_DiagnosticRepositoryId != value)
                {
                  Onv_DiagnosticRepositoryIdChanging(ref value);
                  ReportPropertyChanging("v_DiagnosticRepositoryId");
                  _v_DiagnosticRepositoryId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DiagnosticRepositoryId");
                  Onv_DiagnosticRepositoryIdChanged();
              }
            }
        }
        private string _v_DiagnosticRepositoryId;
        partial void OnGetv_DiagnosticRepositoryId(ref string value);
        partial void Onv_DiagnosticRepositoryIdChanging(ref string value);
        partial void Onv_DiagnosticRepositoryIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_MasterRecommendationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_MasterRecommendationId
        {
            get
            {
                string value = _v_MasterRecommendationId;
                OnGetv_MasterRecommendationId(ref value);
                return value;
            }
            set
            {
                if (_v_MasterRecommendationId != value)
                {
                  Onv_MasterRecommendationIdChanging(ref value);
                  ReportPropertyChanging("v_MasterRecommendationId");
                  _v_MasterRecommendationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_MasterRecommendationId");
                  Onv_MasterRecommendationIdChanged();
              }
            }
        }
        private string _v_MasterRecommendationId;
        partial void OnGetv_MasterRecommendationId(ref string value);
        partial void Onv_MasterRecommendationIdChanging(ref string value);
        partial void Onv_MasterRecommendationIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_Recommendation_v_RecommendationId", "component")]
        public component component
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_Recommendation_v_RecommendationId", "component").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_Recommendation_v_RecommendationId", "component").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<component> componentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_Recommendation_v_RecommendationId", "component");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_Recommendation_v_RecommendationId", "component", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_Recommendation_v_RecommendationId", "component").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Recommendation_v_ServiceId", "service")]
        public service service
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Recommendation_v_ServiceId", "service").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Recommendation_v_ServiceId", "service").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<service> serviceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Recommendation_v_ServiceId", "service");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Recommendation_v_ServiceId", "service", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Recommendation_v_ServiceId", "service").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for diagnosticrepository in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DiagnosticRepository_Recommendation_v_DiagnosticRepositoryId", "diagnosticrepository")]
        public diagnosticrepository diagnosticrepository
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_Recommendation_v_DiagnosticRepositoryId", "diagnosticrepository").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_Recommendation_v_DiagnosticRepositoryId", "diagnosticrepository").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for diagnosticrepository in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<diagnosticrepository> diagnosticrepositoryReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_Recommendation_v_DiagnosticRepositoryId", "diagnosticrepository");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_Recommendation_v_DiagnosticRepositoryId", "diagnosticrepository", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_Recommendation_v_DiagnosticRepositoryId", "diagnosticrepository").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.restrictedwarehouseprofile in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_SystemUserId
    /// v_WarehouseId
    /// i_NodeId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="restrictedwarehouseprofile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class restrictedwarehouseprofile : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new restrictedwarehouseprofile object.
        /// </summary>
        /// <param name="i_SystemUserId">Initial value of i_SystemUserId.</param>
        /// <param name="v_WarehouseId">Initial value of v_WarehouseId.</param>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        public static restrictedwarehouseprofile Createrestrictedwarehouseprofile(int i_SystemUserId, string v_WarehouseId, int i_NodeId)
        {
            restrictedwarehouseprofile restrictedwarehouseprofile = new restrictedwarehouseprofile();
            restrictedwarehouseprofile.i_SystemUserId = i_SystemUserId;
            restrictedwarehouseprofile.v_WarehouseId = v_WarehouseId;
            restrictedwarehouseprofile.i_NodeId = i_NodeId;
            return restrictedwarehouseprofile;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_SystemUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_SystemUserId
        {
            get
            {
                int value = _i_SystemUserId;
                OnGeti_SystemUserId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserId != value)
                {
                  Oni_SystemUserIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserId");
                  _i_SystemUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserId");
                  Oni_SystemUserIdChanged();
              }
            }
        }
        private int _i_SystemUserId;
        partial void OnGeti_SystemUserId(ref int value);
        partial void Oni_SystemUserIdChanging(ref int value);
        partial void Oni_SystemUserIdChanged();
    
        /// <summary>
        /// There are no comments for v_WarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_WarehouseId
        {
            get
            {
                string value = _v_WarehouseId;
                OnGetv_WarehouseId(ref value);
                return value;
            }
            set
            {
                if (_v_WarehouseId != value)
                {
                  Onv_WarehouseIdChanging(ref value);
                  ReportPropertyChanging("v_WarehouseId");
                  _v_WarehouseId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_WarehouseId");
                  Onv_WarehouseIdChanged();
              }
            }
        }
        private string _v_WarehouseId;
        partial void OnGetv_WarehouseId(ref string value);
        partial void Onv_WarehouseIdChanging(ref string value);
        partial void Onv_WarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_SystemUser_RestrictedWarehouseProfile_v_SystemUserId", "systemuser")]
        public systemuser systemuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_RestrictedWarehouseProfile_v_SystemUserId", "systemuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_RestrictedWarehouseProfile_v_SystemUserId", "systemuser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<systemuser> systemuserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_RestrictedWarehouseProfile_v_SystemUserId", "systemuser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_RestrictedWarehouseProfile_v_SystemUserId", "systemuser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_RestrictedWarehouseProfile_v_SystemUserId", "systemuser").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_RestrictedWarehouseProfile_v_WarehouseId", "warehouse")]
        public warehouse warehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_RestrictedWarehouseProfile_v_WarehouseId", "warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_RestrictedWarehouseProfile_v_WarehouseId", "warehouse").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for warehouse in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<warehouse> warehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_RestrictedWarehouseProfile_v_WarehouseId", "warehouse");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_RestrictedWarehouseProfile_v_WarehouseId", "warehouse", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<warehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_RestrictedWarehouseProfile_v_WarehouseId", "warehouse").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.restriction in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_RestrictionId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="restriction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class restriction : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new restriction object.
        /// </summary>
        /// <param name="v_RestrictionId">Initial value of v_RestrictionId.</param>
        public static restriction Createrestriction(string v_RestrictionId)
        {
            restriction restriction = new restriction();
            restriction.v_RestrictionId = v_RestrictionId;
            return restriction;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_RestrictionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_RestrictionId
        {
            get
            {
                string value = _v_RestrictionId;
                OnGetv_RestrictionId(ref value);
                return value;
            }
            set
            {
                if (_v_RestrictionId != value)
                {
                  Onv_RestrictionIdChanging(ref value);
                  ReportPropertyChanging("v_RestrictionId");
                  _v_RestrictionId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_RestrictionId");
                  Onv_RestrictionIdChanged();
              }
            }
        }
        private string _v_RestrictionId;
        partial void OnGetv_RestrictionId(ref string value);
        partial void Onv_RestrictionIdChanging(ref string value);
        partial void Onv_RestrictionIdChanged();
    
        /// <summary>
        /// There are no comments for v_DiagnosticRepositoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DiagnosticRepositoryId
        {
            get
            {
                string value = _v_DiagnosticRepositoryId;
                OnGetv_DiagnosticRepositoryId(ref value);
                return value;
            }
            set
            {
                if (_v_DiagnosticRepositoryId != value)
                {
                  Onv_DiagnosticRepositoryIdChanging(ref value);
                  ReportPropertyChanging("v_DiagnosticRepositoryId");
                  _v_DiagnosticRepositoryId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DiagnosticRepositoryId");
                  Onv_DiagnosticRepositoryIdChanged();
              }
            }
        }
        private string _v_DiagnosticRepositoryId;
        partial void OnGetv_DiagnosticRepositoryId(ref string value);
        partial void Onv_DiagnosticRepositoryIdChanging(ref string value);
        partial void Onv_DiagnosticRepositoryIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_MasterRestrictionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_MasterRestrictionId
        {
            get
            {
                string value = _v_MasterRestrictionId;
                OnGetv_MasterRestrictionId(ref value);
                return value;
            }
            set
            {
                if (_v_MasterRestrictionId != value)
                {
                  Onv_MasterRestrictionIdChanging(ref value);
                  ReportPropertyChanging("v_MasterRestrictionId");
                  _v_MasterRestrictionId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_MasterRestrictionId");
                  Onv_MasterRestrictionIdChanged();
              }
            }
        }
        private string _v_MasterRestrictionId;
        partial void OnGetv_MasterRestrictionId(ref string value);
        partial void Onv_MasterRestrictionIdChanging(ref string value);
        partial void Onv_MasterRestrictionIdChanged();
    
        /// <summary>
        /// There are no comments for d_StartDateRestriction in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_StartDateRestriction
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_StartDateRestriction;
                OnGetd_StartDateRestriction(ref value);
                return value;
            }
            set
            {
                if (_d_StartDateRestriction != value)
                {
                  Ond_StartDateRestrictionChanging(ref value);
                  ReportPropertyChanging("d_StartDateRestriction");
                  _d_StartDateRestriction = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_StartDateRestriction");
                  Ond_StartDateRestrictionChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_StartDateRestriction;
        partial void OnGetd_StartDateRestriction(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_StartDateRestrictionChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_StartDateRestrictionChanged();
    
        /// <summary>
        /// There are no comments for d_EndDateRestriction in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_EndDateRestriction
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_EndDateRestriction;
                OnGetd_EndDateRestriction(ref value);
                return value;
            }
            set
            {
                if (_d_EndDateRestriction != value)
                {
                  Ond_EndDateRestrictionChanging(ref value);
                  ReportPropertyChanging("d_EndDateRestriction");
                  _d_EndDateRestriction = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_EndDateRestriction");
                  Ond_EndDateRestrictionChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_EndDateRestriction;
        partial void OnGetd_EndDateRestriction(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EndDateRestrictionChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EndDateRestrictionChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_Restricction_v_ComponentId", "component")]
        public component component
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_Restricction_v_ComponentId", "component").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_Restricction_v_ComponentId", "component").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<component> componentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_Restricction_v_ComponentId", "component");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_Restricction_v_ComponentId", "component", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_Restricction_v_ComponentId", "component").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Restricction_v_ServiceId", "service")]
        public service service
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Restricction_v_ServiceId", "service").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Restricction_v_ServiceId", "service").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<service> serviceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Restricction_v_ServiceId", "service");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Restricction_v_ServiceId", "service", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_Restricction_v_ServiceId", "service").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for diagnosticrepository in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DiagnosticRepository_RestrictionByDiagnostic_v_DiagnosticRep", "diagnosticrepository")]
        public diagnosticrepository diagnosticrepository
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_RestrictionByDiagnostic_v_DiagnosticRep", "diagnosticrepository").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_RestrictionByDiagnostic_v_DiagnosticRep", "diagnosticrepository").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for diagnosticrepository in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<diagnosticrepository> diagnosticrepositoryReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_RestrictionByDiagnostic_v_DiagnosticRep", "diagnosticrepository");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_RestrictionByDiagnostic_v_DiagnosticRep", "diagnosticrepository", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_DiagnosticRepository_RestrictionByDiagnostic_v_DiagnosticRep", "diagnosticrepository").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.rolenode in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// i_RoleId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="rolenode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class rolenode : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new rolenode object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        /// <param name="i_RoleId">Initial value of i_RoleId.</param>
        public static rolenode Createrolenode(int i_NodeId, int i_RoleId)
        {
            rolenode rolenode = new rolenode();
            rolenode.i_NodeId = i_NodeId;
            rolenode.i_RoleId = i_RoleId;
            return rolenode;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_RoleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_RoleId
        {
            get
            {
                int value = _i_RoleId;
                OnGeti_RoleId(ref value);
                return value;
            }
            set
            {
                if (_i_RoleId != value)
                {
                  Oni_RoleIdChanging(ref value);
                  ReportPropertyChanging("i_RoleId");
                  _i_RoleId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_RoleId");
                  Oni_RoleIdChanged();
              }
            }
        }
        private int _i_RoleId;
        partial void OnGeti_RoleId(ref int value);
        partial void Oni_RoleIdChanging(ref int value);
        partial void Oni_RoleIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_node_rolenode_i_NodeId", "node")]
        public node node
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Pk_node_rolenode_i_NodeId", "node").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Pk_node_rolenode_i_NodeId", "node").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for node in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<node> nodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Pk_node_rolenode_i_NodeId", "node");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Pk_node_rolenode_i_NodeId", "node", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<node>("Sigesoft.Node.WinClient.DAL.Pk_node_rolenode_i_NodeId", "node").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for rolenodecomponentprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_RoleNode_RoleNodeComponent_i_NodeId_i_RoleId", "rolenodecomponentprofile")]
        public EntityCollection<rolenodecomponentprofile> rolenodecomponentprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<rolenodecomponentprofile>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeComponent_i_NodeId_i_RoleId", "rolenodecomponentprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<rolenodecomponentprofile>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeComponent_i_NodeId_i_RoleId", "rolenodecomponentprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for rolenodeprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_RoleNode_RoleNodeProfile_i_NodeId_i_RoleId", "rolenodeprofile")]
        public EntityCollection<rolenodeprofile> rolenodeprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<rolenodeprofile>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeProfile_i_NodeId_i_RoleId", "rolenodeprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<rolenodeprofile>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeProfile_i_NodeId_i_RoleId", "rolenodeprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemuserrolenode in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_RoleNode_SystemUserRoleNode_i_NodeId_i_RoleId", "systemuserrolenode")]
        public EntityCollection<systemuserrolenode> systemuserrolenode
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<systemuserrolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_SystemUserRoleNode_i_NodeId_i_RoleId", "systemuserrolenode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<systemuserrolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_SystemUserRoleNode_i_NodeId_i_RoleId", "systemuserrolenode", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.rolenodecomponentprofile in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_RoleNodeComponentId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="rolenodecomponentprofile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class rolenodecomponentprofile : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new rolenodecomponentprofile object.
        /// </summary>
        /// <param name="v_RoleNodeComponentId">Initial value of v_RoleNodeComponentId.</param>
        public static rolenodecomponentprofile Createrolenodecomponentprofile(string v_RoleNodeComponentId)
        {
            rolenodecomponentprofile rolenodecomponentprofile = new rolenodecomponentprofile();
            rolenodecomponentprofile.v_RoleNodeComponentId = v_RoleNodeComponentId;
            return rolenodecomponentprofile;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_RoleNodeComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_RoleNodeComponentId
        {
            get
            {
                string value = _v_RoleNodeComponentId;
                OnGetv_RoleNodeComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_RoleNodeComponentId != value)
                {
                  Onv_RoleNodeComponentIdChanging(ref value);
                  ReportPropertyChanging("v_RoleNodeComponentId");
                  _v_RoleNodeComponentId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_RoleNodeComponentId");
                  Onv_RoleNodeComponentIdChanged();
              }
            }
        }
        private string _v_RoleNodeComponentId;
        partial void OnGetv_RoleNodeComponentId(ref string value);
        partial void Onv_RoleNodeComponentIdChanging(ref string value);
        partial void Onv_RoleNodeComponentIdChanged();
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NodeId;
        partial void OnGeti_NodeId(ref global::System.Nullable<int> value);
        partial void Oni_NodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_RoleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_RoleId
        {
            get
            {
                global::System.Nullable<int> value = _i_RoleId;
                OnGeti_RoleId(ref value);
                return value;
            }
            set
            {
                if (_i_RoleId != value)
                {
                  Oni_RoleIdChanging(ref value);
                  ReportPropertyChanging("i_RoleId");
                  _i_RoleId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_RoleId");
                  Oni_RoleIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_RoleId;
        partial void OnGeti_RoleId(ref global::System.Nullable<int> value);
        partial void Oni_RoleIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_RoleIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for i_Read in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Read
        {
            get
            {
                global::System.Nullable<int> value = _i_Read;
                OnGeti_Read(ref value);
                return value;
            }
            set
            {
                if (_i_Read != value)
                {
                  Oni_ReadChanging(ref value);
                  ReportPropertyChanging("i_Read");
                  _i_Read = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Read");
                  Oni_ReadChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Read;
        partial void OnGeti_Read(ref global::System.Nullable<int> value);
        partial void Oni_ReadChanging(ref global::System.Nullable<int> value);
        partial void Oni_ReadChanged();
    
        /// <summary>
        /// There are no comments for i_Write in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Write
        {
            get
            {
                global::System.Nullable<int> value = _i_Write;
                OnGeti_Write(ref value);
                return value;
            }
            set
            {
                if (_i_Write != value)
                {
                  Oni_WriteChanging(ref value);
                  ReportPropertyChanging("i_Write");
                  _i_Write = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Write");
                  Oni_WriteChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Write;
        partial void OnGeti_Write(ref global::System.Nullable<int> value);
        partial void Oni_WriteChanging(ref global::System.Nullable<int> value);
        partial void Oni_WriteChanged();
    
        /// <summary>
        /// There are no comments for i_Dx in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Dx
        {
            get
            {
                global::System.Nullable<int> value = _i_Dx;
                OnGeti_Dx(ref value);
                return value;
            }
            set
            {
                if (_i_Dx != value)
                {
                  Oni_DxChanging(ref value);
                  ReportPropertyChanging("i_Dx");
                  _i_Dx = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Dx");
                  Oni_DxChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Dx;
        partial void OnGeti_Dx(ref global::System.Nullable<int> value);
        partial void Oni_DxChanging(ref global::System.Nullable<int> value);
        partial void Oni_DxChanged();
    
        /// <summary>
        /// There are no comments for i_Approved in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Approved
        {
            get
            {
                global::System.Nullable<int> value = _i_Approved;
                OnGeti_Approved(ref value);
                return value;
            }
            set
            {
                if (_i_Approved != value)
                {
                  Oni_ApprovedChanging(ref value);
                  ReportPropertyChanging("i_Approved");
                  _i_Approved = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Approved");
                  Oni_ApprovedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Approved;
        partial void OnGeti_Approved(ref global::System.Nullable<int> value);
        partial void Oni_ApprovedChanging(ref global::System.Nullable<int> value);
        partial void Oni_ApprovedChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_RoleNodeComponent_v_ComponentId", "component")]
        public component component
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_RoleNodeComponent_v_ComponentId", "component").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_RoleNodeComponent_v_ComponentId", "component").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<component> componentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_RoleNodeComponent_v_ComponentId", "component");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_RoleNodeComponent_v_ComponentId", "component", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_RoleNodeComponent_v_ComponentId", "component").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for rolenode in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_RoleNode_RoleNodeComponent_i_NodeId_i_RoleId", "rolenode")]
        public rolenode rolenode
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeComponent_i_NodeId_i_RoleId", "rolenode").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeComponent_i_NodeId_i_RoleId", "rolenode").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for rolenode in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<rolenode> rolenodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeComponent_i_NodeId_i_RoleId", "rolenode");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeComponent_i_NodeId_i_RoleId", "rolenode", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeComponent_i_NodeId_i_RoleId", "rolenode").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.rolenodeprofile in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// i_RoleId
    /// i_ApplicationHierarchyId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="rolenodeprofile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class rolenodeprofile : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new rolenodeprofile object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        /// <param name="i_RoleId">Initial value of i_RoleId.</param>
        /// <param name="i_ApplicationHierarchyId">Initial value of i_ApplicationHierarchyId.</param>
        public static rolenodeprofile Createrolenodeprofile(int i_NodeId, int i_RoleId, int i_ApplicationHierarchyId)
        {
            rolenodeprofile rolenodeprofile = new rolenodeprofile();
            rolenodeprofile.i_NodeId = i_NodeId;
            rolenodeprofile.i_RoleId = i_RoleId;
            rolenodeprofile.i_ApplicationHierarchyId = i_ApplicationHierarchyId;
            return rolenodeprofile;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_RoleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_RoleId
        {
            get
            {
                int value = _i_RoleId;
                OnGeti_RoleId(ref value);
                return value;
            }
            set
            {
                if (_i_RoleId != value)
                {
                  Oni_RoleIdChanging(ref value);
                  ReportPropertyChanging("i_RoleId");
                  _i_RoleId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_RoleId");
                  Oni_RoleIdChanged();
              }
            }
        }
        private int _i_RoleId;
        partial void OnGeti_RoleId(ref int value);
        partial void Oni_RoleIdChanging(ref int value);
        partial void Oni_RoleIdChanged();
    
        /// <summary>
        /// There are no comments for i_ApplicationHierarchyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_ApplicationHierarchyId
        {
            get
            {
                int value = _i_ApplicationHierarchyId;
                OnGeti_ApplicationHierarchyId(ref value);
                return value;
            }
            set
            {
                if (_i_ApplicationHierarchyId != value)
                {
                  Oni_ApplicationHierarchyIdChanging(ref value);
                  ReportPropertyChanging("i_ApplicationHierarchyId");
                  _i_ApplicationHierarchyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ApplicationHierarchyId");
                  Oni_ApplicationHierarchyIdChanged();
              }
            }
        }
        private int _i_ApplicationHierarchyId;
        partial void OnGeti_ApplicationHierarchyId(ref int value);
        partial void Oni_ApplicationHierarchyIdChanging(ref int value);
        partial void Oni_ApplicationHierarchyIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for applicationhierarchy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_applicationhierarchy_rolenodeprofile_i_ApplicationHierarchyI", "applicationhierarchy")]
        public applicationhierarchy applicationhierarchy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.Fk_applicationhierarchy_rolenodeprofile_i_ApplicationHierarchyI", "applicationhierarchy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.Fk_applicationhierarchy_rolenodeprofile_i_ApplicationHierarchyI", "applicationhierarchy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for applicationhierarchy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<applicationhierarchy> applicationhierarchyReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.Fk_applicationhierarchy_rolenodeprofile_i_ApplicationHierarchyI", "applicationhierarchy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.Fk_applicationhierarchy_rolenodeprofile_i_ApplicationHierarchyI", "applicationhierarchy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.Fk_applicationhierarchy_rolenodeprofile_i_ApplicationHierarchyI", "applicationhierarchy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for rolenode in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_RoleNode_RoleNodeProfile_i_NodeId_i_RoleId", "rolenode")]
        public rolenode rolenode
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeProfile_i_NodeId_i_RoleId", "rolenode").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeProfile_i_NodeId_i_RoleId", "rolenode").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for rolenode in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<rolenode> rolenodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeProfile_i_NodeId_i_RoleId", "rolenode");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeProfile_i_NodeId_i_RoleId", "rolenode", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_RoleNodeProfile_i_NodeId_i_RoleId", "rolenode").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.secuential in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// i_TableId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="secuential")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class secuential : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new secuential object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        /// <param name="i_TableId">Initial value of i_TableId.</param>
        public static secuential Createsecuential(int i_NodeId, int i_TableId)
        {
            secuential secuential = new secuential();
            secuential.i_NodeId = i_NodeId;
            secuential.i_TableId = i_TableId;
            return secuential;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_TableId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_TableId
        {
            get
            {
                int value = _i_TableId;
                OnGeti_TableId(ref value);
                return value;
            }
            set
            {
                if (_i_TableId != value)
                {
                  Oni_TableIdChanging(ref value);
                  ReportPropertyChanging("i_TableId");
                  _i_TableId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TableId");
                  Oni_TableIdChanged();
              }
            }
        }
        private int _i_TableId;
        partial void OnGeti_TableId(ref int value);
        partial void Oni_TableIdChanging(ref int value);
        partial void Oni_TableIdChanged();
    
        /// <summary>
        /// There are no comments for i_SecuentialId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SecuentialId
        {
            get
            {
                global::System.Nullable<int> value = _i_SecuentialId;
                OnGeti_SecuentialId(ref value);
                return value;
            }
            set
            {
                if (_i_SecuentialId != value)
                {
                  Oni_SecuentialIdChanging(ref value);
                  ReportPropertyChanging("i_SecuentialId");
                  _i_SecuentialId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SecuentialId");
                  Oni_SecuentialIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SecuentialId;
        partial void OnGeti_SecuentialId(ref global::System.Nullable<int> value);
        partial void Oni_SecuentialIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SecuentialIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.servernodesync in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="servernodesync")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class servernodesync : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new servernodesync object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        public static servernodesync Createservernodesync(int i_NodeId)
        {
            servernodesync servernodesync = new servernodesync();
            servernodesync.i_NodeId = i_NodeId;
            return servernodesync;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for v_DataSyncVersion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DataSyncVersion
        {
            get
            {
                string value = _v_DataSyncVersion;
                OnGetv_DataSyncVersion(ref value);
                return value;
            }
            set
            {
                if (_v_DataSyncVersion != value)
                {
                  Onv_DataSyncVersionChanging(ref value);
                  ReportPropertyChanging("v_DataSyncVersion");
                  _v_DataSyncVersion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DataSyncVersion");
                  Onv_DataSyncVersionChanged();
              }
            }
        }
        private string _v_DataSyncVersion;
        partial void OnGetv_DataSyncVersion(ref string value);
        partial void Onv_DataSyncVersionChanging(ref string value);
        partial void Onv_DataSyncVersionChanged();
    
        /// <summary>
        /// There are no comments for i_DataSyncFrecuency in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DataSyncFrecuency
        {
            get
            {
                global::System.Nullable<int> value = _i_DataSyncFrecuency;
                OnGeti_DataSyncFrecuency(ref value);
                return value;
            }
            set
            {
                if (_i_DataSyncFrecuency != value)
                {
                  Oni_DataSyncFrecuencyChanging(ref value);
                  ReportPropertyChanging("i_DataSyncFrecuency");
                  _i_DataSyncFrecuency = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DataSyncFrecuency");
                  Oni_DataSyncFrecuencyChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DataSyncFrecuency;
        partial void OnGeti_DataSyncFrecuency(ref global::System.Nullable<int> value);
        partial void Oni_DataSyncFrecuencyChanging(ref global::System.Nullable<int> value);
        partial void Oni_DataSyncFrecuencyChanged();
    
        /// <summary>
        /// There are no comments for i_Enabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Enabled
        {
            get
            {
                global::System.Nullable<int> value = _i_Enabled;
                OnGeti_Enabled(ref value);
                return value;
            }
            set
            {
                if (_i_Enabled != value)
                {
                  Oni_EnabledChanging(ref value);
                  ReportPropertyChanging("i_Enabled");
                  _i_Enabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Enabled");
                  Oni_EnabledChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Enabled;
        partial void OnGeti_Enabled(ref global::System.Nullable<int> value);
        partial void Oni_EnabledChanging(ref global::System.Nullable<int> value);
        partial void Oni_EnabledChanged();
    
        /// <summary>
        /// There are no comments for d_LastSuccessfulDataSync in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_LastSuccessfulDataSync
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_LastSuccessfulDataSync;
                OnGetd_LastSuccessfulDataSync(ref value);
                return value;
            }
            set
            {
                if (_d_LastSuccessfulDataSync != value)
                {
                  Ond_LastSuccessfulDataSyncChanging(ref value);
                  ReportPropertyChanging("d_LastSuccessfulDataSync");
                  _d_LastSuccessfulDataSync = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_LastSuccessfulDataSync");
                  Ond_LastSuccessfulDataSyncChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_LastSuccessfulDataSync;
        partial void OnGetd_LastSuccessfulDataSync(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_LastSuccessfulDataSyncChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_LastSuccessfulDataSyncChanged();
    
        /// <summary>
        /// There are no comments for i_LastServerProcessStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_LastServerProcessStatus
        {
            get
            {
                global::System.Nullable<int> value = _i_LastServerProcessStatus;
                OnGeti_LastServerProcessStatus(ref value);
                return value;
            }
            set
            {
                if (_i_LastServerProcessStatus != value)
                {
                  Oni_LastServerProcessStatusChanging(ref value);
                  ReportPropertyChanging("i_LastServerProcessStatus");
                  _i_LastServerProcessStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_LastServerProcessStatus");
                  Oni_LastServerProcessStatusChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_LastServerProcessStatus;
        partial void OnGeti_LastServerProcessStatus(ref global::System.Nullable<int> value);
        partial void Oni_LastServerProcessStatusChanging(ref global::System.Nullable<int> value);
        partial void Oni_LastServerProcessStatusChanged();
    
        /// <summary>
        /// There are no comments for i_LastNodeProcessStatus in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_LastNodeProcessStatus
        {
            get
            {
                global::System.Nullable<int> value = _i_LastNodeProcessStatus;
                OnGeti_LastNodeProcessStatus(ref value);
                return value;
            }
            set
            {
                if (_i_LastNodeProcessStatus != value)
                {
                  Oni_LastNodeProcessStatusChanging(ref value);
                  ReportPropertyChanging("i_LastNodeProcessStatus");
                  _i_LastNodeProcessStatus = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_LastNodeProcessStatus");
                  Oni_LastNodeProcessStatusChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_LastNodeProcessStatus;
        partial void OnGeti_LastNodeProcessStatus(ref global::System.Nullable<int> value);
        partial void Oni_LastNodeProcessStatusChanging(ref global::System.Nullable<int> value);
        partial void Oni_LastNodeProcessStatusChanged();
    
        /// <summary>
        /// There are no comments for d_NextDataSync in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_NextDataSync
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_NextDataSync;
                OnGetd_NextDataSync(ref value);
                return value;
            }
            set
            {
                if (_d_NextDataSync != value)
                {
                  Ond_NextDataSyncChanging(ref value);
                  ReportPropertyChanging("d_NextDataSync");
                  _d_NextDataSync = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_NextDataSync");
                  Ond_NextDataSyncChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_NextDataSync;
        partial void OnGetd_NextDataSync(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_NextDataSyncChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_NextDataSyncChanged();
    
        /// <summary>
        /// There are no comments for v_LastServerPackageFileName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LastServerPackageFileName
        {
            get
            {
                string value = _v_LastServerPackageFileName;
                OnGetv_LastServerPackageFileName(ref value);
                return value;
            }
            set
            {
                if (_v_LastServerPackageFileName != value)
                {
                  Onv_LastServerPackageFileNameChanging(ref value);
                  ReportPropertyChanging("v_LastServerPackageFileName");
                  _v_LastServerPackageFileName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LastServerPackageFileName");
                  Onv_LastServerPackageFileNameChanged();
              }
            }
        }
        private string _v_LastServerPackageFileName;
        partial void OnGetv_LastServerPackageFileName(ref string value);
        partial void Onv_LastServerPackageFileNameChanging(ref string value);
        partial void Onv_LastServerPackageFileNameChanged();
    
        /// <summary>
        /// There are no comments for v_LastServerProcessErrorMessage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LastServerProcessErrorMessage
        {
            get
            {
                string value = _v_LastServerProcessErrorMessage;
                OnGetv_LastServerProcessErrorMessage(ref value);
                return value;
            }
            set
            {
                if (_v_LastServerProcessErrorMessage != value)
                {
                  Onv_LastServerProcessErrorMessageChanging(ref value);
                  ReportPropertyChanging("v_LastServerProcessErrorMessage");
                  _v_LastServerProcessErrorMessage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LastServerProcessErrorMessage");
                  Onv_LastServerProcessErrorMessageChanged();
              }
            }
        }
        private string _v_LastServerProcessErrorMessage;
        partial void OnGetv_LastServerProcessErrorMessage(ref string value);
        partial void Onv_LastServerProcessErrorMessageChanging(ref string value);
        partial void Onv_LastServerProcessErrorMessageChanged();
    
        /// <summary>
        /// There are no comments for v_LastNodePackageFileName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LastNodePackageFileName
        {
            get
            {
                string value = _v_LastNodePackageFileName;
                OnGetv_LastNodePackageFileName(ref value);
                return value;
            }
            set
            {
                if (_v_LastNodePackageFileName != value)
                {
                  Onv_LastNodePackageFileNameChanging(ref value);
                  ReportPropertyChanging("v_LastNodePackageFileName");
                  _v_LastNodePackageFileName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LastNodePackageFileName");
                  Onv_LastNodePackageFileNameChanged();
              }
            }
        }
        private string _v_LastNodePackageFileName;
        partial void OnGetv_LastNodePackageFileName(ref string value);
        partial void Onv_LastNodePackageFileNameChanging(ref string value);
        partial void Onv_LastNodePackageFileNameChanged();
    
        /// <summary>
        /// There are no comments for v_LastNodeProcessErrorMessage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LastNodeProcessErrorMessage
        {
            get
            {
                string value = _v_LastNodeProcessErrorMessage;
                OnGetv_LastNodeProcessErrorMessage(ref value);
                return value;
            }
            set
            {
                if (_v_LastNodeProcessErrorMessage != value)
                {
                  Onv_LastNodeProcessErrorMessageChanging(ref value);
                  ReportPropertyChanging("v_LastNodeProcessErrorMessage");
                  _v_LastNodeProcessErrorMessage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LastNodeProcessErrorMessage");
                  Onv_LastNodeProcessErrorMessageChanged();
              }
            }
        }
        private string _v_LastNodeProcessErrorMessage;
        partial void OnGetv_LastNodeProcessErrorMessage(ref string value);
        partial void Onv_LastNodeProcessErrorMessageChanging(ref string value);
        partial void Onv_LastNodeProcessErrorMessageChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.serversyncstatus in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_NodeId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="serversyncstatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class serversyncstatus : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new serversyncstatus object.
        /// </summary>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        public static serversyncstatus Createserversyncstatus(int i_NodeId)
        {
            serversyncstatus serversyncstatus = new serversyncstatus();
            serversyncstatus.i_NodeId = i_NodeId;
            return serversyncstatus;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_Enabled in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Enabled
        {
            get
            {
                global::System.Nullable<int> value = _i_Enabled;
                OnGeti_Enabled(ref value);
                return value;
            }
            set
            {
                if (_i_Enabled != value)
                {
                  Oni_EnabledChanging(ref value);
                  ReportPropertyChanging("i_Enabled");
                  _i_Enabled = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Enabled");
                  Oni_EnabledChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Enabled;
        partial void OnGeti_Enabled(ref global::System.Nullable<int> value);
        partial void Oni_EnabledChanging(ref global::System.Nullable<int> value);
        partial void Oni_EnabledChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.service in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ServiceId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class service : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new service object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        /// <param name="i_StatusLiquidation">Initial value of i_StatusLiquidation.</param>
        public static service Createservice(string v_ServiceId, int i_StatusLiquidation)
        {
            service service = new service();
            service.v_ServiceId = v_ServiceId;
            service.i_StatusLiquidation = i_StatusLiquidation;
            return service;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProtocolId
        {
            get
            {
                string value = _v_ProtocolId;
                OnGetv_ProtocolId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolId != value)
                {
                  Onv_ProtocolIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolId");
                  _v_ProtocolId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProtocolId");
                  Onv_ProtocolIdChanged();
              }
            }
        }
        private string _v_ProtocolId;
        partial void OnGetv_ProtocolId(ref string value);
        partial void Onv_ProtocolIdChanging(ref string value);
        partial void Onv_ProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for i_MasterServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MasterServiceId
        {
            get
            {
                global::System.Nullable<int> value = _i_MasterServiceId;
                OnGeti_MasterServiceId(ref value);
                return value;
            }
            set
            {
                if (_i_MasterServiceId != value)
                {
                  Oni_MasterServiceIdChanging(ref value);
                  ReportPropertyChanging("i_MasterServiceId");
                  _i_MasterServiceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MasterServiceId");
                  Oni_MasterServiceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MasterServiceId;
        partial void OnGeti_MasterServiceId(ref global::System.Nullable<int> value);
        partial void Oni_MasterServiceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MasterServiceIdChanged();
    
        /// <summary>
        /// There are no comments for i_ServiceStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ServiceStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_ServiceStatusId;
                OnGeti_ServiceStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceStatusId != value)
                {
                  Oni_ServiceStatusIdChanging(ref value);
                  ReportPropertyChanging("i_ServiceStatusId");
                  _i_ServiceStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceStatusId");
                  Oni_ServiceStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ServiceStatusId;
        partial void OnGeti_ServiceStatusId(ref global::System.Nullable<int> value);
        partial void Oni_ServiceStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ServiceStatusIdChanged();
    
        /// <summary>
        /// There are no comments for v_Motive in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Motive
        {
            get
            {
                string value = _v_Motive;
                OnGetv_Motive(ref value);
                return value;
            }
            set
            {
                if (_v_Motive != value)
                {
                  Onv_MotiveChanging(ref value);
                  ReportPropertyChanging("v_Motive");
                  _v_Motive = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Motive");
                  Onv_MotiveChanged();
              }
            }
        }
        private string _v_Motive;
        partial void OnGetv_Motive(ref string value);
        partial void Onv_MotiveChanging(ref string value);
        partial void Onv_MotiveChanged();
    
        /// <summary>
        /// There are no comments for i_AptitudeStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_AptitudeStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_AptitudeStatusId;
                OnGeti_AptitudeStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_AptitudeStatusId != value)
                {
                  Oni_AptitudeStatusIdChanging(ref value);
                  ReportPropertyChanging("i_AptitudeStatusId");
                  _i_AptitudeStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_AptitudeStatusId");
                  Oni_AptitudeStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_AptitudeStatusId;
        partial void OnGeti_AptitudeStatusId(ref global::System.Nullable<int> value);
        partial void Oni_AptitudeStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_AptitudeStatusIdChanged();
    
        /// <summary>
        /// There are no comments for d_ServiceDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ServiceDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ServiceDate;
                OnGetd_ServiceDate(ref value);
                return value;
            }
            set
            {
                if (_d_ServiceDate != value)
                {
                  Ond_ServiceDateChanging(ref value);
                  ReportPropertyChanging("d_ServiceDate");
                  _d_ServiceDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ServiceDate");
                  Ond_ServiceDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ServiceDate;
        partial void OnGetd_ServiceDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanged();
    
        /// <summary>
        /// There are no comments for d_GlobalExpirationDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_GlobalExpirationDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_GlobalExpirationDate;
                OnGetd_GlobalExpirationDate(ref value);
                return value;
            }
            set
            {
                if (_d_GlobalExpirationDate != value)
                {
                  Ond_GlobalExpirationDateChanging(ref value);
                  ReportPropertyChanging("d_GlobalExpirationDate");
                  _d_GlobalExpirationDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_GlobalExpirationDate");
                  Ond_GlobalExpirationDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_GlobalExpirationDate;
        partial void OnGetd_GlobalExpirationDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_GlobalExpirationDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_GlobalExpirationDateChanged();
    
        /// <summary>
        /// There are no comments for d_ObsExpirationDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ObsExpirationDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ObsExpirationDate;
                OnGetd_ObsExpirationDate(ref value);
                return value;
            }
            set
            {
                if (_d_ObsExpirationDate != value)
                {
                  Ond_ObsExpirationDateChanging(ref value);
                  ReportPropertyChanging("d_ObsExpirationDate");
                  _d_ObsExpirationDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ObsExpirationDate");
                  Ond_ObsExpirationDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ObsExpirationDate;
        partial void OnGetd_ObsExpirationDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ObsExpirationDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ObsExpirationDateChanged();
    
        /// <summary>
        /// There are no comments for i_FlagAgentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_FlagAgentId
        {
            get
            {
                global::System.Nullable<int> value = _i_FlagAgentId;
                OnGeti_FlagAgentId(ref value);
                return value;
            }
            set
            {
                if (_i_FlagAgentId != value)
                {
                  Oni_FlagAgentIdChanging(ref value);
                  ReportPropertyChanging("i_FlagAgentId");
                  _i_FlagAgentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_FlagAgentId");
                  Oni_FlagAgentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_FlagAgentId;
        partial void OnGeti_FlagAgentId(ref global::System.Nullable<int> value);
        partial void Oni_FlagAgentIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_FlagAgentIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_LocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LocationId
        {
            get
            {
                string value = _v_LocationId;
                OnGetv_LocationId(ref value);
                return value;
            }
            set
            {
                if (_v_LocationId != value)
                {
                  Onv_LocationIdChanging(ref value);
                  ReportPropertyChanging("v_LocationId");
                  _v_LocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LocationId");
                  Onv_LocationIdChanged();
              }
            }
        }
        private string _v_LocationId;
        partial void OnGetv_LocationId(ref string value);
        partial void Onv_LocationIdChanging(ref string value);
        partial void Onv_LocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_MainSymptom in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_MainSymptom
        {
            get
            {
                string value = _v_MainSymptom;
                OnGetv_MainSymptom(ref value);
                return value;
            }
            set
            {
                if (_v_MainSymptom != value)
                {
                  Onv_MainSymptomChanging(ref value);
                  ReportPropertyChanging("v_MainSymptom");
                  _v_MainSymptom = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_MainSymptom");
                  Onv_MainSymptomChanged();
              }
            }
        }
        private string _v_MainSymptom;
        partial void OnGetv_MainSymptom(ref string value);
        partial void Onv_MainSymptomChanging(ref string value);
        partial void Onv_MainSymptomChanged();
    
        /// <summary>
        /// There are no comments for i_TimeOfDisease in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TimeOfDisease
        {
            get
            {
                global::System.Nullable<int> value = _i_TimeOfDisease;
                OnGeti_TimeOfDisease(ref value);
                return value;
            }
            set
            {
                if (_i_TimeOfDisease != value)
                {
                  Oni_TimeOfDiseaseChanging(ref value);
                  ReportPropertyChanging("i_TimeOfDisease");
                  _i_TimeOfDisease = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TimeOfDisease");
                  Oni_TimeOfDiseaseChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TimeOfDisease;
        partial void OnGeti_TimeOfDisease(ref global::System.Nullable<int> value);
        partial void Oni_TimeOfDiseaseChanging(ref global::System.Nullable<int> value);
        partial void Oni_TimeOfDiseaseChanged();
    
        /// <summary>
        /// There are no comments for i_TimeOfDiseaseTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TimeOfDiseaseTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_TimeOfDiseaseTypeId;
                OnGeti_TimeOfDiseaseTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_TimeOfDiseaseTypeId != value)
                {
                  Oni_TimeOfDiseaseTypeIdChanging(ref value);
                  ReportPropertyChanging("i_TimeOfDiseaseTypeId");
                  _i_TimeOfDiseaseTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TimeOfDiseaseTypeId");
                  Oni_TimeOfDiseaseTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TimeOfDiseaseTypeId;
        partial void OnGeti_TimeOfDiseaseTypeId(ref global::System.Nullable<int> value);
        partial void Oni_TimeOfDiseaseTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TimeOfDiseaseTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_Story in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Story
        {
            get
            {
                string value = _v_Story;
                OnGetv_Story(ref value);
                return value;
            }
            set
            {
                if (_v_Story != value)
                {
                  Onv_StoryChanging(ref value);
                  ReportPropertyChanging("v_Story");
                  _v_Story = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Story");
                  Onv_StoryChanged();
              }
            }
        }
        private string _v_Story;
        partial void OnGetv_Story(ref string value);
        partial void Onv_StoryChanging(ref string value);
        partial void Onv_StoryChanged();
    
        /// <summary>
        /// There are no comments for i_DreamId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DreamId
        {
            get
            {
                global::System.Nullable<int> value = _i_DreamId;
                OnGeti_DreamId(ref value);
                return value;
            }
            set
            {
                if (_i_DreamId != value)
                {
                  Oni_DreamIdChanging(ref value);
                  ReportPropertyChanging("i_DreamId");
                  _i_DreamId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DreamId");
                  Oni_DreamIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DreamId;
        partial void OnGeti_DreamId(ref global::System.Nullable<int> value);
        partial void Oni_DreamIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DreamIdChanged();
    
        /// <summary>
        /// There are no comments for i_UrineId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UrineId
        {
            get
            {
                global::System.Nullable<int> value = _i_UrineId;
                OnGeti_UrineId(ref value);
                return value;
            }
            set
            {
                if (_i_UrineId != value)
                {
                  Oni_UrineIdChanging(ref value);
                  ReportPropertyChanging("i_UrineId");
                  _i_UrineId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UrineId");
                  Oni_UrineIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UrineId;
        partial void OnGeti_UrineId(ref global::System.Nullable<int> value);
        partial void Oni_UrineIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UrineIdChanged();
    
        /// <summary>
        /// There are no comments for i_DepositionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DepositionId
        {
            get
            {
                global::System.Nullable<int> value = _i_DepositionId;
                OnGeti_DepositionId(ref value);
                return value;
            }
            set
            {
                if (_i_DepositionId != value)
                {
                  Oni_DepositionIdChanging(ref value);
                  ReportPropertyChanging("i_DepositionId");
                  _i_DepositionId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DepositionId");
                  Oni_DepositionIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DepositionId;
        partial void OnGeti_DepositionId(ref global::System.Nullable<int> value);
        partial void Oni_DepositionIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DepositionIdChanged();
    
        /// <summary>
        /// There are no comments for i_AppetiteId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_AppetiteId
        {
            get
            {
                global::System.Nullable<int> value = _i_AppetiteId;
                OnGeti_AppetiteId(ref value);
                return value;
            }
            set
            {
                if (_i_AppetiteId != value)
                {
                  Oni_AppetiteIdChanging(ref value);
                  ReportPropertyChanging("i_AppetiteId");
                  _i_AppetiteId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_AppetiteId");
                  Oni_AppetiteIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_AppetiteId;
        partial void OnGeti_AppetiteId(ref global::System.Nullable<int> value);
        partial void Oni_AppetiteIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_AppetiteIdChanged();
    
        /// <summary>
        /// There are no comments for i_ThirstId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ThirstId
        {
            get
            {
                global::System.Nullable<int> value = _i_ThirstId;
                OnGeti_ThirstId(ref value);
                return value;
            }
            set
            {
                if (_i_ThirstId != value)
                {
                  Oni_ThirstIdChanging(ref value);
                  ReportPropertyChanging("i_ThirstId");
                  _i_ThirstId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ThirstId");
                  Oni_ThirstIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ThirstId;
        partial void OnGeti_ThirstId(ref global::System.Nullable<int> value);
        partial void Oni_ThirstIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ThirstIdChanged();
    
        /// <summary>
        /// There are no comments for d_Fur in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_Fur
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_Fur;
                OnGetd_Fur(ref value);
                return value;
            }
            set
            {
                if (_d_Fur != value)
                {
                  Ond_FurChanging(ref value);
                  ReportPropertyChanging("d_Fur");
                  _d_Fur = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_Fur");
                  Ond_FurChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_Fur;
        partial void OnGetd_Fur(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_FurChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_FurChanged();
    
        /// <summary>
        /// There are no comments for v_CatemenialRegime in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CatemenialRegime
        {
            get
            {
                string value = _v_CatemenialRegime;
                OnGetv_CatemenialRegime(ref value);
                return value;
            }
            set
            {
                if (_v_CatemenialRegime != value)
                {
                  Onv_CatemenialRegimeChanging(ref value);
                  ReportPropertyChanging("v_CatemenialRegime");
                  _v_CatemenialRegime = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CatemenialRegime");
                  Onv_CatemenialRegimeChanged();
              }
            }
        }
        private string _v_CatemenialRegime;
        partial void OnGetv_CatemenialRegime(ref string value);
        partial void Onv_CatemenialRegimeChanging(ref string value);
        partial void Onv_CatemenialRegimeChanged();
    
        /// <summary>
        /// There are no comments for i_MacId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MacId
        {
            get
            {
                global::System.Nullable<int> value = _i_MacId;
                OnGeti_MacId(ref value);
                return value;
            }
            set
            {
                if (_i_MacId != value)
                {
                  Oni_MacIdChanging(ref value);
                  ReportPropertyChanging("i_MacId");
                  _i_MacId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MacId");
                  Oni_MacIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MacId;
        partial void OnGeti_MacId(ref global::System.Nullable<int> value);
        partial void Oni_MacIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MacIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsNewControl in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsNewControl
        {
            get
            {
                global::System.Nullable<int> value = _i_IsNewControl;
                OnGeti_IsNewControl(ref value);
                return value;
            }
            set
            {
                if (_i_IsNewControl != value)
                {
                  Oni_IsNewControlChanging(ref value);
                  ReportPropertyChanging("i_IsNewControl");
                  _i_IsNewControl = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsNewControl");
                  Oni_IsNewControlChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsNewControl;
        partial void OnGeti_IsNewControl(ref global::System.Nullable<int> value);
        partial void Oni_IsNewControlChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsNewControlChanged();
    
        /// <summary>
        /// There are no comments for i_HasMedicalBreakId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_HasMedicalBreakId
        {
            get
            {
                global::System.Nullable<int> value = _i_HasMedicalBreakId;
                OnGeti_HasMedicalBreakId(ref value);
                return value;
            }
            set
            {
                if (_i_HasMedicalBreakId != value)
                {
                  Oni_HasMedicalBreakIdChanging(ref value);
                  ReportPropertyChanging("i_HasMedicalBreakId");
                  _i_HasMedicalBreakId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_HasMedicalBreakId");
                  Oni_HasMedicalBreakIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_HasMedicalBreakId;
        partial void OnGeti_HasMedicalBreakId(ref global::System.Nullable<int> value);
        partial void Oni_HasMedicalBreakIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_HasMedicalBreakIdChanged();
    
        /// <summary>
        /// There are no comments for d_MedicalBreakStartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_MedicalBreakStartDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_MedicalBreakStartDate;
                OnGetd_MedicalBreakStartDate(ref value);
                return value;
            }
            set
            {
                if (_d_MedicalBreakStartDate != value)
                {
                  Ond_MedicalBreakStartDateChanging(ref value);
                  ReportPropertyChanging("d_MedicalBreakStartDate");
                  _d_MedicalBreakStartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_MedicalBreakStartDate");
                  Ond_MedicalBreakStartDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_MedicalBreakStartDate;
        partial void OnGetd_MedicalBreakStartDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_MedicalBreakStartDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_MedicalBreakStartDateChanged();
    
        /// <summary>
        /// There are no comments for d_MedicalBreakEndDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_MedicalBreakEndDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_MedicalBreakEndDate;
                OnGetd_MedicalBreakEndDate(ref value);
                return value;
            }
            set
            {
                if (_d_MedicalBreakEndDate != value)
                {
                  Ond_MedicalBreakEndDateChanging(ref value);
                  ReportPropertyChanging("d_MedicalBreakEndDate");
                  _d_MedicalBreakEndDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_MedicalBreakEndDate");
                  Ond_MedicalBreakEndDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_MedicalBreakEndDate;
        partial void OnGetd_MedicalBreakEndDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_MedicalBreakEndDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_MedicalBreakEndDateChanged();
    
        /// <summary>
        /// There are no comments for v_GeneralRecomendations in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GeneralRecomendations
        {
            get
            {
                string value = _v_GeneralRecomendations;
                OnGetv_GeneralRecomendations(ref value);
                return value;
            }
            set
            {
                if (_v_GeneralRecomendations != value)
                {
                  Onv_GeneralRecomendationsChanging(ref value);
                  ReportPropertyChanging("v_GeneralRecomendations");
                  _v_GeneralRecomendations = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GeneralRecomendations");
                  Onv_GeneralRecomendationsChanged();
              }
            }
        }
        private string _v_GeneralRecomendations;
        partial void OnGetv_GeneralRecomendations(ref string value);
        partial void Onv_GeneralRecomendationsChanging(ref string value);
        partial void Onv_GeneralRecomendationsChanged();
    
        /// <summary>
        /// There are no comments for i_DestinationMedicationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DestinationMedicationId
        {
            get
            {
                global::System.Nullable<int> value = _i_DestinationMedicationId;
                OnGeti_DestinationMedicationId(ref value);
                return value;
            }
            set
            {
                if (_i_DestinationMedicationId != value)
                {
                  Oni_DestinationMedicationIdChanging(ref value);
                  ReportPropertyChanging("i_DestinationMedicationId");
                  _i_DestinationMedicationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DestinationMedicationId");
                  Oni_DestinationMedicationIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DestinationMedicationId;
        partial void OnGeti_DestinationMedicationId(ref global::System.Nullable<int> value);
        partial void Oni_DestinationMedicationIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DestinationMedicationIdChanged();
    
        /// <summary>
        /// There are no comments for i_TransportMedicationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TransportMedicationId
        {
            get
            {
                global::System.Nullable<int> value = _i_TransportMedicationId;
                OnGeti_TransportMedicationId(ref value);
                return value;
            }
            set
            {
                if (_i_TransportMedicationId != value)
                {
                  Oni_TransportMedicationIdChanging(ref value);
                  ReportPropertyChanging("i_TransportMedicationId");
                  _i_TransportMedicationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TransportMedicationId");
                  Oni_TransportMedicationIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TransportMedicationId;
        partial void OnGeti_TransportMedicationId(ref global::System.Nullable<int> value);
        partial void Oni_TransportMedicationIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TransportMedicationIdChanged();
    
        /// <summary>
        /// There are no comments for d_StartDateRestriction in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_StartDateRestriction
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_StartDateRestriction;
                OnGetd_StartDateRestriction(ref value);
                return value;
            }
            set
            {
                if (_d_StartDateRestriction != value)
                {
                  Ond_StartDateRestrictionChanging(ref value);
                  ReportPropertyChanging("d_StartDateRestriction");
                  _d_StartDateRestriction = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_StartDateRestriction");
                  Ond_StartDateRestrictionChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_StartDateRestriction;
        partial void OnGetd_StartDateRestriction(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_StartDateRestrictionChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_StartDateRestrictionChanged();
    
        /// <summary>
        /// There are no comments for d_EndDateRestriction in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_EndDateRestriction
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_EndDateRestriction;
                OnGetd_EndDateRestriction(ref value);
                return value;
            }
            set
            {
                if (_d_EndDateRestriction != value)
                {
                  Ond_EndDateRestrictionChanging(ref value);
                  ReportPropertyChanging("d_EndDateRestriction");
                  _d_EndDateRestriction = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_EndDateRestriction");
                  Ond_EndDateRestrictionChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_EndDateRestriction;
        partial void OnGetd_EndDateRestriction(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EndDateRestrictionChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EndDateRestrictionChanged();
    
        /// <summary>
        /// There are no comments for i_HasRestrictionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_HasRestrictionId
        {
            get
            {
                global::System.Nullable<int> value = _i_HasRestrictionId;
                OnGeti_HasRestrictionId(ref value);
                return value;
            }
            set
            {
                if (_i_HasRestrictionId != value)
                {
                  Oni_HasRestrictionIdChanging(ref value);
                  ReportPropertyChanging("i_HasRestrictionId");
                  _i_HasRestrictionId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_HasRestrictionId");
                  Oni_HasRestrictionIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_HasRestrictionId;
        partial void OnGeti_HasRestrictionId(ref global::System.Nullable<int> value);
        partial void Oni_HasRestrictionIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_HasRestrictionIdChanged();
    
        /// <summary>
        /// There are no comments for i_HasSymptomId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_HasSymptomId
        {
            get
            {
                global::System.Nullable<int> value = _i_HasSymptomId;
                OnGeti_HasSymptomId(ref value);
                return value;
            }
            set
            {
                if (_i_HasSymptomId != value)
                {
                  Oni_HasSymptomIdChanging(ref value);
                  ReportPropertyChanging("i_HasSymptomId");
                  _i_HasSymptomId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_HasSymptomId");
                  Oni_HasSymptomIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_HasSymptomId;
        partial void OnGeti_HasSymptomId(ref global::System.Nullable<int> value);
        partial void Oni_HasSymptomIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_HasSymptomIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for d_NextAppointment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_NextAppointment
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_NextAppointment;
                OnGetd_NextAppointment(ref value);
                return value;
            }
            set
            {
                if (_d_NextAppointment != value)
                {
                  Ond_NextAppointmentChanging(ref value);
                  ReportPropertyChanging("d_NextAppointment");
                  _d_NextAppointment = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_NextAppointment");
                  Ond_NextAppointmentChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_NextAppointment;
        partial void OnGetd_NextAppointment(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_NextAppointmentChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_NextAppointmentChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for i_SendToTracking in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SendToTracking
        {
            get
            {
                global::System.Nullable<int> value = _i_SendToTracking;
                OnGeti_SendToTracking(ref value);
                return value;
            }
            set
            {
                if (_i_SendToTracking != value)
                {
                  Oni_SendToTrackingChanging(ref value);
                  ReportPropertyChanging("i_SendToTracking");
                  _i_SendToTracking = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SendToTracking");
                  Oni_SendToTrackingChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SendToTracking;
        partial void OnGeti_SendToTracking(ref global::System.Nullable<int> value);
        partial void Oni_SendToTrackingChanging(ref global::System.Nullable<int> value);
        partial void Oni_SendToTrackingChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserMedicalAnalystId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserMedicalAnalystId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserMedicalAnalystId;
                OnGeti_InsertUserMedicalAnalystId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserMedicalAnalystId != value)
                {
                  Oni_InsertUserMedicalAnalystIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserMedicalAnalystId");
                  _i_InsertUserMedicalAnalystId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserMedicalAnalystId");
                  Oni_InsertUserMedicalAnalystIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserMedicalAnalystId;
        partial void OnGeti_InsertUserMedicalAnalystId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserMedicalAnalystIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserMedicalAnalystIdChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserMedicalAnalystId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserMedicalAnalystId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserMedicalAnalystId;
                OnGeti_UpdateUserMedicalAnalystId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserMedicalAnalystId != value)
                {
                  Oni_UpdateUserMedicalAnalystIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserMedicalAnalystId");
                  _i_UpdateUserMedicalAnalystId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserMedicalAnalystId");
                  Oni_UpdateUserMedicalAnalystIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserMedicalAnalystId;
        partial void OnGeti_UpdateUserMedicalAnalystId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserMedicalAnalystIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserMedicalAnalystIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDateMedicalAnalyst in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDateMedicalAnalyst
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDateMedicalAnalyst;
                OnGetd_InsertDateMedicalAnalyst(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDateMedicalAnalyst != value)
                {
                  Ond_InsertDateMedicalAnalystChanging(ref value);
                  ReportPropertyChanging("d_InsertDateMedicalAnalyst");
                  _d_InsertDateMedicalAnalyst = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDateMedicalAnalyst");
                  Ond_InsertDateMedicalAnalystChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDateMedicalAnalyst;
        partial void OnGetd_InsertDateMedicalAnalyst(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateMedicalAnalystChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateMedicalAnalystChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDateMedicalAnalyst in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDateMedicalAnalyst
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDateMedicalAnalyst;
                OnGetd_UpdateDateMedicalAnalyst(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDateMedicalAnalyst != value)
                {
                  Ond_UpdateDateMedicalAnalystChanging(ref value);
                  ReportPropertyChanging("d_UpdateDateMedicalAnalyst");
                  _d_UpdateDateMedicalAnalyst = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDateMedicalAnalyst");
                  Ond_UpdateDateMedicalAnalystChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDateMedicalAnalyst;
        partial void OnGetd_UpdateDateMedicalAnalyst(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateMedicalAnalystChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateMedicalAnalystChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserOccupationalMedicalId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserOccupationalMedicalId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserOccupationalMedicalId;
                OnGeti_InsertUserOccupationalMedicalId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserOccupationalMedicalId != value)
                {
                  Oni_InsertUserOccupationalMedicalIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserOccupationalMedicalId");
                  _i_InsertUserOccupationalMedicalId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserOccupationalMedicalId");
                  Oni_InsertUserOccupationalMedicalIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserOccupationalMedicalId;
        partial void OnGeti_InsertUserOccupationalMedicalId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserOccupationalMedicalIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserOccupationalMedicalIdChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserOccupationalMedicaltId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserOccupationalMedicaltId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserOccupationalMedicaltId;
                OnGeti_UpdateUserOccupationalMedicaltId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserOccupationalMedicaltId != value)
                {
                  Oni_UpdateUserOccupationalMedicaltIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserOccupationalMedicaltId");
                  _i_UpdateUserOccupationalMedicaltId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserOccupationalMedicaltId");
                  Oni_UpdateUserOccupationalMedicaltIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserOccupationalMedicaltId;
        partial void OnGeti_UpdateUserOccupationalMedicaltId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserOccupationalMedicaltIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserOccupationalMedicaltIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDateOccupationalMedical in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDateOccupationalMedical
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDateOccupationalMedical;
                OnGetd_InsertDateOccupationalMedical(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDateOccupationalMedical != value)
                {
                  Ond_InsertDateOccupationalMedicalChanging(ref value);
                  ReportPropertyChanging("d_InsertDateOccupationalMedical");
                  _d_InsertDateOccupationalMedical = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDateOccupationalMedical");
                  Ond_InsertDateOccupationalMedicalChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDateOccupationalMedical;
        partial void OnGetd_InsertDateOccupationalMedical(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateOccupationalMedicalChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateOccupationalMedicalChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDateOccupationalMedical in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDateOccupationalMedical
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDateOccupationalMedical;
                OnGetd_UpdateDateOccupationalMedical(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDateOccupationalMedical != value)
                {
                  Ond_UpdateDateOccupationalMedicalChanging(ref value);
                  ReportPropertyChanging("d_UpdateDateOccupationalMedical");
                  _d_UpdateDateOccupationalMedical = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDateOccupationalMedical");
                  Ond_UpdateDateOccupationalMedicalChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDateOccupationalMedical;
        partial void OnGetd_UpdateDateOccupationalMedical(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateOccupationalMedicalChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateOccupationalMedicalChanged();
    
        /// <summary>
        /// There are no comments for i_HazInterconsultationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_HazInterconsultationId
        {
            get
            {
                global::System.Nullable<int> value = _i_HazInterconsultationId;
                OnGeti_HazInterconsultationId(ref value);
                return value;
            }
            set
            {
                if (_i_HazInterconsultationId != value)
                {
                  Oni_HazInterconsultationIdChanging(ref value);
                  ReportPropertyChanging("i_HazInterconsultationId");
                  _i_HazInterconsultationId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_HazInterconsultationId");
                  Oni_HazInterconsultationIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_HazInterconsultationId;
        partial void OnGeti_HazInterconsultationId(ref global::System.Nullable<int> value);
        partial void Oni_HazInterconsultationIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_HazInterconsultationIdChanged();
    
        /// <summary>
        /// There are no comments for v_Gestapara in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Gestapara
        {
            get
            {
                string value = _v_Gestapara;
                OnGetv_Gestapara(ref value);
                return value;
            }
            set
            {
                if (_v_Gestapara != value)
                {
                  Onv_GestaparaChanging(ref value);
                  ReportPropertyChanging("v_Gestapara");
                  _v_Gestapara = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Gestapara");
                  Onv_GestaparaChanged();
              }
            }
        }
        private string _v_Gestapara;
        partial void OnGetv_Gestapara(ref string value);
        partial void Onv_GestaparaChanging(ref string value);
        partial void Onv_GestaparaChanged();
    
        /// <summary>
        /// There are no comments for v_Menarquia in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Menarquia
        {
            get
            {
                string value = _v_Menarquia;
                OnGetv_Menarquia(ref value);
                return value;
            }
            set
            {
                if (_v_Menarquia != value)
                {
                  Onv_MenarquiaChanging(ref value);
                  ReportPropertyChanging("v_Menarquia");
                  _v_Menarquia = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Menarquia");
                  Onv_MenarquiaChanged();
              }
            }
        }
        private string _v_Menarquia;
        partial void OnGetv_Menarquia(ref string value);
        partial void Onv_MenarquiaChanging(ref string value);
        partial void Onv_MenarquiaChanged();
    
        /// <summary>
        /// There are no comments for d_PAP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_PAP
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_PAP;
                OnGetd_PAP(ref value);
                return value;
            }
            set
            {
                if (_d_PAP != value)
                {
                  Ond_PAPChanging(ref value);
                  ReportPropertyChanging("d_PAP");
                  _d_PAP = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_PAP");
                  Ond_PAPChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_PAP;
        partial void OnGetd_PAP(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_PAPChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_PAPChanged();
    
        /// <summary>
        /// There are no comments for d_Mamografia in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_Mamografia
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_Mamografia;
                OnGetd_Mamografia(ref value);
                return value;
            }
            set
            {
                if (_d_Mamografia != value)
                {
                  Ond_MamografiaChanging(ref value);
                  ReportPropertyChanging("d_Mamografia");
                  _d_Mamografia = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_Mamografia");
                  Ond_MamografiaChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_Mamografia;
        partial void OnGetd_Mamografia(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_MamografiaChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_MamografiaChanged();
    
        /// <summary>
        /// There are no comments for v_CiruGine in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CiruGine
        {
            get
            {
                string value = _v_CiruGine;
                OnGetv_CiruGine(ref value);
                return value;
            }
            set
            {
                if (_v_CiruGine != value)
                {
                  Onv_CiruGineChanging(ref value);
                  ReportPropertyChanging("v_CiruGine");
                  _v_CiruGine = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CiruGine");
                  Onv_CiruGineChanged();
              }
            }
        }
        private string _v_CiruGine;
        partial void OnGetv_CiruGine(ref string value);
        partial void Onv_CiruGineChanging(ref string value);
        partial void Onv_CiruGineChanged();
    
        /// <summary>
        /// There are no comments for v_Findings in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Findings
        {
            get
            {
                string value = _v_Findings;
                OnGetv_Findings(ref value);
                return value;
            }
            set
            {
                if (_v_Findings != value)
                {
                  Onv_FindingsChanging(ref value);
                  ReportPropertyChanging("v_Findings");
                  _v_Findings = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Findings");
                  Onv_FindingsChanged();
              }
            }
        }
        private string _v_Findings;
        partial void OnGetv_Findings(ref string value);
        partial void Onv_FindingsChanging(ref string value);
        partial void Onv_FindingsChanged();
    
        /// <summary>
        /// There are no comments for i_StatusLiquidation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int i_StatusLiquidation
        {
            get
            {
                int value = _i_StatusLiquidation;
                OnGeti_StatusLiquidation(ref value);
                return value;
            }
            set
            {
                if (_i_StatusLiquidation != value)
                {
                  Oni_StatusLiquidationChanging(ref value);
                  ReportPropertyChanging("i_StatusLiquidation");
                  _i_StatusLiquidation = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_StatusLiquidation");
                  Oni_StatusLiquidationChanged();
              }
            }
        }
        private int _i_StatusLiquidation;
        partial void OnGeti_StatusLiquidation(ref int value);
        partial void Oni_StatusLiquidationChanging(ref int value);
        partial void Oni_StatusLiquidationChanged();
    
        /// <summary>
        /// There are no comments for i_ServiceTypeOfInsurance in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ServiceTypeOfInsurance
        {
            get
            {
                global::System.Nullable<int> value = _i_ServiceTypeOfInsurance;
                OnGeti_ServiceTypeOfInsurance(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceTypeOfInsurance != value)
                {
                  Oni_ServiceTypeOfInsuranceChanging(ref value);
                  ReportPropertyChanging("i_ServiceTypeOfInsurance");
                  _i_ServiceTypeOfInsurance = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceTypeOfInsurance");
                  Oni_ServiceTypeOfInsuranceChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ServiceTypeOfInsurance;
        partial void OnGeti_ServiceTypeOfInsurance(ref global::System.Nullable<int> value);
        partial void Oni_ServiceTypeOfInsuranceChanging(ref global::System.Nullable<int> value);
        partial void Oni_ServiceTypeOfInsuranceChanged();
    
        /// <summary>
        /// There are no comments for i_ModalityOfInsurance in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ModalityOfInsurance
        {
            get
            {
                global::System.Nullable<int> value = _i_ModalityOfInsurance;
                OnGeti_ModalityOfInsurance(ref value);
                return value;
            }
            set
            {
                if (_i_ModalityOfInsurance != value)
                {
                  Oni_ModalityOfInsuranceChanging(ref value);
                  ReportPropertyChanging("i_ModalityOfInsurance");
                  _i_ModalityOfInsurance = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ModalityOfInsurance");
                  Oni_ModalityOfInsuranceChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ModalityOfInsurance;
        partial void OnGeti_ModalityOfInsurance(ref global::System.Nullable<int> value);
        partial void Oni_ModalityOfInsuranceChanging(ref global::System.Nullable<int> value);
        partial void Oni_ModalityOfInsuranceChanged();
    
        /// <summary>
        /// There are no comments for i_MaritalStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MaritalStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_MaritalStatusId;
                OnGeti_MaritalStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_MaritalStatusId != value)
                {
                  Oni_MaritalStatusIdChanging(ref value);
                  ReportPropertyChanging("i_MaritalStatusId");
                  _i_MaritalStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MaritalStatusId");
                  Oni_MaritalStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MaritalStatusId;
        partial void OnGeti_MaritalStatusId(ref global::System.Nullable<int> value);
        partial void Oni_MaritalStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MaritalStatusIdChanged();
    
        /// <summary>
        /// There are no comments for v_Mail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Mail
        {
            get
            {
                string value = _v_Mail;
                OnGetv_Mail(ref value);
                return value;
            }
            set
            {
                if (_v_Mail != value)
                {
                  Onv_MailChanging(ref value);
                  ReportPropertyChanging("v_Mail");
                  _v_Mail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Mail");
                  Onv_MailChanged();
              }
            }
        }
        private string _v_Mail;
        partial void OnGetv_Mail(ref string value);
        partial void Onv_MailChanging(ref string value);
        partial void Onv_MailChanged();
    
        /// <summary>
        /// There are no comments for i_LevelOfId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_LevelOfId
        {
            get
            {
                global::System.Nullable<int> value = _i_LevelOfId;
                OnGeti_LevelOfId(ref value);
                return value;
            }
            set
            {
                if (_i_LevelOfId != value)
                {
                  Oni_LevelOfIdChanging(ref value);
                  ReportPropertyChanging("i_LevelOfId");
                  _i_LevelOfId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_LevelOfId");
                  Oni_LevelOfIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_LevelOfId;
        partial void OnGeti_LevelOfId(ref global::System.Nullable<int> value);
        partial void Oni_LevelOfIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_LevelOfIdChanged();
    
        /// <summary>
        /// There are no comments for v_TelephoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_TelephoneNumber
        {
            get
            {
                string value = _v_TelephoneNumber;
                OnGetv_TelephoneNumber(ref value);
                return value;
            }
            set
            {
                if (_v_TelephoneNumber != value)
                {
                  Onv_TelephoneNumberChanging(ref value);
                  ReportPropertyChanging("v_TelephoneNumber");
                  _v_TelephoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_TelephoneNumber");
                  Onv_TelephoneNumberChanged();
              }
            }
        }
        private string _v_TelephoneNumber;
        partial void OnGetv_TelephoneNumber(ref string value);
        partial void Onv_TelephoneNumberChanging(ref string value);
        partial void Onv_TelephoneNumberChanged();
    
        /// <summary>
        /// There are no comments for i_TypeOfInsuranceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TypeOfInsuranceId
        {
            get
            {
                global::System.Nullable<int> value = _i_TypeOfInsuranceId;
                OnGeti_TypeOfInsuranceId(ref value);
                return value;
            }
            set
            {
                if (_i_TypeOfInsuranceId != value)
                {
                  Oni_TypeOfInsuranceIdChanging(ref value);
                  ReportPropertyChanging("i_TypeOfInsuranceId");
                  _i_TypeOfInsuranceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TypeOfInsuranceId");
                  Oni_TypeOfInsuranceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TypeOfInsuranceId;
        partial void OnGeti_TypeOfInsuranceId(ref global::System.Nullable<int> value);
        partial void Oni_TypeOfInsuranceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TypeOfInsuranceIdChanged();
    
        /// <summary>
        /// There are no comments for i_ResidenceInWorkplaceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ResidenceInWorkplaceId
        {
            get
            {
                global::System.Nullable<int> value = _i_ResidenceInWorkplaceId;
                OnGeti_ResidenceInWorkplaceId(ref value);
                return value;
            }
            set
            {
                if (_i_ResidenceInWorkplaceId != value)
                {
                  Oni_ResidenceInWorkplaceIdChanging(ref value);
                  ReportPropertyChanging("i_ResidenceInWorkplaceId");
                  _i_ResidenceInWorkplaceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ResidenceInWorkplaceId");
                  Oni_ResidenceInWorkplaceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ResidenceInWorkplaceId;
        partial void OnGeti_ResidenceInWorkplaceId(ref global::System.Nullable<int> value);
        partial void Oni_ResidenceInWorkplaceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ResidenceInWorkplaceIdChanged();
    
        /// <summary>
        /// There are no comments for v_ResidenceTimeInWorkplace in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ResidenceTimeInWorkplace
        {
            get
            {
                string value = _v_ResidenceTimeInWorkplace;
                OnGetv_ResidenceTimeInWorkplace(ref value);
                return value;
            }
            set
            {
                if (_v_ResidenceTimeInWorkplace != value)
                {
                  Onv_ResidenceTimeInWorkplaceChanging(ref value);
                  ReportPropertyChanging("v_ResidenceTimeInWorkplace");
                  _v_ResidenceTimeInWorkplace = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ResidenceTimeInWorkplace");
                  Onv_ResidenceTimeInWorkplaceChanged();
              }
            }
        }
        private string _v_ResidenceTimeInWorkplace;
        partial void OnGetv_ResidenceTimeInWorkplace(ref string value);
        partial void Onv_ResidenceTimeInWorkplaceChanging(ref string value);
        partial void Onv_ResidenceTimeInWorkplaceChanged();
    
        /// <summary>
        /// There are no comments for i_NumberLivingChildren in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NumberLivingChildren
        {
            get
            {
                global::System.Nullable<int> value = _i_NumberLivingChildren;
                OnGeti_NumberLivingChildren(ref value);
                return value;
            }
            set
            {
                if (_i_NumberLivingChildren != value)
                {
                  Oni_NumberLivingChildrenChanging(ref value);
                  ReportPropertyChanging("i_NumberLivingChildren");
                  _i_NumberLivingChildren = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NumberLivingChildren");
                  Oni_NumberLivingChildrenChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NumberLivingChildren;
        partial void OnGeti_NumberLivingChildren(ref global::System.Nullable<int> value);
        partial void Oni_NumberLivingChildrenChanging(ref global::System.Nullable<int> value);
        partial void Oni_NumberLivingChildrenChanged();
    
        /// <summary>
        /// There are no comments for v_AdressLocation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AdressLocation
        {
            get
            {
                string value = _v_AdressLocation;
                OnGetv_AdressLocation(ref value);
                return value;
            }
            set
            {
                if (_v_AdressLocation != value)
                {
                  Onv_AdressLocationChanging(ref value);
                  ReportPropertyChanging("v_AdressLocation");
                  _v_AdressLocation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AdressLocation");
                  Onv_AdressLocationChanged();
              }
            }
        }
        private string _v_AdressLocation;
        partial void OnGetv_AdressLocation(ref string value);
        partial void Onv_AdressLocationChanging(ref string value);
        partial void Onv_AdressLocationChanged();
    
        /// <summary>
        /// There are no comments for i_NumberDeadChildren in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NumberDeadChildren
        {
            get
            {
                global::System.Nullable<int> value = _i_NumberDeadChildren;
                OnGeti_NumberDeadChildren(ref value);
                return value;
            }
            set
            {
                if (_i_NumberDeadChildren != value)
                {
                  Oni_NumberDeadChildrenChanging(ref value);
                  ReportPropertyChanging("i_NumberDeadChildren");
                  _i_NumberDeadChildren = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NumberDeadChildren");
                  Oni_NumberDeadChildrenChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NumberDeadChildren;
        partial void OnGeti_NumberDeadChildren(ref global::System.Nullable<int> value);
        partial void Oni_NumberDeadChildrenChanging(ref global::System.Nullable<int> value);
        partial void Oni_NumberDeadChildrenChanged();
    
        /// <summary>
        /// There are no comments for v_CurrentOccupation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CurrentOccupation
        {
            get
            {
                string value = _v_CurrentOccupation;
                OnGetv_CurrentOccupation(ref value);
                return value;
            }
            set
            {
                if (_v_CurrentOccupation != value)
                {
                  Onv_CurrentOccupationChanging(ref value);
                  ReportPropertyChanging("v_CurrentOccupation");
                  _v_CurrentOccupation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CurrentOccupation");
                  Onv_CurrentOccupationChanged();
              }
            }
        }
        private string _v_CurrentOccupation;
        partial void OnGetv_CurrentOccupation(ref string value);
        partial void Onv_CurrentOccupationChanging(ref string value);
        partial void Onv_CurrentOccupationChanged();
    
        /// <summary>
        /// There are no comments for i_DepartmentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DepartmentId
        {
            get
            {
                global::System.Nullable<int> value = _i_DepartmentId;
                OnGeti_DepartmentId(ref value);
                return value;
            }
            set
            {
                if (_i_DepartmentId != value)
                {
                  Oni_DepartmentIdChanging(ref value);
                  ReportPropertyChanging("i_DepartmentId");
                  _i_DepartmentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DepartmentId");
                  Oni_DepartmentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DepartmentId;
        partial void OnGeti_DepartmentId(ref global::System.Nullable<int> value);
        partial void Oni_DepartmentIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DepartmentIdChanged();
    
        /// <summary>
        /// There are no comments for i_ProvinceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ProvinceId
        {
            get
            {
                global::System.Nullable<int> value = _i_ProvinceId;
                OnGeti_ProvinceId(ref value);
                return value;
            }
            set
            {
                if (_i_ProvinceId != value)
                {
                  Oni_ProvinceIdChanging(ref value);
                  ReportPropertyChanging("i_ProvinceId");
                  _i_ProvinceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ProvinceId");
                  Oni_ProvinceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ProvinceId;
        partial void OnGeti_ProvinceId(ref global::System.Nullable<int> value);
        partial void Oni_ProvinceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ProvinceIdChanged();
    
        /// <summary>
        /// There are no comments for i_DistrictId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DistrictId
        {
            get
            {
                global::System.Nullable<int> value = _i_DistrictId;
                OnGeti_DistrictId(ref value);
                return value;
            }
            set
            {
                if (_i_DistrictId != value)
                {
                  Oni_DistrictIdChanging(ref value);
                  ReportPropertyChanging("i_DistrictId");
                  _i_DistrictId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DistrictId");
                  Oni_DistrictIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DistrictId;
        partial void OnGeti_DistrictId(ref global::System.Nullable<int> value);
        partial void Oni_DistrictIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DistrictIdChanged();
    
        /// <summary>
        /// There are no comments for i_Relationship in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Relationship
        {
            get
            {
                global::System.Nullable<int> value = _i_Relationship;
                OnGeti_Relationship(ref value);
                return value;
            }
            set
            {
                if (_i_Relationship != value)
                {
                  Oni_RelationshipChanging(ref value);
                  ReportPropertyChanging("i_Relationship");
                  _i_Relationship = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Relationship");
                  Oni_RelationshipChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Relationship;
        partial void OnGeti_Relationship(ref global::System.Nullable<int> value);
        partial void Oni_RelationshipChanging(ref global::System.Nullable<int> value);
        partial void Oni_RelationshipChanged();
    
        /// <summary>
        /// There are no comments for v_OwnerName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OwnerName
        {
            get
            {
                string value = _v_OwnerName;
                OnGetv_OwnerName(ref value);
                return value;
            }
            set
            {
                if (_v_OwnerName != value)
                {
                  Onv_OwnerNameChanging(ref value);
                  ReportPropertyChanging("v_OwnerName");
                  _v_OwnerName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OwnerName");
                  Onv_OwnerNameChanged();
              }
            }
        }
        private string _v_OwnerName;
        partial void OnGetv_OwnerName(ref string value);
        partial void Onv_OwnerNameChanging(ref string value);
        partial void Onv_OwnerNameChanged();
    
        /// <summary>
        /// There are no comments for v_ExploitedMineral in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ExploitedMineral
        {
            get
            {
                string value = _v_ExploitedMineral;
                OnGetv_ExploitedMineral(ref value);
                return value;
            }
            set
            {
                if (_v_ExploitedMineral != value)
                {
                  Onv_ExploitedMineralChanging(ref value);
                  ReportPropertyChanging("v_ExploitedMineral");
                  _v_ExploitedMineral = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ExploitedMineral");
                  Onv_ExploitedMineralChanged();
              }
            }
        }
        private string _v_ExploitedMineral;
        partial void OnGetv_ExploitedMineral(ref string value);
        partial void Onv_ExploitedMineralChanging(ref string value);
        partial void Onv_ExploitedMineralChanged();
    
        /// <summary>
        /// There are no comments for i_AltitudeWorkId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_AltitudeWorkId
        {
            get
            {
                global::System.Nullable<int> value = _i_AltitudeWorkId;
                OnGeti_AltitudeWorkId(ref value);
                return value;
            }
            set
            {
                if (_i_AltitudeWorkId != value)
                {
                  Oni_AltitudeWorkIdChanging(ref value);
                  ReportPropertyChanging("i_AltitudeWorkId");
                  _i_AltitudeWorkId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_AltitudeWorkId");
                  Oni_AltitudeWorkIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_AltitudeWorkId;
        partial void OnGeti_AltitudeWorkId(ref global::System.Nullable<int> value);
        partial void Oni_AltitudeWorkIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_AltitudeWorkIdChanged();
    
        /// <summary>
        /// There are no comments for i_PlaceWorkId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_PlaceWorkId
        {
            get
            {
                global::System.Nullable<int> value = _i_PlaceWorkId;
                OnGeti_PlaceWorkId(ref value);
                return value;
            }
            set
            {
                if (_i_PlaceWorkId != value)
                {
                  Oni_PlaceWorkIdChanging(ref value);
                  ReportPropertyChanging("i_PlaceWorkId");
                  _i_PlaceWorkId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_PlaceWorkId");
                  Oni_PlaceWorkIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_PlaceWorkId;
        partial void OnGeti_PlaceWorkId(ref global::System.Nullable<int> value);
        partial void Oni_PlaceWorkIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_PlaceWorkIdChanged();
    
        /// <summary>
        /// There are no comments for v_EmpresaFacturacionId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_EmpresaFacturacionId
        {
            get
            {
                string value = _v_EmpresaFacturacionId;
                OnGetv_EmpresaFacturacionId(ref value);
                return value;
            }
            set
            {
                if (_v_EmpresaFacturacionId != value)
                {
                  Onv_EmpresaFacturacionIdChanging(ref value);
                  ReportPropertyChanging("v_EmpresaFacturacionId");
                  _v_EmpresaFacturacionId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_EmpresaFacturacionId");
                  Onv_EmpresaFacturacionIdChanged();
              }
            }
        }
        private string _v_EmpresaFacturacionId;
        partial void OnGetv_EmpresaFacturacionId(ref string value);
        partial void Onv_EmpresaFacturacionIdChanging(ref string value);
        partial void Onv_EmpresaFacturacionIdChanged();
    
        /// <summary>
        /// There are no comments for v_Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Sede
        {
            get
            {
                string value = _v_Sede;
                OnGetv_Sede(ref value);
                return value;
            }
            set
            {
                if (_v_Sede != value)
                {
                  Onv_SedeChanging(ref value);
                  ReportPropertyChanging("v_Sede");
                  _v_Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Sede");
                  Onv_SedeChanged();
              }
            }
        }
        private string _v_Sede;
        partial void OnGetv_Sede(ref string value);
        partial void Onv_SedeChanging(ref string value);
        partial void Onv_SedeChanged();
    
        /// <summary>
        /// There are no comments for GeneracionReporte in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string GeneracionReporte
        {
            get
            {
                string value = _GeneracionReporte;
                OnGetGeneracionReporte(ref value);
                return value;
            }
            set
            {
                if (_GeneracionReporte != value)
                {
                  OnGeneracionReporteChanging(ref value);
                  ReportPropertyChanging("GeneracionReporte");
                  _GeneracionReporte = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("GeneracionReporte");
                  OnGeneracionReporteChanged();
              }
            }
        }
        private string _GeneracionReporte;
        partial void OnGetGeneracionReporte(ref string value);
        partial void OnGeneracionReporteChanging(ref string value);
        partial void OnGeneracionReporteChanged();
    
        /// <summary>
        /// There are no comments for TipoEmpresaCovidId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> TipoEmpresaCovidId
        {
            get
            {
                global::System.Nullable<int> value = _TipoEmpresaCovidId;
                OnGetTipoEmpresaCovidId(ref value);
                return value;
            }
            set
            {
                if (_TipoEmpresaCovidId != value)
                {
                  OnTipoEmpresaCovidIdChanging(ref value);
                  ReportPropertyChanging("TipoEmpresaCovidId");
                  _TipoEmpresaCovidId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TipoEmpresaCovidId");
                  OnTipoEmpresaCovidIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _TipoEmpresaCovidId;
        partial void OnGetTipoEmpresaCovidId(ref global::System.Nullable<int> value);
        partial void OnTipoEmpresaCovidIdChanging(ref global::System.Nullable<int> value);
        partial void OnTipoEmpresaCovidIdChanged();
    
        /// <summary>
        /// There are no comments for EmpresaPrincipal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmpresaPrincipal
        {
            get
            {
                string value = _EmpresaPrincipal;
                OnGetEmpresaPrincipal(ref value);
                return value;
            }
            set
            {
                if (_EmpresaPrincipal != value)
                {
                  OnEmpresaPrincipalChanging(ref value);
                  ReportPropertyChanging("EmpresaPrincipal");
                  _EmpresaPrincipal = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmpresaPrincipal");
                  OnEmpresaPrincipalChanged();
              }
            }
        }
        private string _EmpresaPrincipal;
        partial void OnGetEmpresaPrincipal(ref string value);
        partial void OnEmpresaPrincipalChanging(ref string value);
        partial void OnEmpresaPrincipalChanged();
    
        /// <summary>
        /// There are no comments for EmpresaEmpleadora in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmpresaEmpleadora
        {
            get
            {
                string value = _EmpresaEmpleadora;
                OnGetEmpresaEmpleadora(ref value);
                return value;
            }
            set
            {
                if (_EmpresaEmpleadora != value)
                {
                  OnEmpresaEmpleadoraChanging(ref value);
                  ReportPropertyChanging("EmpresaEmpleadora");
                  _EmpresaEmpleadora = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmpresaEmpleadora");
                  OnEmpresaEmpleadoraChanged();
              }
            }
        }
        private string _EmpresaEmpleadora;
        partial void OnGetEmpresaEmpleadora(ref string value);
        partial void OnEmpresaEmpleadoraChanging(ref string value);
        partial void OnEmpresaEmpleadoraChanged();
    
        /// <summary>
        /// There are no comments for TecnicoCovid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TecnicoCovid
        {
            get
            {
                string value = _TecnicoCovid;
                OnGetTecnicoCovid(ref value);
                return value;
            }
            set
            {
                if (_TecnicoCovid != value)
                {
                  OnTecnicoCovidChanging(ref value);
                  ReportPropertyChanging("TecnicoCovid");
                  _TecnicoCovid = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TecnicoCovid");
                  OnTecnicoCovidChanged();
              }
            }
        }
        private string _TecnicoCovid;
        partial void OnGetTecnicoCovid(ref string value);
        partial void OnTecnicoCovidChanging(ref string value);
        partial void OnTecnicoCovidChanged();
    
        /// <summary>
        /// There are no comments for ClinicaExternad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ClinicaExternad
        {
            get
            {
                global::System.Nullable<int> value = _ClinicaExternad;
                OnGetClinicaExternad(ref value);
                return value;
            }
            set
            {
                if (_ClinicaExternad != value)
                {
                  OnClinicaExternadChanging(ref value);
                  ReportPropertyChanging("ClinicaExternad");
                  _ClinicaExternad = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClinicaExternad");
                  OnClinicaExternadChanged();
              }
            }
        }
        private global::System.Nullable<int> _ClinicaExternad;
        partial void OnGetClinicaExternad(ref global::System.Nullable<int> value);
        partial void OnClinicaExternadChanging(ref global::System.Nullable<int> value);
        partial void OnClinicaExternadChanged();
    
        /// <summary>
        /// There are no comments for CorreoEnviado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> CorreoEnviado
        {
            get
            {
                global::System.Nullable<int> value = _CorreoEnviado;
                OnGetCorreoEnviado(ref value);
                return value;
            }
            set
            {
                if (_CorreoEnviado != value)
                {
                  OnCorreoEnviadoChanging(ref value);
                  ReportPropertyChanging("CorreoEnviado");
                  _CorreoEnviado = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CorreoEnviado");
                  OnCorreoEnviadoChanged();
              }
            }
        }
        private global::System.Nullable<int> _CorreoEnviado;
        partial void OnGetCorreoEnviado(ref global::System.Nullable<int> value);
        partial void OnCorreoEnviadoChanging(ref global::System.Nullable<int> value);
        partial void OnCorreoEnviadoChanged();
    
        /// <summary>
        /// There are no comments for EncuestaCulminada in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> EncuestaCulminada
        {
            get
            {
                global::System.Nullable<int> value = _EncuestaCulminada;
                OnGetEncuestaCulminada(ref value);
                return value;
            }
            set
            {
                if (_EncuestaCulminada != value)
                {
                  OnEncuestaCulminadaChanging(ref value);
                  ReportPropertyChanging("EncuestaCulminada");
                  _EncuestaCulminada = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EncuestaCulminada");
                  OnEncuestaCulminadaChanged();
              }
            }
        }
        private global::System.Nullable<int> _EncuestaCulminada;
        partial void OnGetEncuestaCulminada(ref global::System.Nullable<int> value);
        partial void OnEncuestaCulminadaChanging(ref global::System.Nullable<int> value);
        partial void OnEncuestaCulminadaChanged();
    
        /// <summary>
        /// There are no comments for LaboratorioCulminada in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> LaboratorioCulminada
        {
            get
            {
                global::System.Nullable<int> value = _LaboratorioCulminada;
                OnGetLaboratorioCulminada(ref value);
                return value;
            }
            set
            {
                if (_LaboratorioCulminada != value)
                {
                  OnLaboratorioCulminadaChanging(ref value);
                  ReportPropertyChanging("LaboratorioCulminada");
                  _LaboratorioCulminada = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LaboratorioCulminada");
                  OnLaboratorioCulminadaChanged();
              }
            }
        }
        private global::System.Nullable<int> _LaboratorioCulminada;
        partial void OnGetLaboratorioCulminada(ref global::System.Nullable<int> value);
        partial void OnLaboratorioCulminadaChanging(ref global::System.Nullable<int> value);
        partial void OnLaboratorioCulminadaChanged();
    
        /// <summary>
        /// There are no comments for ReasonExamId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ReasonExamId
        {
            get
            {
                global::System.Nullable<int> value = _ReasonExamId;
                OnGetReasonExamId(ref value);
                return value;
            }
            set
            {
                if (_ReasonExamId != value)
                {
                  OnReasonExamIdChanging(ref value);
                  ReportPropertyChanging("ReasonExamId");
                  _ReasonExamId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ReasonExamId");
                  OnReasonExamIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _ReasonExamId;
        partial void OnGetReasonExamId(ref global::System.Nullable<int> value);
        partial void OnReasonExamIdChanging(ref global::System.Nullable<int> value);
        partial void OnReasonExamIdChanged();
    
        /// <summary>
        /// There are no comments for PlaceExamId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> PlaceExamId
        {
            get
            {
                global::System.Nullable<int> value = _PlaceExamId;
                OnGetPlaceExamId(ref value);
                return value;
            }
            set
            {
                if (_PlaceExamId != value)
                {
                  OnPlaceExamIdChanging(ref value);
                  ReportPropertyChanging("PlaceExamId");
                  _PlaceExamId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PlaceExamId");
                  OnPlaceExamIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _PlaceExamId;
        partial void OnGetPlaceExamId(ref global::System.Nullable<int> value);
        partial void OnPlaceExamIdChanging(ref global::System.Nullable<int> value);
        partial void OnPlaceExamIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for auxiliaryexam in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_AuxiliaryExam_v_ServiceId", "auxiliaryexam")]
        public EntityCollection<auxiliaryexam> auxiliaryexam
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<auxiliaryexam>("Sigesoft.Node.WinClient.DAL.Fk_Service_AuxiliaryExam_v_ServiceId", "auxiliaryexam");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<auxiliaryexam>("Sigesoft.Node.WinClient.DAL.Fk_Service_AuxiliaryExam_v_ServiceId", "auxiliaryexam", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for calendar in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Calendar_v_ServiceId", "calendar")]
        public EntityCollection<calendar> calendar
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<calendar>("Sigesoft.Node.WinClient.DAL.Fk_Service_Calendar_v_ServiceId", "calendar");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<calendar>("Sigesoft.Node.WinClient.DAL.Fk_Service_Calendar_v_ServiceId", "calendar", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for diagnosticrepository in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_DiagnosticRepository_v_ServiceId", "diagnosticrepository")]
        public EntityCollection<diagnosticrepository> diagnosticrepository
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_Service_DiagnosticRepository_v_ServiceId", "diagnosticrepository");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<diagnosticrepository>("Sigesoft.Node.WinClient.DAL.Fk_Service_DiagnosticRepository_v_ServiceId", "diagnosticrepository", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for medication in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Medication_v_ServiceId", "medication")]
        public EntityCollection<medication> medication
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<medication>("Sigesoft.Node.WinClient.DAL.Fk_Service_Medication_v_ServiceId", "medication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<medication>("Sigesoft.Node.WinClient.DAL.Fk_Service_Medication_v_ServiceId", "medication", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for procedurebyservice in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Procedure_v_ServiceId", "procedurebyservice")]
        public EntityCollection<procedurebyservice> procedurebyservice
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<procedurebyservice>("Sigesoft.Node.WinClient.DAL.Fk_Service_Procedure_v_ServiceId", "procedurebyservice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<procedurebyservice>("Sigesoft.Node.WinClient.DAL.Fk_Service_Procedure_v_ServiceId", "procedurebyservice", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for recommendation in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Recommendation_v_ServiceId", "recommendation")]
        public EntityCollection<recommendation> recommendation
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<recommendation>("Sigesoft.Node.WinClient.DAL.Fk_Service_Recommendation_v_ServiceId", "recommendation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<recommendation>("Sigesoft.Node.WinClient.DAL.Fk_Service_Recommendation_v_ServiceId", "recommendation", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for restriction in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_Restricction_v_ServiceId", "restriction")]
        public EntityCollection<restriction> restriction
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<restriction>("Sigesoft.Node.WinClient.DAL.Fk_Service_Restricction_v_ServiceId", "restriction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<restriction>("Sigesoft.Node.WinClient.DAL.Fk_Service_Restricction_v_ServiceId", "restriction", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_Service_v_PersonId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Service_v_PersonId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Service_v_PersonId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Service_v_PersonId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Service_v_PersonId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_Service_v_PersonId", "person").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for protocol in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Protocol_Service_v_ProtocolId", "protocol")]
        public protocol protocol
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_Service_v_ProtocolId", "protocol").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_Service_v_ProtocolId", "protocol").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for protocol in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<protocol> protocolReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_Service_v_ProtocolId", "protocol");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_Service_v_ProtocolId", "protocol", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_Service_v_ProtocolId", "protocol").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponent in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_ServiceComponent_v_ServiceId", "servicecomponent")]
        public EntityCollection<servicecomponent> servicecomponent
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicecomponent>("Sigesoft.Node.WinClient.DAL.Fk_Service_ServiceComponent_v_ServiceId", "servicecomponent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicecomponent>("Sigesoft.Node.WinClient.DAL.Fk_Service_ServiceComponent_v_ServiceId", "servicecomponent", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicemultimedia in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Service_ServiceMultimedia_v_ServiceId", "servicemultimedia")]
        public EntityCollection<servicemultimedia> servicemultimedia
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicemultimedia>("Sigesoft.Node.WinClient.DAL.Pk_Service_ServiceMultimedia_v_ServiceId", "servicemultimedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicemultimedia>("Sigesoft.Node.WinClient.DAL.Pk_Service_ServiceMultimedia_v_ServiceId", "servicemultimedia", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.servicecomponent in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ServiceComponentId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="servicecomponent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class servicecomponent : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new servicecomponent object.
        /// </summary>
        /// <param name="v_ServiceComponentId">Initial value of v_ServiceComponentId.</param>
        public static servicecomponent Createservicecomponent(string v_ServiceComponentId)
        {
            servicecomponent servicecomponent = new servicecomponent();
            servicecomponent.v_ServiceComponentId = v_ServiceComponentId;
            return servicecomponent;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceComponentId
        {
            get
            {
                string value = _v_ServiceComponentId;
                OnGetv_ServiceComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceComponentId != value)
                {
                  Onv_ServiceComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceComponentId");
                  _v_ServiceComponentId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceComponentId");
                  Onv_ServiceComponentIdChanged();
              }
            }
        }
        private string _v_ServiceComponentId;
        partial void OnGetv_ServiceComponentId(ref string value);
        partial void Onv_ServiceComponentIdChanging(ref string value);
        partial void Onv_ServiceComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for i_ServiceComponentStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ServiceComponentStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_ServiceComponentStatusId;
                OnGeti_ServiceComponentStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceComponentStatusId != value)
                {
                  Oni_ServiceComponentStatusIdChanging(ref value);
                  ReportPropertyChanging("i_ServiceComponentStatusId");
                  _i_ServiceComponentStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceComponentStatusId");
                  Oni_ServiceComponentStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ServiceComponentStatusId;
        partial void OnGeti_ServiceComponentStatusId(ref global::System.Nullable<int> value);
        partial void Oni_ServiceComponentStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ServiceComponentStatusIdChanged();
    
        /// <summary>
        /// There are no comments for i_ExternalInternalId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ExternalInternalId
        {
            get
            {
                global::System.Nullable<int> value = _i_ExternalInternalId;
                OnGeti_ExternalInternalId(ref value);
                return value;
            }
            set
            {
                if (_i_ExternalInternalId != value)
                {
                  Oni_ExternalInternalIdChanging(ref value);
                  ReportPropertyChanging("i_ExternalInternalId");
                  _i_ExternalInternalId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ExternalInternalId");
                  Oni_ExternalInternalIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ExternalInternalId;
        partial void OnGeti_ExternalInternalId(ref global::System.Nullable<int> value);
        partial void Oni_ExternalInternalIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ExternalInternalIdChanged();
    
        /// <summary>
        /// There are no comments for i_ServiceComponentTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ServiceComponentTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ServiceComponentTypeId;
                OnGeti_ServiceComponentTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceComponentTypeId != value)
                {
                  Oni_ServiceComponentTypeIdChanging(ref value);
                  ReportPropertyChanging("i_ServiceComponentTypeId");
                  _i_ServiceComponentTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceComponentTypeId");
                  Oni_ServiceComponentTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ServiceComponentTypeId;
        partial void OnGeti_ServiceComponentTypeId(ref global::System.Nullable<int> value);
        partial void Oni_ServiceComponentTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ServiceComponentTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsVisibleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsVisibleId
        {
            get
            {
                global::System.Nullable<int> value = _i_IsVisibleId;
                OnGeti_IsVisibleId(ref value);
                return value;
            }
            set
            {
                if (_i_IsVisibleId != value)
                {
                  Oni_IsVisibleIdChanging(ref value);
                  ReportPropertyChanging("i_IsVisibleId");
                  _i_IsVisibleId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsVisibleId");
                  Oni_IsVisibleIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsVisibleId;
        partial void OnGeti_IsVisibleId(ref global::System.Nullable<int> value);
        partial void Oni_IsVisibleIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsVisibleIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsInheritedId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsInheritedId
        {
            get
            {
                global::System.Nullable<int> value = _i_IsInheritedId;
                OnGeti_IsInheritedId(ref value);
                return value;
            }
            set
            {
                if (_i_IsInheritedId != value)
                {
                  Oni_IsInheritedIdChanging(ref value);
                  ReportPropertyChanging("i_IsInheritedId");
                  _i_IsInheritedId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsInheritedId");
                  Oni_IsInheritedIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsInheritedId;
        partial void OnGeti_IsInheritedId(ref global::System.Nullable<int> value);
        partial void Oni_IsInheritedIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsInheritedIdChanged();
    
        /// <summary>
        /// There are no comments for d_CalledDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_CalledDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_CalledDate;
                OnGetd_CalledDate(ref value);
                return value;
            }
            set
            {
                if (_d_CalledDate != value)
                {
                  Ond_CalledDateChanging(ref value);
                  ReportPropertyChanging("d_CalledDate");
                  _d_CalledDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_CalledDate");
                  Ond_CalledDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_CalledDate;
        partial void OnGetd_CalledDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_CalledDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_CalledDateChanged();
    
        /// <summary>
        /// There are no comments for d_StartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_StartDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_StartDate;
                OnGetd_StartDate(ref value);
                return value;
            }
            set
            {
                if (_d_StartDate != value)
                {
                  Ond_StartDateChanging(ref value);
                  ReportPropertyChanging("d_StartDate");
                  _d_StartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_StartDate");
                  Ond_StartDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_StartDate;
        partial void OnGetd_StartDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_StartDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_StartDateChanged();
    
        /// <summary>
        /// There are no comments for d_EndDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_EndDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_EndDate;
                OnGetd_EndDate(ref value);
                return value;
            }
            set
            {
                if (_d_EndDate != value)
                {
                  Ond_EndDateChanging(ref value);
                  ReportPropertyChanging("d_EndDate");
                  _d_EndDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_EndDate");
                  Ond_EndDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_EndDate;
        partial void OnGetd_EndDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EndDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_EndDateChanged();
    
        /// <summary>
        /// There are no comments for i_index in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_index
        {
            get
            {
                global::System.Nullable<int> value = _i_index;
                OnGeti_index(ref value);
                return value;
            }
            set
            {
                if (_i_index != value)
                {
                  Oni_indexChanging(ref value);
                  ReportPropertyChanging("i_index");
                  _i_index = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_index");
                  Oni_indexChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_index;
        partial void OnGeti_index(ref global::System.Nullable<int> value);
        partial void Oni_indexChanging(ref global::System.Nullable<int> value);
        partial void Oni_indexChanged();
    
        /// <summary>
        /// There are no comments for r_Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_Price
        {
            get
            {
                global::System.Nullable<float> value = _r_Price;
                OnGetr_Price(ref value);
                return value;
            }
            set
            {
                if (_r_Price != value)
                {
                  Onr_PriceChanging(ref value);
                  ReportPropertyChanging("r_Price");
                  _r_Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_Price");
                  Onr_PriceChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_Price;
        partial void OnGetr_Price(ref global::System.Nullable<float> value);
        partial void Onr_PriceChanging(ref global::System.Nullable<float> value);
        partial void Onr_PriceChanged();
    
        /// <summary>
        /// There are no comments for i_IsInvoicedId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsInvoicedId
        {
            get
            {
                global::System.Nullable<int> value = _i_IsInvoicedId;
                OnGeti_IsInvoicedId(ref value);
                return value;
            }
            set
            {
                if (_i_IsInvoicedId != value)
                {
                  Oni_IsInvoicedIdChanging(ref value);
                  ReportPropertyChanging("i_IsInvoicedId");
                  _i_IsInvoicedId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsInvoicedId");
                  Oni_IsInvoicedIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsInvoicedId;
        partial void OnGeti_IsInvoicedId(ref global::System.Nullable<int> value);
        partial void Oni_IsInvoicedIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsInvoicedIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsRequiredId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsRequiredId
        {
            get
            {
                global::System.Nullable<int> value = _i_IsRequiredId;
                OnGeti_IsRequiredId(ref value);
                return value;
            }
            set
            {
                if (_i_IsRequiredId != value)
                {
                  Oni_IsRequiredIdChanging(ref value);
                  ReportPropertyChanging("i_IsRequiredId");
                  _i_IsRequiredId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsRequiredId");
                  Oni_IsRequiredIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsRequiredId;
        partial void OnGeti_IsRequiredId(ref global::System.Nullable<int> value);
        partial void Oni_IsRequiredIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsRequiredIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsManuallyAddedId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsManuallyAddedId
        {
            get
            {
                global::System.Nullable<int> value = _i_IsManuallyAddedId;
                OnGeti_IsManuallyAddedId(ref value);
                return value;
            }
            set
            {
                if (_i_IsManuallyAddedId != value)
                {
                  Oni_IsManuallyAddedIdChanging(ref value);
                  ReportPropertyChanging("i_IsManuallyAddedId");
                  _i_IsManuallyAddedId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsManuallyAddedId");
                  Oni_IsManuallyAddedIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsManuallyAddedId;
        partial void OnGeti_IsManuallyAddedId(ref global::System.Nullable<int> value);
        partial void Oni_IsManuallyAddedIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsManuallyAddedIdChanged();
    
        /// <summary>
        /// There are no comments for i_QueueStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_QueueStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_QueueStatusId;
                OnGeti_QueueStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_QueueStatusId != value)
                {
                  Oni_QueueStatusIdChanging(ref value);
                  ReportPropertyChanging("i_QueueStatusId");
                  _i_QueueStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_QueueStatusId");
                  Oni_QueueStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_QueueStatusId;
        partial void OnGeti_QueueStatusId(ref global::System.Nullable<int> value);
        partial void Oni_QueueStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_QueueStatusIdChanged();
    
        /// <summary>
        /// There are no comments for v_Comment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Comment
        {
            get
            {
                string value = _v_Comment;
                OnGetv_Comment(ref value);
                return value;
            }
            set
            {
                if (_v_Comment != value)
                {
                  Onv_CommentChanging(ref value);
                  ReportPropertyChanging("v_Comment");
                  _v_Comment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Comment");
                  Onv_CommentChanged();
              }
            }
        }
        private string _v_Comment;
        partial void OnGetv_Comment(ref string value);
        partial void Onv_CommentChanging(ref string value);
        partial void Onv_CommentChanged();
    
        /// <summary>
        /// There are no comments for i_Iscalling in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Iscalling
        {
            get
            {
                global::System.Nullable<int> value = _i_Iscalling;
                OnGeti_Iscalling(ref value);
                return value;
            }
            set
            {
                if (_i_Iscalling != value)
                {
                  Oni_IscallingChanging(ref value);
                  ReportPropertyChanging("i_Iscalling");
                  _i_Iscalling = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Iscalling");
                  Oni_IscallingChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Iscalling;
        partial void OnGeti_Iscalling(ref global::System.Nullable<int> value);
        partial void Oni_IscallingChanging(ref global::System.Nullable<int> value);
        partial void Oni_IscallingChanged();
    
        /// <summary>
        /// There are no comments for i_IsApprovedId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsApprovedId
        {
            get
            {
                global::System.Nullable<int> value = _i_IsApprovedId;
                OnGeti_IsApprovedId(ref value);
                return value;
            }
            set
            {
                if (_i_IsApprovedId != value)
                {
                  Oni_IsApprovedIdChanging(ref value);
                  ReportPropertyChanging("i_IsApprovedId");
                  _i_IsApprovedId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsApprovedId");
                  Oni_IsApprovedIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsApprovedId;
        partial void OnGeti_IsApprovedId(ref global::System.Nullable<int> value);
        partial void Oni_IsApprovedIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsApprovedIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_ApprovedInsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ApprovedInsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_ApprovedInsertUserId;
                OnGeti_ApprovedInsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_ApprovedInsertUserId != value)
                {
                  Oni_ApprovedInsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_ApprovedInsertUserId");
                  _i_ApprovedInsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ApprovedInsertUserId");
                  Oni_ApprovedInsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ApprovedInsertUserId;
        partial void OnGeti_ApprovedInsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_ApprovedInsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ApprovedInsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for i_ApprovedUpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ApprovedUpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_ApprovedUpdateUserId;
                OnGeti_ApprovedUpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_ApprovedUpdateUserId != value)
                {
                  Oni_ApprovedUpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_ApprovedUpdateUserId");
                  _i_ApprovedUpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ApprovedUpdateUserId");
                  Oni_ApprovedUpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ApprovedUpdateUserId;
        partial void OnGeti_ApprovedUpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_ApprovedUpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ApprovedUpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_ApprovedInsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ApprovedInsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ApprovedInsertDate;
                OnGetd_ApprovedInsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_ApprovedInsertDate != value)
                {
                  Ond_ApprovedInsertDateChanging(ref value);
                  ReportPropertyChanging("d_ApprovedInsertDate");
                  _d_ApprovedInsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ApprovedInsertDate");
                  Ond_ApprovedInsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ApprovedInsertDate;
        partial void OnGetd_ApprovedInsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ApprovedInsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ApprovedInsertDateChanged();
    
        /// <summary>
        /// There are no comments for d_ApprovedUpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ApprovedUpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ApprovedUpdateDate;
                OnGetd_ApprovedUpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_ApprovedUpdateDate != value)
                {
                  Ond_ApprovedUpdateDateChanging(ref value);
                  ReportPropertyChanging("d_ApprovedUpdateDate");
                  _d_ApprovedUpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ApprovedUpdateDate");
                  Ond_ApprovedUpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ApprovedUpdateDate;
        partial void OnGetd_ApprovedUpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ApprovedUpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ApprovedUpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserMedicalAnalystId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserMedicalAnalystId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserMedicalAnalystId;
                OnGeti_InsertUserMedicalAnalystId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserMedicalAnalystId != value)
                {
                  Oni_InsertUserMedicalAnalystIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserMedicalAnalystId");
                  _i_InsertUserMedicalAnalystId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserMedicalAnalystId");
                  Oni_InsertUserMedicalAnalystIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserMedicalAnalystId;
        partial void OnGeti_InsertUserMedicalAnalystId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserMedicalAnalystIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserMedicalAnalystIdChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserMedicalAnalystId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserMedicalAnalystId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserMedicalAnalystId;
                OnGeti_UpdateUserMedicalAnalystId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserMedicalAnalystId != value)
                {
                  Oni_UpdateUserMedicalAnalystIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserMedicalAnalystId");
                  _i_UpdateUserMedicalAnalystId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserMedicalAnalystId");
                  Oni_UpdateUserMedicalAnalystIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserMedicalAnalystId;
        partial void OnGeti_UpdateUserMedicalAnalystId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserMedicalAnalystIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserMedicalAnalystIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDateMedicalAnalyst in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDateMedicalAnalyst
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDateMedicalAnalyst;
                OnGetd_InsertDateMedicalAnalyst(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDateMedicalAnalyst != value)
                {
                  Ond_InsertDateMedicalAnalystChanging(ref value);
                  ReportPropertyChanging("d_InsertDateMedicalAnalyst");
                  _d_InsertDateMedicalAnalyst = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDateMedicalAnalyst");
                  Ond_InsertDateMedicalAnalystChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDateMedicalAnalyst;
        partial void OnGetd_InsertDateMedicalAnalyst(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateMedicalAnalystChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateMedicalAnalystChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDateMedicalAnalyst in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDateMedicalAnalyst
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDateMedicalAnalyst;
                OnGetd_UpdateDateMedicalAnalyst(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDateMedicalAnalyst != value)
                {
                  Ond_UpdateDateMedicalAnalystChanging(ref value);
                  ReportPropertyChanging("d_UpdateDateMedicalAnalyst");
                  _d_UpdateDateMedicalAnalyst = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDateMedicalAnalyst");
                  Ond_UpdateDateMedicalAnalystChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDateMedicalAnalyst;
        partial void OnGetd_UpdateDateMedicalAnalyst(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateMedicalAnalystChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateMedicalAnalystChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserTechnicalDataRegisterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserTechnicalDataRegisterId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserTechnicalDataRegisterId;
                OnGeti_InsertUserTechnicalDataRegisterId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserTechnicalDataRegisterId != value)
                {
                  Oni_InsertUserTechnicalDataRegisterIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserTechnicalDataRegisterId");
                  _i_InsertUserTechnicalDataRegisterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserTechnicalDataRegisterId");
                  Oni_InsertUserTechnicalDataRegisterIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserTechnicalDataRegisterId;
        partial void OnGeti_InsertUserTechnicalDataRegisterId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserTechnicalDataRegisterIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserTechnicalDataRegisterIdChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserTechnicalDataRegisterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserTechnicalDataRegisterId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserTechnicalDataRegisterId;
                OnGeti_UpdateUserTechnicalDataRegisterId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserTechnicalDataRegisterId != value)
                {
                  Oni_UpdateUserTechnicalDataRegisterIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserTechnicalDataRegisterId");
                  _i_UpdateUserTechnicalDataRegisterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserTechnicalDataRegisterId");
                  Oni_UpdateUserTechnicalDataRegisterIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserTechnicalDataRegisterId;
        partial void OnGeti_UpdateUserTechnicalDataRegisterId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserTechnicalDataRegisterIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserTechnicalDataRegisterIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDateTechnicalDataRegister in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDateTechnicalDataRegister
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDateTechnicalDataRegister;
                OnGetd_InsertDateTechnicalDataRegister(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDateTechnicalDataRegister != value)
                {
                  Ond_InsertDateTechnicalDataRegisterChanging(ref value);
                  ReportPropertyChanging("d_InsertDateTechnicalDataRegister");
                  _d_InsertDateTechnicalDataRegister = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDateTechnicalDataRegister");
                  Ond_InsertDateTechnicalDataRegisterChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDateTechnicalDataRegister;
        partial void OnGetd_InsertDateTechnicalDataRegister(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateTechnicalDataRegisterChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateTechnicalDataRegisterChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDateTechnicalDataRegister in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDateTechnicalDataRegister
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDateTechnicalDataRegister;
                OnGetd_UpdateDateTechnicalDataRegister(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDateTechnicalDataRegister != value)
                {
                  Ond_UpdateDateTechnicalDataRegisterChanging(ref value);
                  ReportPropertyChanging("d_UpdateDateTechnicalDataRegister");
                  _d_UpdateDateTechnicalDataRegister = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDateTechnicalDataRegister");
                  Ond_UpdateDateTechnicalDataRegisterChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDateTechnicalDataRegister;
        partial void OnGetd_UpdateDateTechnicalDataRegister(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateTechnicalDataRegisterChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateTechnicalDataRegisterChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Component_ServiceComponent_v_ComponentId", "component")]
        public component component
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ServiceComponent_v_ComponentId", "component").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ServiceComponent_v_ComponentId", "component").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for component in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<component> componentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ServiceComponent_v_ComponentId", "component");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ServiceComponent_v_ComponentId", "component", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<component>("Sigesoft.Node.WinClient.DAL.Fk_Component_ServiceComponent_v_ComponentId", "component").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Service_ServiceComponent_v_ServiceId", "service")]
        public service service
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_ServiceComponent_v_ServiceId", "service").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_ServiceComponent_v_ServiceId", "service").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<service> serviceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_ServiceComponent_v_ServiceId", "service");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_ServiceComponent_v_ServiceId", "service", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Fk_Service_ServiceComponent_v_ServiceId", "service").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentfields in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponent_ServiceComponentComponentFields", "servicecomponentfields")]
        public EntityCollection<servicecomponentfields> servicecomponentfields
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicecomponentfields>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentComponentFields", "servicecomponentfields");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicecomponentfields>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentComponentFields", "servicecomponentfields", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentmultimedia in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponent_ServiceComponentMultimedia_v_ServiceCompone", "servicecomponentmultimedia")]
        public EntityCollection<servicecomponentmultimedia> servicecomponentmultimedia
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicecomponentmultimedia>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentMultimedia_v_ServiceCompone", "servicecomponentmultimedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicecomponentmultimedia>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentMultimedia_v_ServiceCompone", "servicecomponentmultimedia", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.servicecomponentfields in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ServiceComponentFieldsId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="servicecomponentfields")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class servicecomponentfields : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new servicecomponentfields object.
        /// </summary>
        /// <param name="v_ServiceComponentFieldsId">Initial value of v_ServiceComponentFieldsId.</param>
        public static servicecomponentfields Createservicecomponentfields(string v_ServiceComponentFieldsId)
        {
            servicecomponentfields servicecomponentfields = new servicecomponentfields();
            servicecomponentfields.v_ServiceComponentFieldsId = v_ServiceComponentFieldsId;
            return servicecomponentfields;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceComponentFieldsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceComponentFieldsId
        {
            get
            {
                string value = _v_ServiceComponentFieldsId;
                OnGetv_ServiceComponentFieldsId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceComponentFieldsId != value)
                {
                  Onv_ServiceComponentFieldsIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceComponentFieldsId");
                  _v_ServiceComponentFieldsId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceComponentFieldsId");
                  Onv_ServiceComponentFieldsIdChanged();
              }
            }
        }
        private string _v_ServiceComponentFieldsId;
        partial void OnGetv_ServiceComponentFieldsId(ref string value);
        partial void Onv_ServiceComponentFieldsIdChanging(ref string value);
        partial void Onv_ServiceComponentFieldsIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceComponentId
        {
            get
            {
                string value = _v_ServiceComponentId;
                OnGetv_ServiceComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceComponentId != value)
                {
                  Onv_ServiceComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceComponentId");
                  _v_ServiceComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceComponentId");
                  Onv_ServiceComponentIdChanged();
              }
            }
        }
        private string _v_ServiceComponentId;
        partial void OnGetv_ServiceComponentId(ref string value);
        partial void Onv_ServiceComponentIdChanging(ref string value);
        partial void Onv_ServiceComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentId
        {
            get
            {
                string value = _v_ComponentId;
                OnGetv_ComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentId != value)
                {
                  Onv_ComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentId");
                  _v_ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentId");
                  Onv_ComponentIdChanged();
              }
            }
        }
        private string _v_ComponentId;
        partial void OnGetv_ComponentId(ref string value);
        partial void Onv_ComponentIdChanging(ref string value);
        partial void Onv_ComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentFieldId
        {
            get
            {
                string value = _v_ComponentFieldId;
                OnGetv_ComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldId != value)
                {
                  Onv_ComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldId");
                  _v_ComponentFieldId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentFieldId");
                  Onv_ComponentFieldIdChanged();
              }
            }
        }
        private string _v_ComponentFieldId;
        partial void OnGetv_ComponentFieldId(ref string value);
        partial void Onv_ComponentFieldIdChanging(ref string value);
        partial void Onv_ComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for componentfields in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ComponentFields_ServiceComponentFields_v_MedicalExamFieldsId", "componentfields")]
        public componentfields componentfields
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfields>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFields_ServiceComponentFields_v_MedicalExamFieldsId", "componentfields").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfields>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFields_ServiceComponentFields_v_MedicalExamFieldsId", "componentfields").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for componentfields in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<componentfields> componentfieldsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfields>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFields_ServiceComponentFields_v_MedicalExamFieldsId", "componentfields");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<componentfields>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFields_ServiceComponentFields_v_MedicalExamFieldsId", "componentfields", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfields>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFields_ServiceComponentFields_v_MedicalExamFieldsId", "componentfields").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponent in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponent_ServiceComponentComponentFields", "servicecomponent")]
        public servicecomponent servicecomponent
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponent>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentComponentFields", "servicecomponent").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponent>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentComponentFields", "servicecomponent").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponent in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<servicecomponent> servicecomponentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponent>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentComponentFields", "servicecomponent");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<servicecomponent>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentComponentFields", "servicecomponent", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponent>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentComponentFields", "servicecomponent").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentfieldvalues in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponentFieldIds_ServiceComponentFieldValues", "servicecomponentfieldvalues")]
        public EntityCollection<servicecomponentfieldvalues> servicecomponentfieldvalues
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicecomponentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldIds_ServiceComponentFieldValues", "servicecomponentfieldvalues");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicecomponentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldIds_ServiceComponentFieldValues", "servicecomponentfieldvalues", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.servicecomponentfieldvalues in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ServiceComponentFieldValuesId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="servicecomponentfieldvalues")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class servicecomponentfieldvalues : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new servicecomponentfieldvalues object.
        /// </summary>
        /// <param name="v_ServiceComponentFieldValuesId">Initial value of v_ServiceComponentFieldValuesId.</param>
        public static servicecomponentfieldvalues Createservicecomponentfieldvalues(string v_ServiceComponentFieldValuesId)
        {
            servicecomponentfieldvalues servicecomponentfieldvalues = new servicecomponentfieldvalues();
            servicecomponentfieldvalues.v_ServiceComponentFieldValuesId = v_ServiceComponentFieldValuesId;
            return servicecomponentfieldvalues;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceComponentFieldValuesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceComponentFieldValuesId
        {
            get
            {
                string value = _v_ServiceComponentFieldValuesId;
                OnGetv_ServiceComponentFieldValuesId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceComponentFieldValuesId != value)
                {
                  Onv_ServiceComponentFieldValuesIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceComponentFieldValuesId");
                  _v_ServiceComponentFieldValuesId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceComponentFieldValuesId");
                  Onv_ServiceComponentFieldValuesIdChanged();
              }
            }
        }
        private string _v_ServiceComponentFieldValuesId;
        partial void OnGetv_ServiceComponentFieldValuesId(ref string value);
        partial void Onv_ServiceComponentFieldValuesIdChanging(ref string value);
        partial void Onv_ServiceComponentFieldValuesIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentFieldValuesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ComponentFieldValuesId
        {
            get
            {
                string value = _v_ComponentFieldValuesId;
                OnGetv_ComponentFieldValuesId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldValuesId != value)
                {
                  Onv_ComponentFieldValuesIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldValuesId");
                  _v_ComponentFieldValuesId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ComponentFieldValuesId");
                  Onv_ComponentFieldValuesIdChanged();
              }
            }
        }
        private string _v_ComponentFieldValuesId;
        partial void OnGetv_ComponentFieldValuesId(ref string value);
        partial void Onv_ComponentFieldValuesIdChanging(ref string value);
        partial void Onv_ComponentFieldValuesIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceComponentFieldsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceComponentFieldsId
        {
            get
            {
                string value = _v_ServiceComponentFieldsId;
                OnGetv_ServiceComponentFieldsId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceComponentFieldsId != value)
                {
                  Onv_ServiceComponentFieldsIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceComponentFieldsId");
                  _v_ServiceComponentFieldsId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceComponentFieldsId");
                  Onv_ServiceComponentFieldsIdChanged();
              }
            }
        }
        private string _v_ServiceComponentFieldsId;
        partial void OnGetv_ServiceComponentFieldsId(ref string value);
        partial void Onv_ServiceComponentFieldsIdChanging(ref string value);
        partial void Onv_ServiceComponentFieldsIdChanged();
    
        /// <summary>
        /// There are no comments for v_Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value1
        {
            get
            {
                string value = _v_Value1;
                OnGetv_Value1(ref value);
                return value;
            }
            set
            {
                if (_v_Value1 != value)
                {
                  Onv_Value1Changing(ref value);
                  ReportPropertyChanging("v_Value1");
                  _v_Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value1");
                  Onv_Value1Changed();
              }
            }
        }
        private string _v_Value1;
        partial void OnGetv_Value1(ref string value);
        partial void Onv_Value1Changing(ref string value);
        partial void Onv_Value1Changed();
    
        /// <summary>
        /// There are no comments for v_Value2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value2
        {
            get
            {
                string value = _v_Value2;
                OnGetv_Value2(ref value);
                return value;
            }
            set
            {
                if (_v_Value2 != value)
                {
                  Onv_Value2Changing(ref value);
                  ReportPropertyChanging("v_Value2");
                  _v_Value2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value2");
                  Onv_Value2Changed();
              }
            }
        }
        private string _v_Value2;
        partial void OnGetv_Value2(ref string value);
        partial void Onv_Value2Changing(ref string value);
        partial void Onv_Value2Changed();
    
        /// <summary>
        /// There are no comments for i_Index in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Index
        {
            get
            {
                global::System.Nullable<int> value = _i_Index;
                OnGeti_Index(ref value);
                return value;
            }
            set
            {
                if (_i_Index != value)
                {
                  Oni_IndexChanging(ref value);
                  ReportPropertyChanging("i_Index");
                  _i_Index = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Index");
                  Oni_IndexChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Index;
        partial void OnGeti_Index(ref global::System.Nullable<int> value);
        partial void Oni_IndexChanging(ref global::System.Nullable<int> value);
        partial void Oni_IndexChanged();
    
        /// <summary>
        /// There are no comments for i_Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Value1
        {
            get
            {
                global::System.Nullable<int> value = _i_Value1;
                OnGeti_Value1(ref value);
                return value;
            }
            set
            {
                if (_i_Value1 != value)
                {
                  Oni_Value1Changing(ref value);
                  ReportPropertyChanging("i_Value1");
                  _i_Value1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Value1");
                  Oni_Value1Changed();
              }
            }
        }
        private global::System.Nullable<int> _i_Value1;
        partial void OnGeti_Value1(ref global::System.Nullable<int> value);
        partial void Oni_Value1Changing(ref global::System.Nullable<int> value);
        partial void Oni_Value1Changed();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for componentfieldvalues in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ComponentFieldValues_ServiceComponentFieldValues_v_Component", "componentfieldvalues")]
        public componentfieldvalues componentfieldvalues
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFieldValues_ServiceComponentFieldValues_v_Component", "componentfieldvalues").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFieldValues_ServiceComponentFieldValues_v_Component", "componentfieldvalues").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for componentfieldvalues in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<componentfieldvalues> componentfieldvaluesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFieldValues_ServiceComponentFieldValues_v_Component", "componentfieldvalues");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFieldValues_ServiceComponentFieldValues_v_Component", "componentfieldvalues", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<componentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ComponentFieldValues_ServiceComponentFieldValues_v_Component", "componentfieldvalues").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentfields in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponentFieldIds_ServiceComponentFieldValues", "servicecomponentfields")]
        public servicecomponentfields servicecomponentfields
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponentfields>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldIds_ServiceComponentFieldValues", "servicecomponentfields").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponentfields>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldIds_ServiceComponentFieldValues", "servicecomponentfields").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentfields in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<servicecomponentfields> servicecomponentfieldsReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponentfields>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldIds_ServiceComponentFieldValues", "servicecomponentfields");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<servicecomponentfields>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldIds_ServiceComponentFieldValues", "servicecomponentfields", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponentfields>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldIds_ServiceComponentFieldValues", "servicecomponentfields").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentfieldvaluesmultimedia in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponentFieldValues_ServiceComponentFieldValuesMulti", "servicecomponentfieldvaluesmultimedia")]
        public EntityCollection<servicecomponentfieldvaluesmultimedia> servicecomponentfieldvaluesmultimedia
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<servicecomponentfieldvaluesmultimedia>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldValues_ServiceComponentFieldValuesMulti", "servicecomponentfieldvaluesmultimedia");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<servicecomponentfieldvaluesmultimedia>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldValues_ServiceComponentFieldValuesMulti", "servicecomponentfieldvaluesmultimedia", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.servicecomponentfieldvaluesmultimedia in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ServiceComponentFieldValuesMultimediaId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="servicecomponentfieldvaluesmultimedia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class servicecomponentfieldvaluesmultimedia : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new servicecomponentfieldvaluesmultimedia object.
        /// </summary>
        /// <param name="v_ServiceComponentFieldValuesMultimediaId">Initial value of v_ServiceComponentFieldValuesMultimediaId.</param>
        /// <param name="v_MultimediaFileId">Initial value of v_MultimediaFileId.</param>
        public static servicecomponentfieldvaluesmultimedia Createservicecomponentfieldvaluesmultimedia(string v_ServiceComponentFieldValuesMultimediaId, string v_MultimediaFileId)
        {
            servicecomponentfieldvaluesmultimedia servicecomponentfieldvaluesmultimedia = new servicecomponentfieldvaluesmultimedia();
            servicecomponentfieldvaluesmultimedia.v_ServiceComponentFieldValuesMultimediaId = v_ServiceComponentFieldValuesMultimediaId;
            servicecomponentfieldvaluesmultimedia.v_MultimediaFileId = v_MultimediaFileId;
            return servicecomponentfieldvaluesmultimedia;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceComponentFieldValuesMultimediaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceComponentFieldValuesMultimediaId
        {
            get
            {
                string value = _v_ServiceComponentFieldValuesMultimediaId;
                OnGetv_ServiceComponentFieldValuesMultimediaId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceComponentFieldValuesMultimediaId != value)
                {
                  Onv_ServiceComponentFieldValuesMultimediaIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceComponentFieldValuesMultimediaId");
                  _v_ServiceComponentFieldValuesMultimediaId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceComponentFieldValuesMultimediaId");
                  Onv_ServiceComponentFieldValuesMultimediaIdChanged();
              }
            }
        }
        private string _v_ServiceComponentFieldValuesMultimediaId;
        partial void OnGetv_ServiceComponentFieldValuesMultimediaId(ref string value);
        partial void Onv_ServiceComponentFieldValuesMultimediaIdChanging(ref string value);
        partial void Onv_ServiceComponentFieldValuesMultimediaIdChanged();
    
        /// <summary>
        /// There are no comments for v_MultimediaFileId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_MultimediaFileId
        {
            get
            {
                string value = _v_MultimediaFileId;
                OnGetv_MultimediaFileId(ref value);
                return value;
            }
            set
            {
                if (_v_MultimediaFileId != value)
                {
                  Onv_MultimediaFileIdChanging(ref value);
                  ReportPropertyChanging("v_MultimediaFileId");
                  _v_MultimediaFileId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_MultimediaFileId");
                  Onv_MultimediaFileIdChanged();
              }
            }
        }
        private string _v_MultimediaFileId;
        partial void OnGetv_MultimediaFileId(ref string value);
        partial void Onv_MultimediaFileIdChanging(ref string value);
        partial void Onv_MultimediaFileIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceComponentFieldValuesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceComponentFieldValuesId
        {
            get
            {
                string value = _v_ServiceComponentFieldValuesId;
                OnGetv_ServiceComponentFieldValuesId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceComponentFieldValuesId != value)
                {
                  Onv_ServiceComponentFieldValuesIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceComponentFieldValuesId");
                  _v_ServiceComponentFieldValuesId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceComponentFieldValuesId");
                  Onv_ServiceComponentFieldValuesIdChanged();
              }
            }
        }
        private string _v_ServiceComponentFieldValuesId;
        partial void OnGetv_ServiceComponentFieldValuesId(ref string value);
        partial void Onv_ServiceComponentFieldValuesIdChanging(ref string value);
        partial void Onv_ServiceComponentFieldValuesIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for multimediafile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_MultimediaFile_ServiceComponentFieldValuesMultimedia_v_Multi", "multimediafile")]
        public multimediafile multimediafile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentFieldValuesMultimedia_v_Multi", "multimediafile").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentFieldValuesMultimedia_v_Multi", "multimediafile").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for multimediafile in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<multimediafile> multimediafileReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentFieldValuesMultimedia_v_Multi", "multimediafile");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentFieldValuesMultimedia_v_Multi", "multimediafile", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentFieldValuesMultimedia_v_Multi", "multimediafile").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentfieldvalues in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponentFieldValues_ServiceComponentFieldValuesMulti", "servicecomponentfieldvalues")]
        public servicecomponentfieldvalues servicecomponentfieldvalues
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldValues_ServiceComponentFieldValuesMulti", "servicecomponentfieldvalues").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldValues_ServiceComponentFieldValuesMulti", "servicecomponentfieldvalues").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponentfieldvalues in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<servicecomponentfieldvalues> servicecomponentfieldvaluesReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldValues_ServiceComponentFieldValuesMulti", "servicecomponentfieldvalues");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<servicecomponentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldValues_ServiceComponentFieldValuesMulti", "servicecomponentfieldvalues", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponentfieldvalues>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponentFieldValues_ServiceComponentFieldValuesMulti", "servicecomponentfieldvalues").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.servicecomponentmultimedia in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ServiceComponentMultimediaId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="servicecomponentmultimedia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class servicecomponentmultimedia : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new servicecomponentmultimedia object.
        /// </summary>
        /// <param name="v_ServiceComponentMultimediaId">Initial value of v_ServiceComponentMultimediaId.</param>
        /// <param name="v_ServiceComponentId">Initial value of v_ServiceComponentId.</param>
        /// <param name="v_MultimediaFileId">Initial value of v_MultimediaFileId.</param>
        public static servicecomponentmultimedia Createservicecomponentmultimedia(string v_ServiceComponentMultimediaId, string v_ServiceComponentId, string v_MultimediaFileId)
        {
            servicecomponentmultimedia servicecomponentmultimedia = new servicecomponentmultimedia();
            servicecomponentmultimedia.v_ServiceComponentMultimediaId = v_ServiceComponentMultimediaId;
            servicecomponentmultimedia.v_ServiceComponentId = v_ServiceComponentId;
            servicecomponentmultimedia.v_MultimediaFileId = v_MultimediaFileId;
            return servicecomponentmultimedia;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceComponentMultimediaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceComponentMultimediaId
        {
            get
            {
                string value = _v_ServiceComponentMultimediaId;
                OnGetv_ServiceComponentMultimediaId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceComponentMultimediaId != value)
                {
                  Onv_ServiceComponentMultimediaIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceComponentMultimediaId");
                  _v_ServiceComponentMultimediaId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceComponentMultimediaId");
                  Onv_ServiceComponentMultimediaIdChanged();
              }
            }
        }
        private string _v_ServiceComponentMultimediaId;
        partial void OnGetv_ServiceComponentMultimediaId(ref string value);
        partial void Onv_ServiceComponentMultimediaIdChanging(ref string value);
        partial void Onv_ServiceComponentMultimediaIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceComponentId
        {
            get
            {
                string value = _v_ServiceComponentId;
                OnGetv_ServiceComponentId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceComponentId != value)
                {
                  Onv_ServiceComponentIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceComponentId");
                  _v_ServiceComponentId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceComponentId");
                  Onv_ServiceComponentIdChanged();
              }
            }
        }
        private string _v_ServiceComponentId;
        partial void OnGetv_ServiceComponentId(ref string value);
        partial void Onv_ServiceComponentIdChanging(ref string value);
        partial void Onv_ServiceComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_MultimediaFileId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_MultimediaFileId
        {
            get
            {
                string value = _v_MultimediaFileId;
                OnGetv_MultimediaFileId(ref value);
                return value;
            }
            set
            {
                if (_v_MultimediaFileId != value)
                {
                  Onv_MultimediaFileIdChanging(ref value);
                  ReportPropertyChanging("v_MultimediaFileId");
                  _v_MultimediaFileId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_MultimediaFileId");
                  Onv_MultimediaFileIdChanged();
              }
            }
        }
        private string _v_MultimediaFileId;
        partial void OnGetv_MultimediaFileId(ref string value);
        partial void Onv_MultimediaFileIdChanging(ref string value);
        partial void Onv_MultimediaFileIdChanged();
    
        /// <summary>
        /// There are no comments for v_Comment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Comment
        {
            get
            {
                string value = _v_Comment;
                OnGetv_Comment(ref value);
                return value;
            }
            set
            {
                if (_v_Comment != value)
                {
                  Onv_CommentChanging(ref value);
                  ReportPropertyChanging("v_Comment");
                  _v_Comment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Comment");
                  Onv_CommentChanged();
              }
            }
        }
        private string _v_Comment;
        partial void OnGetv_Comment(ref string value);
        partial void Onv_CommentChanging(ref string value);
        partial void Onv_CommentChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for multimediafile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_MultimediaFile_ServiceComponentMultimedia_v_MultimediaFileId", "multimediafile")]
        public multimediafile multimediafile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentMultimedia_v_MultimediaFileId", "multimediafile").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentMultimedia_v_MultimediaFileId", "multimediafile").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for multimediafile in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<multimediafile> multimediafileReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentMultimedia_v_MultimediaFileId", "multimediafile");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentMultimedia_v_MultimediaFileId", "multimediafile", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceComponentMultimedia_v_MultimediaFileId", "multimediafile").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponent in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_ServiceComponent_ServiceComponentMultimedia_v_ServiceCompone", "servicecomponent")]
        public servicecomponent servicecomponent
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponent>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentMultimedia_v_ServiceCompone", "servicecomponent").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponent>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentMultimedia_v_ServiceCompone", "servicecomponent").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for servicecomponent in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<servicecomponent> servicecomponentReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponent>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentMultimedia_v_ServiceCompone", "servicecomponent");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<servicecomponent>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentMultimedia_v_ServiceCompone", "servicecomponent", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<servicecomponent>("Sigesoft.Node.WinClient.DAL.Pk_ServiceComponent_ServiceComponentMultimedia_v_ServiceCompone", "servicecomponent").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.servicefact in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_ServiceFactId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="servicefact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class servicefact : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new servicefact object.
        /// </summary>
        /// <param name="i_ServiceFactId">Initial value of i_ServiceFactId.</param>
        public static servicefact Createservicefact(int i_ServiceFactId)
        {
            servicefact servicefact = new servicefact();
            servicefact.i_ServiceFactId = i_ServiceFactId;
            return servicefact;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_ServiceFactId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_ServiceFactId
        {
            get
            {
                int value = _i_ServiceFactId;
                OnGeti_ServiceFactId(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceFactId != value)
                {
                  Oni_ServiceFactIdChanging(ref value);
                  ReportPropertyChanging("i_ServiceFactId");
                  _i_ServiceFactId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceFactId");
                  Oni_ServiceFactIdChanged();
              }
            }
        }
        private int _i_ServiceFactId;
        partial void OnGeti_ServiceFactId(ref int value);
        partial void Oni_ServiceFactIdChanging(ref int value);
        partial void Oni_ServiceFactIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for cdoc_serie in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string cdoc_serie
        {
            get
            {
                string value = _cdoc_serie;
                OnGetcdoc_serie(ref value);
                return value;
            }
            set
            {
                if (_cdoc_serie != value)
                {
                  Oncdoc_serieChanging(ref value);
                  ReportPropertyChanging("cdoc_serie");
                  _cdoc_serie = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("cdoc_serie");
                  Oncdoc_serieChanged();
              }
            }
        }
        private string _cdoc_serie;
        partial void OnGetcdoc_serie(ref string value);
        partial void Oncdoc_serieChanging(ref string value);
        partial void Oncdoc_serieChanged();
    
        /// <summary>
        /// There are no comments for cdoc_nro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string cdoc_nro
        {
            get
            {
                string value = _cdoc_nro;
                OnGetcdoc_nro(ref value);
                return value;
            }
            set
            {
                if (_cdoc_nro != value)
                {
                  Oncdoc_nroChanging(ref value);
                  ReportPropertyChanging("cdoc_nro");
                  _cdoc_nro = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("cdoc_nro");
                  Oncdoc_nroChanged();
              }
            }
        }
        private string _cdoc_nro;
        partial void OnGetcdoc_nro(ref string value);
        partial void Oncdoc_nroChanging(ref string value);
        partial void Oncdoc_nroChanged();
    
        /// <summary>
        /// There are no comments for prec_venta in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> prec_venta
        {
            get
            {
                global::System.Nullable<float> value = _prec_venta;
                OnGetprec_venta(ref value);
                return value;
            }
            set
            {
                if (_prec_venta != value)
                {
                  Onprec_ventaChanging(ref value);
                  ReportPropertyChanging("prec_venta");
                  _prec_venta = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("prec_venta");
                  Onprec_ventaChanged();
              }
            }
        }
        private global::System.Nullable<float> _prec_venta;
        partial void OnGetprec_venta(ref global::System.Nullable<float> value);
        partial void Onprec_ventaChanging(ref global::System.Nullable<float> value);
        partial void Onprec_ventaChanged();
    
        /// <summary>
        /// There are no comments for cusu_crea in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string cusu_crea
        {
            get
            {
                string value = _cusu_crea;
                OnGetcusu_crea(ref value);
                return value;
            }
            set
            {
                if (_cusu_crea != value)
                {
                  Oncusu_creaChanging(ref value);
                  ReportPropertyChanging("cusu_crea");
                  _cusu_crea = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("cusu_crea");
                  Oncusu_creaChanged();
              }
            }
        }
        private string _cusu_crea;
        partial void OnGetcusu_crea(ref string value);
        partial void Oncusu_creaChanging(ref string value);
        partial void Oncusu_creaChanged();
    
        /// <summary>
        /// There are no comments for v_comment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_comment
        {
            get
            {
                string value = _v_comment;
                OnGetv_comment(ref value);
                return value;
            }
            set
            {
                if (_v_comment != value)
                {
                  Onv_commentChanging(ref value);
                  ReportPropertyChanging("v_comment");
                  _v_comment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_comment");
                  Onv_commentChanged();
              }
            }
        }
        private string _v_comment;
        partial void OnGetv_comment(ref string value);
        partial void Onv_commentChanging(ref string value);
        partial void Onv_commentChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.servicemultimedia in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ServiceMultimediaId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="servicemultimedia")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class servicemultimedia : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new servicemultimedia object.
        /// </summary>
        /// <param name="v_ServiceMultimediaId">Initial value of v_ServiceMultimediaId.</param>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        /// <param name="v_MultimediaFileId">Initial value of v_MultimediaFileId.</param>
        public static servicemultimedia Createservicemultimedia(string v_ServiceMultimediaId, string v_ServiceId, string v_MultimediaFileId)
        {
            servicemultimedia servicemultimedia = new servicemultimedia();
            servicemultimedia.v_ServiceMultimediaId = v_ServiceMultimediaId;
            servicemultimedia.v_ServiceId = v_ServiceId;
            servicemultimedia.v_MultimediaFileId = v_MultimediaFileId;
            return servicemultimedia;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceMultimediaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceMultimediaId
        {
            get
            {
                string value = _v_ServiceMultimediaId;
                OnGetv_ServiceMultimediaId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceMultimediaId != value)
                {
                  Onv_ServiceMultimediaIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceMultimediaId");
                  _v_ServiceMultimediaId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceMultimediaId");
                  Onv_ServiceMultimediaIdChanged();
              }
            }
        }
        private string _v_ServiceMultimediaId;
        partial void OnGetv_ServiceMultimediaId(ref string value);
        partial void Onv_ServiceMultimediaIdChanging(ref string value);
        partial void Onv_ServiceMultimediaIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_MultimediaFileId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_MultimediaFileId
        {
            get
            {
                string value = _v_MultimediaFileId;
                OnGetv_MultimediaFileId(ref value);
                return value;
            }
            set
            {
                if (_v_MultimediaFileId != value)
                {
                  Onv_MultimediaFileIdChanging(ref value);
                  ReportPropertyChanging("v_MultimediaFileId");
                  _v_MultimediaFileId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_MultimediaFileId");
                  Onv_MultimediaFileIdChanged();
              }
            }
        }
        private string _v_MultimediaFileId;
        partial void OnGetv_MultimediaFileId(ref string value);
        partial void Onv_MultimediaFileIdChanging(ref string value);
        partial void Onv_MultimediaFileIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for multimediafile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_MultimediaFile_ServiceMultimedia_v_MultimediaFileId", "multimediafile")]
        public multimediafile multimediafile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceMultimedia_v_MultimediaFileId", "multimediafile").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceMultimedia_v_MultimediaFileId", "multimediafile").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for multimediafile in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<multimediafile> multimediafileReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceMultimedia_v_MultimediaFileId", "multimediafile");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceMultimedia_v_MultimediaFileId", "multimediafile", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<multimediafile>("Sigesoft.Node.WinClient.DAL.Pk_MultimediaFile_ServiceMultimedia_v_MultimediaFileId", "multimediafile").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Pk_Service_ServiceMultimedia_v_ServiceId", "service")]
        public service service
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Pk_Service_ServiceMultimedia_v_ServiceId", "service").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Pk_Service_ServiceMultimedia_v_ServiceId", "service").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for service in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<service> serviceReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Pk_Service_ServiceMultimedia_v_ServiceId", "service");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Pk_Service_ServiceMultimedia_v_ServiceId", "service", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<service>("Sigesoft.Node.WinClient.DAL.Pk_Service_ServiceMultimedia_v_ServiceId", "service").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.serviceorder in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ServiceOrderId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="serviceorder")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class serviceorder : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new serviceorder object.
        /// </summary>
        /// <param name="v_ServiceOrderId">Initial value of v_ServiceOrderId.</param>
        public static serviceorder Createserviceorder(string v_ServiceOrderId)
        {
            serviceorder serviceorder = new serviceorder();
            serviceorder.v_ServiceOrderId = v_ServiceOrderId;
            return serviceorder;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceOrderId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceOrderId
        {
            get
            {
                string value = _v_ServiceOrderId;
                OnGetv_ServiceOrderId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceOrderId != value)
                {
                  Onv_ServiceOrderIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceOrderId");
                  _v_ServiceOrderId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceOrderId");
                  Onv_ServiceOrderIdChanged();
              }
            }
        }
        private string _v_ServiceOrderId;
        partial void OnGetv_ServiceOrderId(ref string value);
        partial void Onv_ServiceOrderIdChanging(ref string value);
        partial void Onv_ServiceOrderIdChanged();
    
        /// <summary>
        /// There are no comments for v_CustomServiceOrderId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CustomServiceOrderId
        {
            get
            {
                string value = _v_CustomServiceOrderId;
                OnGetv_CustomServiceOrderId(ref value);
                return value;
            }
            set
            {
                if (_v_CustomServiceOrderId != value)
                {
                  Onv_CustomServiceOrderIdChanging(ref value);
                  ReportPropertyChanging("v_CustomServiceOrderId");
                  _v_CustomServiceOrderId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CustomServiceOrderId");
                  Onv_CustomServiceOrderIdChanged();
              }
            }
        }
        private string _v_CustomServiceOrderId;
        partial void OnGetv_CustomServiceOrderId(ref string value);
        partial void Onv_CustomServiceOrderIdChanging(ref string value);
        partial void Onv_CustomServiceOrderIdChanged();
    
        /// <summary>
        /// There are no comments for v_Description in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Description
        {
            get
            {
                string value = _v_Description;
                OnGetv_Description(ref value);
                return value;
            }
            set
            {
                if (_v_Description != value)
                {
                  Onv_DescriptionChanging(ref value);
                  ReportPropertyChanging("v_Description");
                  _v_Description = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Description");
                  Onv_DescriptionChanged();
              }
            }
        }
        private string _v_Description;
        partial void OnGetv_Description(ref string value);
        partial void Onv_DescriptionChanging(ref string value);
        partial void Onv_DescriptionChanged();
    
        /// <summary>
        /// There are no comments for v_Comentary in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Comentary
        {
            get
            {
                string value = _v_Comentary;
                OnGetv_Comentary(ref value);
                return value;
            }
            set
            {
                if (_v_Comentary != value)
                {
                  Onv_ComentaryChanging(ref value);
                  ReportPropertyChanging("v_Comentary");
                  _v_Comentary = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Comentary");
                  Onv_ComentaryChanged();
              }
            }
        }
        private string _v_Comentary;
        partial void OnGetv_Comentary(ref string value);
        partial void Onv_ComentaryChanging(ref string value);
        partial void Onv_ComentaryChanged();
    
        /// <summary>
        /// There are no comments for i_NumberOfWorker in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NumberOfWorker
        {
            get
            {
                global::System.Nullable<int> value = _i_NumberOfWorker;
                OnGeti_NumberOfWorker(ref value);
                return value;
            }
            set
            {
                if (_i_NumberOfWorker != value)
                {
                  Oni_NumberOfWorkerChanging(ref value);
                  ReportPropertyChanging("i_NumberOfWorker");
                  _i_NumberOfWorker = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NumberOfWorker");
                  Oni_NumberOfWorkerChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NumberOfWorker;
        partial void OnGeti_NumberOfWorker(ref global::System.Nullable<int> value);
        partial void Oni_NumberOfWorkerChanging(ref global::System.Nullable<int> value);
        partial void Oni_NumberOfWorkerChanged();
    
        /// <summary>
        /// There are no comments for r_TotalCost in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_TotalCost
        {
            get
            {
                global::System.Nullable<float> value = _r_TotalCost;
                OnGetr_TotalCost(ref value);
                return value;
            }
            set
            {
                if (_r_TotalCost != value)
                {
                  Onr_TotalCostChanging(ref value);
                  ReportPropertyChanging("r_TotalCost");
                  _r_TotalCost = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_TotalCost");
                  Onr_TotalCostChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_TotalCost;
        partial void OnGetr_TotalCost(ref global::System.Nullable<float> value);
        partial void Onr_TotalCostChanging(ref global::System.Nullable<float> value);
        partial void Onr_TotalCostChanged();
    
        /// <summary>
        /// There are no comments for d_DeliveryDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_DeliveryDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_DeliveryDate;
                OnGetd_DeliveryDate(ref value);
                return value;
            }
            set
            {
                if (_d_DeliveryDate != value)
                {
                  Ond_DeliveryDateChanging(ref value);
                  ReportPropertyChanging("d_DeliveryDate");
                  _d_DeliveryDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_DeliveryDate");
                  Ond_DeliveryDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_DeliveryDate;
        partial void OnGetd_DeliveryDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DeliveryDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_DeliveryDateChanged();
    
        /// <summary>
        /// There are no comments for i_ServiceOrderStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ServiceOrderStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_ServiceOrderStatusId;
                OnGeti_ServiceOrderStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceOrderStatusId != value)
                {
                  Oni_ServiceOrderStatusIdChanging(ref value);
                  ReportPropertyChanging("i_ServiceOrderStatusId");
                  _i_ServiceOrderStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceOrderStatusId");
                  Oni_ServiceOrderStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ServiceOrderStatusId;
        partial void OnGeti_ServiceOrderStatusId(ref global::System.Nullable<int> value);
        partial void Oni_ServiceOrderStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ServiceOrderStatusIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for serviceorderdetail in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ServiceOrder_ServiceOrderDetail_v_ServiceOrderId", "serviceorderdetail")]
        public EntityCollection<serviceorderdetail> serviceorderdetail
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<serviceorderdetail>("Sigesoft.Node.WinClient.DAL.Fk_ServiceOrder_ServiceOrderDetail_v_ServiceOrderId", "serviceorderdetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<serviceorderdetail>("Sigesoft.Node.WinClient.DAL.Fk_ServiceOrder_ServiceOrderDetail_v_ServiceOrderId", "serviceorderdetail", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.serviceorderdetail in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_ServiceOrderDetailId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="serviceorderdetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class serviceorderdetail : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new serviceorderdetail object.
        /// </summary>
        /// <param name="v_ServiceOrderDetailId">Initial value of v_ServiceOrderDetailId.</param>
        public static serviceorderdetail Createserviceorderdetail(string v_ServiceOrderDetailId)
        {
            serviceorderdetail serviceorderdetail = new serviceorderdetail();
            serviceorderdetail.v_ServiceOrderDetailId = v_ServiceOrderDetailId;
            return serviceorderdetail;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceOrderDetailId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceOrderDetailId
        {
            get
            {
                string value = _v_ServiceOrderDetailId;
                OnGetv_ServiceOrderDetailId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceOrderDetailId != value)
                {
                  Onv_ServiceOrderDetailIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceOrderDetailId");
                  _v_ServiceOrderDetailId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceOrderDetailId");
                  Onv_ServiceOrderDetailIdChanged();
              }
            }
        }
        private string _v_ServiceOrderDetailId;
        partial void OnGetv_ServiceOrderDetailId(ref string value);
        partial void Onv_ServiceOrderDetailIdChanging(ref string value);
        partial void Onv_ServiceOrderDetailIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceOrderId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceOrderId
        {
            get
            {
                string value = _v_ServiceOrderId;
                OnGetv_ServiceOrderId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceOrderId != value)
                {
                  Onv_ServiceOrderIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceOrderId");
                  _v_ServiceOrderId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceOrderId");
                  Onv_ServiceOrderIdChanged();
              }
            }
        }
        private string _v_ServiceOrderId;
        partial void OnGetv_ServiceOrderId(ref string value);
        partial void Onv_ServiceOrderIdChanging(ref string value);
        partial void Onv_ServiceOrderIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProtocolId
        {
            get
            {
                string value = _v_ProtocolId;
                OnGetv_ProtocolId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolId != value)
                {
                  Onv_ProtocolIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolId");
                  _v_ProtocolId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProtocolId");
                  Onv_ProtocolIdChanged();
              }
            }
        }
        private string _v_ProtocolId;
        partial void OnGetv_ProtocolId(ref string value);
        partial void Onv_ProtocolIdChanging(ref string value);
        partial void Onv_ProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for protocol in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Protocol_ServiceOrderDetail_v_ProtocolId", "protocol")]
        public protocol protocol
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ServiceOrderDetail_v_ProtocolId", "protocol").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ServiceOrderDetail_v_ProtocolId", "protocol").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for protocol in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<protocol> protocolReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ServiceOrderDetail_v_ProtocolId", "protocol");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ServiceOrderDetail_v_ProtocolId", "protocol", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<protocol>("Sigesoft.Node.WinClient.DAL.Fk_Protocol_ServiceOrderDetail_v_ProtocolId", "protocol").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for serviceorder in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ServiceOrder_ServiceOrderDetail_v_ServiceOrderId", "serviceorder")]
        public serviceorder serviceorder
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<serviceorder>("Sigesoft.Node.WinClient.DAL.Fk_ServiceOrder_ServiceOrderDetail_v_ServiceOrderId", "serviceorder").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<serviceorder>("Sigesoft.Node.WinClient.DAL.Fk_ServiceOrder_ServiceOrderDetail_v_ServiceOrderId", "serviceorder").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for serviceorder in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<serviceorder> serviceorderReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<serviceorder>("Sigesoft.Node.WinClient.DAL.Fk_ServiceOrder_ServiceOrderDetail_v_ServiceOrderId", "serviceorder");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<serviceorder>("Sigesoft.Node.WinClient.DAL.Fk_ServiceOrder_ServiceOrderDetail_v_ServiceOrderId", "serviceorder", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<serviceorder>("Sigesoft.Node.WinClient.DAL.Fk_ServiceOrder_ServiceOrderDetail_v_ServiceOrderId", "serviceorder").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.servicespivot in the schema.
    /// </summary>
    /// <KeyProperties>
    /// servicespivot1
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="servicespivot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class servicespivot : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new servicespivot object.
        /// </summary>
        /// <param name="servicespivot1">Initial value of servicespivot1.</param>
        public static servicespivot Createservicespivot(int servicespivot1)
        {
            servicespivot servicespivot = new servicespivot();
            servicespivot.servicespivot1 = servicespivot1;
            return servicespivot;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for servicespivot1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int servicespivot1
        {
            get
            {
                int value = _servicespivot1;
                OnGetservicespivot1(ref value);
                return value;
            }
            set
            {
                if (_servicespivot1 != value)
                {
                  Onservicespivot1Changing(ref value);
                  ReportPropertyChanging("servicespivot1");
                  _servicespivot1 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("servicespivot1");
                  Onservicespivot1Changed();
              }
            }
        }
        private int _servicespivot1;
        partial void OnGetservicespivot1(ref int value);
        partial void Onservicespivot1Changing(ref int value);
        partial void Onservicespivot1Changed();
    
        /// <summary>
        /// There are no comments for ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ServiceId
        {
            get
            {
                string value = _ServiceId;
                OnGetServiceId(ref value);
                return value;
            }
            set
            {
                if (_ServiceId != value)
                {
                  OnServiceIdChanging(ref value);
                  ReportPropertyChanging("ServiceId");
                  _ServiceId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ServiceId");
                  OnServiceIdChanged();
              }
            }
        }
        private string _ServiceId;
        partial void OnGetServiceId(ref string value);
        partial void OnServiceIdChanging(ref string value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// There are no comments for ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ProtocolId
        {
            get
            {
                string value = _ProtocolId;
                OnGetProtocolId(ref value);
                return value;
            }
            set
            {
                if (_ProtocolId != value)
                {
                  OnProtocolIdChanging(ref value);
                  ReportPropertyChanging("ProtocolId");
                  _ProtocolId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProtocolId");
                  OnProtocolIdChanged();
              }
            }
        }
        private string _ProtocolId;
        partial void OnGetProtocolId(ref string value);
        partial void OnProtocolIdChanging(ref string value);
        partial void OnProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentId
        {
            get
            {
                string value = _ComponentId;
                OnGetComponentId(ref value);
                return value;
            }
            set
            {
                if (_ComponentId != value)
                {
                  OnComponentIdChanging(ref value);
                  ReportPropertyChanging("ComponentId");
                  _ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentId");
                  OnComponentIdChanged();
              }
            }
        }
        private string _ComponentId;
        partial void OnGetComponentId(ref string value);
        partial void OnComponentIdChanging(ref string value);
        partial void OnComponentIdChanged();
    
        /// <summary>
        /// There are no comments for Component in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Component
        {
            get
            {
                string value = _Component;
                OnGetComponent(ref value);
                return value;
            }
            set
            {
                if (_Component != value)
                {
                  OnComponentChanging(ref value);
                  ReportPropertyChanging("Component");
                  _Component = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Component");
                  OnComponentChanged();
              }
            }
        }
        private string _Component;
        partial void OnGetComponent(ref string value);
        partial void OnComponentChanging(ref string value);
        partial void OnComponentChanged();
    
        /// <summary>
        /// There are no comments for PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string PersonId
        {
            get
            {
                string value = _PersonId;
                OnGetPersonId(ref value);
                return value;
            }
            set
            {
                if (_PersonId != value)
                {
                  OnPersonIdChanging(ref value);
                  ReportPropertyChanging("PersonId");
                  _PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PersonId");
                  OnPersonIdChanged();
              }
            }
        }
        private string _PersonId;
        partial void OnGetPersonId(ref string value);
        partial void OnPersonIdChanging(ref string value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// There are no comments for ServiceComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ServiceComponentId
        {
            get
            {
                string value = _ServiceComponentId;
                OnGetServiceComponentId(ref value);
                return value;
            }
            set
            {
                if (_ServiceComponentId != value)
                {
                  OnServiceComponentIdChanging(ref value);
                  ReportPropertyChanging("ServiceComponentId");
                  _ServiceComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ServiceComponentId");
                  OnServiceComponentIdChanged();
              }
            }
        }
        private string _ServiceComponentId;
        partial void OnGetServiceComponentId(ref string value);
        partial void OnServiceComponentIdChanging(ref string value);
        partial void OnServiceComponentIdChanged();
    
        /// <summary>
        /// There are no comments for DNI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DNI
        {
            get
            {
                string value = _DNI;
                OnGetDNI(ref value);
                return value;
            }
            set
            {
                if (_DNI != value)
                {
                  OnDNIChanging(ref value);
                  ReportPropertyChanging("DNI");
                  _DNI = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DNI");
                  OnDNIChanged();
              }
            }
        }
        private string _DNI;
        partial void OnGetDNI(ref string value);
        partial void OnDNIChanging(ref string value);
        partial void OnDNIChanged();
    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Nombre
        {
            get
            {
                string value = _Nombre;
                OnGetNombre(ref value);
                return value;
            }
            set
            {
                if (_Nombre != value)
                {
                  OnNombreChanging(ref value);
                  ReportPropertyChanging("Nombre");
                  _Nombre = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Nombre");
                  OnNombreChanged();
              }
            }
        }
        private string _Nombre;
        partial void OnGetNombre(ref string value);
        partial void OnNombreChanging(ref string value);
        partial void OnNombreChanged();
    
        /// <summary>
        /// There are no comments for ApellidoP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoP
        {
            get
            {
                string value = _ApellidoP;
                OnGetApellidoP(ref value);
                return value;
            }
            set
            {
                if (_ApellidoP != value)
                {
                  OnApellidoPChanging(ref value);
                  ReportPropertyChanging("ApellidoP");
                  _ApellidoP = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoP");
                  OnApellidoPChanged();
              }
            }
        }
        private string _ApellidoP;
        partial void OnGetApellidoP(ref string value);
        partial void OnApellidoPChanging(ref string value);
        partial void OnApellidoPChanged();
    
        /// <summary>
        /// There are no comments for ApellidoM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoM
        {
            get
            {
                string value = _ApellidoM;
                OnGetApellidoM(ref value);
                return value;
            }
            set
            {
                if (_ApellidoM != value)
                {
                  OnApellidoMChanging(ref value);
                  ReportPropertyChanging("ApellidoM");
                  _ApellidoM = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoM");
                  OnApellidoMChanged();
              }
            }
        }
        private string _ApellidoM;
        partial void OnGetApellidoM(ref string value);
        partial void OnApellidoMChanging(ref string value);
        partial void OnApellidoMChanged();
    
        /// <summary>
        /// There are no comments for NombresApellidos in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string NombresApellidos
        {
            get
            {
                string value = _NombresApellidos;
                OnGetNombresApellidos(ref value);
                return value;
            }
            set
            {
                if (_NombresApellidos != value)
                {
                  OnNombresApellidosChanging(ref value);
                  ReportPropertyChanging("NombresApellidos");
                  _NombresApellidos = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NombresApellidos");
                  OnNombresApellidosChanged();
              }
            }
        }
        private string _NombresApellidos;
        partial void OnGetNombresApellidos(ref string value);
        partial void OnNombresApellidosChanging(ref string value);
        partial void OnNombresApellidosChanged();
    
        /// <summary>
        /// There are no comments for Correo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Correo
        {
            get
            {
                string value = _Correo;
                OnGetCorreo(ref value);
                return value;
            }
            set
            {
                if (_Correo != value)
                {
                  OnCorreoChanging(ref value);
                  ReportPropertyChanging("Correo");
                  _Correo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Correo");
                  OnCorreoChanged();
              }
            }
        }
        private string _Correo;
        partial void OnGetCorreo(ref string value);
        partial void OnCorreoChanging(ref string value);
        partial void OnCorreoChanged();
    
        /// <summary>
        /// There are no comments for Telefono in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Telefono
        {
            get
            {
                string value = _Telefono;
                OnGetTelefono(ref value);
                return value;
            }
            set
            {
                if (_Telefono != value)
                {
                  OnTelefonoChanging(ref value);
                  ReportPropertyChanging("Telefono");
                  _Telefono = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Telefono");
                  OnTelefonoChanged();
              }
            }
        }
        private string _Telefono;
        partial void OnGetTelefono(ref string value);
        partial void OnTelefonoChanging(ref string value);
        partial void OnTelefonoChanged();
    
        /// <summary>
        /// There are no comments for Direccion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Direccion
        {
            get
            {
                string value = _Direccion;
                OnGetDireccion(ref value);
                return value;
            }
            set
            {
                if (_Direccion != value)
                {
                  OnDireccionChanging(ref value);
                  ReportPropertyChanging("Direccion");
                  _Direccion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Direccion");
                  OnDireccionChanged();
              }
            }
        }
        private string _Direccion;
        partial void OnGetDireccion(ref string value);
        partial void OnDireccionChanging(ref string value);
        partial void OnDireccionChanged();
    
        /// <summary>
        /// There are no comments for OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OrganizationId
        {
            get
            {
                string value = _OrganizationId;
                OnGetOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_OrganizationId != value)
                {
                  OnOrganizationIdChanging(ref value);
                  ReportPropertyChanging("OrganizationId");
                  _OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrganizationId");
                  OnOrganizationIdChanged();
              }
            }
        }
        private string _OrganizationId;
        partial void OnGetOrganizationId(ref string value);
        partial void OnOrganizationIdChanging(ref string value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for EmpresaFacturacion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmpresaFacturacion
        {
            get
            {
                string value = _EmpresaFacturacion;
                OnGetEmpresaFacturacion(ref value);
                return value;
            }
            set
            {
                if (_EmpresaFacturacion != value)
                {
                  OnEmpresaFacturacionChanging(ref value);
                  ReportPropertyChanging("EmpresaFacturacion");
                  _EmpresaFacturacion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmpresaFacturacion");
                  OnEmpresaFacturacionChanged();
              }
            }
        }
        private string _EmpresaFacturacion;
        partial void OnGetEmpresaFacturacion(ref string value);
        partial void OnEmpresaFacturacionChanging(ref string value);
        partial void OnEmpresaFacturacionChanged();
    
        /// <summary>
        /// There are no comments for EmpresaPrincipalID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmpresaPrincipalID
        {
            get
            {
                string value = _EmpresaPrincipalID;
                OnGetEmpresaPrincipalID(ref value);
                return value;
            }
            set
            {
                if (_EmpresaPrincipalID != value)
                {
                  OnEmpresaPrincipalIDChanging(ref value);
                  ReportPropertyChanging("EmpresaPrincipalID");
                  _EmpresaPrincipalID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmpresaPrincipalID");
                  OnEmpresaPrincipalIDChanged();
              }
            }
        }
        private string _EmpresaPrincipalID;
        partial void OnGetEmpresaPrincipalID(ref string value);
        partial void OnEmpresaPrincipalIDChanging(ref string value);
        partial void OnEmpresaPrincipalIDChanged();
    
        /// <summary>
        /// There are no comments for EmpresaPrincipal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmpresaPrincipal
        {
            get
            {
                string value = _EmpresaPrincipal;
                OnGetEmpresaPrincipal(ref value);
                return value;
            }
            set
            {
                if (_EmpresaPrincipal != value)
                {
                  OnEmpresaPrincipalChanging(ref value);
                  ReportPropertyChanging("EmpresaPrincipal");
                  _EmpresaPrincipal = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmpresaPrincipal");
                  OnEmpresaPrincipalChanged();
              }
            }
        }
        private string _EmpresaPrincipal;
        partial void OnGetEmpresaPrincipal(ref string value);
        partial void OnEmpresaPrincipalChanging(ref string value);
        partial void OnEmpresaPrincipalChanged();
    
        /// <summary>
        /// There are no comments for Puesto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Puesto
        {
            get
            {
                string value = _Puesto;
                OnGetPuesto(ref value);
                return value;
            }
            set
            {
                if (_Puesto != value)
                {
                  OnPuestoChanging(ref value);
                  ReportPropertyChanging("Puesto");
                  _Puesto = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Puesto");
                  OnPuestoChanged();
              }
            }
        }
        private string _Puesto;
        partial void OnGetPuesto(ref string value);
        partial void OnPuestoChanging(ref string value);
        partial void OnPuestoChanged();
    
        /// <summary>
        /// There are no comments for FechaRegistro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> FechaRegistro
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _FechaRegistro;
                OnGetFechaRegistro(ref value);
                return value;
            }
            set
            {
                if (_FechaRegistro != value)
                {
                  OnFechaRegistroChanging(ref value);
                  ReportPropertyChanging("FechaRegistro");
                  _FechaRegistro = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaRegistro");
                  OnFechaRegistroChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _FechaRegistro;
        partial void OnGetFechaRegistro(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaRegistroChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaRegistroChanged();
    
        /// <summary>
        /// There are no comments for FechaServicio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> FechaServicio
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _FechaServicio;
                OnGetFechaServicio(ref value);
                return value;
            }
            set
            {
                if (_FechaServicio != value)
                {
                  OnFechaServicioChanging(ref value);
                  ReportPropertyChanging("FechaServicio");
                  _FechaServicio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaServicio");
                  OnFechaServicioChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _FechaServicio;
        partial void OnGetFechaServicio(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaServicioChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaServicioChanged();
    
        /// <summary>
        /// There are no comments for Eliminado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Eliminado
        {
            get
            {
                global::System.Nullable<int> value = _Eliminado;
                OnGetEliminado(ref value);
                return value;
            }
            set
            {
                if (_Eliminado != value)
                {
                  OnEliminadoChanging(ref value);
                  ReportPropertyChanging("Eliminado");
                  _Eliminado = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Eliminado");
                  OnEliminadoChanged();
              }
            }
        }
        private global::System.Nullable<int> _Eliminado;
        partial void OnGetEliminado(ref global::System.Nullable<int> value);
        partial void OnEliminadoChanging(ref global::System.Nullable<int> value);
        partial void OnEliminadoChanged();
    
        /// <summary>
        /// There are no comments for EmpresaEmpleadora in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmpresaEmpleadora
        {
            get
            {
                string value = _EmpresaEmpleadora;
                OnGetEmpresaEmpleadora(ref value);
                return value;
            }
            set
            {
                if (_EmpresaEmpleadora != value)
                {
                  OnEmpresaEmpleadoraChanging(ref value);
                  ReportPropertyChanging("EmpresaEmpleadora");
                  _EmpresaEmpleadora = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmpresaEmpleadora");
                  OnEmpresaEmpleadoraChanged();
              }
            }
        }
        private string _EmpresaEmpleadora;
        partial void OnGetEmpresaEmpleadora(ref string value);
        partial void OnEmpresaEmpleadoraChanging(ref string value);
        partial void OnEmpresaEmpleadoraChanged();
    
        /// <summary>
        /// There are no comments for TipoEmpresa in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> TipoEmpresa
        {
            get
            {
                global::System.Nullable<int> value = _TipoEmpresa;
                OnGetTipoEmpresa(ref value);
                return value;
            }
            set
            {
                if (_TipoEmpresa != value)
                {
                  OnTipoEmpresaChanging(ref value);
                  ReportPropertyChanging("TipoEmpresa");
                  _TipoEmpresa = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TipoEmpresa");
                  OnTipoEmpresaChanged();
              }
            }
        }
        private global::System.Nullable<int> _TipoEmpresa;
        partial void OnGetTipoEmpresa(ref global::System.Nullable<int> value);
        partial void OnTipoEmpresaChanging(ref global::System.Nullable<int> value);
        partial void OnTipoEmpresaChanged();
    
        /// <summary>
        /// There are no comments for Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sede
        {
            get
            {
                string value = _Sede;
                OnGetSede(ref value);
                return value;
            }
            set
            {
                if (_Sede != value)
                {
                  OnSedeChanging(ref value);
                  ReportPropertyChanging("Sede");
                  _Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sede");
                  OnSedeChanged();
              }
            }
        }
        private string _Sede;
        partial void OnGetSede(ref string value);
        partial void OnSedeChanging(ref string value);
        partial void OnSedeChanged();
    
        /// <summary>
        /// There are no comments for Usuario in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Usuario
        {
            get
            {
                string value = _Usuario;
                OnGetUsuario(ref value);
                return value;
            }
            set
            {
                if (_Usuario != value)
                {
                  OnUsuarioChanging(ref value);
                  ReportPropertyChanging("Usuario");
                  _Usuario = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Usuario");
                  OnUsuarioChanged();
              }
            }
        }
        private string _Usuario;
        partial void OnGetUsuario(ref string value);
        partial void OnUsuarioChanging(ref string value);
        partial void OnUsuarioChanged();
    
        /// <summary>
        /// There are no comments for CorreoEnviado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> CorreoEnviado
        {
            get
            {
                global::System.Nullable<int> value = _CorreoEnviado;
                OnGetCorreoEnviado(ref value);
                return value;
            }
            set
            {
                if (_CorreoEnviado != value)
                {
                  OnCorreoEnviadoChanging(ref value);
                  ReportPropertyChanging("CorreoEnviado");
                  _CorreoEnviado = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CorreoEnviado");
                  OnCorreoEnviadoChanged();
              }
            }
        }
        private global::System.Nullable<int> _CorreoEnviado;
        partial void OnGetCorreoEnviado(ref global::System.Nullable<int> value);
        partial void OnCorreoEnviadoChanging(ref global::System.Nullable<int> value);
        partial void OnCorreoEnviadoChanged();
    
        /// <summary>
        /// There are no comments for Encuesta in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Encuesta
        {
            get
            {
                global::System.Nullable<int> value = _Encuesta;
                OnGetEncuesta(ref value);
                return value;
            }
            set
            {
                if (_Encuesta != value)
                {
                  OnEncuestaChanging(ref value);
                  ReportPropertyChanging("Encuesta");
                  _Encuesta = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Encuesta");
                  OnEncuestaChanged();
              }
            }
        }
        private global::System.Nullable<int> _Encuesta;
        partial void OnGetEncuesta(ref global::System.Nullable<int> value);
        partial void OnEncuestaChanging(ref global::System.Nullable<int> value);
        partial void OnEncuestaChanged();
    
        /// <summary>
        /// There are no comments for Laboratorio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Laboratorio
        {
            get
            {
                global::System.Nullable<int> value = _Laboratorio;
                OnGetLaboratorio(ref value);
                return value;
            }
            set
            {
                if (_Laboratorio != value)
                {
                  OnLaboratorioChanging(ref value);
                  ReportPropertyChanging("Laboratorio");
                  _Laboratorio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Laboratorio");
                  OnLaboratorioChanged();
              }
            }
        }
        private global::System.Nullable<int> _Laboratorio;
        partial void OnGetLaboratorio(ref global::System.Nullable<int> value);
        partial void OnLaboratorioChanging(ref global::System.Nullable<int> value);
        partial void OnLaboratorioChanged();
    
        /// <summary>
        /// There are no comments for Profesion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Profesion
        {
            get
            {
                global::System.Nullable<int> value = _Profesion;
                OnGetProfesion(ref value);
                return value;
            }
            set
            {
                if (_Profesion != value)
                {
                  OnProfesionChanging(ref value);
                  ReportPropertyChanging("Profesion");
                  _Profesion = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Profesion");
                  OnProfesionChanged();
              }
            }
        }
        private global::System.Nullable<int> _Profesion;
        partial void OnGetProfesion(ref global::System.Nullable<int> value);
        partial void OnProfesionChanging(ref global::System.Nullable<int> value);
        partial void OnProfesionChanged();
    
        /// <summary>
        /// There are no comments for Es_Personal_salud in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Es_Personal_salud
        {
            get
            {
                global::System.Nullable<int> value = _Es_Personal_salud;
                OnGetEs_Personal_salud(ref value);
                return value;
            }
            set
            {
                if (_Es_Personal_salud != value)
                {
                  OnEs_Personal_saludChanging(ref value);
                  ReportPropertyChanging("Es_Personal_salud");
                  _Es_Personal_salud = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Es_Personal_salud");
                  OnEs_Personal_saludChanged();
              }
            }
        }
        private global::System.Nullable<int> _Es_Personal_salud;
        partial void OnGetEs_Personal_salud(ref global::System.Nullable<int> value);
        partial void OnEs_Personal_saludChanging(ref global::System.Nullable<int> value);
        partial void OnEs_Personal_saludChanged();
    
        /// <summary>
        /// There are no comments for Sintomas in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Sintomas
        {
            get
            {
                global::System.Nullable<int> value = _Sintomas;
                OnGetSintomas(ref value);
                return value;
            }
            set
            {
                if (_Sintomas != value)
                {
                  OnSintomasChanging(ref value);
                  ReportPropertyChanging("Sintomas");
                  _Sintomas = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Sintomas");
                  OnSintomasChanged();
              }
            }
        }
        private global::System.Nullable<int> _Sintomas;
        partial void OnGetSintomas(ref global::System.Nullable<int> value);
        partial void OnSintomasChanging(ref global::System.Nullable<int> value);
        partial void OnSintomasChanged();
    
        /// <summary>
        /// There are no comments for Abdominal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Abdominal
        {
            get
            {
                global::System.Nullable<bool> value = _Abdominal;
                OnGetAbdominal(ref value);
                return value;
            }
            set
            {
                if (_Abdominal != value)
                {
                  OnAbdominalChanging(ref value);
                  ReportPropertyChanging("Abdominal");
                  _Abdominal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Abdominal");
                  OnAbdominalChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Abdominal;
        partial void OnGetAbdominal(ref global::System.Nullable<bool> value);
        partial void OnAbdominalChanging(ref global::System.Nullable<bool> value);
        partial void OnAbdominalChanged();
    
        /// <summary>
        /// There are no comments for Articulaciones in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Articulaciones
        {
            get
            {
                global::System.Nullable<int> value = _Articulaciones;
                OnGetArticulaciones(ref value);
                return value;
            }
            set
            {
                if (_Articulaciones != value)
                {
                  OnArticulacionesChanging(ref value);
                  ReportPropertyChanging("Articulaciones");
                  _Articulaciones = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Articulaciones");
                  OnArticulacionesChanged();
              }
            }
        }
        private global::System.Nullable<int> _Articulaciones;
        partial void OnGetArticulaciones(ref global::System.Nullable<int> value);
        partial void OnArticulacionesChanging(ref global::System.Nullable<int> value);
        partial void OnArticulacionesChanged();
    
        /// <summary>
        /// There are no comments for Asma in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Asma
        {
            get
            {
                global::System.Nullable<bool> value = _Asma;
                OnGetAsma(ref value);
                return value;
            }
            set
            {
                if (_Asma != value)
                {
                  OnAsmaChanging(ref value);
                  ReportPropertyChanging("Asma");
                  _Asma = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Asma");
                  OnAsmaChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Asma;
        partial void OnGetAsma(ref global::System.Nullable<bool> value);
        partial void OnAsmaChanging(ref global::System.Nullable<bool> value);
        partial void OnAsmaChanged();
    
        /// <summary>
        /// There are no comments for Cancer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Cancer
        {
            get
            {
                global::System.Nullable<bool> value = _Cancer;
                OnGetCancer(ref value);
                return value;
            }
            set
            {
                if (_Cancer != value)
                {
                  OnCancerChanging(ref value);
                  ReportPropertyChanging("Cancer");
                  _Cancer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Cancer");
                  OnCancerChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Cancer;
        partial void OnGetCancer(ref global::System.Nullable<bool> value);
        partial void OnCancerChanging(ref global::System.Nullable<bool> value);
        partial void OnCancerChanged();
    
        /// <summary>
        /// There are no comments for Cefalea in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Cefalea
        {
            get
            {
                global::System.Nullable<bool> value = _Cefalea;
                OnGetCefalea(ref value);
                return value;
            }
            set
            {
                if (_Cefalea != value)
                {
                  OnCefaleaChanging(ref value);
                  ReportPropertyChanging("Cefalea");
                  _Cefalea = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Cefalea");
                  OnCefaleaChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Cefalea;
        partial void OnGetCefalea(ref global::System.Nullable<bool> value);
        partial void OnCefaleaChanging(ref global::System.Nullable<bool> value);
        partial void OnCefaleaChanged();
    
        /// <summary>
        /// There are no comments for Clas_clinica in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Clas_clinica
        {
            get
            {
                global::System.Nullable<int> value = _Clas_clinica;
                OnGetClas_clinica(ref value);
                return value;
            }
            set
            {
                if (_Clas_clinica != value)
                {
                  OnClas_clinicaChanging(ref value);
                  ReportPropertyChanging("Clas_clinica");
                  _Clas_clinica = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Clas_clinica");
                  OnClas_clinicaChanged();
              }
            }
        }
        private global::System.Nullable<int> _Clas_clinica;
        partial void OnGetClas_clinica(ref global::System.Nullable<int> value);
        partial void OnClas_clinicaChanging(ref global::System.Nullable<int> value);
        partial void OnClas_clinicaChanged();
    
        /// <summary>
        /// There are no comments for Congestion_nasal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Congestion_nasal
        {
            get
            {
                global::System.Nullable<bool> value = _Congestion_nasal;
                OnGetCongestion_nasal(ref value);
                return value;
            }
            set
            {
                if (_Congestion_nasal != value)
                {
                  OnCongestion_nasalChanging(ref value);
                  ReportPropertyChanging("Congestion_nasal");
                  _Congestion_nasal = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Congestion_nasal");
                  OnCongestion_nasalChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Congestion_nasal;
        partial void OnGetCongestion_nasal(ref global::System.Nullable<bool> value);
        partial void OnCongestion_nasalChanging(ref global::System.Nullable<bool> value);
        partial void OnCongestion_nasalChanged();
    
        /// <summary>
        /// There are no comments for Diabetes in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Diabetes
        {
            get
            {
                global::System.Nullable<bool> value = _Diabetes;
                OnGetDiabetes(ref value);
                return value;
            }
            set
            {
                if (_Diabetes != value)
                {
                  OnDiabetesChanging(ref value);
                  ReportPropertyChanging("Diabetes");
                  _Diabetes = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Diabetes");
                  OnDiabetesChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Diabetes;
        partial void OnGetDiabetes(ref global::System.Nullable<bool> value);
        partial void OnDiabetesChanging(ref global::System.Nullable<bool> value);
        partial void OnDiabetesChanged();
    
        /// <summary>
        /// There are no comments for Diarrea in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Diarrea
        {
            get
            {
                global::System.Nullable<bool> value = _Diarrea;
                OnGetDiarrea(ref value);
                return value;
            }
            set
            {
                if (_Diarrea != value)
                {
                  OnDiarreaChanging(ref value);
                  ReportPropertyChanging("Diarrea");
                  _Diarrea = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Diarrea");
                  OnDiarreaChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Diarrea;
        partial void OnGetDiarrea(ref global::System.Nullable<bool> value);
        partial void OnDiarreaChanging(ref global::System.Nullable<bool> value);
        partial void OnDiarreaChanged();
    
        /// <summary>
        /// There are no comments for Dolor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Dolor
        {
            get
            {
                global::System.Nullable<bool> value = _Dolor;
                OnGetDolor(ref value);
                return value;
            }
            set
            {
                if (_Dolor != value)
                {
                  OnDolorChanging(ref value);
                  ReportPropertyChanging("Dolor");
                  _Dolor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Dolor");
                  OnDolorChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Dolor;
        partial void OnGetDolor(ref global::System.Nullable<bool> value);
        partial void OnDolorChanging(ref global::System.Nullable<bool> value);
        partial void OnDolorChanged();
    
        /// <summary>
        /// There are no comments for Dolor_garganta in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Dolor_garganta
        {
            get
            {
                global::System.Nullable<bool> value = _Dolor_garganta;
                OnGetDolor_garganta(ref value);
                return value;
            }
            set
            {
                if (_Dolor_garganta != value)
                {
                  OnDolor_gargantaChanging(ref value);
                  ReportPropertyChanging("Dolor_garganta");
                  _Dolor_garganta = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Dolor_garganta");
                  OnDolor_gargantaChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Dolor_garganta;
        partial void OnGetDolor_garganta(ref global::System.Nullable<bool> value);
        partial void OnDolor_gargantaChanging(ref global::System.Nullable<bool> value);
        partial void OnDolor_gargantaChanged();
    
        /// <summary>
        /// There are no comments for Domicilio_residencia in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Domicilio_residencia
        {
            get
            {
                global::System.Nullable<int> value = _Domicilio_residencia;
                OnGetDomicilio_residencia(ref value);
                return value;
            }
            set
            {
                if (_Domicilio_residencia != value)
                {
                  OnDomicilio_residenciaChanging(ref value);
                  ReportPropertyChanging("Domicilio_residencia");
                  _Domicilio_residencia = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Domicilio_residencia");
                  OnDomicilio_residenciaChanged();
              }
            }
        }
        private global::System.Nullable<int> _Domicilio_residencia;
        partial void OnGetDomicilio_residencia(ref global::System.Nullable<int> value);
        partial void OnDomicilio_residenciaChanging(ref global::System.Nullable<int> value);
        partial void OnDomicilio_residenciaChanged();
    
        /// <summary>
        /// There are no comments for Embarazo_puerperio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Embarazo_puerperio
        {
            get
            {
                global::System.Nullable<int> value = _Embarazo_puerperio;
                OnGetEmbarazo_puerperio(ref value);
                return value;
            }
            set
            {
                if (_Embarazo_puerperio != value)
                {
                  OnEmbarazo_puerperioChanging(ref value);
                  ReportPropertyChanging("Embarazo_puerperio");
                  _Embarazo_puerperio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Embarazo_puerperio");
                  OnEmbarazo_puerperioChanged();
              }
            }
        }
        private global::System.Nullable<int> _Embarazo_puerperio;
        partial void OnGetEmbarazo_puerperio(ref global::System.Nullable<int> value);
        partial void OnEmbarazo_puerperioChanging(ref global::System.Nullable<int> value);
        partial void OnEmbarazo_puerperioChanged();
    
        /// <summary>
        /// There are no comments for Enf_cardiovasculares in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Enf_cardiovasculares
        {
            get
            {
                global::System.Nullable<bool> value = _Enf_cardiovasculares;
                OnGetEnf_cardiovasculares(ref value);
                return value;
            }
            set
            {
                if (_Enf_cardiovasculares != value)
                {
                  OnEnf_cardiovascularesChanging(ref value);
                  ReportPropertyChanging("Enf_cardiovasculares");
                  _Enf_cardiovasculares = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Enf_cardiovasculares");
                  OnEnf_cardiovascularesChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Enf_cardiovasculares;
        partial void OnGetEnf_cardiovasculares(ref global::System.Nullable<bool> value);
        partial void OnEnf_cardiovascularesChanging(ref global::System.Nullable<bool> value);
        partial void OnEnf_cardiovascularesChanged();
    
        /// <summary>
        /// There are no comments for Enf_tratamiento_inmunosupresor in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Enf_tratamiento_inmunosupresor
        {
            get
            {
                global::System.Nullable<bool> value = _Enf_tratamiento_inmunosupresor;
                OnGetEnf_tratamiento_inmunosupresor(ref value);
                return value;
            }
            set
            {
                if (_Enf_tratamiento_inmunosupresor != value)
                {
                  OnEnf_tratamiento_inmunosupresorChanging(ref value);
                  ReportPropertyChanging("Enf_tratamiento_inmunosupresor");
                  _Enf_tratamiento_inmunosupresor = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Enf_tratamiento_inmunosupresor");
                  OnEnf_tratamiento_inmunosupresorChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Enf_tratamiento_inmunosupresor;
        partial void OnGetEnf_tratamiento_inmunosupresor(ref global::System.Nullable<bool> value);
        partial void OnEnf_tratamiento_inmunosupresorChanging(ref global::System.Nullable<bool> value);
        partial void OnEnf_tratamiento_inmunosupresorChanged();
    
        /// <summary>
        /// There are no comments for Enf_pulmonar_cronica in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Enf_pulmonar_cronica
        {
            get
            {
                global::System.Nullable<bool> value = _Enf_pulmonar_cronica;
                OnGetEnf_pulmonar_cronica(ref value);
                return value;
            }
            set
            {
                if (_Enf_pulmonar_cronica != value)
                {
                  OnEnf_pulmonar_cronicaChanging(ref value);
                  ReportPropertyChanging("Enf_pulmonar_cronica");
                  _Enf_pulmonar_cronica = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Enf_pulmonar_cronica");
                  OnEnf_pulmonar_cronicaChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Enf_pulmonar_cronica;
        partial void OnGetEnf_pulmonar_cronica(ref global::System.Nullable<bool> value);
        partial void OnEnf_pulmonar_cronicaChanging(ref global::System.Nullable<bool> value);
        partial void OnEnf_pulmonar_cronicaChanged();
    
        /// <summary>
        /// There are no comments for Fecha_Prueba in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> Fecha_Prueba
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _Fecha_Prueba;
                OnGetFecha_Prueba(ref value);
                return value;
            }
            set
            {
                if (_Fecha_Prueba != value)
                {
                  OnFecha_PruebaChanging(ref value);
                  ReportPropertyChanging("Fecha_Prueba");
                  _Fecha_Prueba = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Fecha_Prueba");
                  OnFecha_PruebaChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _Fecha_Prueba;
        partial void OnGetFecha_Prueba(ref global::System.Nullable<System.DateTime> value);
        partial void OnFecha_PruebaChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFecha_PruebaChanged();
    
        /// <summary>
        /// There are no comments for Fiebre_Escalofrio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Fiebre_Escalofrio
        {
            get
            {
                global::System.Nullable<bool> value = _Fiebre_Escalofrio;
                OnGetFiebre_Escalofrio(ref value);
                return value;
            }
            set
            {
                if (_Fiebre_Escalofrio != value)
                {
                  OnFiebre_EscalofrioChanging(ref value);
                  ReportPropertyChanging("Fiebre_Escalofrio");
                  _Fiebre_Escalofrio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Fiebre_Escalofrio");
                  OnFiebre_EscalofrioChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Fiebre_Escalofrio;
        partial void OnGetFiebre_Escalofrio(ref global::System.Nullable<bool> value);
        partial void OnFiebre_EscalofrioChanging(ref global::System.Nullable<bool> value);
        partial void OnFiebre_EscalofrioChanged();
    
        /// <summary>
        /// There are no comments for Geolocalizacion_domicilio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Geolocalizacion_domicilio
        {
            get
            {
                global::System.Nullable<int> value = _Geolocalizacion_domicilio;
                OnGetGeolocalizacion_domicilio(ref value);
                return value;
            }
            set
            {
                if (_Geolocalizacion_domicilio != value)
                {
                  OnGeolocalizacion_domicilioChanging(ref value);
                  ReportPropertyChanging("Geolocalizacion_domicilio");
                  _Geolocalizacion_domicilio = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Geolocalizacion_domicilio");
                  OnGeolocalizacion_domicilioChanged();
              }
            }
        }
        private global::System.Nullable<int> _Geolocalizacion_domicilio;
        partial void OnGetGeolocalizacion_domicilio(ref global::System.Nullable<int> value);
        partial void OnGeolocalizacion_domicilioChanging(ref global::System.Nullable<int> value);
        partial void OnGeolocalizacion_domicilioChanged();
    
        /// <summary>
        /// There are no comments for Hipertencion_arterial in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Hipertencion_arterial
        {
            get
            {
                global::System.Nullable<bool> value = _Hipertencion_arterial;
                OnGetHipertencion_arterial(ref value);
                return value;
            }
            set
            {
                if (_Hipertencion_arterial != value)
                {
                  OnHipertencion_arterialChanging(ref value);
                  ReportPropertyChanging("Hipertencion_arterial");
                  _Hipertencion_arterial = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Hipertencion_arterial");
                  OnHipertencion_arterialChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Hipertencion_arterial;
        partial void OnGetHipertencion_arterial(ref global::System.Nullable<bool> value);
        partial void OnHipertencion_arterialChanging(ref global::System.Nullable<bool> value);
        partial void OnHipertencion_arterialChanged();
    
        /// <summary>
        /// There are no comments for Inicio_sintomas in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Inicio_sintomas
        {
            get
            {
                string value = _Inicio_sintomas;
                OnGetInicio_sintomas(ref value);
                return value;
            }
            set
            {
                if (_Inicio_sintomas != value)
                {
                  OnInicio_sintomasChanging(ref value);
                  ReportPropertyChanging("Inicio_sintomas");
                  _Inicio_sintomas = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Inicio_sintomas");
                  OnInicio_sintomasChanged();
              }
            }
        }
        private string _Inicio_sintomas;
        partial void OnGetInicio_sintomas(ref string value);
        partial void OnInicio_sintomasChanging(ref string value);
        partial void OnInicio_sintomasChanged();
    
        /// <summary>
        /// There are no comments for Insuficiencia_cronica in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Insuficiencia_cronica
        {
            get
            {
                global::System.Nullable<int> value = _Insuficiencia_cronica;
                OnGetInsuficiencia_cronica(ref value);
                return value;
            }
            set
            {
                if (_Insuficiencia_cronica != value)
                {
                  OnInsuficiencia_cronicaChanging(ref value);
                  ReportPropertyChanging("Insuficiencia_cronica");
                  _Insuficiencia_cronica = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Insuficiencia_cronica");
                  OnInsuficiencia_cronicaChanged();
              }
            }
        }
        private global::System.Nullable<int> _Insuficiencia_cronica;
        partial void OnGetInsuficiencia_cronica(ref global::System.Nullable<int> value);
        partial void OnInsuficiencia_cronicaChanging(ref global::System.Nullable<int> value);
        partial void OnInsuficiencia_cronicaChanged();
    
        /// <summary>
        /// There are no comments for Irritabilidad_confusion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Irritabilidad_confusion
        {
            get
            {
                global::System.Nullable<int> value = _Irritabilidad_confusion;
                OnGetIrritabilidad_confusion(ref value);
                return value;
            }
            set
            {
                if (_Irritabilidad_confusion != value)
                {
                  OnIrritabilidad_confusionChanging(ref value);
                  ReportPropertyChanging("Irritabilidad_confusion");
                  _Irritabilidad_confusion = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Irritabilidad_confusion");
                  OnIrritabilidad_confusionChanged();
              }
            }
        }
        private global::System.Nullable<int> _Irritabilidad_confusion;
        partial void OnGetIrritabilidad_confusion(ref global::System.Nullable<int> value);
        partial void OnIrritabilidad_confusionChanging(ref global::System.Nullable<int> value);
        partial void OnIrritabilidad_confusionChanged();
    
        /// <summary>
        /// There are no comments for Malestar_general in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Malestar_general
        {
            get
            {
                global::System.Nullable<bool> value = _Malestar_general;
                OnGetMalestar_general(ref value);
                return value;
            }
            set
            {
                if (_Malestar_general != value)
                {
                  OnMalestar_generalChanging(ref value);
                  ReportPropertyChanging("Malestar_general");
                  _Malestar_general = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Malestar_general");
                  OnMalestar_generalChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Malestar_general;
        partial void OnGetMalestar_general(ref global::System.Nullable<bool> value);
        partial void OnMalestar_generalChanging(ref global::System.Nullable<bool> value);
        partial void OnMalestar_generalChanged();
    
        /// <summary>
        /// There are no comments for Mayor65 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Mayor65
        {
            get
            {
                global::System.Nullable<int> value = _Mayor65;
                OnGetMayor65(ref value);
                return value;
            }
            set
            {
                if (_Mayor65 != value)
                {
                  OnMayor65Changing(ref value);
                  ReportPropertyChanging("Mayor65");
                  _Mayor65 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Mayor65");
                  OnMayor65Changed();
              }
            }
        }
        private global::System.Nullable<int> _Mayor65;
        partial void OnGetMayor65(ref global::System.Nullable<int> value);
        partial void OnMayor65Changing(ref global::System.Nullable<int> value);
        partial void OnMayor65Changed();
    
        /// <summary>
        /// There are no comments for Muscular in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Muscular
        {
            get
            {
                global::System.Nullable<bool> value = _Muscular;
                OnGetMuscular(ref value);
                return value;
            }
            set
            {
                if (_Muscular != value)
                {
                  OnMuscularChanging(ref value);
                  ReportPropertyChanging("Muscular");
                  _Muscular = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Muscular");
                  OnMuscularChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Muscular;
        partial void OnGetMuscular(ref global::System.Nullable<bool> value);
        partial void OnMuscularChanging(ref global::System.Nullable<bool> value);
        partial void OnMuscularChanged();
    
        /// <summary>
        /// There are no comments for Nauseas_vomitos in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Nauseas_vomitos
        {
            get
            {
                global::System.Nullable<int> value = _Nauseas_vomitos;
                OnGetNauseas_vomitos(ref value);
                return value;
            }
            set
            {
                if (_Nauseas_vomitos != value)
                {
                  OnNauseas_vomitosChanging(ref value);
                  ReportPropertyChanging("Nauseas_vomitos");
                  _Nauseas_vomitos = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Nauseas_vomitos");
                  OnNauseas_vomitosChanged();
              }
            }
        }
        private global::System.Nullable<int> _Nauseas_vomitos;
        partial void OnGetNauseas_vomitos(ref global::System.Nullable<int> value);
        partial void OnNauseas_vomitosChanging(ref global::System.Nullable<int> value);
        partial void OnNauseas_vomitosChanged();
    
        /// <summary>
        /// There are no comments for Obesidad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Obesidad
        {
            get
            {
                global::System.Nullable<bool> value = _Obesidad;
                OnGetObesidad(ref value);
                return value;
            }
            set
            {
                if (_Obesidad != value)
                {
                  OnObesidadChanging(ref value);
                  ReportPropertyChanging("Obesidad");
                  _Obesidad = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Obesidad");
                  OnObesidadChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Obesidad;
        partial void OnGetObesidad(ref global::System.Nullable<bool> value);
        partial void OnObesidadChanging(ref global::System.Nullable<bool> value);
        partial void OnObesidadChanged();
    
        /// <summary>
        /// There are no comments for Otros_sintomas in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Otros_sintomas
        {
            get
            {
                string value = _Otros_sintomas;
                OnGetOtros_sintomas(ref value);
                return value;
            }
            set
            {
                if (_Otros_sintomas != value)
                {
                  OnOtros_sintomasChanging(ref value);
                  ReportPropertyChanging("Otros_sintomas");
                  _Otros_sintomas = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Otros_sintomas");
                  OnOtros_sintomasChanged();
              }
            }
        }
        private string _Otros_sintomas;
        partial void OnGetOtros_sintomas(ref string value);
        partial void OnOtros_sintomasChanging(ref string value);
        partial void OnOtros_sintomasChanged();
    
        /// <summary>
        /// There are no comments for Pecho in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Pecho
        {
            get
            {
                global::System.Nullable<int> value = _Pecho;
                OnGetPecho(ref value);
                return value;
            }
            set
            {
                if (_Pecho != value)
                {
                  OnPechoChanging(ref value);
                  ReportPropertyChanging("Pecho");
                  _Pecho = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Pecho");
                  OnPechoChanged();
              }
            }
        }
        private global::System.Nullable<int> _Pecho;
        partial void OnGetPecho(ref global::System.Nullable<int> value);
        partial void OnPechoChanging(ref global::System.Nullable<int> value);
        partial void OnPechoChanged();
    
        /// <summary>
        /// There are no comments for Personal_salud in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Personal_salud
        {
            get
            {
                global::System.Nullable<int> value = _Personal_salud;
                OnGetPersonal_salud(ref value);
                return value;
            }
            set
            {
                if (_Personal_salud != value)
                {
                  OnPersonal_saludChanging(ref value);
                  ReportPropertyChanging("Personal_salud");
                  _Personal_salud = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Personal_salud");
                  OnPersonal_saludChanged();
              }
            }
        }
        private global::System.Nullable<int> _Personal_salud;
        partial void OnGetPersonal_salud(ref global::System.Nullable<int> value);
        partial void OnPersonal_saludChanging(ref global::System.Nullable<int> value);
        partial void OnPersonal_saludChanged();
    
        /// <summary>
        /// There are no comments for Procedencia_solicitud in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Procedencia_solicitud
        {
            get
            {
                global::System.Nullable<int> value = _Procedencia_solicitud;
                OnGetProcedencia_solicitud(ref value);
                return value;
            }
            set
            {
                if (_Procedencia_solicitud != value)
                {
                  OnProcedencia_solicitudChanging(ref value);
                  ReportPropertyChanging("Procedencia_solicitud");
                  _Procedencia_solicitud = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Procedencia_solicitud");
                  OnProcedencia_solicitudChanged();
              }
            }
        }
        private global::System.Nullable<int> _Procedencia_solicitud;
        partial void OnGetProcedencia_solicitud(ref global::System.Nullable<int> value);
        partial void OnProcedencia_solicitudChanging(ref global::System.Nullable<int> value);
        partial void OnProcedencia_solicitudChanged();
    
        /// <summary>
        /// There are no comments for Resultado_1ERA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Resultado_1ERA
        {
            get
            {
                global::System.Nullable<int> value = _Resultado_1ERA;
                OnGetResultado_1ERA(ref value);
                return value;
            }
            set
            {
                if (_Resultado_1ERA != value)
                {
                  OnResultado_1ERAChanging(ref value);
                  ReportPropertyChanging("Resultado_1ERA");
                  _Resultado_1ERA = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Resultado_1ERA");
                  OnResultado_1ERAChanged();
              }
            }
        }
        private global::System.Nullable<int> _Resultado_1ERA;
        partial void OnGetResultado_1ERA(ref global::System.Nullable<int> value);
        partial void OnResultado_1ERAChanging(ref global::System.Nullable<int> value);
        partial void OnResultado_1ERAChanged();
    
        /// <summary>
        /// There are no comments for Resultado_2DA in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Resultado_2DA
        {
            get
            {
                global::System.Nullable<int> value = _Resultado_2DA;
                OnGetResultado_2DA(ref value);
                return value;
            }
            set
            {
                if (_Resultado_2DA != value)
                {
                  OnResultado_2DAChanging(ref value);
                  ReportPropertyChanging("Resultado_2DA");
                  _Resultado_2DA = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Resultado_2DA");
                  OnResultado_2DAChanged();
              }
            }
        }
        private global::System.Nullable<int> _Resultado_2DA;
        partial void OnGetResultado_2DA(ref global::System.Nullable<int> value);
        partial void OnResultado_2DAChanging(ref global::System.Nullable<int> value);
        partial void OnResultado_2DAChanged();
    
        /// <summary>
        /// There are no comments for Tos in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> Tos
        {
            get
            {
                global::System.Nullable<bool> value = _Tos;
                OnGetTos(ref value);
                return value;
            }
            set
            {
                if (_Tos != value)
                {
                  OnTosChanging(ref value);
                  ReportPropertyChanging("Tos");
                  _Tos = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Tos");
                  OnTosChanged();
              }
            }
        }
        private global::System.Nullable<bool> _Tos;
        partial void OnGetTos(ref global::System.Nullable<bool> value);
        partial void OnTosChanging(ref global::System.Nullable<bool> value);
        partial void OnTosChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.softwarecomponentrelease in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_SoftwareComponentId
    /// v_SoftwareComponentVersion
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="softwarecomponentrelease")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class softwarecomponentrelease : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new softwarecomponentrelease object.
        /// </summary>
        /// <param name="i_SoftwareComponentId">Initial value of i_SoftwareComponentId.</param>
        /// <param name="v_SoftwareComponentVersion">Initial value of v_SoftwareComponentVersion.</param>
        public static softwarecomponentrelease Createsoftwarecomponentrelease(int i_SoftwareComponentId, string v_SoftwareComponentVersion)
        {
            softwarecomponentrelease softwarecomponentrelease = new softwarecomponentrelease();
            softwarecomponentrelease.i_SoftwareComponentId = i_SoftwareComponentId;
            softwarecomponentrelease.v_SoftwareComponentVersion = v_SoftwareComponentVersion;
            return softwarecomponentrelease;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_SoftwareComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_SoftwareComponentId
        {
            get
            {
                int value = _i_SoftwareComponentId;
                OnGeti_SoftwareComponentId(ref value);
                return value;
            }
            set
            {
                if (_i_SoftwareComponentId != value)
                {
                  Oni_SoftwareComponentIdChanging(ref value);
                  ReportPropertyChanging("i_SoftwareComponentId");
                  _i_SoftwareComponentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SoftwareComponentId");
                  Oni_SoftwareComponentIdChanged();
              }
            }
        }
        private int _i_SoftwareComponentId;
        partial void OnGeti_SoftwareComponentId(ref int value);
        partial void Oni_SoftwareComponentIdChanging(ref int value);
        partial void Oni_SoftwareComponentIdChanged();
    
        /// <summary>
        /// There are no comments for v_SoftwareComponentVersion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_SoftwareComponentVersion
        {
            get
            {
                string value = _v_SoftwareComponentVersion;
                OnGetv_SoftwareComponentVersion(ref value);
                return value;
            }
            set
            {
                if (_v_SoftwareComponentVersion != value)
                {
                  Onv_SoftwareComponentVersionChanging(ref value);
                  ReportPropertyChanging("v_SoftwareComponentVersion");
                  _v_SoftwareComponentVersion = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_SoftwareComponentVersion");
                  Onv_SoftwareComponentVersionChanged();
              }
            }
        }
        private string _v_SoftwareComponentVersion;
        partial void OnGetv_SoftwareComponentVersion(ref string value);
        partial void Onv_SoftwareComponentVersionChanging(ref string value);
        partial void Onv_SoftwareComponentVersionChanged();
    
        /// <summary>
        /// There are no comments for i_DeploymentFileId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DeploymentFileId
        {
            get
            {
                global::System.Nullable<int> value = _i_DeploymentFileId;
                OnGeti_DeploymentFileId(ref value);
                return value;
            }
            set
            {
                if (_i_DeploymentFileId != value)
                {
                  Oni_DeploymentFileIdChanging(ref value);
                  ReportPropertyChanging("i_DeploymentFileId");
                  _i_DeploymentFileId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DeploymentFileId");
                  Oni_DeploymentFileIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DeploymentFileId;
        partial void OnGeti_DeploymentFileId(ref global::System.Nullable<int> value);
        partial void Oni_DeploymentFileIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DeploymentFileIdChanged();
    
        /// <summary>
        /// There are no comments for d_ReleaseDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ReleaseDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ReleaseDate;
                OnGetd_ReleaseDate(ref value);
                return value;
            }
            set
            {
                if (_d_ReleaseDate != value)
                {
                  Ond_ReleaseDateChanging(ref value);
                  ReportPropertyChanging("d_ReleaseDate");
                  _d_ReleaseDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ReleaseDate");
                  Ond_ReleaseDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ReleaseDate;
        partial void OnGetd_ReleaseDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ReleaseDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ReleaseDateChanged();
    
        /// <summary>
        /// There are no comments for v_DatabaseVersionRequired in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DatabaseVersionRequired
        {
            get
            {
                string value = _v_DatabaseVersionRequired;
                OnGetv_DatabaseVersionRequired(ref value);
                return value;
            }
            set
            {
                if (_v_DatabaseVersionRequired != value)
                {
                  Onv_DatabaseVersionRequiredChanging(ref value);
                  ReportPropertyChanging("v_DatabaseVersionRequired");
                  _v_DatabaseVersionRequired = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DatabaseVersionRequired");
                  Onv_DatabaseVersionRequiredChanged();
              }
            }
        }
        private string _v_DatabaseVersionRequired;
        partial void OnGetv_DatabaseVersionRequired(ref string value);
        partial void Onv_DatabaseVersionRequiredChanging(ref string value);
        partial void Onv_DatabaseVersionRequiredChanged();
    
        /// <summary>
        /// There are no comments for v_ReleaseNotes in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ReleaseNotes
        {
            get
            {
                string value = _v_ReleaseNotes;
                OnGetv_ReleaseNotes(ref value);
                return value;
            }
            set
            {
                if (_v_ReleaseNotes != value)
                {
                  Onv_ReleaseNotesChanging(ref value);
                  ReportPropertyChanging("v_ReleaseNotes");
                  _v_ReleaseNotes = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ReleaseNotes");
                  Onv_ReleaseNotesChanged();
              }
            }
        }
        private string _v_ReleaseNotes;
        partial void OnGetv_ReleaseNotes(ref string value);
        partial void Onv_ReleaseNotesChanging(ref string value);
        partial void Onv_ReleaseNotesChanged();
    
        /// <summary>
        /// There are no comments for v_AdditionalInformation1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AdditionalInformation1
        {
            get
            {
                string value = _v_AdditionalInformation1;
                OnGetv_AdditionalInformation1(ref value);
                return value;
            }
            set
            {
                if (_v_AdditionalInformation1 != value)
                {
                  Onv_AdditionalInformation1Changing(ref value);
                  ReportPropertyChanging("v_AdditionalInformation1");
                  _v_AdditionalInformation1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AdditionalInformation1");
                  Onv_AdditionalInformation1Changed();
              }
            }
        }
        private string _v_AdditionalInformation1;
        partial void OnGetv_AdditionalInformation1(ref string value);
        partial void Onv_AdditionalInformation1Changing(ref string value);
        partial void Onv_AdditionalInformation1Changed();
    
        /// <summary>
        /// There are no comments for v_AdditionalInformation2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AdditionalInformation2
        {
            get
            {
                string value = _v_AdditionalInformation2;
                OnGetv_AdditionalInformation2(ref value);
                return value;
            }
            set
            {
                if (_v_AdditionalInformation2 != value)
                {
                  Onv_AdditionalInformation2Changing(ref value);
                  ReportPropertyChanging("v_AdditionalInformation2");
                  _v_AdditionalInformation2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AdditionalInformation2");
                  Onv_AdditionalInformation2Changed();
              }
            }
        }
        private string _v_AdditionalInformation2;
        partial void OnGetv_AdditionalInformation2(ref string value);
        partial void Onv_AdditionalInformation2Changing(ref string value);
        partial void Onv_AdditionalInformation2Changed();
    
        /// <summary>
        /// There are no comments for i_IsPublished in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsPublished
        {
            get
            {
                global::System.Nullable<int> value = _i_IsPublished;
                OnGeti_IsPublished(ref value);
                return value;
            }
            set
            {
                if (_i_IsPublished != value)
                {
                  Oni_IsPublishedChanging(ref value);
                  ReportPropertyChanging("i_IsPublished");
                  _i_IsPublished = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsPublished");
                  Oni_IsPublishedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsPublished;
        partial void OnGeti_IsPublished(ref global::System.Nullable<int> value);
        partial void Oni_IsPublishedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsPublishedChanged();
    
        /// <summary>
        /// There are no comments for i_IsLastVersion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsLastVersion
        {
            get
            {
                global::System.Nullable<int> value = _i_IsLastVersion;
                OnGeti_IsLastVersion(ref value);
                return value;
            }
            set
            {
                if (_i_IsLastVersion != value)
                {
                  Oni_IsLastVersionChanging(ref value);
                  ReportPropertyChanging("i_IsLastVersion");
                  _i_IsLastVersion = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsLastVersion");
                  Oni_IsLastVersionChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsLastVersion;
        partial void OnGeti_IsLastVersion(ref global::System.Nullable<int> value);
        partial void Oni_IsLastVersionChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsLastVersionChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for deploymentfile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_DeplymentFile_SoftwareComponentRelease_i_DeploymentFileId", "deploymentfile")]
        public deploymentfile deploymentfile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<deploymentfile>("Sigesoft.Node.WinClient.DAL.Fk_DeplymentFile_SoftwareComponentRelease_i_DeploymentFileId", "deploymentfile").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<deploymentfile>("Sigesoft.Node.WinClient.DAL.Fk_DeplymentFile_SoftwareComponentRelease_i_DeploymentFileId", "deploymentfile").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for deploymentfile in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<deploymentfile> deploymentfileReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<deploymentfile>("Sigesoft.Node.WinClient.DAL.Fk_DeplymentFile_SoftwareComponentRelease_i_DeploymentFileId", "deploymentfile");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<deploymentfile>("Sigesoft.Node.WinClient.DAL.Fk_DeplymentFile_SoftwareComponentRelease_i_DeploymentFileId", "deploymentfile", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<deploymentfile>("Sigesoft.Node.WinClient.DAL.Fk_DeplymentFile_SoftwareComponentRelease_i_DeploymentFileId", "deploymentfile").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.supplier in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_SupplierId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class supplier : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new supplier object.
        /// </summary>
        /// <param name="v_SupplierId">Initial value of v_SupplierId.</param>
        public static supplier Createsupplier(string v_SupplierId)
        {
            supplier supplier = new supplier();
            supplier.v_SupplierId = v_SupplierId;
            return supplier;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_SupplierId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_SupplierId
        {
            get
            {
                string value = _v_SupplierId;
                OnGetv_SupplierId(ref value);
                return value;
            }
            set
            {
                if (_v_SupplierId != value)
                {
                  Onv_SupplierIdChanging(ref value);
                  ReportPropertyChanging("v_SupplierId");
                  _v_SupplierId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_SupplierId");
                  Onv_SupplierIdChanged();
              }
            }
        }
        private string _v_SupplierId;
        partial void OnGetv_SupplierId(ref string value);
        partial void Onv_SupplierIdChanging(ref string value);
        partial void Onv_SupplierIdChanged();
    
        /// <summary>
        /// There are no comments for i_SectorTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SectorTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_SectorTypeId;
                OnGeti_SectorTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_SectorTypeId != value)
                {
                  Oni_SectorTypeIdChanging(ref value);
                  ReportPropertyChanging("i_SectorTypeId");
                  _i_SectorTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SectorTypeId");
                  Oni_SectorTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SectorTypeId;
        partial void OnGeti_SectorTypeId(ref global::System.Nullable<int> value);
        partial void Oni_SectorTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SectorTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_IdentificationNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_IdentificationNumber
        {
            get
            {
                string value = _v_IdentificationNumber;
                OnGetv_IdentificationNumber(ref value);
                return value;
            }
            set
            {
                if (_v_IdentificationNumber != value)
                {
                  Onv_IdentificationNumberChanging(ref value);
                  ReportPropertyChanging("v_IdentificationNumber");
                  _v_IdentificationNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_IdentificationNumber");
                  Onv_IdentificationNumberChanged();
              }
            }
        }
        private string _v_IdentificationNumber;
        partial void OnGetv_IdentificationNumber(ref string value);
        partial void Onv_IdentificationNumberChanging(ref string value);
        partial void Onv_IdentificationNumberChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for v_Address in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Address
        {
            get
            {
                string value = _v_Address;
                OnGetv_Address(ref value);
                return value;
            }
            set
            {
                if (_v_Address != value)
                {
                  Onv_AddressChanging(ref value);
                  ReportPropertyChanging("v_Address");
                  _v_Address = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Address");
                  Onv_AddressChanged();
              }
            }
        }
        private string _v_Address;
        partial void OnGetv_Address(ref string value);
        partial void Onv_AddressChanging(ref string value);
        partial void Onv_AddressChanged();
    
        /// <summary>
        /// There are no comments for v_PhoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PhoneNumber
        {
            get
            {
                string value = _v_PhoneNumber;
                OnGetv_PhoneNumber(ref value);
                return value;
            }
            set
            {
                if (_v_PhoneNumber != value)
                {
                  Onv_PhoneNumberChanging(ref value);
                  ReportPropertyChanging("v_PhoneNumber");
                  _v_PhoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PhoneNumber");
                  Onv_PhoneNumberChanged();
              }
            }
        }
        private string _v_PhoneNumber;
        partial void OnGetv_PhoneNumber(ref string value);
        partial void Onv_PhoneNumberChanging(ref string value);
        partial void Onv_PhoneNumberChanged();
    
        /// <summary>
        /// There are no comments for v_Mail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Mail
        {
            get
            {
                string value = _v_Mail;
                OnGetv_Mail(ref value);
                return value;
            }
            set
            {
                if (_v_Mail != value)
                {
                  Onv_MailChanging(ref value);
                  ReportPropertyChanging("v_Mail");
                  _v_Mail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Mail");
                  Onv_MailChanged();
              }
            }
        }
        private string _v_Mail;
        partial void OnGetv_Mail(ref string value);
        partial void Onv_MailChanging(ref string value);
        partial void Onv_MailChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateNodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateNodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateNodeId;
                OnGeti_UpdateNodeId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateNodeId != value)
                {
                  Oni_UpdateNodeIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateNodeId");
                  _i_UpdateNodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateNodeId");
                  Oni_UpdateNodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateNodeId;
        partial void OnGeti_UpdateNodeId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateNodeIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for movement in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Supplier_Movement_i_SupplierId_i_NodeId", "movement")]
        public EntityCollection<movement> movement
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<movement>("Sigesoft.Node.WinClient.DAL.Fk_Supplier_Movement_i_SupplierId_i_NodeId", "movement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<movement>("Sigesoft.Node.WinClient.DAL.Fk_Supplier_Movement_i_SupplierId_i_NodeId", "movement", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.systemparameter in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_GroupId
    /// i_ParameterId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="systemparameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class systemparameter : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new systemparameter object.
        /// </summary>
        /// <param name="i_GroupId">Initial value of i_GroupId.</param>
        /// <param name="i_ParameterId">Initial value of i_ParameterId.</param>
        public static systemparameter Createsystemparameter(int i_GroupId, int i_ParameterId)
        {
            systemparameter systemparameter = new systemparameter();
            systemparameter.i_GroupId = i_GroupId;
            systemparameter.i_ParameterId = i_ParameterId;
            return systemparameter;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_GroupId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_GroupId
        {
            get
            {
                int value = _i_GroupId;
                OnGeti_GroupId(ref value);
                return value;
            }
            set
            {
                if (_i_GroupId != value)
                {
                  Oni_GroupIdChanging(ref value);
                  ReportPropertyChanging("i_GroupId");
                  _i_GroupId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_GroupId");
                  Oni_GroupIdChanged();
              }
            }
        }
        private int _i_GroupId;
        partial void OnGeti_GroupId(ref int value);
        partial void Oni_GroupIdChanging(ref int value);
        partial void Oni_GroupIdChanged();
    
        /// <summary>
        /// There are no comments for i_ParameterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_ParameterId
        {
            get
            {
                int value = _i_ParameterId;
                OnGeti_ParameterId(ref value);
                return value;
            }
            set
            {
                if (_i_ParameterId != value)
                {
                  Oni_ParameterIdChanging(ref value);
                  ReportPropertyChanging("i_ParameterId");
                  _i_ParameterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ParameterId");
                  Oni_ParameterIdChanged();
              }
            }
        }
        private int _i_ParameterId;
        partial void OnGeti_ParameterId(ref int value);
        partial void Oni_ParameterIdChanging(ref int value);
        partial void Oni_ParameterIdChanged();
    
        /// <summary>
        /// There are no comments for v_Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value1
        {
            get
            {
                string value = _v_Value1;
                OnGetv_Value1(ref value);
                return value;
            }
            set
            {
                if (_v_Value1 != value)
                {
                  Onv_Value1Changing(ref value);
                  ReportPropertyChanging("v_Value1");
                  _v_Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value1");
                  Onv_Value1Changed();
              }
            }
        }
        private string _v_Value1;
        partial void OnGetv_Value1(ref string value);
        partial void Onv_Value1Changing(ref string value);
        partial void Onv_Value1Changed();
    
        /// <summary>
        /// There are no comments for v_Value2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value2
        {
            get
            {
                string value = _v_Value2;
                OnGetv_Value2(ref value);
                return value;
            }
            set
            {
                if (_v_Value2 != value)
                {
                  Onv_Value2Changing(ref value);
                  ReportPropertyChanging("v_Value2");
                  _v_Value2 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value2");
                  Onv_Value2Changed();
              }
            }
        }
        private string _v_Value2;
        partial void OnGetv_Value2(ref string value);
        partial void Onv_Value2Changing(ref string value);
        partial void Onv_Value2Changed();
    
        /// <summary>
        /// There are no comments for v_Field in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Field
        {
            get
            {
                string value = _v_Field;
                OnGetv_Field(ref value);
                return value;
            }
            set
            {
                if (_v_Field != value)
                {
                  Onv_FieldChanging(ref value);
                  ReportPropertyChanging("v_Field");
                  _v_Field = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Field");
                  Onv_FieldChanged();
              }
            }
        }
        private string _v_Field;
        partial void OnGetv_Field(ref string value);
        partial void Onv_FieldChanging(ref string value);
        partial void Onv_FieldChanged();
    
        /// <summary>
        /// There are no comments for i_ParentParameterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ParentParameterId
        {
            get
            {
                global::System.Nullable<int> value = _i_ParentParameterId;
                OnGeti_ParentParameterId(ref value);
                return value;
            }
            set
            {
                if (_i_ParentParameterId != value)
                {
                  Oni_ParentParameterIdChanging(ref value);
                  ReportPropertyChanging("i_ParentParameterId");
                  _i_ParentParameterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ParentParameterId");
                  Oni_ParentParameterIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ParentParameterId;
        partial void OnGeti_ParentParameterId(ref global::System.Nullable<int> value);
        partial void Oni_ParentParameterIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ParentParameterIdChanged();
    
        /// <summary>
        /// There are no comments for i_Sort in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_Sort
        {
            get
            {
                global::System.Nullable<int> value = _i_Sort;
                OnGeti_Sort(ref value);
                return value;
            }
            set
            {
                if (_i_Sort != value)
                {
                  Oni_SortChanging(ref value);
                  ReportPropertyChanging("i_Sort");
                  _i_Sort = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_Sort");
                  Oni_SortChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_Sort;
        partial void OnGeti_Sort(ref global::System.Nullable<int> value);
        partial void Oni_SortChanging(ref global::System.Nullable<int> value);
        partial void Oni_SortChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.systemuser in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_SystemUserId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="systemuser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class systemuser : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new systemuser object.
        /// </summary>
        /// <param name="i_SystemUserId">Initial value of i_SystemUserId.</param>
        public static systemuser Createsystemuser(int i_SystemUserId)
        {
            systemuser systemuser = new systemuser();
            systemuser.i_SystemUserId = i_SystemUserId;
            return systemuser;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_SystemUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_SystemUserId
        {
            get
            {
                int value = _i_SystemUserId;
                OnGeti_SystemUserId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserId != value)
                {
                  Oni_SystemUserIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserId");
                  _i_SystemUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserId");
                  Oni_SystemUserIdChanged();
              }
            }
        }
        private int _i_SystemUserId;
        partial void OnGeti_SystemUserId(ref int value);
        partial void Oni_SystemUserIdChanging(ref int value);
        partial void Oni_SystemUserIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for v_UserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_UserName
        {
            get
            {
                string value = _v_UserName;
                OnGetv_UserName(ref value);
                return value;
            }
            set
            {
                if (_v_UserName != value)
                {
                  Onv_UserNameChanging(ref value);
                  ReportPropertyChanging("v_UserName");
                  _v_UserName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_UserName");
                  Onv_UserNameChanged();
              }
            }
        }
        private string _v_UserName;
        partial void OnGetv_UserName(ref string value);
        partial void Onv_UserNameChanging(ref string value);
        partial void Onv_UserNameChanged();
    
        /// <summary>
        /// There are no comments for v_Password in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Password
        {
            get
            {
                string value = _v_Password;
                OnGetv_Password(ref value);
                return value;
            }
            set
            {
                if (_v_Password != value)
                {
                  Onv_PasswordChanging(ref value);
                  ReportPropertyChanging("v_Password");
                  _v_Password = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Password");
                  Onv_PasswordChanged();
              }
            }
        }
        private string _v_Password;
        partial void OnGetv_Password(ref string value);
        partial void Onv_PasswordChanging(ref string value);
        partial void Onv_PasswordChanged();
    
        /// <summary>
        /// There are no comments for v_SecretQuestion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SecretQuestion
        {
            get
            {
                string value = _v_SecretQuestion;
                OnGetv_SecretQuestion(ref value);
                return value;
            }
            set
            {
                if (_v_SecretQuestion != value)
                {
                  Onv_SecretQuestionChanging(ref value);
                  ReportPropertyChanging("v_SecretQuestion");
                  _v_SecretQuestion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SecretQuestion");
                  Onv_SecretQuestionChanged();
              }
            }
        }
        private string _v_SecretQuestion;
        partial void OnGetv_SecretQuestion(ref string value);
        partial void Onv_SecretQuestionChanging(ref string value);
        partial void Onv_SecretQuestionChanged();
    
        /// <summary>
        /// There are no comments for v_SecretAnswer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SecretAnswer
        {
            get
            {
                string value = _v_SecretAnswer;
                OnGetv_SecretAnswer(ref value);
                return value;
            }
            set
            {
                if (_v_SecretAnswer != value)
                {
                  Onv_SecretAnswerChanging(ref value);
                  ReportPropertyChanging("v_SecretAnswer");
                  _v_SecretAnswer = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SecretAnswer");
                  Onv_SecretAnswerChanged();
              }
            }
        }
        private string _v_SecretAnswer;
        partial void OnGetv_SecretAnswer(ref string value);
        partial void Onv_SecretAnswerChanging(ref string value);
        partial void Onv_SecretAnswerChanged();
    
        /// <summary>
        /// There are no comments for d_ExpireDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ExpireDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ExpireDate;
                OnGetd_ExpireDate(ref value);
                return value;
            }
            set
            {
                if (_d_ExpireDate != value)
                {
                  Ond_ExpireDateChanging(ref value);
                  ReportPropertyChanging("d_ExpireDate");
                  _d_ExpireDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ExpireDate");
                  Ond_ExpireDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ExpireDate;
        partial void OnGetd_ExpireDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ExpireDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ExpireDateChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_SystemUserTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SystemUserTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_SystemUserTypeId;
                OnGeti_SystemUserTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserTypeId != value)
                {
                  Oni_SystemUserTypeIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserTypeId");
                  _i_SystemUserTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserTypeId");
                  Oni_SystemUserTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SystemUserTypeId;
        partial void OnGeti_SystemUserTypeId(ref global::System.Nullable<int> value);
        partial void Oni_SystemUserTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SystemUserTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_SystemUserByOrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SystemUserByOrganizationId
        {
            get
            {
                string value = _v_SystemUserByOrganizationId;
                OnGetv_SystemUserByOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_SystemUserByOrganizationId != value)
                {
                  Onv_SystemUserByOrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_SystemUserByOrganizationId");
                  _v_SystemUserByOrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SystemUserByOrganizationId");
                  Onv_SystemUserByOrganizationIdChanged();
              }
            }
        }
        private string _v_SystemUserByOrganizationId;
        partial void OnGetv_SystemUserByOrganizationId(ref string value);
        partial void Onv_SystemUserByOrganizationIdChanging(ref string value);
        partial void Onv_SystemUserByOrganizationIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for protocolsystemuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK_SystemUser_ProtocolSystemUser_i_SystemUserId", "protocolsystemuser")]
        public EntityCollection<protocolsystemuser> protocolsystemuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<protocolsystemuser>("Sigesoft.Node.WinClient.DAL.FK_SystemUser_ProtocolSystemUser_i_SystemUserId", "protocolsystemuser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<protocolsystemuser>("Sigesoft.Node.WinClient.DAL.FK_SystemUser_ProtocolSystemUser_i_SystemUserId", "protocolsystemuser", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for restrictedwarehouseprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_SystemUser_RestrictedWarehouseProfile_v_SystemUserId", "restrictedwarehouseprofile")]
        public EntityCollection<restrictedwarehouseprofile> restrictedwarehouseprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<restrictedwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_RestrictedWarehouseProfile_v_SystemUserId", "restrictedwarehouseprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<restrictedwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_RestrictedWarehouseProfile_v_SystemUserId", "restrictedwarehouseprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Person_SystemUser_i_PersonId_i_NodeId", "person")]
        public person person
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_SystemUser_i_PersonId_i_NodeId", "person").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_SystemUser_i_PersonId_i_NodeId", "person").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for person in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<person> personReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_SystemUser_i_PersonId_i_NodeId", "person");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_SystemUser_i_PersonId_i_NodeId", "person", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<person>("Sigesoft.Node.WinClient.DAL.Fk_Person_SystemUser_i_PersonId_i_NodeId", "person").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemusergobalprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_SystemUser_SystemUserGlobalProfile_v_SystemUserId", "systemusergobalprofile")]
        public EntityCollection<systemusergobalprofile> systemusergobalprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<systemusergobalprofile>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUserGlobalProfile_v_SystemUserId", "systemusergobalprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<systemusergobalprofile>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUserGlobalProfile_v_SystemUserId", "systemusergobalprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemuserrolenode in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_SystemUser_SystemUSerRoleNode_i_SystemUserId", "systemuserrolenode")]
        public EntityCollection<systemuserrolenode> systemuserrolenode
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<systemuserrolenode>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUSerRoleNode_i_SystemUserId", "systemuserrolenode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<systemuserrolenode>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUSerRoleNode_i_SystemUserId", "systemuserrolenode", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.systemusergobalprofile in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_SystemUserId
    /// i_ApplicationHierarchyId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="systemusergobalprofile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class systemusergobalprofile : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new systemusergobalprofile object.
        /// </summary>
        /// <param name="i_SystemUserId">Initial value of i_SystemUserId.</param>
        /// <param name="i_ApplicationHierarchyId">Initial value of i_ApplicationHierarchyId.</param>
        public static systemusergobalprofile Createsystemusergobalprofile(int i_SystemUserId, int i_ApplicationHierarchyId)
        {
            systemusergobalprofile systemusergobalprofile = new systemusergobalprofile();
            systemusergobalprofile.i_SystemUserId = i_SystemUserId;
            systemusergobalprofile.i_ApplicationHierarchyId = i_ApplicationHierarchyId;
            return systemusergobalprofile;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_SystemUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_SystemUserId
        {
            get
            {
                int value = _i_SystemUserId;
                OnGeti_SystemUserId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserId != value)
                {
                  Oni_SystemUserIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserId");
                  _i_SystemUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserId");
                  Oni_SystemUserIdChanged();
              }
            }
        }
        private int _i_SystemUserId;
        partial void OnGeti_SystemUserId(ref int value);
        partial void Oni_SystemUserIdChanging(ref int value);
        partial void Oni_SystemUserIdChanged();
    
        /// <summary>
        /// There are no comments for i_ApplicationHierarchyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_ApplicationHierarchyId
        {
            get
            {
                int value = _i_ApplicationHierarchyId;
                OnGeti_ApplicationHierarchyId(ref value);
                return value;
            }
            set
            {
                if (_i_ApplicationHierarchyId != value)
                {
                  Oni_ApplicationHierarchyIdChanging(ref value);
                  ReportPropertyChanging("i_ApplicationHierarchyId");
                  _i_ApplicationHierarchyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ApplicationHierarchyId");
                  Oni_ApplicationHierarchyIdChanged();
              }
            }
        }
        private int _i_ApplicationHierarchyId;
        partial void OnGeti_ApplicationHierarchyId(ref int value);
        partial void Oni_ApplicationHierarchyIdChanging(ref int value);
        partial void Oni_ApplicationHierarchyIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for applicationhierarchy in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_ApplicationHerarchy_SystemUserGlobal_i_ApplicationId", "applicationhierarchy")]
        public applicationhierarchy applicationhierarchy
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.Fk_ApplicationHerarchy_SystemUserGlobal_i_ApplicationId", "applicationhierarchy").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.Fk_ApplicationHerarchy_SystemUserGlobal_i_ApplicationId", "applicationhierarchy").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for applicationhierarchy in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<applicationhierarchy> applicationhierarchyReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.Fk_ApplicationHerarchy_SystemUserGlobal_i_ApplicationId", "applicationhierarchy");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.Fk_ApplicationHerarchy_SystemUserGlobal_i_ApplicationId", "applicationhierarchy", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<applicationhierarchy>("Sigesoft.Node.WinClient.DAL.Fk_ApplicationHerarchy_SystemUserGlobal_i_ApplicationId", "applicationhierarchy").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_SystemUser_SystemUserGlobalProfile_v_SystemUserId", "systemuser")]
        public systemuser systemuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUserGlobalProfile_v_SystemUserId", "systemuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUserGlobalProfile_v_SystemUserId", "systemuser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<systemuser> systemuserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUserGlobalProfile_v_SystemUserId", "systemuser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUserGlobalProfile_v_SystemUserId", "systemuser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUserGlobalProfile_v_SystemUserId", "systemuser").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.systemuserrolenode in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_SystemUserId
    /// i_NodeId
    /// i_RoleId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="systemuserrolenode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class systemuserrolenode : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new systemuserrolenode object.
        /// </summary>
        /// <param name="i_SystemUserId">Initial value of i_SystemUserId.</param>
        /// <param name="i_NodeId">Initial value of i_NodeId.</param>
        /// <param name="i_RoleId">Initial value of i_RoleId.</param>
        public static systemuserrolenode Createsystemuserrolenode(int i_SystemUserId, int i_NodeId, int i_RoleId)
        {
            systemuserrolenode systemuserrolenode = new systemuserrolenode();
            systemuserrolenode.i_SystemUserId = i_SystemUserId;
            systemuserrolenode.i_NodeId = i_NodeId;
            systemuserrolenode.i_RoleId = i_RoleId;
            return systemuserrolenode;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_SystemUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_SystemUserId
        {
            get
            {
                int value = _i_SystemUserId;
                OnGeti_SystemUserId(ref value);
                return value;
            }
            set
            {
                if (_i_SystemUserId != value)
                {
                  Oni_SystemUserIdChanging(ref value);
                  ReportPropertyChanging("i_SystemUserId");
                  _i_SystemUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SystemUserId");
                  Oni_SystemUserIdChanged();
              }
            }
        }
        private int _i_SystemUserId;
        partial void OnGeti_SystemUserId(ref int value);
        partial void Oni_SystemUserIdChanging(ref int value);
        partial void Oni_SystemUserIdChanged();
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_NodeId
        {
            get
            {
                int value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private int _i_NodeId;
        partial void OnGeti_NodeId(ref int value);
        partial void Oni_NodeIdChanging(ref int value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for i_RoleId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_RoleId
        {
            get
            {
                int value = _i_RoleId;
                OnGeti_RoleId(ref value);
                return value;
            }
            set
            {
                if (_i_RoleId != value)
                {
                  Oni_RoleIdChanging(ref value);
                  ReportPropertyChanging("i_RoleId");
                  _i_RoleId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_RoleId");
                  Oni_RoleIdChanged();
              }
            }
        }
        private int _i_RoleId;
        partial void OnGeti_RoleId(ref int value);
        partial void Oni_RoleIdChanging(ref int value);
        partial void Oni_RoleIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for rolenode in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_RoleNode_SystemUserRoleNode_i_NodeId_i_RoleId", "rolenode")]
        public rolenode rolenode
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_SystemUserRoleNode_i_NodeId_i_RoleId", "rolenode").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_SystemUserRoleNode_i_NodeId_i_RoleId", "rolenode").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for rolenode in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<rolenode> rolenodeReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_SystemUserRoleNode_i_NodeId_i_RoleId", "rolenode");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_SystemUserRoleNode_i_NodeId_i_RoleId", "rolenode", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<rolenode>("Sigesoft.Node.WinClient.DAL.Fk_RoleNode_SystemUserRoleNode_i_NodeId_i_RoleId", "rolenode").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_SystemUser_SystemUSerRoleNode_i_SystemUserId", "systemuser")]
        public systemuser systemuser
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUSerRoleNode_i_SystemUserId", "systemuser").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUSerRoleNode_i_SystemUserId", "systemuser").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for systemuser in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<systemuser> systemuserReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUSerRoleNode_i_SystemUserId", "systemuser");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUSerRoleNode_i_SystemUserId", "systemuser", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<systemuser>("Sigesoft.Node.WinClient.DAL.Fk_SystemUser_SystemUSerRoleNode_i_SystemUserId", "systemuser").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.testdevice in the schema.
    /// </summary>
    /// <KeyProperties>
    /// iTestDeviceId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="testdevice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class testdevice : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new testdevice object.
        /// </summary>
        /// <param name="iTestDeviceId">Initial value of iTestDeviceId.</param>
        public static testdevice Createtestdevice(int iTestDeviceId)
        {
            testdevice testdevice = new testdevice();
            testdevice.iTestDeviceId = iTestDeviceId;
            return testdevice;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for iTestDeviceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int iTestDeviceId
        {
            get
            {
                int value = _iTestDeviceId;
                OnGetiTestDeviceId(ref value);
                return value;
            }
            set
            {
                if (_iTestDeviceId != value)
                {
                  OniTestDeviceIdChanging(ref value);
                  ReportPropertyChanging("iTestDeviceId");
                  _iTestDeviceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iTestDeviceId");
                  OniTestDeviceIdChanged();
              }
            }
        }
        private int _iTestDeviceId;
        partial void OnGetiTestDeviceId(ref int value);
        partial void OniTestDeviceIdChanging(ref int value);
        partial void OniTestDeviceIdChanged();
    
        /// <summary>
        /// There are no comments for vTestDeviceName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string vTestDeviceName
        {
            get
            {
                string value = _vTestDeviceName;
                OnGetvTestDeviceName(ref value);
                return value;
            }
            set
            {
                if (_vTestDeviceName != value)
                {
                  OnvTestDeviceNameChanging(ref value);
                  ReportPropertyChanging("vTestDeviceName");
                  _vTestDeviceName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("vTestDeviceName");
                  OnvTestDeviceNameChanged();
              }
            }
        }
        private string _vTestDeviceName;
        partial void OnGetvTestDeviceName(ref string value);
        partial void OnvTestDeviceNameChanging(ref string value);
        partial void OnvTestDeviceNameChanged();
    
        /// <summary>
        /// There are no comments for vTestDeviceDescription in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string vTestDeviceDescription
        {
            get
            {
                string value = _vTestDeviceDescription;
                OnGetvTestDeviceDescription(ref value);
                return value;
            }
            set
            {
                if (_vTestDeviceDescription != value)
                {
                  OnvTestDeviceDescriptionChanging(ref value);
                  ReportPropertyChanging("vTestDeviceDescription");
                  _vTestDeviceDescription = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("vTestDeviceDescription");
                  OnvTestDeviceDescriptionChanged();
              }
            }
        }
        private string _vTestDeviceDescription;
        partial void OnGetvTestDeviceDescription(ref string value);
        partial void OnvTestDeviceDescriptionChanging(ref string value);
        partial void OnvTestDeviceDescriptionChanged();
    
        /// <summary>
        /// There are no comments for iTestDeviceIdBrand in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> iTestDeviceIdBrand
        {
            get
            {
                global::System.Nullable<int> value = _iTestDeviceIdBrand;
                OnGetiTestDeviceIdBrand(ref value);
                return value;
            }
            set
            {
                if (_iTestDeviceIdBrand != value)
                {
                  OniTestDeviceIdBrandChanging(ref value);
                  ReportPropertyChanging("iTestDeviceIdBrand");
                  _iTestDeviceIdBrand = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iTestDeviceIdBrand");
                  OniTestDeviceIdBrandChanged();
              }
            }
        }
        private global::System.Nullable<int> _iTestDeviceIdBrand;
        partial void OnGetiTestDeviceIdBrand(ref global::System.Nullable<int> value);
        partial void OniTestDeviceIdBrandChanging(ref global::System.Nullable<int> value);
        partial void OniTestDeviceIdBrandChanged();
    
        /// <summary>
        /// There are no comments for vTestDeviceLot in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string vTestDeviceLot
        {
            get
            {
                string value = _vTestDeviceLot;
                OnGetvTestDeviceLot(ref value);
                return value;
            }
            set
            {
                if (_vTestDeviceLot != value)
                {
                  OnvTestDeviceLotChanging(ref value);
                  ReportPropertyChanging("vTestDeviceLot");
                  _vTestDeviceLot = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("vTestDeviceLot");
                  OnvTestDeviceLotChanged();
              }
            }
        }
        private string _vTestDeviceLot;
        partial void OnGetvTestDeviceLot(ref string value);
        partial void OnvTestDeviceLotChanging(ref string value);
        partial void OnvTestDeviceLotChanged();
    
        /// <summary>
        /// There are no comments for dTestDeviceDueDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> dTestDeviceDueDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _dTestDeviceDueDate;
                OnGetdTestDeviceDueDate(ref value);
                return value;
            }
            set
            {
                if (_dTestDeviceDueDate != value)
                {
                  OndTestDeviceDueDateChanging(ref value);
                  ReportPropertyChanging("dTestDeviceDueDate");
                  _dTestDeviceDueDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("dTestDeviceDueDate");
                  OndTestDeviceDueDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _dTestDeviceDueDate;
        partial void OnGetdTestDeviceDueDate(ref global::System.Nullable<System.DateTime> value);
        partial void OndTestDeviceDueDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OndTestDeviceDueDateChanged();
    
        /// <summary>
        /// There are no comments for iTestDeviceState in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> iTestDeviceState
        {
            get
            {
                global::System.Nullable<bool> value = _iTestDeviceState;
                OnGetiTestDeviceState(ref value);
                return value;
            }
            set
            {
                if (_iTestDeviceState != value)
                {
                  OniTestDeviceStateChanging(ref value);
                  ReportPropertyChanging("iTestDeviceState");
                  _iTestDeviceState = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iTestDeviceState");
                  OniTestDeviceStateChanged();
              }
            }
        }
        private global::System.Nullable<bool> _iTestDeviceState;
        partial void OnGetiTestDeviceState(ref global::System.Nullable<bool> value);
        partial void OniTestDeviceStateChanging(ref global::System.Nullable<bool> value);
        partial void OniTestDeviceStateChanged();
    
        /// <summary>
        /// There are no comments for iDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> iDeleted
        {
            get
            {
                global::System.Nullable<bool> value = _iDeleted;
                OnGetiDeleted(ref value);
                return value;
            }
            set
            {
                if (_iDeleted != value)
                {
                  OniDeletedChanging(ref value);
                  ReportPropertyChanging("iDeleted");
                  _iDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iDeleted");
                  OniDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _iDeleted;
        partial void OnGetiDeleted(ref global::System.Nullable<bool> value);
        partial void OniDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OniDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for brand in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK__testdevic__iTest__0214FC18", "brand")]
        public brand brand
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<brand>("Sigesoft.Node.WinClient.DAL.FK__testdevic__iTest__0214FC18", "brand").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<brand>("Sigesoft.Node.WinClient.DAL.FK__testdevic__iTest__0214FC18", "brand").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for brand in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<brand> brandReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<brand>("Sigesoft.Node.WinClient.DAL.FK__testdevic__iTest__0214FC18", "brand");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<brand>("Sigesoft.Node.WinClient.DAL.FK__testdevic__iTest__0214FC18", "brand", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<brand>("Sigesoft.Node.WinClient.DAL.FK__testdevic__iTest__0214FC18", "brand").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.typeofeep in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_TypeofEEPId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="typeofeep")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class typeofeep : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new typeofeep object.
        /// </summary>
        /// <param name="v_TypeofEEPId">Initial value of v_TypeofEEPId.</param>
        public static typeofeep Createtypeofeep(string v_TypeofEEPId)
        {
            typeofeep typeofeep = new typeofeep();
            typeofeep.v_TypeofEEPId = v_TypeofEEPId;
            return typeofeep;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_TypeofEEPId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_TypeofEEPId
        {
            get
            {
                string value = _v_TypeofEEPId;
                OnGetv_TypeofEEPId(ref value);
                return value;
            }
            set
            {
                if (_v_TypeofEEPId != value)
                {
                  Onv_TypeofEEPIdChanging(ref value);
                  ReportPropertyChanging("v_TypeofEEPId");
                  _v_TypeofEEPId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_TypeofEEPId");
                  Onv_TypeofEEPIdChanged();
              }
            }
        }
        private string _v_TypeofEEPId;
        partial void OnGetv_TypeofEEPId(ref string value);
        partial void Onv_TypeofEEPIdChanging(ref string value);
        partial void Onv_TypeofEEPIdChanged();
    
        /// <summary>
        /// There are no comments for v_HistoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_HistoryId
        {
            get
            {
                string value = _v_HistoryId;
                OnGetv_HistoryId(ref value);
                return value;
            }
            set
            {
                if (_v_HistoryId != value)
                {
                  Onv_HistoryIdChanging(ref value);
                  ReportPropertyChanging("v_HistoryId");
                  _v_HistoryId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_HistoryId");
                  Onv_HistoryIdChanged();
              }
            }
        }
        private string _v_HistoryId;
        partial void OnGetv_HistoryId(ref string value);
        partial void Onv_HistoryIdChanging(ref string value);
        partial void Onv_HistoryIdChanged();
    
        /// <summary>
        /// There are no comments for i_TypeofEEPId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_TypeofEEPId
        {
            get
            {
                global::System.Nullable<int> value = _i_TypeofEEPId;
                OnGeti_TypeofEEPId(ref value);
                return value;
            }
            set
            {
                if (_i_TypeofEEPId != value)
                {
                  Oni_TypeofEEPIdChanging(ref value);
                  ReportPropertyChanging("i_TypeofEEPId");
                  _i_TypeofEEPId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_TypeofEEPId");
                  Oni_TypeofEEPIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_TypeofEEPId;
        partial void OnGeti_TypeofEEPId(ref global::System.Nullable<int> value);
        partial void Oni_TypeofEEPIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_TypeofEEPIdChanged();
    
        /// <summary>
        /// There are no comments for r_Percentage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> r_Percentage
        {
            get
            {
                global::System.Nullable<float> value = _r_Percentage;
                OnGetr_Percentage(ref value);
                return value;
            }
            set
            {
                if (_r_Percentage != value)
                {
                  Onr_PercentageChanging(ref value);
                  ReportPropertyChanging("r_Percentage");
                  _r_Percentage = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("r_Percentage");
                  Onr_PercentageChanged();
              }
            }
        }
        private global::System.Nullable<float> _r_Percentage;
        partial void OnGetr_Percentage(ref global::System.Nullable<float> value);
        partial void Onr_PercentageChanging(ref global::System.Nullable<float> value);
        partial void Onr_PercentageChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for history in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_History_TypeofEPP_v_HistoryId", "history")]
        public history history
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<history>("Sigesoft.Node.WinClient.DAL.Fk_History_TypeofEPP_v_HistoryId", "history").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<history>("Sigesoft.Node.WinClient.DAL.Fk_History_TypeofEPP_v_HistoryId", "history").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for history in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<history> historyReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<history>("Sigesoft.Node.WinClient.DAL.Fk_History_TypeofEPP_v_HistoryId", "history");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<history>("Sigesoft.Node.WinClient.DAL.Fk_History_TypeofEPP_v_HistoryId", "history", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<history>("Sigesoft.Node.WinClient.DAL.Fk_History_TypeofEPP_v_HistoryId", "history").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usuarioregcovid in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_UsuarioRegcovidId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usuarioregcovid")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class usuarioregcovid : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usuarioregcovid object.
        /// </summary>
        /// <param name="i_UsuarioRegcovidId">Initial value of i_UsuarioRegcovidId.</param>
        public static usuarioregcovid Createusuarioregcovid(int i_UsuarioRegcovidId)
        {
            usuarioregcovid usuarioregcovid = new usuarioregcovid();
            usuarioregcovid.i_UsuarioRegcovidId = i_UsuarioRegcovidId;
            return usuarioregcovid;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_UsuarioRegcovidId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_UsuarioRegcovidId
        {
            get
            {
                int value = _i_UsuarioRegcovidId;
                OnGeti_UsuarioRegcovidId(ref value);
                return value;
            }
            set
            {
                if (_i_UsuarioRegcovidId != value)
                {
                  Oni_UsuarioRegcovidIdChanging(ref value);
                  ReportPropertyChanging("i_UsuarioRegcovidId");
                  _i_UsuarioRegcovidId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UsuarioRegcovidId");
                  Oni_UsuarioRegcovidIdChanged();
              }
            }
        }
        private int _i_UsuarioRegcovidId;
        partial void OnGeti_UsuarioRegcovidId(ref int value);
        partial void Oni_UsuarioRegcovidIdChanging(ref int value);
        partial void Oni_UsuarioRegcovidIdChanged();
    
        /// <summary>
        /// There are no comments for i_NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NodeId
        {
            get
            {
                global::System.Nullable<int> value = _i_NodeId;
                OnGeti_NodeId(ref value);
                return value;
            }
            set
            {
                if (_i_NodeId != value)
                {
                  Oni_NodeIdChanging(ref value);
                  ReportPropertyChanging("i_NodeId");
                  _i_NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NodeId");
                  Oni_NodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NodeId;
        partial void OnGeti_NodeId(ref global::System.Nullable<int> value);
        partial void Oni_NodeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_NodeIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProtocolId
        {
            get
            {
                string value = _v_ProtocolId;
                OnGetv_ProtocolId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolId != value)
                {
                  Onv_ProtocolIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolId");
                  _v_ProtocolId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProtocolId");
                  Onv_ProtocolIdChanged();
              }
            }
        }
        private string _v_ProtocolId;
        partial void OnGetv_ProtocolId(ref string value);
        partial void Onv_ProtocolIdChanging(ref string value);
        partial void Onv_ProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for v_NodeName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_NodeName
        {
            get
            {
                string value = _v_NodeName;
                OnGetv_NodeName(ref value);
                return value;
            }
            set
            {
                if (_v_NodeName != value)
                {
                  Onv_NodeNameChanging(ref value);
                  ReportPropertyChanging("v_NodeName");
                  _v_NodeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_NodeName");
                  Onv_NodeNameChanged();
              }
            }
        }
        private string _v_NodeName;
        partial void OnGetv_NodeName(ref string value);
        partial void Onv_NodeNameChanging(ref string value);
        partial void Onv_NodeNameChanged();
    
        /// <summary>
        /// There are no comments for v_UserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_UserName
        {
            get
            {
                string value = _v_UserName;
                OnGetv_UserName(ref value);
                return value;
            }
            set
            {
                if (_v_UserName != value)
                {
                  Onv_UserNameChanging(ref value);
                  ReportPropertyChanging("v_UserName");
                  _v_UserName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_UserName");
                  Onv_UserNameChanged();
              }
            }
        }
        private string _v_UserName;
        partial void OnGetv_UserName(ref string value);
        partial void Onv_UserNameChanging(ref string value);
        partial void Onv_UserNameChanged();
    
        /// <summary>
        /// There are no comments for v_Password in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Password
        {
            get
            {
                string value = _v_Password;
                OnGetv_Password(ref value);
                return value;
            }
            set
            {
                if (_v_Password != value)
                {
                  Onv_PasswordChanging(ref value);
                  ReportPropertyChanging("v_Password");
                  _v_Password = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Password");
                  Onv_PasswordChanged();
              }
            }
        }
        private string _v_Password;
        partial void OnGetv_Password(ref string value);
        partial void Onv_PasswordChanging(ref string value);
        partial void Onv_PasswordChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for usuarioregcovidorganization in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK__usuariore__i_usu__72D6B13B", "usuarioregcovidorganization")]
        public EntityCollection<usuarioregcovidorganization> usuarioregcovidorganization
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<usuarioregcovidorganization>("Sigesoft.Node.WinClient.DAL.FK__usuariore__i_usu__72D6B13B", "usuarioregcovidorganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<usuarioregcovidorganization>("Sigesoft.Node.WinClient.DAL.FK__usuariore__i_usu__72D6B13B", "usuarioregcovidorganization", value);
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usuarioregcovidorganization in the schema.
    /// </summary>
    /// <KeyProperties>
    /// i_uro
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usuarioregcovidorganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class usuarioregcovidorganization : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usuarioregcovidorganization object.
        /// </summary>
        /// <param name="i_uro">Initial value of i_uro.</param>
        public static usuarioregcovidorganization Createusuarioregcovidorganization(int i_uro)
        {
            usuarioregcovidorganization usuarioregcovidorganization = new usuarioregcovidorganization();
            usuarioregcovidorganization.i_uro = i_uro;
            return usuarioregcovidorganization;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_uro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public int i_uro
        {
            get
            {
                int value = _i_uro;
                OnGeti_uro(ref value);
                return value;
            }
            set
            {
                if (_i_uro != value)
                {
                  Oni_uroChanging(ref value);
                  ReportPropertyChanging("i_uro");
                  _i_uro = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_uro");
                  Oni_uroChanged();
              }
            }
        }
        private int _i_uro;
        partial void OnGeti_uro(ref int value);
        partial void Oni_uroChanging(ref int value);
        partial void Oni_uroChanged();
    
        /// <summary>
        /// There are no comments for v_organizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_organizationId
        {
            get
            {
                string value = _v_organizationId;
                OnGetv_organizationId(ref value);
                return value;
            }
            set
            {
                if (_v_organizationId != value)
                {
                  Onv_organizationIdChanging(ref value);
                  ReportPropertyChanging("v_organizationId");
                  _v_organizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_organizationId");
                  Onv_organizationIdChanged();
              }
            }
        }
        private string _v_organizationId;
        partial void OnGetv_organizationId(ref string value);
        partial void Onv_organizationIdChanging(ref string value);
        partial void Onv_organizationIdChanged();
    
        /// <summary>
        /// There are no comments for i_usuarioRegcovidId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_usuarioRegcovidId
        {
            get
            {
                global::System.Nullable<int> value = _i_usuarioRegcovidId;
                OnGeti_usuarioRegcovidId(ref value);
                return value;
            }
            set
            {
                if (_i_usuarioRegcovidId != value)
                {
                  Oni_usuarioRegcovidIdChanging(ref value);
                  ReportPropertyChanging("i_usuarioRegcovidId");
                  _i_usuarioRegcovidId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_usuarioRegcovidId");
                  Oni_usuarioRegcovidIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_usuarioRegcovidId;
        partial void OnGeti_usuarioRegcovidId(ref global::System.Nullable<int> value);
        partial void Oni_usuarioRegcovidIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_usuarioRegcovidIdChanged();
    
        /// <summary>
        /// There are no comments for i_typeUser in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_typeUser
        {
            get
            {
                global::System.Nullable<int> value = _i_typeUser;
                OnGeti_typeUser(ref value);
                return value;
            }
            set
            {
                if (_i_typeUser != value)
                {
                  Oni_typeUserChanging(ref value);
                  ReportPropertyChanging("i_typeUser");
                  _i_typeUser = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_typeUser");
                  Oni_typeUserChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_typeUser;
        partial void OnGeti_typeUser(ref global::System.Nullable<int> value);
        partial void Oni_typeUserChanging(ref global::System.Nullable<int> value);
        partial void Oni_typeUserChanged();
    
        /// <summary>
        /// There are no comments for i_deleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> i_deleted
        {
            get
            {
                global::System.Nullable<bool> value = _i_deleted;
                OnGeti_deleted(ref value);
                return value;
            }
            set
            {
                if (_i_deleted != value)
                {
                  Oni_deletedChanging(ref value);
                  ReportPropertyChanging("i_deleted");
                  _i_deleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_deleted");
                  Oni_deletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _i_deleted;
        partial void OnGeti_deleted(ref global::System.Nullable<bool> value);
        partial void Oni_deletedChanging(ref global::System.Nullable<bool> value);
        partial void Oni_deletedChanged();
    
        /// <summary>
        /// There are no comments for i_active in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> i_active
        {
            get
            {
                global::System.Nullable<bool> value = _i_active;
                OnGeti_active(ref value);
                return value;
            }
            set
            {
                if (_i_active != value)
                {
                  Oni_activeChanging(ref value);
                  ReportPropertyChanging("i_active");
                  _i_active = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_active");
                  Oni_activeChanged();
              }
            }
        }
        private global::System.Nullable<bool> _i_active;
        partial void OnGeti_active(ref global::System.Nullable<bool> value);
        partial void Oni_activeChanging(ref global::System.Nullable<bool> value);
        partial void Oni_activeChanged();
    
        /// <summary>
        /// There are no comments for i_userCreate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_userCreate
        {
            get
            {
                global::System.Nullable<int> value = _i_userCreate;
                OnGeti_userCreate(ref value);
                return value;
            }
            set
            {
                if (_i_userCreate != value)
                {
                  Oni_userCreateChanging(ref value);
                  ReportPropertyChanging("i_userCreate");
                  _i_userCreate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_userCreate");
                  Oni_userCreateChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_userCreate;
        partial void OnGeti_userCreate(ref global::System.Nullable<int> value);
        partial void Oni_userCreateChanging(ref global::System.Nullable<int> value);
        partial void Oni_userCreateChanged();
    
        /// <summary>
        /// There are no comments for d_dateCreate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_dateCreate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_dateCreate;
                OnGetd_dateCreate(ref value);
                return value;
            }
            set
            {
                if (_d_dateCreate != value)
                {
                  Ond_dateCreateChanging(ref value);
                  ReportPropertyChanging("d_dateCreate");
                  _d_dateCreate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_dateCreate");
                  Ond_dateCreateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_dateCreate;
        partial void OnGetd_dateCreate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_dateCreateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_dateCreateChanged();
    
        /// <summary>
        /// There are no comments for i_userUpdate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_userUpdate
        {
            get
            {
                global::System.Nullable<int> value = _i_userUpdate;
                OnGeti_userUpdate(ref value);
                return value;
            }
            set
            {
                if (_i_userUpdate != value)
                {
                  Oni_userUpdateChanging(ref value);
                  ReportPropertyChanging("i_userUpdate");
                  _i_userUpdate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_userUpdate");
                  Oni_userUpdateChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_userUpdate;
        partial void OnGeti_userUpdate(ref global::System.Nullable<int> value);
        partial void Oni_userUpdateChanging(ref global::System.Nullable<int> value);
        partial void Oni_userUpdateChanged();
    
        /// <summary>
        /// There are no comments for d_dateUpdate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_dateUpdate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_dateUpdate;
                OnGetd_dateUpdate(ref value);
                return value;
            }
            set
            {
                if (_d_dateUpdate != value)
                {
                  Ond_dateUpdateChanging(ref value);
                  ReportPropertyChanging("d_dateUpdate");
                  _d_dateUpdate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_dateUpdate");
                  Ond_dateUpdateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_dateUpdate;
        partial void OnGetd_dateUpdate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_dateUpdateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_dateUpdateChanged();
    
        /// <summary>
        /// There are no comments for i_userDelete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_userDelete
        {
            get
            {
                global::System.Nullable<int> value = _i_userDelete;
                OnGeti_userDelete(ref value);
                return value;
            }
            set
            {
                if (_i_userDelete != value)
                {
                  Oni_userDeleteChanging(ref value);
                  ReportPropertyChanging("i_userDelete");
                  _i_userDelete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_userDelete");
                  Oni_userDeleteChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_userDelete;
        partial void OnGeti_userDelete(ref global::System.Nullable<int> value);
        partial void Oni_userDeleteChanging(ref global::System.Nullable<int> value);
        partial void Oni_userDeleteChanged();
    
        /// <summary>
        /// There are no comments for d_dateDelete in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_dateDelete
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_dateDelete;
                OnGetd_dateDelete(ref value);
                return value;
            }
            set
            {
                if (_d_dateDelete != value)
                {
                  Ond_dateDeleteChanging(ref value);
                  ReportPropertyChanging("d_dateDelete");
                  _d_dateDelete = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_dateDelete");
                  Ond_dateDeleteChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_dateDelete;
        partial void OnGetd_dateDelete(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_dateDeleteChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_dateDeleteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK__usuariore__v_org__71E28D02", "organization")]
        public organization organization
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.FK__usuariore__v_org__71E28D02", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.FK__usuariore__v_org__71E28D02", "organization").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.FK__usuariore__v_org__71E28D02", "organization");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.FK__usuariore__v_org__71E28D02", "organization", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.FK__usuariore__v_org__71E28D02", "organization").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for usuarioregcovid in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "FK__usuariore__i_usu__72D6B13B", "usuarioregcovid")]
        public usuarioregcovid usuarioregcovid
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<usuarioregcovid>("Sigesoft.Node.WinClient.DAL.FK__usuariore__i_usu__72D6B13B", "usuarioregcovid").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<usuarioregcovid>("Sigesoft.Node.WinClient.DAL.FK__usuariore__i_usu__72D6B13B", "usuarioregcovid").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for usuarioregcovid in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<usuarioregcovid> usuarioregcovidReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<usuarioregcovid>("Sigesoft.Node.WinClient.DAL.FK__usuariore__i_usu__72D6B13B", "usuarioregcovid");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<usuarioregcovid>("Sigesoft.Node.WinClient.DAL.FK__usuariore__i_usu__72D6B13B", "usuarioregcovid", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<usuarioregcovid>("Sigesoft.Node.WinClient.DAL.FK__usuariore__i_usu__72D6B13B", "usuarioregcovid").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.warehouse in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_WarehouseId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="warehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class warehouse : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new warehouse object.
        /// </summary>
        /// <param name="v_WarehouseId">Initial value of v_WarehouseId.</param>
        public static warehouse Createwarehouse(string v_WarehouseId)
        {
            warehouse warehouse = new warehouse();
            warehouse.v_WarehouseId = v_WarehouseId;
            return warehouse;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_WarehouseId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_WarehouseId
        {
            get
            {
                string value = _v_WarehouseId;
                OnGetv_WarehouseId(ref value);
                return value;
            }
            set
            {
                if (_v_WarehouseId != value)
                {
                  Onv_WarehouseIdChanging(ref value);
                  ReportPropertyChanging("v_WarehouseId");
                  _v_WarehouseId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_WarehouseId");
                  Onv_WarehouseIdChanged();
              }
            }
        }
        private string _v_WarehouseId;
        partial void OnGetv_WarehouseId(ref string value);
        partial void Onv_WarehouseIdChanging(ref string value);
        partial void Onv_WarehouseIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_LocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LocationId
        {
            get
            {
                string value = _v_LocationId;
                OnGetv_LocationId(ref value);
                return value;
            }
            set
            {
                if (_v_LocationId != value)
                {
                  Onv_LocationIdChanging(ref value);
                  ReportPropertyChanging("v_LocationId");
                  _v_LocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LocationId");
                  Onv_LocationIdChanged();
              }
            }
        }
        private string _v_LocationId;
        partial void OnGetv_LocationId(ref string value);
        partial void Onv_LocationIdChanging(ref string value);
        partial void Onv_LocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for v_AdditionalInformation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AdditionalInformation
        {
            get
            {
                string value = _v_AdditionalInformation;
                OnGetv_AdditionalInformation(ref value);
                return value;
            }
            set
            {
                if (_v_AdditionalInformation != value)
                {
                  Onv_AdditionalInformationChanging(ref value);
                  ReportPropertyChanging("v_AdditionalInformation");
                  _v_AdditionalInformation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AdditionalInformation");
                  Onv_AdditionalInformationChanged();
              }
            }
        }
        private string _v_AdditionalInformation;
        partial void OnGetv_AdditionalInformation(ref string value);
        partial void Onv_AdditionalInformationChanging(ref string value);
        partial void Onv_AdditionalInformationChanged();
    
        /// <summary>
        /// There are no comments for i_CostCenterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_CostCenterId
        {
            get
            {
                global::System.Nullable<int> value = _i_CostCenterId;
                OnGeti_CostCenterId(ref value);
                return value;
            }
            set
            {
                if (_i_CostCenterId != value)
                {
                  Oni_CostCenterIdChanging(ref value);
                  ReportPropertyChanging("i_CostCenterId");
                  _i_CostCenterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_CostCenterId");
                  Oni_CostCenterIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_CostCenterId;
        partial void OnGeti_CostCenterId(ref global::System.Nullable<int> value);
        partial void Oni_CostCenterIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_CostCenterIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for movement in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_Movement_i_WarehouseId", "movement")]
        public EntityCollection<movement> movement
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<movement>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_Movement_i_WarehouseId", "movement");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<movement>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_Movement_i_WarehouseId", "movement", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for movementdetail in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_MovementDetail_i_WarehouseId", "movementdetail")]
        public EntityCollection<movementdetail> movementdetail
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<movementdetail>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_MovementDetail_i_WarehouseId", "movementdetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<movementdetail>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_MovementDetail_i_WarehouseId", "movementdetail", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for nodeorganizationlocationwarehouseprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_NodeOrganizationLocationWarehouseProfile_v_Warehou", "nodeorganizationlocationwarehouseprofile")]
        public EntityCollection<nodeorganizationlocationwarehouseprofile> nodeorganizationlocationwarehouseprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<nodeorganizationlocationwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_NodeOrganizationLocationWarehouseProfile_v_Warehou", "nodeorganizationlocationwarehouseprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<nodeorganizationlocationwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_NodeOrganizationLocationWarehouseProfile_v_Warehou", "nodeorganizationlocationwarehouseprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for productwarehouse in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_ProductWarehouse_i_WarehouseId", "productwarehouse")]
        public EntityCollection<productwarehouse> productwarehouse
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<productwarehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_ProductWarehouse_i_WarehouseId", "productwarehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<productwarehouse>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_ProductWarehouse_i_WarehouseId", "productwarehouse", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for restrictedwarehouseprofile in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Warehouse_RestrictedWarehouseProfile_v_WarehouseId", "restrictedwarehouseprofile")]
        public EntityCollection<restrictedwarehouseprofile> restrictedwarehouseprofile
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedCollection<restrictedwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_RestrictedWarehouseProfile_v_WarehouseId", "restrictedwarehouseprofile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedCollection<restrictedwarehouseprofile>("Sigesoft.Node.WinClient.DAL.Fk_Warehouse_RestrictedWarehouseProfile_v_WarehouseId", "restrictedwarehouseprofile", value);
                }
            }
        }
    
        /// <summary>
        /// There are no comments for location in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Location_Warehouse_v_LocationId", "location")]
        public location location
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_Warehouse_v_LocationId", "location").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_Warehouse_v_LocationId", "location").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for location in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<location> locationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_Warehouse_v_LocationId", "location");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_Warehouse_v_LocationId", "location", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<location>("Sigesoft.Node.WinClient.DAL.Fk_Location_Warehouse_v_LocationId", "location").Value = null;
                }
            }
        }
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_Organization_Warehouse_i_OrganizationId", "organization")]
        public organization organization
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_Warehouse_i_OrganizationId", "organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_Warehouse_i_OrganizationId", "organization").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for organization in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<organization> organizationReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_Warehouse_i_OrganizationId", "organization");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_Warehouse_i_OrganizationId", "organization", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<organization>("Sigesoft.Node.WinClient.DAL.Fk_Organization_Warehouse_i_OrganizationId", "organization").Value = null;
                }
            }
        }

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.workstationdangers in the schema.
    /// </summary>
    /// <KeyProperties>
    /// v_WorkstationDangersId
    /// </KeyProperties>
    [EdmEntityTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="workstationdangers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class workstationdangers : EntityObject    {
        #region Factory Method

        /// <summary>
        /// Create a new workstationdangers object.
        /// </summary>
        /// <param name="v_WorkstationDangersId">Initial value of v_WorkstationDangersId.</param>
        public static workstationdangers Createworkstationdangers(string v_WorkstationDangersId)
        {
            workstationdangers workstationdangers = new workstationdangers();
            workstationdangers.v_WorkstationDangersId = v_WorkstationDangersId;
            return workstationdangers;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_WorkstationDangersId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public string v_WorkstationDangersId
        {
            get
            {
                string value = _v_WorkstationDangersId;
                OnGetv_WorkstationDangersId(ref value);
                return value;
            }
            set
            {
                if (_v_WorkstationDangersId != value)
                {
                  Onv_WorkstationDangersIdChanging(ref value);
                  ReportPropertyChanging("v_WorkstationDangersId");
                  _v_WorkstationDangersId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_WorkstationDangersId");
                  Onv_WorkstationDangersIdChanged();
              }
            }
        }
        private string _v_WorkstationDangersId;
        partial void OnGetv_WorkstationDangersId(ref string value);
        partial void Onv_WorkstationDangersIdChanging(ref string value);
        partial void Onv_WorkstationDangersIdChanged();
    
        /// <summary>
        /// There are no comments for v_HistoryId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_HistoryId
        {
            get
            {
                string value = _v_HistoryId;
                OnGetv_HistoryId(ref value);
                return value;
            }
            set
            {
                if (_v_HistoryId != value)
                {
                  Onv_HistoryIdChanging(ref value);
                  ReportPropertyChanging("v_HistoryId");
                  _v_HistoryId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_HistoryId");
                  Onv_HistoryIdChanged();
              }
            }
        }
        private string _v_HistoryId;
        partial void OnGetv_HistoryId(ref string value);
        partial void Onv_HistoryIdChanging(ref string value);
        partial void Onv_HistoryIdChanged();
    
        /// <summary>
        /// There are no comments for i_DangerId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_DangerId
        {
            get
            {
                global::System.Nullable<int> value = _i_DangerId;
                OnGeti_DangerId(ref value);
                return value;
            }
            set
            {
                if (_i_DangerId != value)
                {
                  Oni_DangerIdChanging(ref value);
                  ReportPropertyChanging("i_DangerId");
                  _i_DangerId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_DangerId");
                  Oni_DangerIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_DangerId;
        partial void OnGeti_DangerId(ref global::System.Nullable<int> value);
        partial void Oni_DangerIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_DangerIdChanged();
    
        /// <summary>
        /// There are no comments for i_IsDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsDeleted
        {
            get
            {
                global::System.Nullable<int> value = _i_IsDeleted;
                OnGeti_IsDeleted(ref value);
                return value;
            }
            set
            {
                if (_i_IsDeleted != value)
                {
                  Oni_IsDeletedChanging(ref value);
                  ReportPropertyChanging("i_IsDeleted");
                  _i_IsDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsDeleted");
                  Oni_IsDeletedChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsDeleted;
        partial void OnGeti_IsDeleted(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsDeletedChanged();
    
        /// <summary>
        /// There are no comments for i_InsertUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_InsertUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_InsertUserId;
                OnGeti_InsertUserId(ref value);
                return value;
            }
            set
            {
                if (_i_InsertUserId != value)
                {
                  Oni_InsertUserIdChanging(ref value);
                  ReportPropertyChanging("i_InsertUserId");
                  _i_InsertUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_InsertUserId");
                  Oni_InsertUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_InsertUserId;
        partial void OnGeti_InsertUserId(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_InsertUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for i_UpdateUserId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_UpdateUserId
        {
            get
            {
                global::System.Nullable<int> value = _i_UpdateUserId;
                OnGeti_UpdateUserId(ref value);
                return value;
            }
            set
            {
                if (_i_UpdateUserId != value)
                {
                  Oni_UpdateUserIdChanging(ref value);
                  ReportPropertyChanging("i_UpdateUserId");
                  _i_UpdateUserId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_UpdateUserId");
                  Oni_UpdateUserIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_UpdateUserId;
        partial void OnGeti_UpdateUserId(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_UpdateUserIdChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for i_NoiseSource in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NoiseSource
        {
            get
            {
                global::System.Nullable<int> value = _i_NoiseSource;
                OnGeti_NoiseSource(ref value);
                return value;
            }
            set
            {
                if (_i_NoiseSource != value)
                {
                  Oni_NoiseSourceChanging(ref value);
                  ReportPropertyChanging("i_NoiseSource");
                  _i_NoiseSource = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NoiseSource");
                  Oni_NoiseSourceChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NoiseSource;
        partial void OnGeti_NoiseSource(ref global::System.Nullable<int> value);
        partial void Oni_NoiseSourceChanging(ref global::System.Nullable<int> value);
        partial void Oni_NoiseSourceChanged();
    
        /// <summary>
        /// There are no comments for i_NoiseLevel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NoiseLevel
        {
            get
            {
                global::System.Nullable<int> value = _i_NoiseLevel;
                OnGeti_NoiseLevel(ref value);
                return value;
            }
            set
            {
                if (_i_NoiseLevel != value)
                {
                  Oni_NoiseLevelChanging(ref value);
                  ReportPropertyChanging("i_NoiseLevel");
                  _i_NoiseLevel = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NoiseLevel");
                  Oni_NoiseLevelChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NoiseLevel;
        partial void OnGeti_NoiseLevel(ref global::System.Nullable<int> value);
        partial void Oni_NoiseLevelChanging(ref global::System.Nullable<int> value);
        partial void Oni_NoiseLevelChanged();
    
        /// <summary>
        /// There are no comments for v_TimeOfExposureToNoise in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_TimeOfExposureToNoise
        {
            get
            {
                string value = _v_TimeOfExposureToNoise;
                OnGetv_TimeOfExposureToNoise(ref value);
                return value;
            }
            set
            {
                if (_v_TimeOfExposureToNoise != value)
                {
                  Onv_TimeOfExposureToNoiseChanging(ref value);
                  ReportPropertyChanging("v_TimeOfExposureToNoise");
                  _v_TimeOfExposureToNoise = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_TimeOfExposureToNoise");
                  Onv_TimeOfExposureToNoiseChanged();
              }
            }
        }
        private string _v_TimeOfExposureToNoise;
        partial void OnGetv_TimeOfExposureToNoise(ref string value);
        partial void Onv_TimeOfExposureToNoiseChanging(ref string value);
        partial void Onv_TimeOfExposureToNoiseChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// There are no comments for history in the schema.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Sigesoft.Node.WinClient.DAL", "Fk_History_WorkstationDangers_v_HistoryId", "history")]
        public history history
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<history>("Sigesoft.Node.WinClient.DAL.Fk_History_WorkstationDangers_v_HistoryId", "history").Value;
            }
            set
            {
                ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<history>("Sigesoft.Node.WinClient.DAL.Fk_History_WorkstationDangers_v_HistoryId", "history").Value = value;
            }
        }
    
        /// <summary>
        /// There are no comments for history in the schema.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<history> historyReference
        {
            get
            {
                return ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<history>("Sigesoft.Node.WinClient.DAL.Fk_History_WorkstationDangers_v_HistoryId", "history");
            }
            set
            {
                if (value != null)
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.InitializeRelatedReference<history>("Sigesoft.Node.WinClient.DAL.Fk_History_WorkstationDangers_v_HistoryId", "history", value);
                }
                else 
                {
                    ((IEntityWithRelationships)(this)).RelationshipManager.GetRelatedReference<history>("Sigesoft.Node.WinClient.DAL.Fk_History_WorkstationDangers_v_HistoryId", "history").Value = null;
                }
            }
        }

        #endregion
    }

}

namespace Sigesoft.Node.WinClient.DAL
{

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.atenderpacientecategoriaResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="atenderpacientecategoriaResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class atenderpacientecategoriaResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new atenderpacientecategoriaResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        /// <param name="v_PersonId">Initial value of v_PersonId.</param>
        public static atenderpacientecategoriaResult CreateatenderpacientecategoriaResult(string v_ServiceId, string v_PersonId)
        {
            atenderpacientecategoriaResult atenderpacientecategoriaResult = new atenderpacientecategoriaResult();
            atenderpacientecategoriaResult.v_ServiceId = v_ServiceId;
            atenderpacientecategoriaResult.v_PersonId = v_PersonId;
            return atenderpacientecategoriaResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for d_CircuitStartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_CircuitStartDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_CircuitStartDate;
                OnGetd_CircuitStartDate(ref value);
                return value;
            }
            set
            {
                if (_d_CircuitStartDate != value)
                {
                  Ond_CircuitStartDateChanging(ref value);
                  ReportPropertyChanging("d_CircuitStartDate");
                  _d_CircuitStartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_CircuitStartDate");
                  Ond_CircuitStartDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_CircuitStartDate;
        partial void OnGetd_CircuitStartDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_CircuitStartDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_CircuitStartDateChanged();
    
        /// <summary>
        /// There are no comments for Paciente in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Paciente
        {
            get
            {
                string value = _Paciente;
                OnGetPaciente(ref value);
                return value;
            }
            set
            {
                if (_Paciente != value)
                {
                  OnPacienteChanging(ref value);
                  ReportPropertyChanging("Paciente");
                  _Paciente = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Paciente");
                  OnPacienteChanged();
              }
            }
        }
        private string _Paciente;
        partial void OnGetPaciente(ref string value);
        partial void OnPacienteChanging(ref string value);
        partial void OnPacienteChanged();
    
        /// <summary>
        /// There are no comments for Empleador in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Empleador
        {
            get
            {
                string value = _Empleador;
                OnGetEmpleador(ref value);
                return value;
            }
            set
            {
                if (_Empleador != value)
                {
                  OnEmpleadorChanging(ref value);
                  ReportPropertyChanging("Empleador");
                  _Empleador = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Empleador");
                  OnEmpleadorChanged();
              }
            }
        }
        private string _Empleador;
        partial void OnGetEmpleador(ref string value);
        partial void OnEmpleadorChanging(ref string value);
        partial void OnEmpleadorChanged();
    
        /// <summary>
        /// There are no comments for Cliente in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Cliente
        {
            get
            {
                string value = _Cliente;
                OnGetCliente(ref value);
                return value;
            }
            set
            {
                if (_Cliente != value)
                {
                  OnClienteChanging(ref value);
                  ReportPropertyChanging("Cliente");
                  _Cliente = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Cliente");
                  OnClienteChanged();
              }
            }
        }
        private string _Cliente;
        partial void OnGetCliente(ref string value);
        partial void OnClienteChanging(ref string value);
        partial void OnClienteChanged();
    
        /// <summary>
        /// There are no comments for Protocolo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Protocolo
        {
            get
            {
                string value = _Protocolo;
                OnGetProtocolo(ref value);
                return value;
            }
            set
            {
                if (_Protocolo != value)
                {
                  OnProtocoloChanging(ref value);
                  ReportPropertyChanging("Protocolo");
                  _Protocolo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Protocolo");
                  OnProtocoloChanged();
              }
            }
        }
        private string _Protocolo;
        partial void OnGetProtocolo(ref string value);
        partial void OnProtocoloChanging(ref string value);
        partial void OnProtocoloChanged();
    
        /// <summary>
        /// There are no comments for v_CurrentOccupation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CurrentOccupation
        {
            get
            {
                string value = _v_CurrentOccupation;
                OnGetv_CurrentOccupation(ref value);
                return value;
            }
            set
            {
                if (_v_CurrentOccupation != value)
                {
                  Onv_CurrentOccupationChanging(ref value);
                  ReportPropertyChanging("v_CurrentOccupation");
                  _v_CurrentOccupation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CurrentOccupation");
                  Onv_CurrentOccupationChanged();
              }
            }
        }
        private string _v_CurrentOccupation;
        partial void OnGetv_CurrentOccupation(ref string value);
        partial void Onv_CurrentOccupationChanging(ref string value);
        partial void Onv_CurrentOccupationChanged();
    
        /// <summary>
        /// There are no comments for v_Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value1
        {
            get
            {
                string value = _v_Value1;
                OnGetv_Value1(ref value);
                return value;
            }
            set
            {
                if (_v_Value1 != value)
                {
                  Onv_Value1Changing(ref value);
                  ReportPropertyChanging("v_Value1");
                  _v_Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value1");
                  Onv_Value1Changed();
              }
            }
        }
        private string _v_Value1;
        partial void OnGetv_Value1(ref string value);
        partial void Onv_Value1Changing(ref string value);
        partial void Onv_Value1Changed();
    
        /// <summary>
        /// There are no comments for i_IsVipId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsVipId
        {
            get
            {
                global::System.Nullable<int> value = _i_IsVipId;
                OnGeti_IsVipId(ref value);
                return value;
            }
            set
            {
                if (_i_IsVipId != value)
                {
                  Oni_IsVipIdChanging(ref value);
                  ReportPropertyChanging("i_IsVipId");
                  _i_IsVipId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsVipId");
                  Oni_IsVipIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsVipId;
        partial void OnGeti_IsVipId(ref global::System.Nullable<int> value);
        partial void Oni_IsVipIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsVipIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.background_comprar_registro_activoResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="background_comprar_registro_activoResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class background_comprar_registro_activoResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new background_comprar_registro_activoResult object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="modoIngreso">Initial value of ModoIngreso.</param>
        /// <param name="viaIngreso">Initial value of ViaIngreso.</param>
        /// <param name="fechaIngreso">Initial value of FechaIngreso.</param>
        /// <param name="nombreCompleto">Initial value of NombreCompleto.</param>
        /// <param name="apePaterno">Initial value of ApePaterno.</param>
        /// <param name="apeMaterno">Initial value of ApeMaterno.</param>
        /// <param name="dni">Initial value of Dni.</param>
        /// <param name="puestoTrabajo">Initial value of PuestoTrabajo.</param>
        /// <param name="celular">Initial value of Celular.</param>
        /// <param name="email">Initial value of Email.</param>
        /// <param name="direccion">Initial value of Direccion.</param>
        /// <param name="empresaId">Initial value of EmpresaId.</param>
        public static background_comprar_registro_activoResult Createbackground_comprar_registro_activoResult(int id, int modoIngreso, int viaIngreso, global::System.DateTime fechaIngreso, string nombreCompleto, string apePaterno, string apeMaterno, string dni, string puestoTrabajo, string celular, string email, string direccion, int empresaId)
        {
            background_comprar_registro_activoResult background_comprar_registro_activoResult = new background_comprar_registro_activoResult();
            background_comprar_registro_activoResult.Id = id;
            background_comprar_registro_activoResult.ModoIngreso = modoIngreso;
            background_comprar_registro_activoResult.ViaIngreso = viaIngreso;
            background_comprar_registro_activoResult.FechaIngreso = fechaIngreso;
            background_comprar_registro_activoResult.NombreCompleto = nombreCompleto;
            background_comprar_registro_activoResult.ApePaterno = apePaterno;
            background_comprar_registro_activoResult.ApeMaterno = apeMaterno;
            background_comprar_registro_activoResult.Dni = dni;
            background_comprar_registro_activoResult.PuestoTrabajo = puestoTrabajo;
            background_comprar_registro_activoResult.Celular = celular;
            background_comprar_registro_activoResult.Email = email;
            background_comprar_registro_activoResult.Direccion = direccion;
            background_comprar_registro_activoResult.EmpresaId = empresaId;
            return background_comprar_registro_activoResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for ModoIngreso in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int ModoIngreso
        {
            get
            {
                int value = _ModoIngreso;
                OnGetModoIngreso(ref value);
                return value;
            }
            set
            {
                if (_ModoIngreso != value)
                {
                  OnModoIngresoChanging(ref value);
                  ReportPropertyChanging("ModoIngreso");
                  _ModoIngreso = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ModoIngreso");
                  OnModoIngresoChanged();
              }
            }
        }
        private int _ModoIngreso;
        partial void OnGetModoIngreso(ref int value);
        partial void OnModoIngresoChanging(ref int value);
        partial void OnModoIngresoChanged();
    
        /// <summary>
        /// There are no comments for ViaIngreso in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int ViaIngreso
        {
            get
            {
                int value = _ViaIngreso;
                OnGetViaIngreso(ref value);
                return value;
            }
            set
            {
                if (_ViaIngreso != value)
                {
                  OnViaIngresoChanging(ref value);
                  ReportPropertyChanging("ViaIngreso");
                  _ViaIngreso = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ViaIngreso");
                  OnViaIngresoChanged();
              }
            }
        }
        private int _ViaIngreso;
        partial void OnGetViaIngreso(ref int value);
        partial void OnViaIngresoChanging(ref int value);
        partial void OnViaIngresoChanged();
    
        /// <summary>
        /// There are no comments for FechaIngreso in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FechaIngreso
        {
            get
            {
                global::System.DateTime value = _FechaIngreso;
                OnGetFechaIngreso(ref value);
                return value;
            }
            set
            {
                if (_FechaIngreso != value)
                {
                  OnFechaIngresoChanging(ref value);
                  ReportPropertyChanging("FechaIngreso");
                  _FechaIngreso = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaIngreso");
                  OnFechaIngresoChanged();
              }
            }
        }
        private global::System.DateTime _FechaIngreso;
        partial void OnGetFechaIngreso(ref global::System.DateTime value);
        partial void OnFechaIngresoChanging(ref global::System.DateTime value);
        partial void OnFechaIngresoChanged();
    
        /// <summary>
        /// There are no comments for NombreCompleto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string NombreCompleto
        {
            get
            {
                string value = _NombreCompleto;
                OnGetNombreCompleto(ref value);
                return value;
            }
            set
            {
                if (_NombreCompleto != value)
                {
                  OnNombreCompletoChanging(ref value);
                  ReportPropertyChanging("NombreCompleto");
                  _NombreCompleto = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NombreCompleto");
                  OnNombreCompletoChanged();
              }
            }
        }
        private string _NombreCompleto;
        partial void OnGetNombreCompleto(ref string value);
        partial void OnNombreCompletoChanging(ref string value);
        partial void OnNombreCompletoChanged();
    
        /// <summary>
        /// There are no comments for ApePaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ApePaterno
        {
            get
            {
                string value = _ApePaterno;
                OnGetApePaterno(ref value);
                return value;
            }
            set
            {
                if (_ApePaterno != value)
                {
                  OnApePaternoChanging(ref value);
                  ReportPropertyChanging("ApePaterno");
                  _ApePaterno = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ApePaterno");
                  OnApePaternoChanged();
              }
            }
        }
        private string _ApePaterno;
        partial void OnGetApePaterno(ref string value);
        partial void OnApePaternoChanging(ref string value);
        partial void OnApePaternoChanged();
    
        /// <summary>
        /// There are no comments for ApeMaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ApeMaterno
        {
            get
            {
                string value = _ApeMaterno;
                OnGetApeMaterno(ref value);
                return value;
            }
            set
            {
                if (_ApeMaterno != value)
                {
                  OnApeMaternoChanging(ref value);
                  ReportPropertyChanging("ApeMaterno");
                  _ApeMaterno = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ApeMaterno");
                  OnApeMaternoChanged();
              }
            }
        }
        private string _ApeMaterno;
        partial void OnGetApeMaterno(ref string value);
        partial void OnApeMaternoChanging(ref string value);
        partial void OnApeMaternoChanged();
    
        /// <summary>
        /// There are no comments for Dni in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Dni
        {
            get
            {
                string value = _Dni;
                OnGetDni(ref value);
                return value;
            }
            set
            {
                if (_Dni != value)
                {
                  OnDniChanging(ref value);
                  ReportPropertyChanging("Dni");
                  _Dni = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Dni");
                  OnDniChanged();
              }
            }
        }
        private string _Dni;
        partial void OnGetDni(ref string value);
        partial void OnDniChanging(ref string value);
        partial void OnDniChanged();
    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Edad
        {
            get
            {
                global::System.Nullable<int> value = _Edad;
                OnGetEdad(ref value);
                return value;
            }
            set
            {
                if (_Edad != value)
                {
                  OnEdadChanging(ref value);
                  ReportPropertyChanging("Edad");
                  _Edad = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Edad");
                  OnEdadChanged();
              }
            }
        }
        private global::System.Nullable<int> _Edad;
        partial void OnGetEdad(ref global::System.Nullable<int> value);
        partial void OnEdadChanging(ref global::System.Nullable<int> value);
        partial void OnEdadChanged();
    
        /// <summary>
        /// There are no comments for PuestoTrabajo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string PuestoTrabajo
        {
            get
            {
                string value = _PuestoTrabajo;
                OnGetPuestoTrabajo(ref value);
                return value;
            }
            set
            {
                if (_PuestoTrabajo != value)
                {
                  OnPuestoTrabajoChanging(ref value);
                  ReportPropertyChanging("PuestoTrabajo");
                  _PuestoTrabajo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PuestoTrabajo");
                  OnPuestoTrabajoChanged();
              }
            }
        }
        private string _PuestoTrabajo;
        partial void OnGetPuestoTrabajo(ref string value);
        partial void OnPuestoTrabajoChanging(ref string value);
        partial void OnPuestoTrabajoChanged();
    
        /// <summary>
        /// There are no comments for Celular in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Celular
        {
            get
            {
                string value = _Celular;
                OnGetCelular(ref value);
                return value;
            }
            set
            {
                if (_Celular != value)
                {
                  OnCelularChanging(ref value);
                  ReportPropertyChanging("Celular");
                  _Celular = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Celular");
                  OnCelularChanged();
              }
            }
        }
        private string _Celular;
        partial void OnGetCelular(ref string value);
        partial void OnCelularChanging(ref string value);
        partial void OnCelularChanged();
    
        /// <summary>
        /// There are no comments for TelfReferencia in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TelfReferencia
        {
            get
            {
                string value = _TelfReferencia;
                OnGetTelfReferencia(ref value);
                return value;
            }
            set
            {
                if (_TelfReferencia != value)
                {
                  OnTelfReferenciaChanging(ref value);
                  ReportPropertyChanging("TelfReferencia");
                  _TelfReferencia = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TelfReferencia");
                  OnTelfReferenciaChanged();
              }
            }
        }
        private string _TelfReferencia;
        partial void OnGetTelfReferencia(ref string value);
        partial void OnTelfReferenciaChanging(ref string value);
        partial void OnTelfReferenciaChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Direccion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Direccion
        {
            get
            {
                string value = _Direccion;
                OnGetDireccion(ref value);
                return value;
            }
            set
            {
                if (_Direccion != value)
                {
                  OnDireccionChanging(ref value);
                  ReportPropertyChanging("Direccion");
                  _Direccion = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Direccion");
                  OnDireccionChanged();
              }
            }
        }
        private string _Direccion;
        partial void OnGetDireccion(ref string value);
        partial void OnDireccionChanging(ref string value);
        partial void OnDireccionChanged();
    
        /// <summary>
        /// There are no comments for Sexo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sexo
        {
            get
            {
                string value = _Sexo;
                OnGetSexo(ref value);
                return value;
            }
            set
            {
                if (_Sexo != value)
                {
                  OnSexoChanging(ref value);
                  ReportPropertyChanging("Sexo");
                  _Sexo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sexo");
                  OnSexoChanged();
              }
            }
        }
        private string _Sexo;
        partial void OnGetSexo(ref string value);
        partial void OnSexoChanging(ref string value);
        partial void OnSexoChanged();
    
        /// <summary>
        /// There are no comments for EmpresaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int EmpresaId
        {
            get
            {
                int value = _EmpresaId;
                OnGetEmpresaId(ref value);
                return value;
            }
            set
            {
                if (_EmpresaId != value)
                {
                  OnEmpresaIdChanging(ref value);
                  ReportPropertyChanging("EmpresaId");
                  _EmpresaId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmpresaId");
                  OnEmpresaIdChanged();
              }
            }
        }
        private int _EmpresaId;
        partial void OnGetEmpresaId(ref int value);
        partial void OnEmpresaIdChanging(ref int value);
        partial void OnEmpresaIdChanged();
    
        /// <summary>
        /// There are no comments for Empleadora in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Empleadora
        {
            get
            {
                string value = _Empleadora;
                OnGetEmpleadora(ref value);
                return value;
            }
            set
            {
                if (_Empleadora != value)
                {
                  OnEmpleadoraChanging(ref value);
                  ReportPropertyChanging("Empleadora");
                  _Empleadora = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Empleadora");
                  OnEmpleadoraChanged();
              }
            }
        }
        private string _Empleadora;
        partial void OnGetEmpleadora(ref string value);
        partial void OnEmpleadoraChanging(ref string value);
        partial void OnEmpleadoraChanged();
    
        /// <summary>
        /// There are no comments for SedeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> SedeId
        {
            get
            {
                global::System.Nullable<int> value = _SedeId;
                OnGetSedeId(ref value);
                return value;
            }
            set
            {
                if (_SedeId != value)
                {
                  OnSedeIdChanging(ref value);
                  ReportPropertyChanging("SedeId");
                  _SedeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SedeId");
                  OnSedeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _SedeId;
        partial void OnGetSedeId(ref global::System.Nullable<int> value);
        partial void OnSedeIdChanging(ref global::System.Nullable<int> value);
        partial void OnSedeIdChanged();
    
        /// <summary>
        /// There are no comments for MedicoVigilaId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> MedicoVigilaId
        {
            get
            {
                global::System.Nullable<int> value = _MedicoVigilaId;
                OnGetMedicoVigilaId(ref value);
                return value;
            }
            set
            {
                if (_MedicoVigilaId != value)
                {
                  OnMedicoVigilaIdChanging(ref value);
                  ReportPropertyChanging("MedicoVigilaId");
                  _MedicoVigilaId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("MedicoVigilaId");
                  OnMedicoVigilaIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _MedicoVigilaId;
        partial void OnGetMedicoVigilaId(ref global::System.Nullable<int> value);
        partial void OnMedicoVigilaIdChanging(ref global::System.Nullable<int> value);
        partial void OnMedicoVigilaIdChanged();
    
        /// <summary>
        /// There are no comments for EstadoClinicoId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> EstadoClinicoId
        {
            get
            {
                global::System.Nullable<int> value = _EstadoClinicoId;
                OnGetEstadoClinicoId(ref value);
                return value;
            }
            set
            {
                if (_EstadoClinicoId != value)
                {
                  OnEstadoClinicoIdChanging(ref value);
                  ReportPropertyChanging("EstadoClinicoId");
                  _EstadoClinicoId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EstadoClinicoId");
                  OnEstadoClinicoIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _EstadoClinicoId;
        partial void OnGetEstadoClinicoId(ref global::System.Nullable<int> value);
        partial void OnEstadoClinicoIdChanging(ref global::System.Nullable<int> value);
        partial void OnEstadoClinicoIdChanged();
    
        /// <summary>
        /// There are no comments for ComentarioAlta in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComentarioAlta
        {
            get
            {
                string value = _ComentarioAlta;
                OnGetComentarioAlta(ref value);
                return value;
            }
            set
            {
                if (_ComentarioAlta != value)
                {
                  OnComentarioAltaChanging(ref value);
                  ReportPropertyChanging("ComentarioAlta");
                  _ComentarioAlta = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComentarioAlta");
                  OnComentarioAltaChanged();
              }
            }
        }
        private string _ComentarioAlta;
        partial void OnGetComentarioAlta(ref string value);
        partial void OnComentarioAltaChanging(ref string value);
        partial void OnComentarioAltaChanged();
    
        /// <summary>
        /// There are no comments for NombreContacto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string NombreContacto
        {
            get
            {
                string value = _NombreContacto;
                OnGetNombreContacto(ref value);
                return value;
            }
            set
            {
                if (_NombreContacto != value)
                {
                  OnNombreContactoChanging(ref value);
                  ReportPropertyChanging("NombreContacto");
                  _NombreContacto = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NombreContacto");
                  OnNombreContactoChanged();
              }
            }
        }
        private string _NombreContacto;
        partial void OnGetNombreContacto(ref string value);
        partial void OnNombreContactoChanging(ref string value);
        partial void OnNombreContactoChanged();
    
        /// <summary>
        /// There are no comments for TipoContacto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> TipoContacto
        {
            get
            {
                global::System.Nullable<int> value = _TipoContacto;
                OnGetTipoContacto(ref value);
                return value;
            }
            set
            {
                if (_TipoContacto != value)
                {
                  OnTipoContactoChanging(ref value);
                  ReportPropertyChanging("TipoContacto");
                  _TipoContacto = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("TipoContacto");
                  OnTipoContactoChanged();
              }
            }
        }
        private global::System.Nullable<int> _TipoContacto;
        partial void OnGetTipoContacto(ref global::System.Nullable<int> value);
        partial void OnTipoContactoChanging(ref global::System.Nullable<int> value);
        partial void OnTipoContactoChanged();
    
        /// <summary>
        /// There are no comments for NotificacionIngreso in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> NotificacionIngreso
        {
            get
            {
                global::System.Nullable<int> value = _NotificacionIngreso;
                OnGetNotificacionIngreso(ref value);
                return value;
            }
            set
            {
                if (_NotificacionIngreso != value)
                {
                  OnNotificacionIngresoChanging(ref value);
                  ReportPropertyChanging("NotificacionIngreso");
                  _NotificacionIngreso = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NotificacionIngreso");
                  OnNotificacionIngresoChanged();
              }
            }
        }
        private global::System.Nullable<int> _NotificacionIngreso;
        partial void OnGetNotificacionIngreso(ref global::System.Nullable<int> value);
        partial void OnNotificacionIngresoChanging(ref global::System.Nullable<int> value);
        partial void OnNotificacionIngresoChanged();
    
        /// <summary>
        /// There are no comments for Eliminado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Eliminado
        {
            get
            {
                global::System.Nullable<int> value = _Eliminado;
                OnGetEliminado(ref value);
                return value;
            }
            set
            {
                if (_Eliminado != value)
                {
                  OnEliminadoChanging(ref value);
                  ReportPropertyChanging("Eliminado");
                  _Eliminado = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Eliminado");
                  OnEliminadoChanged();
              }
            }
        }
        private global::System.Nullable<int> _Eliminado;
        partial void OnGetEliminado(ref global::System.Nullable<int> value);
        partial void OnEliminadoChanging(ref global::System.Nullable<int> value);
        partial void OnEliminadoChanged();
    
        /// <summary>
        /// There are no comments for UsuarioIngresa in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> UsuarioIngresa
        {
            get
            {
                global::System.Nullable<int> value = _UsuarioIngresa;
                OnGetUsuarioIngresa(ref value);
                return value;
            }
            set
            {
                if (_UsuarioIngresa != value)
                {
                  OnUsuarioIngresaChanging(ref value);
                  ReportPropertyChanging("UsuarioIngresa");
                  _UsuarioIngresa = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UsuarioIngresa");
                  OnUsuarioIngresaChanged();
              }
            }
        }
        private global::System.Nullable<int> _UsuarioIngresa;
        partial void OnGetUsuarioIngresa(ref global::System.Nullable<int> value);
        partial void OnUsuarioIngresaChanging(ref global::System.Nullable<int> value);
        partial void OnUsuarioIngresaChanged();
    
        /// <summary>
        /// There are no comments for FechaIngresa in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> FechaIngresa
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _FechaIngresa;
                OnGetFechaIngresa(ref value);
                return value;
            }
            set
            {
                if (_FechaIngresa != value)
                {
                  OnFechaIngresaChanging(ref value);
                  ReportPropertyChanging("FechaIngresa");
                  _FechaIngresa = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaIngresa");
                  OnFechaIngresaChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _FechaIngresa;
        partial void OnGetFechaIngresa(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaIngresaChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaIngresaChanged();
    
        /// <summary>
        /// There are no comments for UsuarioActualiza in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> UsuarioActualiza
        {
            get
            {
                global::System.Nullable<int> value = _UsuarioActualiza;
                OnGetUsuarioActualiza(ref value);
                return value;
            }
            set
            {
                if (_UsuarioActualiza != value)
                {
                  OnUsuarioActualizaChanging(ref value);
                  ReportPropertyChanging("UsuarioActualiza");
                  _UsuarioActualiza = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UsuarioActualiza");
                  OnUsuarioActualizaChanged();
              }
            }
        }
        private global::System.Nullable<int> _UsuarioActualiza;
        partial void OnGetUsuarioActualiza(ref global::System.Nullable<int> value);
        partial void OnUsuarioActualizaChanging(ref global::System.Nullable<int> value);
        partial void OnUsuarioActualizaChanged();
    
        /// <summary>
        /// There are no comments for FechaActualiza in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> FechaActualiza
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _FechaActualiza;
                OnGetFechaActualiza(ref value);
                return value;
            }
            set
            {
                if (_FechaActualiza != value)
                {
                  OnFechaActualizaChanging(ref value);
                  ReportPropertyChanging("FechaActualiza");
                  _FechaActualiza = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaActualiza");
                  OnFechaActualizaChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _FechaActualiza;
        partial void OnGetFechaActualiza(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaActualizaChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaActualizaChanged();
    
        /// <summary>
        /// There are no comments for Recetamedica in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Recetamedica
        {
            get
            {
                string value = _Recetamedica;
                OnGetRecetamedica(ref value);
                return value;
            }
            set
            {
                if (_Recetamedica != value)
                {
                  OnRecetamedicaChanging(ref value);
                  ReportPropertyChanging("Recetamedica");
                  _Recetamedica = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Recetamedica");
                  OnRecetamedicaChanged();
              }
            }
        }
        private string _Recetamedica;
        partial void OnGetRecetamedica(ref string value);
        partial void OnRecetamedicaChanging(ref string value);
        partial void OnRecetamedicaChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.buscar_pacienteResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="buscar_pacienteResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class buscar_pacienteResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new buscar_pacienteResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        public static buscar_pacienteResult Createbuscar_pacienteResult(string v_ServiceId)
        {
            buscar_pacienteResult buscar_pacienteResult = new buscar_pacienteResult();
            buscar_pacienteResult.v_ServiceId = v_ServiceId;
            return buscar_pacienteResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FirstName
        {
            get
            {
                string value = _v_FirstName;
                OnGetv_FirstName(ref value);
                return value;
            }
            set
            {
                if (_v_FirstName != value)
                {
                  Onv_FirstNameChanging(ref value);
                  ReportPropertyChanging("v_FirstName");
                  _v_FirstName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FirstName");
                  Onv_FirstNameChanged();
              }
            }
        }
        private string _v_FirstName;
        partial void OnGetv_FirstName(ref string value);
        partial void Onv_FirstNameChanging(ref string value);
        partial void Onv_FirstNameChanged();
    
        /// <summary>
        /// There are no comments for v_FirstLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FirstLastName
        {
            get
            {
                string value = _v_FirstLastName;
                OnGetv_FirstLastName(ref value);
                return value;
            }
            set
            {
                if (_v_FirstLastName != value)
                {
                  Onv_FirstLastNameChanging(ref value);
                  ReportPropertyChanging("v_FirstLastName");
                  _v_FirstLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FirstLastName");
                  Onv_FirstLastNameChanged();
              }
            }
        }
        private string _v_FirstLastName;
        partial void OnGetv_FirstLastName(ref string value);
        partial void Onv_FirstLastNameChanging(ref string value);
        partial void Onv_FirstLastNameChanged();
    
        /// <summary>
        /// There are no comments for v_SecondLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SecondLastName
        {
            get
            {
                string value = _v_SecondLastName;
                OnGetv_SecondLastName(ref value);
                return value;
            }
            set
            {
                if (_v_SecondLastName != value)
                {
                  Onv_SecondLastNameChanging(ref value);
                  ReportPropertyChanging("v_SecondLastName");
                  _v_SecondLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SecondLastName");
                  Onv_SecondLastNameChanged();
              }
            }
        }
        private string _v_SecondLastName;
        partial void OnGetv_SecondLastName(ref string value);
        partial void Onv_SecondLastNameChanging(ref string value);
        partial void Onv_SecondLastNameChanged();
    
        /// <summary>
        /// There are no comments for v_DocNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DocNumber
        {
            get
            {
                string value = _v_DocNumber;
                OnGetv_DocNumber(ref value);
                return value;
            }
            set
            {
                if (_v_DocNumber != value)
                {
                  Onv_DocNumberChanging(ref value);
                  ReportPropertyChanging("v_DocNumber");
                  _v_DocNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DocNumber");
                  Onv_DocNumberChanged();
              }
            }
        }
        private string _v_DocNumber;
        partial void OnGetv_DocNumber(ref string value);
        partial void Onv_DocNumberChanging(ref string value);
        partial void Onv_DocNumberChanged();
    
        /// <summary>
        /// There are no comments for d_Birthdate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_Birthdate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_Birthdate;
                OnGetd_Birthdate(ref value);
                return value;
            }
            set
            {
                if (_d_Birthdate != value)
                {
                  Ond_BirthdateChanging(ref value);
                  ReportPropertyChanging("d_Birthdate");
                  _d_Birthdate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_Birthdate");
                  Ond_BirthdateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_Birthdate;
        partial void OnGetd_Birthdate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BirthdateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BirthdateChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for d_ServiceDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ServiceDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ServiceDate;
                OnGetd_ServiceDate(ref value);
                return value;
            }
            set
            {
                if (_d_ServiceDate != value)
                {
                  Ond_ServiceDateChanging(ref value);
                  ReportPropertyChanging("d_ServiceDate");
                  _d_ServiceDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ServiceDate");
                  Ond_ServiceDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ServiceDate;
        partial void OnGetd_ServiceDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanged();
    
        /// <summary>
        /// There are no comments for i_ServiceStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ServiceStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_ServiceStatusId;
                OnGeti_ServiceStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceStatusId != value)
                {
                  Oni_ServiceStatusIdChanging(ref value);
                  ReportPropertyChanging("i_ServiceStatusId");
                  _i_ServiceStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceStatusId");
                  Oni_ServiceStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ServiceStatusId;
        partial void OnGeti_ServiceStatusId(ref global::System.Nullable<int> value);
        partial void Oni_ServiceStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ServiceStatusIdChanged();
    
        /// <summary>
        /// There are no comments for v_Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value1
        {
            get
            {
                string value = _v_Value1;
                OnGetv_Value1(ref value);
                return value;
            }
            set
            {
                if (_v_Value1 != value)
                {
                  Onv_Value1Changing(ref value);
                  ReportPropertyChanging("v_Value1");
                  _v_Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value1");
                  Onv_Value1Changed();
              }
            }
        }
        private string _v_Value1;
        partial void OnGetv_Value1(ref string value);
        partial void Onv_Value1Changing(ref string value);
        partial void Onv_Value1Changed();
    
        /// <summary>
        /// There are no comments for i_AptitudeStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_AptitudeStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_AptitudeStatusId;
                OnGeti_AptitudeStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_AptitudeStatusId != value)
                {
                  Oni_AptitudeStatusIdChanging(ref value);
                  ReportPropertyChanging("i_AptitudeStatusId");
                  _i_AptitudeStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_AptitudeStatusId");
                  Oni_AptitudeStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_AptitudeStatusId;
        partial void OnGeti_AptitudeStatusId(ref global::System.Nullable<int> value);
        partial void Oni_AptitudeStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_AptitudeStatusIdChanged();
    
        /// <summary>
        /// There are no comments for v_Value11 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value11
        {
            get
            {
                string value = _v_Value11;
                OnGetv_Value11(ref value);
                return value;
            }
            set
            {
                if (_v_Value11 != value)
                {
                  Onv_Value11Changing(ref value);
                  ReportPropertyChanging("v_Value11");
                  _v_Value11 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value11");
                  Onv_Value11Changed();
              }
            }
        }
        private string _v_Value11;
        partial void OnGetv_Value11(ref string value);
        partial void Onv_Value11Changing(ref string value);
        partial void Onv_Value11Changed();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.drz_bs300readResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="drz_bs300readResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class drz_bs300readResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new drz_bs300readResult object.
        /// </summary>
        /// <param name="v_ComponentFieldId">Initial value of v_ComponentFieldId.</param>
        public static drz_bs300readResult Createdrz_bs300readResult(string v_ComponentFieldId)
        {
            drz_bs300readResult drz_bs300readResult = new drz_bs300readResult();
            drz_bs300readResult.v_ComponentFieldId = v_ComponentFieldId;
            return drz_bs300readResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for nombrePerson in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string nombrePerson
        {
            get
            {
                string value = _nombrePerson;
                OnGetnombrePerson(ref value);
                return value;
            }
            set
            {
                if (_nombrePerson != value)
                {
                  OnnombrePersonChanging(ref value);
                  ReportPropertyChanging("nombrePerson");
                  _nombrePerson = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("nombrePerson");
                  OnnombrePersonChanged();
              }
            }
        }
        private string _nombrePerson;
        partial void OnGetnombrePerson(ref string value);
        partial void OnnombrePersonChanging(ref string value);
        partial void OnnombrePersonChanged();
    
        /// <summary>
        /// There are no comments for d_Birthdate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_Birthdate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_Birthdate;
                OnGetd_Birthdate(ref value);
                return value;
            }
            set
            {
                if (_d_Birthdate != value)
                {
                  Ond_BirthdateChanging(ref value);
                  ReportPropertyChanging("d_Birthdate");
                  _d_Birthdate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_Birthdate");
                  Ond_BirthdateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_Birthdate;
        partial void OnGetd_Birthdate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BirthdateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_BirthdateChanged();
    
        /// <summary>
        /// There are no comments for i_SexTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SexTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_SexTypeId;
                OnGeti_SexTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_SexTypeId != value)
                {
                  Oni_SexTypeIdChanging(ref value);
                  ReportPropertyChanging("i_SexTypeId");
                  _i_SexTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SexTypeId");
                  Oni_SexTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SexTypeId;
        partial void OnGeti_SexTypeId(ref global::System.Nullable<int> value);
        partial void Oni_SexTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SexTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ComponentFieldId
        {
            get
            {
                string value = _v_ComponentFieldId;
                OnGetv_ComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_v_ComponentFieldId != value)
                {
                  Onv_ComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("v_ComponentFieldId");
                  _v_ComponentFieldId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ComponentFieldId");
                  Onv_ComponentFieldIdChanged();
              }
            }
        }
        private string _v_ComponentFieldId;
        partial void OnGetv_ComponentFieldId(ref string value);
        partial void Onv_ComponentFieldIdChanging(ref string value);
        partial void Onv_ComponentFieldIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.getallcampaniascovidResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="getallcampaniascovidResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class getallcampaniascovidResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new getallcampaniascovidResult object.
        /// </summary>
        /// <param name="id">Initial value of id.</param>
        /// <param name="sede">Initial value of Sede.</param>
        public static getallcampaniascovidResult CreategetallcampaniascovidResult(int id, string sede)
        {
            getallcampaniascovidResult getallcampaniascovidResult = new getallcampaniascovidResult();
            getallcampaniascovidResult.id = id;
            getallcampaniascovidResult.Sede = sede;
            return getallcampaniascovidResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int id
        {
            get
            {
                int value = _id;
                OnGetid(ref value);
                return value;
            }
            set
            {
                if (_id != value)
                {
                  OnidChanging(ref value);
                  ReportPropertyChanging("id");
                  _id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("id");
                  OnidChanged();
              }
            }
        }
        private int _id;
        partial void OnGetid(ref int value);
        partial void OnidChanging(ref int value);
        partial void OnidChanged();
    
        /// <summary>
        /// There are no comments for Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Sede
        {
            get
            {
                string value = _Sede;
                OnGetSede(ref value);
                return value;
            }
            set
            {
                if (_Sede != value)
                {
                  OnSedeChanging(ref value);
                  ReportPropertyChanging("Sede");
                  _Sede = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Sede");
                  OnSedeChanged();
              }
            }
        }
        private string _Sede;
        partial void OnGetSede(ref string value);
        partial void OnSedeChanging(ref string value);
        partial void OnSedeChanged();
    
        /// <summary>
        /// There are no comments for Area in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Area
        {
            get
            {
                string value = _Area;
                OnGetArea(ref value);
                return value;
            }
            set
            {
                if (_Area != value)
                {
                  OnAreaChanging(ref value);
                  ReportPropertyChanging("Area");
                  _Area = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Area");
                  OnAreaChanged();
              }
            }
        }
        private string _Area;
        partial void OnGetArea(ref string value);
        partial void OnAreaChanging(ref string value);
        partial void OnAreaChanged();
    
        /// <summary>
        /// There are no comments for DNI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DNI
        {
            get
            {
                string value = _DNI;
                OnGetDNI(ref value);
                return value;
            }
            set
            {
                if (_DNI != value)
                {
                  OnDNIChanging(ref value);
                  ReportPropertyChanging("DNI");
                  _DNI = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DNI");
                  OnDNIChanged();
              }
            }
        }
        private string _DNI;
        partial void OnGetDNI(ref string value);
        partial void OnDNIChanging(ref string value);
        partial void OnDNIChanged();
    
        /// <summary>
        /// There are no comments for ApellidoMaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoMaterno
        {
            get
            {
                string value = _ApellidoMaterno;
                OnGetApellidoMaterno(ref value);
                return value;
            }
            set
            {
                if (_ApellidoMaterno != value)
                {
                  OnApellidoMaternoChanging(ref value);
                  ReportPropertyChanging("ApellidoMaterno");
                  _ApellidoMaterno = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoMaterno");
                  OnApellidoMaternoChanged();
              }
            }
        }
        private string _ApellidoMaterno;
        partial void OnGetApellidoMaterno(ref string value);
        partial void OnApellidoMaternoChanging(ref string value);
        partial void OnApellidoMaternoChanged();
    
        /// <summary>
        /// There are no comments for ApellidoPaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoPaterno
        {
            get
            {
                string value = _ApellidoPaterno;
                OnGetApellidoPaterno(ref value);
                return value;
            }
            set
            {
                if (_ApellidoPaterno != value)
                {
                  OnApellidoPaternoChanging(ref value);
                  ReportPropertyChanging("ApellidoPaterno");
                  _ApellidoPaterno = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoPaterno");
                  OnApellidoPaternoChanged();
              }
            }
        }
        private string _ApellidoPaterno;
        partial void OnGetApellidoPaterno(ref string value);
        partial void OnApellidoPaternoChanging(ref string value);
        partial void OnApellidoPaternoChanged();
    
        /// <summary>
        /// There are no comments for Nombres in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Nombres
        {
            get
            {
                string value = _Nombres;
                OnGetNombres(ref value);
                return value;
            }
            set
            {
                if (_Nombres != value)
                {
                  OnNombresChanging(ref value);
                  ReportPropertyChanging("Nombres");
                  _Nombres = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Nombres");
                  OnNombresChanged();
              }
            }
        }
        private string _Nombres;
        partial void OnGetNombres(ref string value);
        partial void OnNombresChanging(ref string value);
        partial void OnNombresChanged();
    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> Fecha
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _Fecha;
                OnGetFecha(ref value);
                return value;
            }
            set
            {
                if (_Fecha != value)
                {
                  OnFechaChanging(ref value);
                  ReportPropertyChanging("Fecha");
                  _Fecha = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Fecha");
                  OnFechaChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _Fecha;
        partial void OnGetFecha(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaChanged();
    
        /// <summary>
        /// There are no comments for Resultado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Resultado
        {
            get
            {
                string value = _Resultado;
                OnGetResultado(ref value);
                return value;
            }
            set
            {
                if (_Resultado != value)
                {
                  OnResultadoChanging(ref value);
                  ReportPropertyChanging("Resultado");
                  _Resultado = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Resultado");
                  OnResultadoChanged();
              }
            }
        }
        private string _Resultado;
        partial void OnGetResultado(ref string value);
        partial void OnResultadoChanging(ref string value);
        partial void OnResultadoChanged();
    
        /// <summary>
        /// There are no comments for Campaña in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Campaña
        {
            get
            {
                global::System.Nullable<int> value = _Campaña;
                OnGetCampaña(ref value);
                return value;
            }
            set
            {
                if (_Campaña != value)
                {
                  OnCampañaChanging(ref value);
                  ReportPropertyChanging("Campaña");
                  _Campaña = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Campaña");
                  OnCampañaChanged();
              }
            }
        }
        private global::System.Nullable<int> _Campaña;
        partial void OnGetCampaña(ref global::System.Nullable<int> value);
        partial void OnCampañaChanging(ref global::System.Nullable<int> value);
        partial void OnCampañaChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.getpositivoscovidResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="getpositivoscovidResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class getpositivoscovidResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new getpositivoscovidResult object.
        /// </summary>
        /// <param name="serviceId">Initial value of ServiceId.</param>
        /// <param name="ubigeo">Initial value of Ubigeo.</param>
        /// <param name="edad">Initial value of Edad.</param>
        public static getpositivoscovidResult CreategetpositivoscovidResult(string serviceId, string ubigeo, string edad)
        {
            getpositivoscovidResult getpositivoscovidResult = new getpositivoscovidResult();
            getpositivoscovidResult.ServiceId = serviceId;
            getpositivoscovidResult.Ubigeo = ubigeo;
            getpositivoscovidResult.Edad = edad;
            return getpositivoscovidResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ServiceId
        {
            get
            {
                string value = _ServiceId;
                OnGetServiceId(ref value);
                return value;
            }
            set
            {
                if (_ServiceId != value)
                {
                  OnServiceIdChanging(ref value);
                  ReportPropertyChanging("ServiceId");
                  _ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ServiceId");
                  OnServiceIdChanged();
              }
            }
        }
        private string _ServiceId;
        partial void OnGetServiceId(ref string value);
        partial void OnServiceIdChanging(ref string value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// There are no comments for ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentId
        {
            get
            {
                string value = _ComponentId;
                OnGetComponentId(ref value);
                return value;
            }
            set
            {
                if (_ComponentId != value)
                {
                  OnComponentIdChanging(ref value);
                  ReportPropertyChanging("ComponentId");
                  _ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentId");
                  OnComponentIdChanged();
              }
            }
        }
        private string _ComponentId;
        partial void OnGetComponentId(ref string value);
        partial void OnComponentIdChanging(ref string value);
        partial void OnComponentIdChanged();
    
        /// <summary>
        /// There are no comments for ServiceComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ServiceComponentId
        {
            get
            {
                string value = _ServiceComponentId;
                OnGetServiceComponentId(ref value);
                return value;
            }
            set
            {
                if (_ServiceComponentId != value)
                {
                  OnServiceComponentIdChanging(ref value);
                  ReportPropertyChanging("ServiceComponentId");
                  _ServiceComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ServiceComponentId");
                  OnServiceComponentIdChanged();
              }
            }
        }
        private string _ServiceComponentId;
        partial void OnGetServiceComponentId(ref string value);
        partial void OnServiceComponentIdChanging(ref string value);
        partial void OnServiceComponentIdChanged();
    
        /// <summary>
        /// There are no comments for ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentFieldId
        {
            get
            {
                string value = _ComponentFieldId;
                OnGetComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_ComponentFieldId != value)
                {
                  OnComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("ComponentFieldId");
                  _ComponentFieldId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentFieldId");
                  OnComponentFieldIdChanged();
              }
            }
        }
        private string _ComponentFieldId;
        partial void OnGetComponentFieldId(ref string value);
        partial void OnComponentFieldIdChanging(ref string value);
        partial void OnComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Value1
        {
            get
            {
                string value = _Value1;
                OnGetValue1(ref value);
                return value;
            }
            set
            {
                if (_Value1 != value)
                {
                  OnValue1Changing(ref value);
                  ReportPropertyChanging("Value1");
                  _Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Value1");
                  OnValue1Changed();
              }
            }
        }
        private string _Value1;
        partial void OnGetValue1(ref string value);
        partial void OnValue1Changing(ref string value);
        partial void OnValue1Changed();
    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Fecha
        {
            get
            {
                string value = _Fecha;
                OnGetFecha(ref value);
                return value;
            }
            set
            {
                if (_Fecha != value)
                {
                  OnFechaChanging(ref value);
                  ReportPropertyChanging("Fecha");
                  _Fecha = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Fecha");
                  OnFechaChanged();
              }
            }
        }
        private string _Fecha;
        partial void OnGetFecha(ref string value);
        partial void OnFechaChanging(ref string value);
        partial void OnFechaChanged();
    
        /// <summary>
        /// There are no comments for Empleador in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Empleador
        {
            get
            {
                string value = _Empleador;
                OnGetEmpleador(ref value);
                return value;
            }
            set
            {
                if (_Empleador != value)
                {
                  OnEmpleadorChanging(ref value);
                  ReportPropertyChanging("Empleador");
                  _Empleador = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Empleador");
                  OnEmpleadorChanged();
              }
            }
        }
        private string _Empleador;
        partial void OnGetEmpleador(ref string value);
        partial void OnEmpleadorChanging(ref string value);
        partial void OnEmpleadorChanged();
    
        /// <summary>
        /// There are no comments for Empresa_principal in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Empresa_principal
        {
            get
            {
                string value = _Empresa_principal;
                OnGetEmpresa_principal(ref value);
                return value;
            }
            set
            {
                if (_Empresa_principal != value)
                {
                  OnEmpresa_principalChanging(ref value);
                  ReportPropertyChanging("Empresa_principal");
                  _Empresa_principal = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Empresa_principal");
                  OnEmpresa_principalChanged();
              }
            }
        }
        private string _Empresa_principal;
        partial void OnGetEmpresa_principal(ref string value);
        partial void OnEmpresa_principalChanging(ref string value);
        partial void OnEmpresa_principalChanged();
    
        /// <summary>
        /// There are no comments for ProtocolName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ProtocolName
        {
            get
            {
                string value = _ProtocolName;
                OnGetProtocolName(ref value);
                return value;
            }
            set
            {
                if (_ProtocolName != value)
                {
                  OnProtocolNameChanging(ref value);
                  ReportPropertyChanging("ProtocolName");
                  _ProtocolName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProtocolName");
                  OnProtocolNameChanged();
              }
            }
        }
        private string _ProtocolName;
        partial void OnGetProtocolName(ref string value);
        partial void OnProtocolNameChanging(ref string value);
        partial void OnProtocolNameChanged();
    
        /// <summary>
        /// There are no comments for Tipo_documento in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Tipo_documento
        {
            get
            {
                global::System.Nullable<int> value = _Tipo_documento;
                OnGetTipo_documento(ref value);
                return value;
            }
            set
            {
                if (_Tipo_documento != value)
                {
                  OnTipo_documentoChanging(ref value);
                  ReportPropertyChanging("Tipo_documento");
                  _Tipo_documento = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Tipo_documento");
                  OnTipo_documentoChanged();
              }
            }
        }
        private global::System.Nullable<int> _Tipo_documento;
        partial void OnGetTipo_documento(ref global::System.Nullable<int> value);
        partial void OnTipo_documentoChanging(ref global::System.Nullable<int> value);
        partial void OnTipo_documentoChanged();
    
        /// <summary>
        /// There are no comments for Nro_documento in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Nro_documento
        {
            get
            {
                string value = _Nro_documento;
                OnGetNro_documento(ref value);
                return value;
            }
            set
            {
                if (_Nro_documento != value)
                {
                  OnNro_documentoChanging(ref value);
                  ReportPropertyChanging("Nro_documento");
                  _Nro_documento = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Nro_documento");
                  OnNro_documentoChanged();
              }
            }
        }
        private string _Nro_documento;
        partial void OnGetNro_documento(ref string value);
        partial void OnNro_documentoChanging(ref string value);
        partial void OnNro_documentoChanged();
    
        /// <summary>
        /// There are no comments for ApellidoPaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoPaterno
        {
            get
            {
                string value = _ApellidoPaterno;
                OnGetApellidoPaterno(ref value);
                return value;
            }
            set
            {
                if (_ApellidoPaterno != value)
                {
                  OnApellidoPaternoChanging(ref value);
                  ReportPropertyChanging("ApellidoPaterno");
                  _ApellidoPaterno = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoPaterno");
                  OnApellidoPaternoChanged();
              }
            }
        }
        private string _ApellidoPaterno;
        partial void OnGetApellidoPaterno(ref string value);
        partial void OnApellidoPaternoChanging(ref string value);
        partial void OnApellidoPaternoChanged();
    
        /// <summary>
        /// There are no comments for ApellidoMaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoMaterno
        {
            get
            {
                string value = _ApellidoMaterno;
                OnGetApellidoMaterno(ref value);
                return value;
            }
            set
            {
                if (_ApellidoMaterno != value)
                {
                  OnApellidoMaternoChanging(ref value);
                  ReportPropertyChanging("ApellidoMaterno");
                  _ApellidoMaterno = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoMaterno");
                  OnApellidoMaternoChanged();
              }
            }
        }
        private string _ApellidoMaterno;
        partial void OnGetApellidoMaterno(ref string value);
        partial void OnApellidoMaternoChanging(ref string value);
        partial void OnApellidoMaternoChanged();
    
        /// <summary>
        /// There are no comments for Nombres in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Nombres
        {
            get
            {
                string value = _Nombres;
                OnGetNombres(ref value);
                return value;
            }
            set
            {
                if (_Nombres != value)
                {
                  OnNombresChanging(ref value);
                  ReportPropertyChanging("Nombres");
                  _Nombres = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Nombres");
                  OnNombresChanged();
              }
            }
        }
        private string _Nombres;
        partial void OnGetNombres(ref string value);
        partial void OnNombresChanging(ref string value);
        partial void OnNombresChanged();
    
        /// <summary>
        /// There are no comments for FechaNacimiento in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string FechaNacimiento
        {
            get
            {
                string value = _FechaNacimiento;
                OnGetFechaNacimiento(ref value);
                return value;
            }
            set
            {
                if (_FechaNacimiento != value)
                {
                  OnFechaNacimientoChanging(ref value);
                  ReportPropertyChanging("FechaNacimiento");
                  _FechaNacimiento = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FechaNacimiento");
                  OnFechaNacimientoChanged();
              }
            }
        }
        private string _FechaNacimiento;
        partial void OnGetFechaNacimiento(ref string value);
        partial void OnFechaNacimientoChanging(ref string value);
        partial void OnFechaNacimientoChanged();
    
        /// <summary>
        /// There are no comments for Sexo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Sexo
        {
            get
            {
                global::System.Nullable<int> value = _Sexo;
                OnGetSexo(ref value);
                return value;
            }
            set
            {
                if (_Sexo != value)
                {
                  OnSexoChanging(ref value);
                  ReportPropertyChanging("Sexo");
                  _Sexo = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Sexo");
                  OnSexoChanged();
              }
            }
        }
        private global::System.Nullable<int> _Sexo;
        partial void OnGetSexo(ref global::System.Nullable<int> value);
        partial void OnSexoChanging(ref global::System.Nullable<int> value);
        partial void OnSexoChanged();
    
        /// <summary>
        /// There are no comments for Celular in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Celular
        {
            get
            {
                string value = _Celular;
                OnGetCelular(ref value);
                return value;
            }
            set
            {
                if (_Celular != value)
                {
                  OnCelularChanging(ref value);
                  ReportPropertyChanging("Celular");
                  _Celular = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Celular");
                  OnCelularChanged();
              }
            }
        }
        private string _Celular;
        partial void OnGetCelular(ref string value);
        partial void OnCelularChanging(ref string value);
        partial void OnCelularChanged();
    
        /// <summary>
        /// There are no comments for Otro_telefono in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Otro_telefono
        {
            get
            {
                string value = _Otro_telefono;
                OnGetOtro_telefono(ref value);
                return value;
            }
            set
            {
                if (_Otro_telefono != value)
                {
                  OnOtro_telefonoChanging(ref value);
                  ReportPropertyChanging("Otro_telefono");
                  _Otro_telefono = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Otro_telefono");
                  OnOtro_telefonoChanged();
              }
            }
        }
        private string _Otro_telefono;
        partial void OnGetOtro_telefono(ref string value);
        partial void OnOtro_telefonoChanging(ref string value);
        partial void OnOtro_telefonoChanged();
    
        /// <summary>
        /// There are no comments for Ubigeo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Ubigeo
        {
            get
            {
                string value = _Ubigeo;
                OnGetUbigeo(ref value);
                return value;
            }
            set
            {
                if (_Ubigeo != value)
                {
                  OnUbigeoChanging(ref value);
                  ReportPropertyChanging("Ubigeo");
                  _Ubigeo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Ubigeo");
                  OnUbigeoChanged();
              }
            }
        }
        private string _Ubigeo;
        partial void OnGetUbigeo(ref string value);
        partial void OnUbigeoChanging(ref string value);
        partial void OnUbigeoChanged();
    
        /// <summary>
        /// There are no comments for Aptitud in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Aptitud
        {
            get
            {
                string value = _Aptitud;
                OnGetAptitud(ref value);
                return value;
            }
            set
            {
                if (_Aptitud != value)
                {
                  OnAptitudChanging(ref value);
                  ReportPropertyChanging("Aptitud");
                  _Aptitud = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Aptitud");
                  OnAptitudChanged();
              }
            }
        }
        private string _Aptitud;
        partial void OnGetAptitud(ref string value);
        partial void OnAptitudChanging(ref string value);
        partial void OnAptitudChanged();
    
        /// <summary>
        /// There are no comments for Tecnico in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Tecnico
        {
            get
            {
                string value = _Tecnico;
                OnGetTecnico(ref value);
                return value;
            }
            set
            {
                if (_Tecnico != value)
                {
                  OnTecnicoChanging(ref value);
                  ReportPropertyChanging("Tecnico");
                  _Tecnico = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Tecnico");
                  OnTecnicoChanged();
              }
            }
        }
        private string _Tecnico;
        partial void OnGetTecnico(ref string value);
        partial void OnTecnicoChanging(ref string value);
        partial void OnTecnicoChanged();
    
        /// <summary>
        /// There are no comments for Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sede
        {
            get
            {
                string value = _Sede;
                OnGetSede(ref value);
                return value;
            }
            set
            {
                if (_Sede != value)
                {
                  OnSedeChanging(ref value);
                  ReportPropertyChanging("Sede");
                  _Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sede");
                  OnSedeChanged();
              }
            }
        }
        private string _Sede;
        partial void OnGetSede(ref string value);
        partial void OnSedeChanging(ref string value);
        partial void OnSedeChanged();
    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Edad
        {
            get
            {
                string value = _Edad;
                OnGetEdad(ref value);
                return value;
            }
            set
            {
                if (_Edad != value)
                {
                  OnEdadChanging(ref value);
                  ReportPropertyChanging("Edad");
                  _Edad = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Edad");
                  OnEdadChanged();
              }
            }
        }
        private string _Edad;
        partial void OnGetEdad(ref string value);
        partial void OnEdadChanging(ref string value);
        partial void OnEdadChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.getservicespagedandfilteredfullnodeResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="getservicespagedandfilteredfullnodeResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class getservicespagedandfilteredfullnodeResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new getservicespagedandfilteredfullnodeResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        public static getservicespagedandfilteredfullnodeResult CreategetservicespagedandfilteredfullnodeResult(string v_ServiceId)
        {
            getservicespagedandfilteredfullnodeResult getservicespagedandfilteredfullnodeResult = new getservicespagedandfilteredfullnodeResult();
            getservicespagedandfilteredfullnodeResult.v_ServiceId = v_ServiceId;
            return getservicespagedandfilteredfullnodeResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for b_Seleccionar in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> b_Seleccionar
        {
            get
            {
                global::System.Nullable<bool> value = _b_Seleccionar;
                OnGetb_Seleccionar(ref value);
                return value;
            }
            set
            {
                if (_b_Seleccionar != value)
                {
                  Onb_SeleccionarChanging(ref value);
                  ReportPropertyChanging("b_Seleccionar");
                  _b_Seleccionar = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("b_Seleccionar");
                  Onb_SeleccionarChanged();
              }
            }
        }
        private global::System.Nullable<bool> _b_Seleccionar;
        partial void OnGetb_Seleccionar(ref global::System.Nullable<bool> value);
        partial void Onb_SeleccionarChanging(ref global::System.Nullable<bool> value);
        partial void Onb_SeleccionarChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_Nodo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Nodo
        {
            get
            {
                string value = _v_Nodo;
                OnGetv_Nodo(ref value);
                return value;
            }
            set
            {
                if (_v_Nodo != value)
                {
                  Onv_NodoChanging(ref value);
                  ReportPropertyChanging("v_Nodo");
                  _v_Nodo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Nodo");
                  Onv_NodoChanged();
              }
            }
        }
        private string _v_Nodo;
        partial void OnGetv_Nodo(ref string value);
        partial void Onv_NodoChanging(ref string value);
        partial void Onv_NodoChanged();
    
        /// <summary>
        /// There are no comments for v_CalendarId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CalendarId
        {
            get
            {
                string value = _v_CalendarId;
                OnGetv_CalendarId(ref value);
                return value;
            }
            set
            {
                if (_v_CalendarId != value)
                {
                  Onv_CalendarIdChanging(ref value);
                  ReportPropertyChanging("v_CalendarId");
                  _v_CalendarId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CalendarId");
                  Onv_CalendarIdChanged();
              }
            }
        }
        private string _v_CalendarId;
        partial void OnGetv_CalendarId(ref string value);
        partial void Onv_CalendarIdChanging(ref string value);
        partial void Onv_CalendarIdChanged();
    
        /// <summary>
        /// There are no comments for v_ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProtocolId
        {
            get
            {
                string value = _v_ProtocolId;
                OnGetv_ProtocolId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolId != value)
                {
                  Onv_ProtocolIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolId");
                  _v_ProtocolId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProtocolId");
                  Onv_ProtocolIdChanged();
              }
            }
        }
        private string _v_ProtocolId;
        partial void OnGetv_ProtocolId(ref string value);
        partial void Onv_ProtocolIdChanging(ref string value);
        partial void Onv_ProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for i_MasterServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_MasterServiceId
        {
            get
            {
                global::System.Nullable<int> value = _i_MasterServiceId;
                OnGeti_MasterServiceId(ref value);
                return value;
            }
            set
            {
                if (_i_MasterServiceId != value)
                {
                  Oni_MasterServiceIdChanging(ref value);
                  ReportPropertyChanging("i_MasterServiceId");
                  _i_MasterServiceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_MasterServiceId");
                  Oni_MasterServiceIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_MasterServiceId;
        partial void OnGeti_MasterServiceId(ref global::System.Nullable<int> value);
        partial void Oni_MasterServiceIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_MasterServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_MasterServiceName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_MasterServiceName
        {
            get
            {
                string value = _v_MasterServiceName;
                OnGetv_MasterServiceName(ref value);
                return value;
            }
            set
            {
                if (_v_MasterServiceName != value)
                {
                  Onv_MasterServiceNameChanging(ref value);
                  ReportPropertyChanging("v_MasterServiceName");
                  _v_MasterServiceName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_MasterServiceName");
                  Onv_MasterServiceNameChanged();
              }
            }
        }
        private string _v_MasterServiceName;
        partial void OnGetv_MasterServiceName(ref string value);
        partial void Onv_MasterServiceNameChanging(ref string value);
        partial void Onv_MasterServiceNameChanged();
    
        /// <summary>
        /// There are no comments for i_ServiceStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ServiceStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_ServiceStatusId;
                OnGeti_ServiceStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceStatusId != value)
                {
                  Oni_ServiceStatusIdChanging(ref value);
                  ReportPropertyChanging("i_ServiceStatusId");
                  _i_ServiceStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceStatusId");
                  Oni_ServiceStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ServiceStatusId;
        partial void OnGeti_ServiceStatusId(ref global::System.Nullable<int> value);
        partial void Oni_ServiceStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ServiceStatusIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceStatusName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceStatusName
        {
            get
            {
                string value = _v_ServiceStatusName;
                OnGetv_ServiceStatusName(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceStatusName != value)
                {
                  Onv_ServiceStatusNameChanging(ref value);
                  ReportPropertyChanging("v_ServiceStatusName");
                  _v_ServiceStatusName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceStatusName");
                  Onv_ServiceStatusNameChanged();
              }
            }
        }
        private string _v_ServiceStatusName;
        partial void OnGetv_ServiceStatusName(ref string value);
        partial void Onv_ServiceStatusNameChanging(ref string value);
        partial void Onv_ServiceStatusNameChanged();
    
        /// <summary>
        /// There are no comments for i_AptitudeStatusId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_AptitudeStatusId
        {
            get
            {
                global::System.Nullable<int> value = _i_AptitudeStatusId;
                OnGeti_AptitudeStatusId(ref value);
                return value;
            }
            set
            {
                if (_i_AptitudeStatusId != value)
                {
                  Oni_AptitudeStatusIdChanging(ref value);
                  ReportPropertyChanging("i_AptitudeStatusId");
                  _i_AptitudeStatusId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_AptitudeStatusId");
                  Oni_AptitudeStatusIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_AptitudeStatusId;
        partial void OnGeti_AptitudeStatusId(ref global::System.Nullable<int> value);
        partial void Oni_AptitudeStatusIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_AptitudeStatusIdChanged();
    
        /// <summary>
        /// There are no comments for d_ServiceDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ServiceDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ServiceDate;
                OnGetd_ServiceDate(ref value);
                return value;
            }
            set
            {
                if (_d_ServiceDate != value)
                {
                  Ond_ServiceDateChanging(ref value);
                  ReportPropertyChanging("d_ServiceDate");
                  _d_ServiceDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ServiceDate");
                  Ond_ServiceDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ServiceDate;
        partial void OnGetd_ServiceDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanged();
    
        /// <summary>
        /// There are no comments for d_GlobalExpirationDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_GlobalExpirationDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_GlobalExpirationDate;
                OnGetd_GlobalExpirationDate(ref value);
                return value;
            }
            set
            {
                if (_d_GlobalExpirationDate != value)
                {
                  Ond_GlobalExpirationDateChanging(ref value);
                  ReportPropertyChanging("d_GlobalExpirationDate");
                  _d_GlobalExpirationDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_GlobalExpirationDate");
                  Ond_GlobalExpirationDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_GlobalExpirationDate;
        partial void OnGetd_GlobalExpirationDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_GlobalExpirationDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_GlobalExpirationDateChanged();
    
        /// <summary>
        /// There are no comments for d_ObsExpirationDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ObsExpirationDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ObsExpirationDate;
                OnGetd_ObsExpirationDate(ref value);
                return value;
            }
            set
            {
                if (_d_ObsExpirationDate != value)
                {
                  Ond_ObsExpirationDateChanging(ref value);
                  ReportPropertyChanging("d_ObsExpirationDate");
                  _d_ObsExpirationDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ObsExpirationDate");
                  Ond_ObsExpirationDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ObsExpirationDate;
        partial void OnGetd_ObsExpirationDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ObsExpirationDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ObsExpirationDateChanged();
    
        /// <summary>
        /// There are no comments for i_FlagAgentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_FlagAgentId
        {
            get
            {
                global::System.Nullable<int> value = _i_FlagAgentId;
                OnGeti_FlagAgentId(ref value);
                return value;
            }
            set
            {
                if (_i_FlagAgentId != value)
                {
                  Oni_FlagAgentIdChanging(ref value);
                  ReportPropertyChanging("i_FlagAgentId");
                  _i_FlagAgentId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_FlagAgentId");
                  Oni_FlagAgentIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_FlagAgentId;
        partial void OnGeti_FlagAgentId(ref global::System.Nullable<int> value);
        partial void Oni_FlagAgentIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_FlagAgentIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_OrganizationName
        {
            get
            {
                string value = _v_OrganizationName;
                OnGetv_OrganizationName(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationName != value)
                {
                  Onv_OrganizationNameChanging(ref value);
                  ReportPropertyChanging("v_OrganizationName");
                  _v_OrganizationName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_OrganizationName");
                  Onv_OrganizationNameChanged();
              }
            }
        }
        private string _v_OrganizationName;
        partial void OnGetv_OrganizationName(ref string value);
        partial void Onv_OrganizationNameChanging(ref string value);
        partial void Onv_OrganizationNameChanged();
    
        /// <summary>
        /// There are no comments for v_GenderName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_GenderName
        {
            get
            {
                string value = _v_GenderName;
                OnGetv_GenderName(ref value);
                return value;
            }
            set
            {
                if (_v_GenderName != value)
                {
                  Onv_GenderNameChanging(ref value);
                  ReportPropertyChanging("v_GenderName");
                  _v_GenderName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_GenderName");
                  Onv_GenderNameChanged();
              }
            }
        }
        private string _v_GenderName;
        partial void OnGetv_GenderName(ref string value);
        partial void Onv_GenderNameChanging(ref string value);
        partial void Onv_GenderNameChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceTypeName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ServiceTypeName
        {
            get
            {
                string value = _v_ServiceTypeName;
                OnGetv_ServiceTypeName(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceTypeName != value)
                {
                  Onv_ServiceTypeNameChanging(ref value);
                  ReportPropertyChanging("v_ServiceTypeName");
                  _v_ServiceTypeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ServiceTypeName");
                  Onv_ServiceTypeNameChanged();
              }
            }
        }
        private string _v_ServiceTypeName;
        partial void OnGetv_ServiceTypeName(ref string value);
        partial void Onv_ServiceTypeNameChanging(ref string value);
        partial void Onv_ServiceTypeNameChanged();
    
        /// <summary>
        /// There are no comments for i_ServiceTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_ServiceTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_ServiceTypeId;
                OnGeti_ServiceTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_ServiceTypeId != value)
                {
                  Oni_ServiceTypeIdChanging(ref value);
                  ReportPropertyChanging("i_ServiceTypeId");
                  _i_ServiceTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_ServiceTypeId");
                  Oni_ServiceTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_ServiceTypeId;
        partial void OnGeti_ServiceTypeId(ref global::System.Nullable<int> value);
        partial void Oni_ServiceTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_ServiceTypeIdChanged();
    
        /// <summary>
        /// There are no comments for i_EsoTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_EsoTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_EsoTypeId;
                OnGeti_EsoTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_EsoTypeId != value)
                {
                  Oni_EsoTypeIdChanging(ref value);
                  ReportPropertyChanging("i_EsoTypeId");
                  _i_EsoTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_EsoTypeId");
                  Oni_EsoTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_EsoTypeId;
        partial void OnGeti_EsoTypeId(ref global::System.Nullable<int> value);
        partial void Oni_EsoTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_EsoTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_LocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LocationId
        {
            get
            {
                string value = _v_LocationId;
                OnGetv_LocationId(ref value);
                return value;
            }
            set
            {
                if (_v_LocationId != value)
                {
                  Onv_LocationIdChanging(ref value);
                  ReportPropertyChanging("v_LocationId");
                  _v_LocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LocationId");
                  Onv_LocationIdChanged();
              }
            }
        }
        private string _v_LocationId;
        partial void OnGetv_LocationId(ref string value);
        partial void Onv_LocationIdChanging(ref string value);
        partial void Onv_LocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_LocationName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_LocationName
        {
            get
            {
                string value = _v_LocationName;
                OnGetv_LocationName(ref value);
                return value;
            }
            set
            {
                if (_v_LocationName != value)
                {
                  Onv_LocationNameChanging(ref value);
                  ReportPropertyChanging("v_LocationName");
                  _v_LocationName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_LocationName");
                  Onv_LocationNameChanged();
              }
            }
        }
        private string _v_LocationName;
        partial void OnGetv_LocationName(ref string value);
        partial void Onv_LocationNameChanging(ref string value);
        partial void Onv_LocationNameChanged();
    
        /// <summary>
        /// There are no comments for v_Pacient in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Pacient
        {
            get
            {
                string value = _v_Pacient;
                OnGetv_Pacient(ref value);
                return value;
            }
            set
            {
                if (_v_Pacient != value)
                {
                  Onv_PacientChanging(ref value);
                  ReportPropertyChanging("v_Pacient");
                  _v_Pacient = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Pacient");
                  Onv_PacientChanged();
              }
            }
        }
        private string _v_Pacient;
        partial void OnGetv_Pacient(ref string value);
        partial void Onv_PacientChanging(ref string value);
        partial void Onv_PacientChanged();
    
        /// <summary>
        /// There are no comments for v_PacientDocument in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_PacientDocument
        {
            get
            {
                string value = _v_PacientDocument;
                OnGetv_PacientDocument(ref value);
                return value;
            }
            set
            {
                if (_v_PacientDocument != value)
                {
                  Onv_PacientDocumentChanging(ref value);
                  ReportPropertyChanging("v_PacientDocument");
                  _v_PacientDocument = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_PacientDocument");
                  Onv_PacientDocumentChanged();
              }
            }
        }
        private string _v_PacientDocument;
        partial void OnGetv_PacientDocument(ref string value);
        partial void Onv_PacientDocumentChanging(ref string value);
        partial void Onv_PacientDocumentChanged();
    
        /// <summary>
        /// There are no comments for v_ProtocolName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_ProtocolName
        {
            get
            {
                string value = _v_ProtocolName;
                OnGetv_ProtocolName(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolName != value)
                {
                  Onv_ProtocolNameChanging(ref value);
                  ReportPropertyChanging("v_ProtocolName");
                  _v_ProtocolName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_ProtocolName");
                  Onv_ProtocolNameChanged();
              }
            }
        }
        private string _v_ProtocolName;
        partial void OnGetv_ProtocolName(ref string value);
        partial void Onv_ProtocolNameChanging(ref string value);
        partial void Onv_ProtocolNameChanged();
    
        /// <summary>
        /// There are no comments for v_CreationUser in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CreationUser
        {
            get
            {
                string value = _v_CreationUser;
                OnGetv_CreationUser(ref value);
                return value;
            }
            set
            {
                if (_v_CreationUser != value)
                {
                  Onv_CreationUserChanging(ref value);
                  ReportPropertyChanging("v_CreationUser");
                  _v_CreationUser = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CreationUser");
                  Onv_CreationUserChanged();
              }
            }
        }
        private string _v_CreationUser;
        partial void OnGetv_CreationUser(ref string value);
        partial void Onv_CreationUserChanging(ref string value);
        partial void Onv_CreationUserChanged();
    
        /// <summary>
        /// There are no comments for v_UpdateUser in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_UpdateUser
        {
            get
            {
                string value = _v_UpdateUser;
                OnGetv_UpdateUser(ref value);
                return value;
            }
            set
            {
                if (_v_UpdateUser != value)
                {
                  Onv_UpdateUserChanging(ref value);
                  ReportPropertyChanging("v_UpdateUser");
                  _v_UpdateUser = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_UpdateUser");
                  Onv_UpdateUserChanged();
              }
            }
        }
        private string _v_UpdateUser;
        partial void OnGetv_UpdateUser(ref string value);
        partial void Onv_UpdateUserChanging(ref string value);
        partial void Onv_UpdateUserChanged();
    
        /// <summary>
        /// There are no comments for d_CreationDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_CreationDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_CreationDate;
                OnGetd_CreationDate(ref value);
                return value;
            }
            set
            {
                if (_d_CreationDate != value)
                {
                  Ond_CreationDateChanging(ref value);
                  ReportPropertyChanging("d_CreationDate");
                  _d_CreationDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_CreationDate");
                  Ond_CreationDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_CreationDate;
        partial void OnGetd_CreationDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_CreationDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_CreationDateChanged();
    
        /// <summary>
        /// There are no comments for d_UpdateDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_UpdateDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_UpdateDate;
                OnGetd_UpdateDate(ref value);
                return value;
            }
            set
            {
                if (_d_UpdateDate != value)
                {
                  Ond_UpdateDateChanging(ref value);
                  ReportPropertyChanging("d_UpdateDate");
                  _d_UpdateDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_UpdateDate");
                  Ond_UpdateDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_UpdateDate;
        partial void OnGetd_UpdateDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_UpdateDateChanged();
    
        /// <summary>
        /// There are no comments for v_AptitudeStatusName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_AptitudeStatusName
        {
            get
            {
                string value = _v_AptitudeStatusName;
                OnGetv_AptitudeStatusName(ref value);
                return value;
            }
            set
            {
                if (_v_AptitudeStatusName != value)
                {
                  Onv_AptitudeStatusNameChanging(ref value);
                  ReportPropertyChanging("v_AptitudeStatusName");
                  _v_AptitudeStatusName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_AptitudeStatusName");
                  Onv_AptitudeStatusNameChanged();
              }
            }
        }
        private string _v_AptitudeStatusName;
        partial void OnGetv_AptitudeStatusName(ref string value);
        partial void Onv_AptitudeStatusNameChanging(ref string value);
        partial void Onv_AptitudeStatusNameChanged();
    
        /// <summary>
        /// There are no comments for v_DocTypeName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DocTypeName
        {
            get
            {
                string value = _v_DocTypeName;
                OnGetv_DocTypeName(ref value);
                return value;
            }
            set
            {
                if (_v_DocTypeName != value)
                {
                  Onv_DocTypeNameChanging(ref value);
                  ReportPropertyChanging("v_DocTypeName");
                  _v_DocTypeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DocTypeName");
                  Onv_DocTypeNameChanged();
              }
            }
        }
        private string _v_DocTypeName;
        partial void OnGetv_DocTypeName(ref string value);
        partial void Onv_DocTypeNameChanging(ref string value);
        partial void Onv_DocTypeNameChanged();
    
        /// <summary>
        /// There are no comments for v_DocNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DocNumber
        {
            get
            {
                string value = _v_DocNumber;
                OnGetv_DocNumber(ref value);
                return value;
            }
            set
            {
                if (_v_DocNumber != value)
                {
                  Onv_DocNumberChanging(ref value);
                  ReportPropertyChanging("v_DocNumber");
                  _v_DocNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DocNumber");
                  Onv_DocNumberChanged();
              }
            }
        }
        private string _v_DocNumber;
        partial void OnGetv_DocNumber(ref string value);
        partial void Onv_DocNumberChanging(ref string value);
        partial void Onv_DocNumberChanged();
    
        /// <summary>
        /// There are no comments for v_CustomerOrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CustomerOrganizationId
        {
            get
            {
                string value = _v_CustomerOrganizationId;
                OnGetv_CustomerOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_CustomerOrganizationId != value)
                {
                  Onv_CustomerOrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_CustomerOrganizationId");
                  _v_CustomerOrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CustomerOrganizationId");
                  Onv_CustomerOrganizationIdChanged();
              }
            }
        }
        private string _v_CustomerOrganizationId;
        partial void OnGetv_CustomerOrganizationId(ref string value);
        partial void Onv_CustomerOrganizationIdChanging(ref string value);
        partial void Onv_CustomerOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_CustomerLocationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CustomerLocationId
        {
            get
            {
                string value = _v_CustomerLocationId;
                OnGetv_CustomerLocationId(ref value);
                return value;
            }
            set
            {
                if (_v_CustomerLocationId != value)
                {
                  Onv_CustomerLocationIdChanging(ref value);
                  ReportPropertyChanging("v_CustomerLocationId");
                  _v_CustomerLocationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CustomerLocationId");
                  Onv_CustomerLocationIdChanged();
              }
            }
        }
        private string _v_CustomerLocationId;
        partial void OnGetv_CustomerLocationId(ref string value);
        partial void Onv_CustomerLocationIdChanging(ref string value);
        partial void Onv_CustomerLocationIdChanged();
    
        /// <summary>
        /// There are no comments for v_EsoTypeName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_EsoTypeName
        {
            get
            {
                string value = _v_EsoTypeName;
                OnGetv_EsoTypeName(ref value);
                return value;
            }
            set
            {
                if (_v_EsoTypeName != value)
                {
                  Onv_EsoTypeNameChanging(ref value);
                  ReportPropertyChanging("v_EsoTypeName");
                  _v_EsoTypeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_EsoTypeName");
                  Onv_EsoTypeNameChanged();
              }
            }
        }
        private string _v_EsoTypeName;
        partial void OnGetv_EsoTypeName(ref string value);
        partial void Onv_EsoTypeNameChanging(ref string value);
        partial void Onv_EsoTypeNameChanged();
    
        /// <summary>
        /// There are no comments for i_StatusLiquidation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_StatusLiquidation
        {
            get
            {
                global::System.Nullable<int> value = _i_StatusLiquidation;
                OnGeti_StatusLiquidation(ref value);
                return value;
            }
            set
            {
                if (_i_StatusLiquidation != value)
                {
                  Oni_StatusLiquidationChanging(ref value);
                  ReportPropertyChanging("i_StatusLiquidation");
                  _i_StatusLiquidation = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_StatusLiquidation");
                  Oni_StatusLiquidationChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_StatusLiquidation;
        partial void OnGeti_StatusLiquidation(ref global::System.Nullable<int> value);
        partial void Oni_StatusLiquidationChanging(ref global::System.Nullable<int> value);
        partial void Oni_StatusLiquidationChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Contratista in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Contratista
        {
            get
            {
                string value = _Contratista;
                OnGetContratista(ref value);
                return value;
            }
            set
            {
                if (_Contratista != value)
                {
                  OnContratistaChanging(ref value);
                  ReportPropertyChanging("Contratista");
                  _Contratista = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Contratista");
                  OnContratistaChanged();
              }
            }
        }
        private string _Contratista;
        partial void OnGetContratista(ref string value);
        partial void OnContratistaChanging(ref string value);
        partial void OnContratistaChanged();
    
        /// <summary>
        /// There are no comments for Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sede
        {
            get
            {
                string value = _Sede;
                OnGetSede(ref value);
                return value;
            }
            set
            {
                if (_Sede != value)
                {
                  OnSedeChanging(ref value);
                  ReportPropertyChanging("Sede");
                  _Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sede");
                  OnSedeChanged();
              }
            }
        }
        private string _Sede;
        partial void OnGetSede(ref string value);
        partial void OnSedeChanging(ref string value);
        partial void OnSedeChanged();
    
        /// <summary>
        /// There are no comments for DAS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> DAS
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _DAS;
                OnGetDAS(ref value);
                return value;
            }
            set
            {
                if (_DAS != value)
                {
                  OnDASChanging(ref value);
                  ReportPropertyChanging("DAS");
                  _DAS = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DAS");
                  OnDASChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _DAS;
        partial void OnGetDAS(ref global::System.Nullable<System.DateTime> value);
        partial void OnDASChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnDASChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.obteneragendaporcategoriaResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="obteneragendaporcategoriaResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class obteneragendaporcategoriaResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new obteneragendaporcategoriaResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        /// <param name="v_PersonId">Initial value of v_PersonId.</param>
        public static obteneragendaporcategoriaResult CreateobteneragendaporcategoriaResult(string v_ServiceId, string v_PersonId)
        {
            obteneragendaporcategoriaResult obteneragendaporcategoriaResult = new obteneragendaporcategoriaResult();
            obteneragendaporcategoriaResult.v_ServiceId = v_ServiceId;
            obteneragendaporcategoriaResult.v_PersonId = v_PersonId;
            return obteneragendaporcategoriaResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for i_NroTickets in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_NroTickets
        {
            get
            {
                global::System.Nullable<int> value = _i_NroTickets;
                OnGeti_NroTickets(ref value);
                return value;
            }
            set
            {
                if (_i_NroTickets != value)
                {
                  Oni_NroTicketsChanging(ref value);
                  ReportPropertyChanging("i_NroTickets");
                  _i_NroTickets = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_NroTickets");
                  Oni_NroTicketsChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_NroTickets;
        partial void OnGeti_NroTickets(ref global::System.Nullable<int> value);
        partial void Oni_NroTicketsChanging(ref global::System.Nullable<int> value);
        partial void Oni_NroTicketsChanged();
    
        /// <summary>
        /// There are no comments for d_CircuitStartDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_CircuitStartDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_CircuitStartDate;
                OnGetd_CircuitStartDate(ref value);
                return value;
            }
            set
            {
                if (_d_CircuitStartDate != value)
                {
                  Ond_CircuitStartDateChanging(ref value);
                  ReportPropertyChanging("d_CircuitStartDate");
                  _d_CircuitStartDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_CircuitStartDate");
                  Ond_CircuitStartDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_CircuitStartDate;
        partial void OnGetd_CircuitStartDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_CircuitStartDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_CircuitStartDateChanged();
    
        /// <summary>
        /// There are no comments for Paciente in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Paciente
        {
            get
            {
                string value = _Paciente;
                OnGetPaciente(ref value);
                return value;
            }
            set
            {
                if (_Paciente != value)
                {
                  OnPacienteChanging(ref value);
                  ReportPropertyChanging("Paciente");
                  _Paciente = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Paciente");
                  OnPacienteChanged();
              }
            }
        }
        private string _Paciente;
        partial void OnGetPaciente(ref string value);
        partial void OnPacienteChanging(ref string value);
        partial void OnPacienteChanged();
    
        /// <summary>
        /// There are no comments for NroDocum in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string NroDocum
        {
            get
            {
                string value = _NroDocum;
                OnGetNroDocum(ref value);
                return value;
            }
            set
            {
                if (_NroDocum != value)
                {
                  OnNroDocumChanging(ref value);
                  ReportPropertyChanging("NroDocum");
                  _NroDocum = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NroDocum");
                  OnNroDocumChanged();
              }
            }
        }
        private string _NroDocum;
        partial void OnGetNroDocum(ref string value);
        partial void OnNroDocumChanging(ref string value);
        partial void OnNroDocumChanged();
    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Edad
        {
            get
            {
                global::System.Nullable<int> value = _Edad;
                OnGetEdad(ref value);
                return value;
            }
            set
            {
                if (_Edad != value)
                {
                  OnEdadChanging(ref value);
                  ReportPropertyChanging("Edad");
                  _Edad = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Edad");
                  OnEdadChanged();
              }
            }
        }
        private global::System.Nullable<int> _Edad;
        partial void OnGetEdad(ref global::System.Nullable<int> value);
        partial void OnEdadChanging(ref global::System.Nullable<int> value);
        partial void OnEdadChanged();
    
        /// <summary>
        /// There are no comments for Empleador in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Empleador
        {
            get
            {
                string value = _Empleador;
                OnGetEmpleador(ref value);
                return value;
            }
            set
            {
                if (_Empleador != value)
                {
                  OnEmpleadorChanging(ref value);
                  ReportPropertyChanging("Empleador");
                  _Empleador = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Empleador");
                  OnEmpleadorChanged();
              }
            }
        }
        private string _Empleador;
        partial void OnGetEmpleador(ref string value);
        partial void OnEmpleadorChanging(ref string value);
        partial void OnEmpleadorChanged();
    
        /// <summary>
        /// There are no comments for Cliente in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Cliente
        {
            get
            {
                string value = _Cliente;
                OnGetCliente(ref value);
                return value;
            }
            set
            {
                if (_Cliente != value)
                {
                  OnClienteChanging(ref value);
                  ReportPropertyChanging("Cliente");
                  _Cliente = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Cliente");
                  OnClienteChanged();
              }
            }
        }
        private string _Cliente;
        partial void OnGetCliente(ref string value);
        partial void OnClienteChanging(ref string value);
        partial void OnClienteChanged();
    
        /// <summary>
        /// There are no comments for Protocolo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Protocolo
        {
            get
            {
                string value = _Protocolo;
                OnGetProtocolo(ref value);
                return value;
            }
            set
            {
                if (_Protocolo != value)
                {
                  OnProtocoloChanging(ref value);
                  ReportPropertyChanging("Protocolo");
                  _Protocolo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Protocolo");
                  OnProtocoloChanged();
              }
            }
        }
        private string _Protocolo;
        partial void OnGetProtocolo(ref string value);
        partial void OnProtocoloChanging(ref string value);
        partial void OnProtocoloChanged();
    
        /// <summary>
        /// There are no comments for v_Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Value1
        {
            get
            {
                string value = _v_Value1;
                OnGetv_Value1(ref value);
                return value;
            }
            set
            {
                if (_v_Value1 != value)
                {
                  Onv_Value1Changing(ref value);
                  ReportPropertyChanging("v_Value1");
                  _v_Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Value1");
                  Onv_Value1Changed();
              }
            }
        }
        private string _v_Value1;
        partial void OnGetv_Value1(ref string value);
        partial void Onv_Value1Changing(ref string value);
        partial void Onv_Value1Changed();
    
        /// <summary>
        /// There are no comments for v_CurrentOccupation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CurrentOccupation
        {
            get
            {
                string value = _v_CurrentOccupation;
                OnGetv_CurrentOccupation(ref value);
                return value;
            }
            set
            {
                if (_v_CurrentOccupation != value)
                {
                  Onv_CurrentOccupationChanging(ref value);
                  ReportPropertyChanging("v_CurrentOccupation");
                  _v_CurrentOccupation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CurrentOccupation");
                  Onv_CurrentOccupationChanged();
              }
            }
        }
        private string _v_CurrentOccupation;
        partial void OnGetv_CurrentOccupation(ref string value);
        partial void Onv_CurrentOccupationChanging(ref string value);
        partial void Onv_CurrentOccupationChanged();
    
        /// <summary>
        /// There are no comments for i_IsVipId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_IsVipId
        {
            get
            {
                global::System.Nullable<int> value = _i_IsVipId;
                OnGeti_IsVipId(ref value);
                return value;
            }
            set
            {
                if (_i_IsVipId != value)
                {
                  Oni_IsVipIdChanging(ref value);
                  ReportPropertyChanging("i_IsVipId");
                  _i_IsVipId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_IsVipId");
                  Oni_IsVipIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_IsVipId;
        partial void OnGeti_IsVipId(ref global::System.Nullable<int> value);
        partial void Oni_IsVipIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_IsVipIdChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.obtenerdetalladoserviciosResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="obtenerdetalladoserviciosResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class obtenerdetalladoserviciosResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new obtenerdetalladoserviciosResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        /// <param name="v_UserName">Initial value of v_UserName.</param>
        public static obtenerdetalladoserviciosResult CreateobtenerdetalladoserviciosResult(string v_ServiceId, string v_UserName)
        {
            obtenerdetalladoserviciosResult obtenerdetalladoserviciosResult = new obtenerdetalladoserviciosResult();
            obtenerdetalladoserviciosResult.v_ServiceId = v_ServiceId;
            obtenerdetalladoserviciosResult.v_UserName = v_UserName;
            return obtenerdetalladoserviciosResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for d_ServiceDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ServiceDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ServiceDate;
                OnGetd_ServiceDate(ref value);
                return value;
            }
            set
            {
                if (_d_ServiceDate != value)
                {
                  Ond_ServiceDateChanging(ref value);
                  ReportPropertyChanging("d_ServiceDate");
                  _d_ServiceDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ServiceDate");
                  Ond_ServiceDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ServiceDate;
        partial void OnGetd_ServiceDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanged();
    
        /// <summary>
        /// There are no comments for v_DocNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DocNumber
        {
            get
            {
                string value = _v_DocNumber;
                OnGetv_DocNumber(ref value);
                return value;
            }
            set
            {
                if (_v_DocNumber != value)
                {
                  Onv_DocNumberChanging(ref value);
                  ReportPropertyChanging("v_DocNumber");
                  _v_DocNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DocNumber");
                  Onv_DocNumberChanged();
              }
            }
        }
        private string _v_DocNumber;
        partial void OnGetv_DocNumber(ref string value);
        partial void Onv_DocNumberChanging(ref string value);
        partial void Onv_DocNumberChanged();
    
        /// <summary>
        /// There are no comments for PACIENTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string PACIENTE
        {
            get
            {
                string value = _PACIENTE;
                OnGetPACIENTE(ref value);
                return value;
            }
            set
            {
                if (_PACIENTE != value)
                {
                  OnPACIENTEChanging(ref value);
                  ReportPropertyChanging("PACIENTE");
                  _PACIENTE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PACIENTE");
                  OnPACIENTEChanged();
              }
            }
        }
        private string _PACIENTE;
        partial void OnGetPACIENTE(ref string value);
        partial void OnPACIENTEChanging(ref string value);
        partial void OnPACIENTEChanged();
    
        /// <summary>
        /// There are no comments for v_CurrentOccupation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CurrentOccupation
        {
            get
            {
                string value = _v_CurrentOccupation;
                OnGetv_CurrentOccupation(ref value);
                return value;
            }
            set
            {
                if (_v_CurrentOccupation != value)
                {
                  Onv_CurrentOccupationChanging(ref value);
                  ReportPropertyChanging("v_CurrentOccupation");
                  _v_CurrentOccupation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CurrentOccupation");
                  Onv_CurrentOccupationChanged();
              }
            }
        }
        private string _v_CurrentOccupation;
        partial void OnGetv_CurrentOccupation(ref string value);
        partial void Onv_CurrentOccupationChanging(ref string value);
        partial void Onv_CurrentOccupationChanged();
    
        /// <summary>
        /// There are no comments for EDAD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> EDAD
        {
            get
            {
                global::System.Nullable<int> value = _EDAD;
                OnGetEDAD(ref value);
                return value;
            }
            set
            {
                if (_EDAD != value)
                {
                  OnEDADChanging(ref value);
                  ReportPropertyChanging("EDAD");
                  _EDAD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EDAD");
                  OnEDADChanged();
              }
            }
        }
        private global::System.Nullable<int> _EDAD;
        partial void OnGetEDAD(ref global::System.Nullable<int> value);
        partial void OnEDADChanging(ref global::System.Nullable<int> value);
        partial void OnEDADChanged();
    
        /// <summary>
        /// There are no comments for RUCCLI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string RUCCLI
        {
            get
            {
                string value = _RUCCLI;
                OnGetRUCCLI(ref value);
                return value;
            }
            set
            {
                if (_RUCCLI != value)
                {
                  OnRUCCLIChanging(ref value);
                  ReportPropertyChanging("RUCCLI");
                  _RUCCLI = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RUCCLI");
                  OnRUCCLIChanged();
              }
            }
        }
        private string _RUCCLI;
        partial void OnGetRUCCLI(ref string value);
        partial void OnRUCCLIChanging(ref string value);
        partial void OnRUCCLIChanged();
    
        /// <summary>
        /// There are no comments for CLIENTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string CLIENTE
        {
            get
            {
                string value = _CLIENTE;
                OnGetCLIENTE(ref value);
                return value;
            }
            set
            {
                if (_CLIENTE != value)
                {
                  OnCLIENTEChanging(ref value);
                  ReportPropertyChanging("CLIENTE");
                  _CLIENTE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CLIENTE");
                  OnCLIENTEChanged();
              }
            }
        }
        private string _CLIENTE;
        partial void OnGetCLIENTE(ref string value);
        partial void OnCLIENTEChanging(ref string value);
        partial void OnCLIENTEChanged();
    
        /// <summary>
        /// There are no comments for Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sede
        {
            get
            {
                string value = _Sede;
                OnGetSede(ref value);
                return value;
            }
            set
            {
                if (_Sede != value)
                {
                  OnSedeChanging(ref value);
                  ReportPropertyChanging("Sede");
                  _Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sede");
                  OnSedeChanged();
              }
            }
        }
        private string _Sede;
        partial void OnGetSede(ref string value);
        partial void OnSedeChanging(ref string value);
        partial void OnSedeChanged();
    
        /// <summary>
        /// There are no comments for RUCFACT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string RUCFACT
        {
            get
            {
                string value = _RUCFACT;
                OnGetRUCFACT(ref value);
                return value;
            }
            set
            {
                if (_RUCFACT != value)
                {
                  OnRUCFACTChanging(ref value);
                  ReportPropertyChanging("RUCFACT");
                  _RUCFACT = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RUCFACT");
                  OnRUCFACTChanged();
              }
            }
        }
        private string _RUCFACT;
        partial void OnGetRUCFACT(ref string value);
        partial void OnRUCFACTChanging(ref string value);
        partial void OnRUCFACTChanged();
    
        /// <summary>
        /// There are no comments for EMPFACT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EMPFACT
        {
            get
            {
                string value = _EMPFACT;
                OnGetEMPFACT(ref value);
                return value;
            }
            set
            {
                if (_EMPFACT != value)
                {
                  OnEMPFACTChanging(ref value);
                  ReportPropertyChanging("EMPFACT");
                  _EMPFACT = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EMPFACT");
                  OnEMPFACTChanged();
              }
            }
        }
        private string _EMPFACT;
        partial void OnGetEMPFACT(ref string value);
        partial void OnEMPFACTChanging(ref string value);
        partial void OnEMPFACTChanged();
    
        /// <summary>
        /// There are no comments for PROTOCOLO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string PROTOCOLO
        {
            get
            {
                string value = _PROTOCOLO;
                OnGetPROTOCOLO(ref value);
                return value;
            }
            set
            {
                if (_PROTOCOLO != value)
                {
                  OnPROTOCOLOChanging(ref value);
                  ReportPropertyChanging("PROTOCOLO");
                  _PROTOCOLO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PROTOCOLO");
                  OnPROTOCOLOChanged();
              }
            }
        }
        private string _PROTOCOLO;
        partial void OnGetPROTOCOLO(ref string value);
        partial void OnPROTOCOLOChanging(ref string value);
        partial void OnPROTOCOLOChanged();
    
        /// <summary>
        /// There are no comments for EXAMEN in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EXAMEN
        {
            get
            {
                string value = _EXAMEN;
                OnGetEXAMEN(ref value);
                return value;
            }
            set
            {
                if (_EXAMEN != value)
                {
                  OnEXAMENChanging(ref value);
                  ReportPropertyChanging("EXAMEN");
                  _EXAMEN = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EXAMEN");
                  OnEXAMENChanged();
              }
            }
        }
        private string _EXAMEN;
        partial void OnGetEXAMEN(ref string value);
        partial void OnEXAMENChanging(ref string value);
        partial void OnEXAMENChanged();
    
        /// <summary>
        /// There are no comments for PRECIO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> PRECIO
        {
            get
            {
                global::System.Nullable<float> value = _PRECIO;
                OnGetPRECIO(ref value);
                return value;
            }
            set
            {
                if (_PRECIO != value)
                {
                  OnPRECIOChanging(ref value);
                  ReportPropertyChanging("PRECIO");
                  _PRECIO = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PRECIO");
                  OnPRECIOChanged();
              }
            }
        }
        private global::System.Nullable<float> _PRECIO;
        partial void OnGetPRECIO(ref global::System.Nullable<float> value);
        partial void OnPRECIOChanging(ref global::System.Nullable<float> value);
        partial void OnPRECIOChanged();
    
        /// <summary>
        /// There are no comments for v_UserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_UserName
        {
            get
            {
                string value = _v_UserName;
                OnGetv_UserName(ref value);
                return value;
            }
            set
            {
                if (_v_UserName != value)
                {
                  Onv_UserNameChanging(ref value);
                  ReportPropertyChanging("v_UserName");
                  _v_UserName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_UserName");
                  Onv_UserNameChanged();
              }
            }
        }
        private string _v_UserName;
        partial void OnGetv_UserName(ref string value);
        partial void Onv_UserNameChanging(ref string value);
        partial void Onv_UserNameChanged();
    
        /// <summary>
        /// There are no comments for Estado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Estado
        {
            get
            {
                string value = _Estado;
                OnGetEstado(ref value);
                return value;
            }
            set
            {
                if (_Estado != value)
                {
                  OnEstadoChanging(ref value);
                  ReportPropertyChanging("Estado");
                  _Estado = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Estado");
                  OnEstadoChanged();
              }
            }
        }
        private string _Estado;
        partial void OnGetEstado(ref string value);
        partial void OnEstadoChanging(ref string value);
        partial void OnEstadoChanged();
    
        /// <summary>
        /// There are no comments for CompEstado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string CompEstado
        {
            get
            {
                string value = _CompEstado;
                OnGetCompEstado(ref value);
                return value;
            }
            set
            {
                if (_CompEstado != value)
                {
                  OnCompEstadoChanging(ref value);
                  ReportPropertyChanging("CompEstado");
                  _CompEstado = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CompEstado");
                  OnCompEstadoChanged();
              }
            }
        }
        private string _CompEstado;
        partial void OnGetCompEstado(ref string value);
        partial void OnCompEstadoChanging(ref string value);
        partial void OnCompEstadoChanged();
    
        /// <summary>
        /// There are no comments for cdoc_Serie in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string cdoc_Serie
        {
            get
            {
                string value = _cdoc_Serie;
                OnGetcdoc_Serie(ref value);
                return value;
            }
            set
            {
                if (_cdoc_Serie != value)
                {
                  Oncdoc_SerieChanging(ref value);
                  ReportPropertyChanging("cdoc_Serie");
                  _cdoc_Serie = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("cdoc_Serie");
                  Oncdoc_SerieChanged();
              }
            }
        }
        private string _cdoc_Serie;
        partial void OnGetcdoc_Serie(ref string value);
        partial void Oncdoc_SerieChanging(ref string value);
        partial void Oncdoc_SerieChanged();
    
        /// <summary>
        /// There are no comments for cdoc_nro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string cdoc_nro
        {
            get
            {
                string value = _cdoc_nro;
                OnGetcdoc_nro(ref value);
                return value;
            }
            set
            {
                if (_cdoc_nro != value)
                {
                  Oncdoc_nroChanging(ref value);
                  ReportPropertyChanging("cdoc_nro");
                  _cdoc_nro = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("cdoc_nro");
                  Oncdoc_nroChanged();
              }
            }
        }
        private string _cdoc_nro;
        partial void OnGetcdoc_nro(ref string value);
        partial void Oncdoc_nroChanging(ref string value);
        partial void Oncdoc_nroChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.obtenerestadoxcomponentesResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="obtenerestadoxcomponentesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class obtenerestadoxcomponentesResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new obtenerestadoxcomponentesResult object.
        /// </summary>
        public static obtenerestadoxcomponentesResult CreateobtenerestadoxcomponentesResult()
        {
            obtenerestadoxcomponentesResult obtenerestadoxcomponentesResult = new obtenerestadoxcomponentesResult();
            return obtenerestadoxcomponentesResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for Consultorio in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Consultorio
        {
            get
            {
                string value = _Consultorio;
                OnGetConsultorio(ref value);
                return value;
            }
            set
            {
                if (_Consultorio != value)
                {
                  OnConsultorioChanging(ref value);
                  ReportPropertyChanging("Consultorio");
                  _Consultorio = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Consultorio");
                  OnConsultorioChanged();
              }
            }
        }
        private string _Consultorio;
        partial void OnGetConsultorio(ref string value);
        partial void OnConsultorioChanging(ref string value);
        partial void OnConsultorioChanged();
    
        /// <summary>
        /// There are no comments for Llamado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Llamado
        {
            get
            {
                string value = _Llamado;
                OnGetLlamado(ref value);
                return value;
            }
            set
            {
                if (_Llamado != value)
                {
                  OnLlamadoChanging(ref value);
                  ReportPropertyChanging("Llamado");
                  _Llamado = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Llamado");
                  OnLlamadoChanged();
              }
            }
        }
        private string _Llamado;
        partial void OnGetLlamado(ref string value);
        partial void OnLlamadoChanging(ref string value);
        partial void OnLlamadoChanged();
    
        /// <summary>
        /// There are no comments for Estado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Estado
        {
            get
            {
                string value = _Estado;
                OnGetEstado(ref value);
                return value;
            }
            set
            {
                if (_Estado != value)
                {
                  OnEstadoChanging(ref value);
                  ReportPropertyChanging("Estado");
                  _Estado = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Estado");
                  OnEstadoChanged();
              }
            }
        }
        private string _Estado;
        partial void OnGetEstado(ref string value);
        partial void OnEstadoChanging(ref string value);
        partial void OnEstadoChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.obtenerhojatrabajolabResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="obtenerhojatrabajolabResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class obtenerhojatrabajolabResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new obtenerhojatrabajolabResult object.
        /// </summary>
        /// <param name="sEXO">Initial value of SEXO.</param>
        /// <param name="gRUPO">Initial value of GRUPO.</param>
        /// <param name="c">Initial value of C.</param>
        /// <param name="pH">Initial value of PH.</param>
        /// <param name="d">Initial value of D.</param>
        /// <param name="bQ">Initial value of BQ.</param>
        /// <param name="cEL">Initial value of CEL.</param>
        /// <param name="lEU">Initial value of LEU.</param>
        /// <param name="hEM">Initial value of HEM.</param>
        /// <param name="oBS">Initial value of OBS.</param>
        /// <param name="p_">Initial value of P_.</param>
        /// <param name="p_1">Initial value of P_1.</param>
        /// <param name="p_2">Initial value of P_2.</param>
        public static obtenerhojatrabajolabResult CreateobtenerhojatrabajolabResult(string sEXO, string gRUPO, string c, string pH, string d, string bQ, string cEL, string lEU, string hEM, string oBS, string p_, string p_1, string p_2)
        {
            obtenerhojatrabajolabResult obtenerhojatrabajolabResult = new obtenerhojatrabajolabResult();
            obtenerhojatrabajolabResult.SEXO = sEXO;
            obtenerhojatrabajolabResult.GRUPO = gRUPO;
            obtenerhojatrabajolabResult.C = c;
            obtenerhojatrabajolabResult.PH = pH;
            obtenerhojatrabajolabResult.D = d;
            obtenerhojatrabajolabResult.BQ = bQ;
            obtenerhojatrabajolabResult.CEL = cEL;
            obtenerhojatrabajolabResult.LEU = lEU;
            obtenerhojatrabajolabResult.HEM = hEM;
            obtenerhojatrabajolabResult.OBS = oBS;
            obtenerhojatrabajolabResult.P_ = p_;
            obtenerhojatrabajolabResult.P_1 = p_1;
            obtenerhojatrabajolabResult.P_2 = p_2;
            return obtenerhojatrabajolabResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ID in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ID
        {
            get
            {
                string value = _ID;
                OnGetID(ref value);
                return value;
            }
            set
            {
                if (_ID != value)
                {
                  OnIDChanging(ref value);
                  ReportPropertyChanging("ID");
                  _ID = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ID");
                  OnIDChanged();
              }
            }
        }
        private string _ID;
        partial void OnGetID(ref string value);
        partial void OnIDChanging(ref string value);
        partial void OnIDChanged();
    
        /// <summary>
        /// There are no comments for column1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string column1
        {
            get
            {
                string value = _column1;
                OnGetcolumn1(ref value);
                return value;
            }
            set
            {
                if (_column1 != value)
                {
                  Oncolumn1Changing(ref value);
                  ReportPropertyChanging("column1");
                  _column1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("column1");
                  Oncolumn1Changed();
              }
            }
        }
        private string _column1;
        partial void OnGetcolumn1(ref string value);
        partial void Oncolumn1Changing(ref string value);
        partial void Oncolumn1Changed();
    
        /// <summary>
        /// There are no comments for EDAD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> EDAD
        {
            get
            {
                global::System.Nullable<int> value = _EDAD;
                OnGetEDAD(ref value);
                return value;
            }
            set
            {
                if (_EDAD != value)
                {
                  OnEDADChanging(ref value);
                  ReportPropertyChanging("EDAD");
                  _EDAD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EDAD");
                  OnEDADChanged();
              }
            }
        }
        private global::System.Nullable<int> _EDAD;
        partial void OnGetEDAD(ref global::System.Nullable<int> value);
        partial void OnEDADChanging(ref global::System.Nullable<int> value);
        partial void OnEDADChanged();
    
        /// <summary>
        /// There are no comments for SEXO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string SEXO
        {
            get
            {
                string value = _SEXO;
                OnGetSEXO(ref value);
                return value;
            }
            set
            {
                if (_SEXO != value)
                {
                  OnSEXOChanging(ref value);
                  ReportPropertyChanging("SEXO");
                  _SEXO = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("SEXO");
                  OnSEXOChanged();
              }
            }
        }
        private string _SEXO;
        partial void OnGetSEXO(ref string value);
        partial void OnSEXOChanging(ref string value);
        partial void OnSEXOChanged();
    
        /// <summary>
        /// There are no comments for NOMBRE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string NOMBRE
        {
            get
            {
                string value = _NOMBRE;
                OnGetNOMBRE(ref value);
                return value;
            }
            set
            {
                if (_NOMBRE != value)
                {
                  OnNOMBREChanging(ref value);
                  ReportPropertyChanging("NOMBRE");
                  _NOMBRE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NOMBRE");
                  OnNOMBREChanged();
              }
            }
        }
        private string _NOMBRE;
        partial void OnGetNOMBRE(ref string value);
        partial void OnNOMBREChanging(ref string value);
        partial void OnNOMBREChanged();
    
        /// <summary>
        /// There are no comments for GRUPO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string GRUPO
        {
            get
            {
                string value = _GRUPO;
                OnGetGRUPO(ref value);
                return value;
            }
            set
            {
                if (_GRUPO != value)
                {
                  OnGRUPOChanging(ref value);
                  ReportPropertyChanging("GRUPO");
                  _GRUPO = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("GRUPO");
                  OnGRUPOChanged();
              }
            }
        }
        private string _GRUPO;
        partial void OnGetGRUPO(ref string value);
        partial void OnGRUPOChanging(ref string value);
        partial void OnGRUPOChanged();
    
        /// <summary>
        /// There are no comments for C in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string C
        {
            get
            {
                string value = _C;
                OnGetC(ref value);
                return value;
            }
            set
            {
                if (_C != value)
                {
                  OnCChanging(ref value);
                  ReportPropertyChanging("C");
                  _C = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("C");
                  OnCChanged();
              }
            }
        }
        private string _C;
        partial void OnGetC(ref string value);
        partial void OnCChanging(ref string value);
        partial void OnCChanged();
    
        /// <summary>
        /// There are no comments for PH in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string PH
        {
            get
            {
                string value = _PH;
                OnGetPH(ref value);
                return value;
            }
            set
            {
                if (_PH != value)
                {
                  OnPHChanging(ref value);
                  ReportPropertyChanging("PH");
                  _PH = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PH");
                  OnPHChanged();
              }
            }
        }
        private string _PH;
        partial void OnGetPH(ref string value);
        partial void OnPHChanging(ref string value);
        partial void OnPHChanged();
    
        /// <summary>
        /// There are no comments for D in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string D
        {
            get
            {
                string value = _D;
                OnGetD(ref value);
                return value;
            }
            set
            {
                if (_D != value)
                {
                  OnDChanging(ref value);
                  ReportPropertyChanging("D");
                  _D = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("D");
                  OnDChanged();
              }
            }
        }
        private string _D;
        partial void OnGetD(ref string value);
        partial void OnDChanging(ref string value);
        partial void OnDChanged();
    
        /// <summary>
        /// There are no comments for BQ in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string BQ
        {
            get
            {
                string value = _BQ;
                OnGetBQ(ref value);
                return value;
            }
            set
            {
                if (_BQ != value)
                {
                  OnBQChanging(ref value);
                  ReportPropertyChanging("BQ");
                  _BQ = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("BQ");
                  OnBQChanged();
              }
            }
        }
        private string _BQ;
        partial void OnGetBQ(ref string value);
        partial void OnBQChanging(ref string value);
        partial void OnBQChanged();
    
        /// <summary>
        /// There are no comments for CEL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string CEL
        {
            get
            {
                string value = _CEL;
                OnGetCEL(ref value);
                return value;
            }
            set
            {
                if (_CEL != value)
                {
                  OnCELChanging(ref value);
                  ReportPropertyChanging("CEL");
                  _CEL = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("CEL");
                  OnCELChanged();
              }
            }
        }
        private string _CEL;
        partial void OnGetCEL(ref string value);
        partial void OnCELChanging(ref string value);
        partial void OnCELChanged();
    
        /// <summary>
        /// There are no comments for LEU in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string LEU
        {
            get
            {
                string value = _LEU;
                OnGetLEU(ref value);
                return value;
            }
            set
            {
                if (_LEU != value)
                {
                  OnLEUChanging(ref value);
                  ReportPropertyChanging("LEU");
                  _LEU = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LEU");
                  OnLEUChanged();
              }
            }
        }
        private string _LEU;
        partial void OnGetLEU(ref string value);
        partial void OnLEUChanging(ref string value);
        partial void OnLEUChanged();
    
        /// <summary>
        /// There are no comments for HEM in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string HEM
        {
            get
            {
                string value = _HEM;
                OnGetHEM(ref value);
                return value;
            }
            set
            {
                if (_HEM != value)
                {
                  OnHEMChanging(ref value);
                  ReportPropertyChanging("HEM");
                  _HEM = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("HEM");
                  OnHEMChanged();
              }
            }
        }
        private string _HEM;
        partial void OnGetHEM(ref string value);
        partial void OnHEMChanging(ref string value);
        partial void OnHEMChanged();
    
        /// <summary>
        /// There are no comments for OBS in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string OBS
        {
            get
            {
                string value = _OBS;
                OnGetOBS(ref value);
                return value;
            }
            set
            {
                if (_OBS != value)
                {
                  OnOBSChanging(ref value);
                  ReportPropertyChanging("OBS");
                  _OBS = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("OBS");
                  OnOBSChanged();
              }
            }
        }
        private string _OBS;
        partial void OnGetOBS(ref string value);
        partial void OnOBSChanging(ref string value);
        partial void OnOBSChanged();
    
        /// <summary>
        /// There are no comments for P_ in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string P_
        {
            get
            {
                string value = _P_;
                OnGetP_(ref value);
                return value;
            }
            set
            {
                if (_P_ != value)
                {
                  OnP_Changing(ref value);
                  ReportPropertyChanging("P_");
                  _P_ = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("P_");
                  OnP_Changed();
              }
            }
        }
        private string _P_;
        partial void OnGetP_(ref string value);
        partial void OnP_Changing(ref string value);
        partial void OnP_Changed();
    
        /// <summary>
        /// There are no comments for P_1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string P_1
        {
            get
            {
                string value = _P_1;
                OnGetP_1(ref value);
                return value;
            }
            set
            {
                if (_P_1 != value)
                {
                  OnP_1Changing(ref value);
                  ReportPropertyChanging("P_1");
                  _P_1 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("P_1");
                  OnP_1Changed();
              }
            }
        }
        private string _P_1;
        partial void OnGetP_1(ref string value);
        partial void OnP_1Changing(ref string value);
        partial void OnP_1Changed();
    
        /// <summary>
        /// There are no comments for P_2 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string P_2
        {
            get
            {
                string value = _P_2;
                OnGetP_2(ref value);
                return value;
            }
            set
            {
                if (_P_2 != value)
                {
                  OnP_2Changing(ref value);
                  ReportPropertyChanging("P_2");
                  _P_2 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("P_2");
                  OnP_2Changed();
              }
            }
        }
        private string _P_2;
        partial void OnGetP_2(ref string value);
        partial void OnP_2Changing(ref string value);
        partial void OnP_2Changed();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.obtenerresultados_webxsystemuserResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="obtenerresultados_webxsystemuserResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class obtenerresultados_webxsystemuserResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new obtenerresultados_webxsystemuserResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        /// <param name="v_PersonId">Initial value of v_PersonId.</param>
        /// <param name="v_ProtocolId">Initial value of v_ProtocolId.</param>
        public static obtenerresultados_webxsystemuserResult Createobtenerresultados_webxsystemuserResult(string v_ServiceId, string v_PersonId, string v_ProtocolId)
        {
            obtenerresultados_webxsystemuserResult obtenerresultados_webxsystemuserResult = new obtenerresultados_webxsystemuserResult();
            obtenerresultados_webxsystemuserResult.v_ServiceId = v_ServiceId;
            obtenerresultados_webxsystemuserResult.v_PersonId = v_PersonId;
            obtenerresultados_webxsystemuserResult.v_ProtocolId = v_ProtocolId;
            return obtenerresultados_webxsystemuserResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for Paciente in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Paciente
        {
            get
            {
                string value = _Paciente;
                OnGetPaciente(ref value);
                return value;
            }
            set
            {
                if (_Paciente != value)
                {
                  OnPacienteChanging(ref value);
                  ReportPropertyChanging("Paciente");
                  _Paciente = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Paciente");
                  OnPacienteChanged();
              }
            }
        }
        private string _Paciente;
        partial void OnGetPaciente(ref string value);
        partial void OnPacienteChanging(ref string value);
        partial void OnPacienteChanged();
    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> Fecha
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _Fecha;
                OnGetFecha(ref value);
                return value;
            }
            set
            {
                if (_Fecha != value)
                {
                  OnFechaChanging(ref value);
                  ReportPropertyChanging("Fecha");
                  _Fecha = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Fecha");
                  OnFechaChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _Fecha;
        partial void OnGetFecha(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();
    
        /// <summary>
        /// There are no comments for v_ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ProtocolId
        {
            get
            {
                string value = _v_ProtocolId;
                OnGetv_ProtocolId(ref value);
                return value;
            }
            set
            {
                if (_v_ProtocolId != value)
                {
                  Onv_ProtocolIdChanging(ref value);
                  ReportPropertyChanging("v_ProtocolId");
                  _v_ProtocolId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ProtocolId");
                  Onv_ProtocolIdChanged();
              }
            }
        }
        private string _v_ProtocolId;
        partial void OnGetv_ProtocolId(ref string value);
        partial void Onv_ProtocolIdChanging(ref string value);
        partial void Onv_ProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for Protocolo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Protocolo
        {
            get
            {
                string value = _Protocolo;
                OnGetProtocolo(ref value);
                return value;
            }
            set
            {
                if (_Protocolo != value)
                {
                  OnProtocoloChanging(ref value);
                  ReportPropertyChanging("Protocolo");
                  _Protocolo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Protocolo");
                  OnProtocoloChanged();
              }
            }
        }
        private string _Protocolo;
        partial void OnGetProtocolo(ref string value);
        partial void OnProtocoloChanging(ref string value);
        partial void OnProtocoloChanged();
    
        /// <summary>
        /// There are no comments for ESTADO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ESTADO
        {
            get
            {
                string value = _ESTADO;
                OnGetESTADO(ref value);
                return value;
            }
            set
            {
                if (_ESTADO != value)
                {
                  OnESTADOChanging(ref value);
                  ReportPropertyChanging("ESTADO");
                  _ESTADO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ESTADO");
                  OnESTADOChanged();
              }
            }
        }
        private string _ESTADO;
        partial void OnGetESTADO(ref string value);
        partial void OnESTADOChanging(ref string value);
        partial void OnESTADOChanged();
    
        /// <summary>
        /// There are no comments for PENDIENTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string PENDIENTE
        {
            get
            {
                string value = _PENDIENTE;
                OnGetPENDIENTE(ref value);
                return value;
            }
            set
            {
                if (_PENDIENTE != value)
                {
                  OnPENDIENTEChanging(ref value);
                  ReportPropertyChanging("PENDIENTE");
                  _PENDIENTE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PENDIENTE");
                  OnPENDIENTEChanged();
              }
            }
        }
        private string _PENDIENTE;
        partial void OnGetPENDIENTE(ref string value);
        partial void OnPENDIENTEChanging(ref string value);
        partial void OnPENDIENTEChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.obtenerserviciosResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="obtenerserviciosResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class obtenerserviciosResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new obtenerserviciosResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        public static obtenerserviciosResult CreateobtenerserviciosResult(string v_ServiceId)
        {
            obtenerserviciosResult obtenerserviciosResult = new obtenerserviciosResult();
            obtenerserviciosResult.v_ServiceId = v_ServiceId;
            return obtenerserviciosResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for Trabajador in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Trabajador
        {
            get
            {
                string value = _Trabajador;
                OnGetTrabajador(ref value);
                return value;
            }
            set
            {
                if (_Trabajador != value)
                {
                  OnTrabajadorChanging(ref value);
                  ReportPropertyChanging("Trabajador");
                  _Trabajador = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Trabajador");
                  OnTrabajadorChanged();
              }
            }
        }
        private string _Trabajador;
        partial void OnGetTrabajador(ref string value);
        partial void OnTrabajadorChanging(ref string value);
        partial void OnTrabajadorChanged();
    
        /// <summary>
        /// There are no comments for i_SexTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> i_SexTypeId
        {
            get
            {
                global::System.Nullable<int> value = _i_SexTypeId;
                OnGeti_SexTypeId(ref value);
                return value;
            }
            set
            {
                if (_i_SexTypeId != value)
                {
                  Oni_SexTypeIdChanging(ref value);
                  ReportPropertyChanging("i_SexTypeId");
                  _i_SexTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("i_SexTypeId");
                  Oni_SexTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _i_SexTypeId;
        partial void OnGeti_SexTypeId(ref global::System.Nullable<int> value);
        partial void Oni_SexTypeIdChanging(ref global::System.Nullable<int> value);
        partial void Oni_SexTypeIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.obtenerserviciosxpacienteResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="obtenerserviciosxpacienteResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class obtenerserviciosxpacienteResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new obtenerserviciosxpacienteResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        /// <param name="v_UserName">Initial value of v_UserName.</param>
        public static obtenerserviciosxpacienteResult CreateobtenerserviciosxpacienteResult(string v_ServiceId, string v_UserName)
        {
            obtenerserviciosxpacienteResult obtenerserviciosxpacienteResult = new obtenerserviciosxpacienteResult();
            obtenerserviciosxpacienteResult.v_ServiceId = v_ServiceId;
            obtenerserviciosxpacienteResult.v_UserName = v_UserName;
            return obtenerserviciosxpacienteResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for d_ServiceDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ServiceDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ServiceDate;
                OnGetd_ServiceDate(ref value);
                return value;
            }
            set
            {
                if (_d_ServiceDate != value)
                {
                  Ond_ServiceDateChanging(ref value);
                  ReportPropertyChanging("d_ServiceDate");
                  _d_ServiceDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ServiceDate");
                  Ond_ServiceDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ServiceDate;
        partial void OnGetd_ServiceDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanged();
    
        /// <summary>
        /// There are no comments for v_DocNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DocNumber
        {
            get
            {
                string value = _v_DocNumber;
                OnGetv_DocNumber(ref value);
                return value;
            }
            set
            {
                if (_v_DocNumber != value)
                {
                  Onv_DocNumberChanging(ref value);
                  ReportPropertyChanging("v_DocNumber");
                  _v_DocNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DocNumber");
                  Onv_DocNumberChanged();
              }
            }
        }
        private string _v_DocNumber;
        partial void OnGetv_DocNumber(ref string value);
        partial void Onv_DocNumberChanging(ref string value);
        partial void Onv_DocNumberChanged();
    
        /// <summary>
        /// There are no comments for PACIENTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string PACIENTE
        {
            get
            {
                string value = _PACIENTE;
                OnGetPACIENTE(ref value);
                return value;
            }
            set
            {
                if (_PACIENTE != value)
                {
                  OnPACIENTEChanging(ref value);
                  ReportPropertyChanging("PACIENTE");
                  _PACIENTE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PACIENTE");
                  OnPACIENTEChanged();
              }
            }
        }
        private string _PACIENTE;
        partial void OnGetPACIENTE(ref string value);
        partial void OnPACIENTEChanging(ref string value);
        partial void OnPACIENTEChanged();
    
        /// <summary>
        /// There are no comments for v_CurrentOccupation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_CurrentOccupation
        {
            get
            {
                string value = _v_CurrentOccupation;
                OnGetv_CurrentOccupation(ref value);
                return value;
            }
            set
            {
                if (_v_CurrentOccupation != value)
                {
                  Onv_CurrentOccupationChanging(ref value);
                  ReportPropertyChanging("v_CurrentOccupation");
                  _v_CurrentOccupation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_CurrentOccupation");
                  Onv_CurrentOccupationChanged();
              }
            }
        }
        private string _v_CurrentOccupation;
        partial void OnGetv_CurrentOccupation(ref string value);
        partial void Onv_CurrentOccupationChanging(ref string value);
        partial void Onv_CurrentOccupationChanged();
    
        /// <summary>
        /// There are no comments for EDAD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> EDAD
        {
            get
            {
                global::System.Nullable<int> value = _EDAD;
                OnGetEDAD(ref value);
                return value;
            }
            set
            {
                if (_EDAD != value)
                {
                  OnEDADChanging(ref value);
                  ReportPropertyChanging("EDAD");
                  _EDAD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EDAD");
                  OnEDADChanged();
              }
            }
        }
        private global::System.Nullable<int> _EDAD;
        partial void OnGetEDAD(ref global::System.Nullable<int> value);
        partial void OnEDADChanging(ref global::System.Nullable<int> value);
        partial void OnEDADChanged();
    
        /// <summary>
        /// There are no comments for RUCCLI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string RUCCLI
        {
            get
            {
                string value = _RUCCLI;
                OnGetRUCCLI(ref value);
                return value;
            }
            set
            {
                if (_RUCCLI != value)
                {
                  OnRUCCLIChanging(ref value);
                  ReportPropertyChanging("RUCCLI");
                  _RUCCLI = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RUCCLI");
                  OnRUCCLIChanged();
              }
            }
        }
        private string _RUCCLI;
        partial void OnGetRUCCLI(ref string value);
        partial void OnRUCCLIChanging(ref string value);
        partial void OnRUCCLIChanged();
    
        /// <summary>
        /// There are no comments for CLIENTE in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string CLIENTE
        {
            get
            {
                string value = _CLIENTE;
                OnGetCLIENTE(ref value);
                return value;
            }
            set
            {
                if (_CLIENTE != value)
                {
                  OnCLIENTEChanging(ref value);
                  ReportPropertyChanging("CLIENTE");
                  _CLIENTE = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CLIENTE");
                  OnCLIENTEChanged();
              }
            }
        }
        private string _CLIENTE;
        partial void OnGetCLIENTE(ref string value);
        partial void OnCLIENTEChanging(ref string value);
        partial void OnCLIENTEChanged();
    
        /// <summary>
        /// There are no comments for Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sede
        {
            get
            {
                string value = _Sede;
                OnGetSede(ref value);
                return value;
            }
            set
            {
                if (_Sede != value)
                {
                  OnSedeChanging(ref value);
                  ReportPropertyChanging("Sede");
                  _Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sede");
                  OnSedeChanged();
              }
            }
        }
        private string _Sede;
        partial void OnGetSede(ref string value);
        partial void OnSedeChanging(ref string value);
        partial void OnSedeChanged();
    
        /// <summary>
        /// There are no comments for RUCFACT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string RUCFACT
        {
            get
            {
                string value = _RUCFACT;
                OnGetRUCFACT(ref value);
                return value;
            }
            set
            {
                if (_RUCFACT != value)
                {
                  OnRUCFACTChanging(ref value);
                  ReportPropertyChanging("RUCFACT");
                  _RUCFACT = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("RUCFACT");
                  OnRUCFACTChanged();
              }
            }
        }
        private string _RUCFACT;
        partial void OnGetRUCFACT(ref string value);
        partial void OnRUCFACTChanging(ref string value);
        partial void OnRUCFACTChanged();
    
        /// <summary>
        /// There are no comments for EMPFACT in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EMPFACT
        {
            get
            {
                string value = _EMPFACT;
                OnGetEMPFACT(ref value);
                return value;
            }
            set
            {
                if (_EMPFACT != value)
                {
                  OnEMPFACTChanging(ref value);
                  ReportPropertyChanging("EMPFACT");
                  _EMPFACT = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EMPFACT");
                  OnEMPFACTChanged();
              }
            }
        }
        private string _EMPFACT;
        partial void OnGetEMPFACT(ref string value);
        partial void OnEMPFACTChanging(ref string value);
        partial void OnEMPFACTChanged();
    
        /// <summary>
        /// There are no comments for PROTOCOLO in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string PROTOCOLO
        {
            get
            {
                string value = _PROTOCOLO;
                OnGetPROTOCOLO(ref value);
                return value;
            }
            set
            {
                if (_PROTOCOLO != value)
                {
                  OnPROTOCOLOChanging(ref value);
                  ReportPropertyChanging("PROTOCOLO");
                  _PROTOCOLO = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("PROTOCOLO");
                  OnPROTOCOLOChanged();
              }
            }
        }
        private string _PROTOCOLO;
        partial void OnGetPROTOCOLO(ref string value);
        partial void OnPROTOCOLOChanging(ref string value);
        partial void OnPROTOCOLOChanged();
    
        /// <summary>
        /// There are no comments for PRECTOTAL in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<double> PRECTOTAL
        {
            get
            {
                global::System.Nullable<double> value = _PRECTOTAL;
                OnGetPRECTOTAL(ref value);
                return value;
            }
            set
            {
                if (_PRECTOTAL != value)
                {
                  OnPRECTOTALChanging(ref value);
                  ReportPropertyChanging("PRECTOTAL");
                  _PRECTOTAL = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("PRECTOTAL");
                  OnPRECTOTALChanged();
              }
            }
        }
        private global::System.Nullable<double> _PRECTOTAL;
        partial void OnGetPRECTOTAL(ref global::System.Nullable<double> value);
        partial void OnPRECTOTALChanging(ref global::System.Nullable<double> value);
        partial void OnPRECTOTALChanged();
    
        /// <summary>
        /// There are no comments for v_UserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_UserName
        {
            get
            {
                string value = _v_UserName;
                OnGetv_UserName(ref value);
                return value;
            }
            set
            {
                if (_v_UserName != value)
                {
                  Onv_UserNameChanging(ref value);
                  ReportPropertyChanging("v_UserName");
                  _v_UserName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_UserName");
                  Onv_UserNameChanged();
              }
            }
        }
        private string _v_UserName;
        partial void OnGetv_UserName(ref string value);
        partial void Onv_UserNameChanging(ref string value);
        partial void Onv_UserNameChanged();
    
        /// <summary>
        /// There are no comments for Estado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Estado
        {
            get
            {
                string value = _Estado;
                OnGetEstado(ref value);
                return value;
            }
            set
            {
                if (_Estado != value)
                {
                  OnEstadoChanging(ref value);
                  ReportPropertyChanging("Estado");
                  _Estado = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Estado");
                  OnEstadoChanged();
              }
            }
        }
        private string _Estado;
        partial void OnGetEstado(ref string value);
        partial void OnEstadoChanging(ref string value);
        partial void OnEstadoChanged();
    
        /// <summary>
        /// There are no comments for cdoc_Serie in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string cdoc_Serie
        {
            get
            {
                string value = _cdoc_Serie;
                OnGetcdoc_Serie(ref value);
                return value;
            }
            set
            {
                if (_cdoc_Serie != value)
                {
                  Oncdoc_SerieChanging(ref value);
                  ReportPropertyChanging("cdoc_Serie");
                  _cdoc_Serie = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("cdoc_Serie");
                  Oncdoc_SerieChanged();
              }
            }
        }
        private string _cdoc_Serie;
        partial void OnGetcdoc_Serie(ref string value);
        partial void Oncdoc_SerieChanging(ref string value);
        partial void Oncdoc_SerieChanged();
    
        /// <summary>
        /// There are no comments for cdoc_nro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string cdoc_nro
        {
            get
            {
                string value = _cdoc_nro;
                OnGetcdoc_nro(ref value);
                return value;
            }
            set
            {
                if (_cdoc_nro != value)
                {
                  Oncdoc_nroChanging(ref value);
                  ReportPropertyChanging("cdoc_nro");
                  _cdoc_nro = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("cdoc_nro");
                  Oncdoc_nroChanged();
              }
            }
        }
        private string _cdoc_nro;
        partial void OnGetcdoc_nro(ref string value);
        partial void Oncdoc_nroChanging(ref string value);
        partial void Oncdoc_nroChanged();
    
        /// <summary>
        /// There are no comments for cusu_crea in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string cusu_crea
        {
            get
            {
                string value = _cusu_crea;
                OnGetcusu_crea(ref value);
                return value;
            }
            set
            {
                if (_cusu_crea != value)
                {
                  Oncusu_creaChanging(ref value);
                  ReportPropertyChanging("cusu_crea");
                  _cusu_crea = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("cusu_crea");
                  Oncusu_creaChanged();
              }
            }
        }
        private string _cusu_crea;
        partial void OnGetcusu_crea(ref string value);
        partial void Oncusu_creaChanging(ref string value);
        partial void Oncusu_creaChanged();
    
        /// <summary>
        /// There are no comments for v_comment in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_comment
        {
            get
            {
                string value = _v_comment;
                OnGetv_comment(ref value);
                return value;
            }
            set
            {
                if (_v_comment != value)
                {
                  Onv_commentChanging(ref value);
                  ReportPropertyChanging("v_comment");
                  _v_comment = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_comment");
                  Onv_commentChanged();
              }
            }
        }
        private string _v_comment;
        partial void OnGetv_comment(ref string value);
        partial void Onv_commentChanging(ref string value);
        partial void Onv_commentChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_background_servicios_anterioresResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_background_servicios_anterioresResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_background_servicios_anterioresResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_background_servicios_anterioresResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        public static regcovid_background_servicios_anterioresResult Createregcovid_background_servicios_anterioresResult(string v_ServiceId)
        {
            regcovid_background_servicios_anterioresResult regcovid_background_servicios_anterioresResult = new regcovid_background_servicios_anterioresResult();
            regcovid_background_servicios_anterioresResult.v_ServiceId = v_ServiceId;
            return regcovid_background_servicios_anterioresResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for FechaHoraRegistro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> FechaHoraRegistro
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _FechaHoraRegistro;
                OnGetFechaHoraRegistro(ref value);
                return value;
            }
            set
            {
                if (_FechaHoraRegistro != value)
                {
                  OnFechaHoraRegistroChanging(ref value);
                  ReportPropertyChanging("FechaHoraRegistro");
                  _FechaHoraRegistro = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaHoraRegistro");
                  OnFechaHoraRegistroChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _FechaHoraRegistro;
        partial void OnGetFechaHoraRegistro(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaHoraRegistroChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaHoraRegistroChanged();
    
        /// <summary>
        /// There are no comments for MedicalCenter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string MedicalCenter
        {
            get
            {
                string value = _MedicalCenter;
                OnGetMedicalCenter(ref value);
                return value;
            }
            set
            {
                if (_MedicalCenter != value)
                {
                  OnMedicalCenterChanging(ref value);
                  ReportPropertyChanging("MedicalCenter");
                  _MedicalCenter = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MedicalCenter");
                  OnMedicalCenterChanged();
              }
            }
        }
        private string _MedicalCenter;
        partial void OnGetMedicalCenter(ref string value);
        partial void OnMedicalCenterChanging(ref string value);
        partial void OnMedicalCenterChanged();
    
        /// <summary>
        /// There are no comments for EmpresaEmpleadora in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmpresaEmpleadora
        {
            get
            {
                string value = _EmpresaEmpleadora;
                OnGetEmpresaEmpleadora(ref value);
                return value;
            }
            set
            {
                if (_EmpresaEmpleadora != value)
                {
                  OnEmpresaEmpleadoraChanging(ref value);
                  ReportPropertyChanging("EmpresaEmpleadora");
                  _EmpresaEmpleadora = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmpresaEmpleadora");
                  OnEmpresaEmpleadoraChanged();
              }
            }
        }
        private string _EmpresaEmpleadora;
        partial void OnGetEmpresaEmpleadora(ref string value);
        partial void OnEmpresaEmpleadoraChanging(ref string value);
        partial void OnEmpresaEmpleadoraChanged();
    
        /// <summary>
        /// There are no comments for v_Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Sede
        {
            get
            {
                string value = _v_Sede;
                OnGetv_Sede(ref value);
                return value;
            }
            set
            {
                if (_v_Sede != value)
                {
                  Onv_SedeChanging(ref value);
                  ReportPropertyChanging("v_Sede");
                  _v_Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Sede");
                  Onv_SedeChanged();
              }
            }
        }
        private string _v_Sede;
        partial void OnGetv_Sede(ref string value);
        partial void Onv_SedeChanging(ref string value);
        partial void Onv_SedeChanged();
    
        /// <summary>
        /// There are no comments for Trabajador in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Trabajador
        {
            get
            {
                string value = _Trabajador;
                OnGetTrabajador(ref value);
                return value;
            }
            set
            {
                if (_Trabajador != value)
                {
                  OnTrabajadorChanging(ref value);
                  ReportPropertyChanging("Trabajador");
                  _Trabajador = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Trabajador");
                  OnTrabajadorChanged();
              }
            }
        }
        private string _Trabajador;
        partial void OnGetTrabajador(ref string value);
        partial void OnTrabajadorChanging(ref string value);
        partial void OnTrabajadorChanged();
    
        /// <summary>
        /// There are no comments for DNI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DNI
        {
            get
            {
                string value = _DNI;
                OnGetDNI(ref value);
                return value;
            }
            set
            {
                if (_DNI != value)
                {
                  OnDNIChanging(ref value);
                  ReportPropertyChanging("DNI");
                  _DNI = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DNI");
                  OnDNIChanged();
              }
            }
        }
        private string _DNI;
        partial void OnGetDNI(ref string value);
        partial void OnDNIChanging(ref string value);
        partial void OnDNIChanged();
    
        /// <summary>
        /// There are no comments for CELULAR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string CELULAR
        {
            get
            {
                string value = _CELULAR;
                OnGetCELULAR(ref value);
                return value;
            }
            set
            {
                if (_CELULAR != value)
                {
                  OnCELULARChanging(ref value);
                  ReportPropertyChanging("CELULAR");
                  _CELULAR = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CELULAR");
                  OnCELULARChanged();
              }
            }
        }
        private string _CELULAR;
        partial void OnGetCELULAR(ref string value);
        partial void OnCELULARChanging(ref string value);
        partial void OnCELULARChanged();
    
        /// <summary>
        /// There are no comments for TecnicoCovid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TecnicoCovid
        {
            get
            {
                string value = _TecnicoCovid;
                OnGetTecnicoCovid(ref value);
                return value;
            }
            set
            {
                if (_TecnicoCovid != value)
                {
                  OnTecnicoCovidChanging(ref value);
                  ReportPropertyChanging("TecnicoCovid");
                  _TecnicoCovid = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TecnicoCovid");
                  OnTecnicoCovidChanged();
              }
            }
        }
        private string _TecnicoCovid;
        partial void OnGetTecnicoCovid(ref string value);
        partial void OnTecnicoCovidChanging(ref string value);
        partial void OnTecnicoCovidChanged();
    
        /// <summary>
        /// There are no comments for EDAD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> EDAD
        {
            get
            {
                global::System.Nullable<int> value = _EDAD;
                OnGetEDAD(ref value);
                return value;
            }
            set
            {
                if (_EDAD != value)
                {
                  OnEDADChanging(ref value);
                  ReportPropertyChanging("EDAD");
                  _EDAD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EDAD");
                  OnEDADChanged();
              }
            }
        }
        private global::System.Nullable<int> _EDAD;
        partial void OnGetEDAD(ref global::System.Nullable<int> value);
        partial void OnEDADChanging(ref global::System.Nullable<int> value);
        partial void OnEDADChanged();
    
        /// <summary>
        /// There are no comments for Resultado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Resultado
        {
            get
            {
                string value = _Resultado;
                OnGetResultado(ref value);
                return value;
            }
            set
            {
                if (_Resultado != value)
                {
                  OnResultadoChanging(ref value);
                  ReportPropertyChanging("Resultado");
                  _Resultado = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Resultado");
                  OnResultadoChanged();
              }
            }
        }
        private string _Resultado;
        partial void OnGetResultado(ref string value);
        partial void OnResultadoChanging(ref string value);
        partial void OnResultadoChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_delete_brandResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_delete_brandResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_delete_brandResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_delete_brandResult object.
        /// </summary>
        public static regcovid_delete_brandResult Createregcovid_delete_brandResult()
        {
            regcovid_delete_brandResult regcovid_delete_brandResult = new regcovid_delete_brandResult();
            return regcovid_delete_brandResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ErrorNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ErrorNumber
        {
            get
            {
                global::System.Nullable<int> value = _ErrorNumber;
                OnGetErrorNumber(ref value);
                return value;
            }
            set
            {
                if (_ErrorNumber != value)
                {
                  OnErrorNumberChanging(ref value);
                  ReportPropertyChanging("ErrorNumber");
                  _ErrorNumber = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ErrorNumber");
                  OnErrorNumberChanged();
              }
            }
        }
        private global::System.Nullable<int> _ErrorNumber;
        partial void OnGetErrorNumber(ref global::System.Nullable<int> value);
        partial void OnErrorNumberChanging(ref global::System.Nullable<int> value);
        partial void OnErrorNumberChanged();
    
        /// <summary>
        /// There are no comments for ErrorMessage in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ErrorMessage
        {
            get
            {
                string value = _ErrorMessage;
                OnGetErrorMessage(ref value);
                return value;
            }
            set
            {
                if (_ErrorMessage != value)
                {
                  OnErrorMessageChanging(ref value);
                  ReportPropertyChanging("ErrorMessage");
                  _ErrorMessage = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ErrorMessage");
                  OnErrorMessageChanged();
              }
            }
        }
        private string _ErrorMessage;
        partial void OnGetErrorMessage(ref string value);
        partial void OnErrorMessageChanging(ref string value);
        partial void OnErrorMessageChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_get_empresas_empleadorasResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_get_empresas_empleadorasResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_get_empresas_empleadorasResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_get_empresas_empleadorasResult object.
        /// </summary>
        /// <param name="empresaEmpleadoraId">Initial value of EmpresaEmpleadoraId.</param>
        public static regcovid_get_empresas_empleadorasResult Createregcovid_get_empresas_empleadorasResult(int empresaEmpleadoraId)
        {
            regcovid_get_empresas_empleadorasResult regcovid_get_empresas_empleadorasResult = new regcovid_get_empresas_empleadorasResult();
            regcovid_get_empresas_empleadorasResult.EmpresaEmpleadoraId = empresaEmpleadoraId;
            return regcovid_get_empresas_empleadorasResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for EmpresaEmpleadoraId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int EmpresaEmpleadoraId
        {
            get
            {
                int value = _EmpresaEmpleadoraId;
                OnGetEmpresaEmpleadoraId(ref value);
                return value;
            }
            set
            {
                if (_EmpresaEmpleadoraId != value)
                {
                  OnEmpresaEmpleadoraIdChanging(ref value);
                  ReportPropertyChanging("EmpresaEmpleadoraId");
                  _EmpresaEmpleadoraId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmpresaEmpleadoraId");
                  OnEmpresaEmpleadoraIdChanged();
              }
            }
        }
        private int _EmpresaEmpleadoraId;
        partial void OnGetEmpresaEmpleadoraId(ref int value);
        partial void OnEmpresaEmpleadoraIdChanging(ref int value);
        partial void OnEmpresaEmpleadoraIdChanged();
    
        /// <summary>
        /// There are no comments for Nombre in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Nombre
        {
            get
            {
                string value = _Nombre;
                OnGetNombre(ref value);
                return value;
            }
            set
            {
                if (_Nombre != value)
                {
                  OnNombreChanging(ref value);
                  ReportPropertyChanging("Nombre");
                  _Nombre = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Nombre");
                  OnNombreChanged();
              }
            }
        }
        private string _Nombre;
        partial void OnGetNombre(ref string value);
        partial void OnNombreChanging(ref string value);
        partial void OnNombreChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_get_nodesResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_get_nodesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_get_nodesResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_get_nodesResult object.
        /// </summary>
        public static regcovid_get_nodesResult Createregcovid_get_nodesResult()
        {
            regcovid_get_nodesResult regcovid_get_nodesResult = new regcovid_get_nodesResult();
            return regcovid_get_nodesResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> NodeId
        {
            get
            {
                global::System.Nullable<int> value = _NodeId;
                OnGetNodeId(ref value);
                return value;
            }
            set
            {
                if (_NodeId != value)
                {
                  OnNodeIdChanging(ref value);
                  ReportPropertyChanging("NodeId");
                  _NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NodeId");
                  OnNodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _NodeId;
        partial void OnGetNodeId(ref global::System.Nullable<int> value);
        partial void OnNodeIdChanging(ref global::System.Nullable<int> value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// There are no comments for NodeName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string NodeName
        {
            get
            {
                string value = _NodeName;
                OnGetNodeName(ref value);
                return value;
            }
            set
            {
                if (_NodeName != value)
                {
                  OnNodeNameChanging(ref value);
                  ReportPropertyChanging("NodeName");
                  _NodeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NodeName");
                  OnNodeNameChanged();
              }
            }
        }
        private string _NodeName;
        partial void OnGetNodeName(ref string value);
        partial void OnNodeNameChanging(ref string value);
        partial void OnNodeNameChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_get_protocolidResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_get_protocolidResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_get_protocolidResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_get_protocolidResult object.
        /// </summary>
        public static regcovid_get_protocolidResult Createregcovid_get_protocolidResult()
        {
            regcovid_get_protocolidResult regcovid_get_protocolidResult = new regcovid_get_protocolidResult();
            return regcovid_get_protocolidResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ProtocolId
        {
            get
            {
                string value = _ProtocolId;
                OnGetProtocolId(ref value);
                return value;
            }
            set
            {
                if (_ProtocolId != value)
                {
                  OnProtocolIdChanging(ref value);
                  ReportPropertyChanging("ProtocolId");
                  _ProtocolId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProtocolId");
                  OnProtocolIdChanged();
              }
            }
        }
        private string _ProtocolId;
        partial void OnGetProtocolId(ref string value);
        partial void OnProtocolIdChanging(ref string value);
        partial void OnProtocolIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_get_sedesResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_get_sedesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_get_sedesResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_get_sedesResult object.
        /// </summary>
        public static regcovid_get_sedesResult Createregcovid_get_sedesResult()
        {
            regcovid_get_sedesResult regcovid_get_sedesResult = new regcovid_get_sedesResult();
            return regcovid_get_sedesResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sede
        {
            get
            {
                string value = _Sede;
                OnGetSede(ref value);
                return value;
            }
            set
            {
                if (_Sede != value)
                {
                  OnSedeChanging(ref value);
                  ReportPropertyChanging("Sede");
                  _Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sede");
                  OnSedeChanged();
              }
            }
        }
        private string _Sede;
        partial void OnGetSede(ref string value);
        partial void OnSedeChanging(ref string value);
        partial void OnSedeChanged();
    
        /// <summary>
        /// There are no comments for SedeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> SedeId
        {
            get
            {
                global::System.Nullable<int> value = _SedeId;
                OnGetSedeId(ref value);
                return value;
            }
            set
            {
                if (_SedeId != value)
                {
                  OnSedeIdChanging(ref value);
                  ReportPropertyChanging("SedeId");
                  _SedeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SedeId");
                  OnSedeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _SedeId;
        partial void OnGetSedeId(ref global::System.Nullable<int> value);
        partial void OnSedeIdChanging(ref global::System.Nullable<int> value);
        partial void OnSedeIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_get_systemparametersResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_get_systemparametersResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_get_systemparametersResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_get_systemparametersResult object.
        /// </summary>
        /// <param name="parameterId">Initial value of ParameterId.</param>
        public static regcovid_get_systemparametersResult Createregcovid_get_systemparametersResult(int parameterId)
        {
            regcovid_get_systemparametersResult regcovid_get_systemparametersResult = new regcovid_get_systemparametersResult();
            regcovid_get_systemparametersResult.ParameterId = parameterId;
            return regcovid_get_systemparametersResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ParameterId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int ParameterId
        {
            get
            {
                int value = _ParameterId;
                OnGetParameterId(ref value);
                return value;
            }
            set
            {
                if (_ParameterId != value)
                {
                  OnParameterIdChanging(ref value);
                  ReportPropertyChanging("ParameterId");
                  _ParameterId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ParameterId");
                  OnParameterIdChanged();
              }
            }
        }
        private int _ParameterId;
        partial void OnGetParameterId(ref int value);
        partial void OnParameterIdChanging(ref int value);
        partial void OnParameterIdChanged();
    
        /// <summary>
        /// There are no comments for Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Value1
        {
            get
            {
                string value = _Value1;
                OnGetValue1(ref value);
                return value;
            }
            set
            {
                if (_Value1 != value)
                {
                  OnValue1Changing(ref value);
                  ReportPropertyChanging("Value1");
                  _Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Value1");
                  OnValue1Changed();
              }
            }
        }
        private string _Value1;
        partial void OnGetValue1(ref string value);
        partial void OnValue1Changing(ref string value);
        partial void OnValue1Changed();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_get_values_componentResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_get_values_componentResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_get_values_componentResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_get_values_componentResult object.
        /// </summary>
        /// <param name="serviceComponentFieldsId">Initial value of ServiceComponentFieldsId.</param>
        public static regcovid_get_values_componentResult Createregcovid_get_values_componentResult(string serviceComponentFieldsId)
        {
            regcovid_get_values_componentResult regcovid_get_values_componentResult = new regcovid_get_values_componentResult();
            regcovid_get_values_componentResult.ServiceComponentFieldsId = serviceComponentFieldsId;
            return regcovid_get_values_componentResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentFieldId
        {
            get
            {
                string value = _ComponentFieldId;
                OnGetComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_ComponentFieldId != value)
                {
                  OnComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("ComponentFieldId");
                  _ComponentFieldId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentFieldId");
                  OnComponentFieldIdChanged();
              }
            }
        }
        private string _ComponentFieldId;
        partial void OnGetComponentFieldId(ref string value);
        partial void OnComponentFieldIdChanging(ref string value);
        partial void OnComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for ServiceComponentFieldsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ServiceComponentFieldsId
        {
            get
            {
                string value = _ServiceComponentFieldsId;
                OnGetServiceComponentFieldsId(ref value);
                return value;
            }
            set
            {
                if (_ServiceComponentFieldsId != value)
                {
                  OnServiceComponentFieldsIdChanging(ref value);
                  ReportPropertyChanging("ServiceComponentFieldsId");
                  _ServiceComponentFieldsId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ServiceComponentFieldsId");
                  OnServiceComponentFieldsIdChanged();
              }
            }
        }
        private string _ServiceComponentFieldsId;
        partial void OnGetServiceComponentFieldsId(ref string value);
        partial void OnServiceComponentFieldsIdChanging(ref string value);
        partial void OnServiceComponentFieldsIdChanged();
    
        /// <summary>
        /// There are no comments for Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Value1
        {
            get
            {
                string value = _Value1;
                OnGetValue1(ref value);
                return value;
            }
            set
            {
                if (_Value1 != value)
                {
                  OnValue1Changing(ref value);
                  ReportPropertyChanging("Value1");
                  _Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Value1");
                  OnValue1Changed();
              }
            }
        }
        private string _Value1;
        partial void OnGetValue1(ref string value);
        partial void OnValue1Changing(ref string value);
        partial void OnValue1Changed();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_get_worker_from_hcactualizadoResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_get_worker_from_hcactualizadoResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_get_worker_from_hcactualizadoResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_get_worker_from_hcactualizadoResult object.
        /// </summary>
        public static regcovid_get_worker_from_hcactualizadoResult Createregcovid_get_worker_from_hcactualizadoResult()
        {
            regcovid_get_worker_from_hcactualizadoResult regcovid_get_worker_from_hcactualizadoResult = new regcovid_get_worker_from_hcactualizadoResult();
            return regcovid_get_worker_from_hcactualizadoResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Filtro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Filtro
        {
            get
            {
                string value = _Filtro;
                OnGetFiltro(ref value);
                return value;
            }
            set
            {
                if (_Filtro != value)
                {
                  OnFiltroChanging(ref value);
                  ReportPropertyChanging("Filtro");
                  _Filtro = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Filtro");
                  OnFiltroChanged();
              }
            }
        }
        private string _Filtro;
        partial void OnGetFiltro(ref string value);
        partial void OnFiltroChanging(ref string value);
        partial void OnFiltroChanged();
    
        /// <summary>
        /// There are no comments for HcActualizadoId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> HcActualizadoId
        {
            get
            {
                global::System.Nullable<int> value = _HcActualizadoId;
                OnGetHcActualizadoId(ref value);
                return value;
            }
            set
            {
                if (_HcActualizadoId != value)
                {
                  OnHcActualizadoIdChanging(ref value);
                  ReportPropertyChanging("HcActualizadoId");
                  _HcActualizadoId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HcActualizadoId");
                  OnHcActualizadoIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _HcActualizadoId;
        partial void OnGetHcActualizadoId(ref global::System.Nullable<int> value);
        partial void OnHcActualizadoIdChanging(ref global::System.Nullable<int> value);
        partial void OnHcActualizadoIdChanged();
    
        /// <summary>
        /// There are no comments for HC in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string HC
        {
            get
            {
                string value = _HC;
                OnGetHC(ref value);
                return value;
            }
            set
            {
                if (_HC != value)
                {
                  OnHCChanging(ref value);
                  ReportPropertyChanging("HC");
                  _HC = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("HC");
                  OnHCChanged();
              }
            }
        }
        private string _HC;
        partial void OnGetHC(ref string value);
        partial void OnHCChanging(ref string value);
        partial void OnHCChanged();
    
        /// <summary>
        /// There are no comments for EmpresaEmpleadora in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmpresaEmpleadora
        {
            get
            {
                string value = _EmpresaEmpleadora;
                OnGetEmpresaEmpleadora(ref value);
                return value;
            }
            set
            {
                if (_EmpresaEmpleadora != value)
                {
                  OnEmpresaEmpleadoraChanging(ref value);
                  ReportPropertyChanging("EmpresaEmpleadora");
                  _EmpresaEmpleadora = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmpresaEmpleadora");
                  OnEmpresaEmpleadoraChanged();
              }
            }
        }
        private string _EmpresaEmpleadora;
        partial void OnGetEmpresaEmpleadora(ref string value);
        partial void OnEmpresaEmpleadoraChanging(ref string value);
        partial void OnEmpresaEmpleadoraChanged();
    
        /// <summary>
        /// There are no comments for ApellidoPaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoPaterno
        {
            get
            {
                string value = _ApellidoPaterno;
                OnGetApellidoPaterno(ref value);
                return value;
            }
            set
            {
                if (_ApellidoPaterno != value)
                {
                  OnApellidoPaternoChanging(ref value);
                  ReportPropertyChanging("ApellidoPaterno");
                  _ApellidoPaterno = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoPaterno");
                  OnApellidoPaternoChanged();
              }
            }
        }
        private string _ApellidoPaterno;
        partial void OnGetApellidoPaterno(ref string value);
        partial void OnApellidoPaternoChanging(ref string value);
        partial void OnApellidoPaternoChanged();
    
        /// <summary>
        /// There are no comments for ApellidoMaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ApellidoMaterno
        {
            get
            {
                string value = _ApellidoMaterno;
                OnGetApellidoMaterno(ref value);
                return value;
            }
            set
            {
                if (_ApellidoMaterno != value)
                {
                  OnApellidoMaternoChanging(ref value);
                  ReportPropertyChanging("ApellidoMaterno");
                  _ApellidoMaterno = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ApellidoMaterno");
                  OnApellidoMaternoChanged();
              }
            }
        }
        private string _ApellidoMaterno;
        partial void OnGetApellidoMaterno(ref string value);
        partial void OnApellidoMaternoChanging(ref string value);
        partial void OnApellidoMaternoChanged();
    
        /// <summary>
        /// There are no comments for Nombres in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Nombres
        {
            get
            {
                string value = _Nombres;
                OnGetNombres(ref value);
                return value;
            }
            set
            {
                if (_Nombres != value)
                {
                  OnNombresChanging(ref value);
                  ReportPropertyChanging("Nombres");
                  _Nombres = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Nombres");
                  OnNombresChanged();
              }
            }
        }
        private string _Nombres;
        partial void OnGetNombres(ref string value);
        partial void OnNombresChanging(ref string value);
        partial void OnNombresChanged();
    
        /// <summary>
        /// There are no comments for Dni in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Dni
        {
            get
            {
                string value = _Dni;
                OnGetDni(ref value);
                return value;
            }
            set
            {
                if (_Dni != value)
                {
                  OnDniChanging(ref value);
                  ReportPropertyChanging("Dni");
                  _Dni = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Dni");
                  OnDniChanged();
              }
            }
        }
        private string _Dni;
        partial void OnGetDni(ref string value);
        partial void OnDniChanging(ref string value);
        partial void OnDniChanged();
    
        /// <summary>
        /// There are no comments for Sexo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sexo
        {
            get
            {
                string value = _Sexo;
                OnGetSexo(ref value);
                return value;
            }
            set
            {
                if (_Sexo != value)
                {
                  OnSexoChanging(ref value);
                  ReportPropertyChanging("Sexo");
                  _Sexo = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sexo");
                  OnSexoChanged();
              }
            }
        }
        private string _Sexo;
        partial void OnGetSexo(ref string value);
        partial void OnSexoChanging(ref string value);
        partial void OnSexoChanged();
    
        /// <summary>
        /// There are no comments for Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sede
        {
            get
            {
                string value = _Sede;
                OnGetSede(ref value);
                return value;
            }
            set
            {
                if (_Sede != value)
                {
                  OnSedeChanging(ref value);
                  ReportPropertyChanging("Sede");
                  _Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sede");
                  OnSedeChanged();
              }
            }
        }
        private string _Sede;
        partial void OnGetSede(ref string value);
        partial void OnSedeChanging(ref string value);
        partial void OnSedeChanged();
    
        /// <summary>
        /// There are no comments for SedeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> SedeId
        {
            get
            {
                global::System.Nullable<int> value = _SedeId;
                OnGetSedeId(ref value);
                return value;
            }
            set
            {
                if (_SedeId != value)
                {
                  OnSedeIdChanging(ref value);
                  ReportPropertyChanging("SedeId");
                  _SedeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SedeId");
                  OnSedeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _SedeId;
        partial void OnGetSedeId(ref global::System.Nullable<int> value);
        partial void OnSedeIdChanging(ref global::System.Nullable<int> value);
        partial void OnSedeIdChanged();
    
        /// <summary>
        /// There are no comments for Puesto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Puesto
        {
            get
            {
                string value = _Puesto;
                OnGetPuesto(ref value);
                return value;
            }
            set
            {
                if (_Puesto != value)
                {
                  OnPuestoChanging(ref value);
                  ReportPropertyChanging("Puesto");
                  _Puesto = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Puesto");
                  OnPuestoChanged();
              }
            }
        }
        private string _Puesto;
        partial void OnGetPuesto(ref string value);
        partial void OnPuestoChanging(ref string value);
        partial void OnPuestoChanged();
    
        /// <summary>
        /// There are no comments for FechaNacimiento in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> FechaNacimiento
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _FechaNacimiento;
                OnGetFechaNacimiento(ref value);
                return value;
            }
            set
            {
                if (_FechaNacimiento != value)
                {
                  OnFechaNacimientoChanging(ref value);
                  ReportPropertyChanging("FechaNacimiento");
                  _FechaNacimiento = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaNacimiento");
                  OnFechaNacimientoChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _FechaNacimiento;
        partial void OnGetFechaNacimiento(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaNacimientoChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaNacimientoChanged();
    
        /// <summary>
        /// There are no comments for SexoId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> SexoId
        {
            get
            {
                global::System.Nullable<int> value = _SexoId;
                OnGetSexoId(ref value);
                return value;
            }
            set
            {
                if (_SexoId != value)
                {
                  OnSexoIdChanging(ref value);
                  ReportPropertyChanging("SexoId");
                  _SexoId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SexoId");
                  OnSexoIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _SexoId;
        partial void OnGetSexoId(ref global::System.Nullable<int> value);
        partial void OnSexoIdChanging(ref global::System.Nullable<int> value);
        partial void OnSexoIdChanged();
    
        /// <summary>
        /// There are no comments for HcId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> HcId
        {
            get
            {
                global::System.Nullable<int> value = _HcId;
                OnGetHcId(ref value);
                return value;
            }
            set
            {
                if (_HcId != value)
                {
                  OnHcIdChanging(ref value);
                  ReportPropertyChanging("HcId");
                  _HcId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("HcId");
                  OnHcIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _HcId;
        partial void OnGetHcId(ref global::System.Nullable<int> value);
        partial void OnHcIdChanging(ref global::System.Nullable<int> value);
        partial void OnHcIdChanged();
    
        /// <summary>
        /// There are no comments for Telefono in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Telefono
        {
            get
            {
                string value = _Telefono;
                OnGetTelefono(ref value);
                return value;
            }
            set
            {
                if (_Telefono != value)
                {
                  OnTelefonoChanging(ref value);
                  ReportPropertyChanging("Telefono");
                  _Telefono = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Telefono");
                  OnTelefonoChanged();
              }
            }
        }
        private string _Telefono;
        partial void OnGetTelefono(ref string value);
        partial void OnTelefonoChanging(ref string value);
        partial void OnTelefonoChanged();
    
        /// <summary>
        /// There are no comments for Email in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Email
        {
            get
            {
                string value = _Email;
                OnGetEmail(ref value);
                return value;
            }
            set
            {
                if (_Email != value)
                {
                  OnEmailChanging(ref value);
                  ReportPropertyChanging("Email");
                  _Email = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Email");
                  OnEmailChanged();
              }
            }
        }
        private string _Email;
        partial void OnGetEmail(ref string value);
        partial void OnEmailChanging(ref string value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// There are no comments for Direccion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Direccion
        {
            get
            {
                string value = _Direccion;
                OnGetDireccion(ref value);
                return value;
            }
            set
            {
                if (_Direccion != value)
                {
                  OnDireccionChanging(ref value);
                  ReportPropertyChanging("Direccion");
                  _Direccion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Direccion");
                  OnDireccionChanged();
              }
            }
        }
        private string _Direccion;
        partial void OnGetDireccion(ref string value);
        partial void OnDireccionChanging(ref string value);
        partial void OnDireccionChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_indicadoresResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_indicadoresResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_indicadoresResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_indicadoresResult object.
        /// </summary>
        public static regcovid_indicadoresResult Createregcovid_indicadoresResult()
        {
            regcovid_indicadoresResult regcovid_indicadoresResult = new regcovid_indicadoresResult();
            return regcovid_indicadoresResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Resultado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Resultado
        {
            get
            {
                string value = _Resultado;
                OnGetResultado(ref value);
                return value;
            }
            set
            {
                if (_Resultado != value)
                {
                  OnResultadoChanging(ref value);
                  ReportPropertyChanging("Resultado");
                  _Resultado = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Resultado");
                  OnResultadoChanged();
              }
            }
        }
        private string _Resultado;
        partial void OnGetResultado(ref string value);
        partial void OnResultadoChanging(ref string value);
        partial void OnResultadoChanged();
    
        /// <summary>
        /// There are no comments for Contador in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Contador
        {
            get
            {
                global::System.Nullable<int> value = _Contador;
                OnGetContador(ref value);
                return value;
            }
            set
            {
                if (_Contador != value)
                {
                  OnContadorChanging(ref value);
                  ReportPropertyChanging("Contador");
                  _Contador = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Contador");
                  OnContadorChanged();
              }
            }
        }
        private global::System.Nullable<int> _Contador;
        partial void OnGetContador(ref global::System.Nullable<int> value);
        partial void OnContadorChanging(ref global::System.Nullable<int> value);
        partial void OnContadorChanged();
    
        /// <summary>
        /// There are no comments for Total in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Total
        {
            get
            {
                global::System.Nullable<int> value = _Total;
                OnGetTotal(ref value);
                return value;
            }
            set
            {
                if (_Total != value)
                {
                  OnTotalChanging(ref value);
                  ReportPropertyChanging("Total");
                  _Total = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Total");
                  OnTotalChanged();
              }
            }
        }
        private global::System.Nullable<int> _Total;
        partial void OnGetTotal(ref global::System.Nullable<int> value);
        partial void OnTotalChanging(ref global::System.Nullable<int> value);
        partial void OnTotalChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_list_servicesResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_list_servicesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_list_servicesResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_list_servicesResult object.
        /// </summary>
        /// <param name="serviceId">Initial value of ServiceId.</param>
        /// <param name="personId">Initial value of PersonId.</param>
        public static regcovid_list_servicesResult Createregcovid_list_servicesResult(string serviceId, string personId)
        {
            regcovid_list_servicesResult regcovid_list_servicesResult = new regcovid_list_servicesResult();
            regcovid_list_servicesResult.ServiceId = serviceId;
            regcovid_list_servicesResult.PersonId = personId;
            return regcovid_list_servicesResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for d_ServiceDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ServiceDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ServiceDate;
                OnGetd_ServiceDate(ref value);
                return value;
            }
            set
            {
                if (_d_ServiceDate != value)
                {
                  Ond_ServiceDateChanging(ref value);
                  ReportPropertyChanging("d_ServiceDate");
                  _d_ServiceDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ServiceDate");
                  Ond_ServiceDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ServiceDate;
        partial void OnGetd_ServiceDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanged();
    
        /// <summary>
        /// There are no comments for WorkerName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string WorkerName
        {
            get
            {
                string value = _WorkerName;
                OnGetWorkerName(ref value);
                return value;
            }
            set
            {
                if (_WorkerName != value)
                {
                  OnWorkerNameChanging(ref value);
                  ReportPropertyChanging("WorkerName");
                  _WorkerName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WorkerName");
                  OnWorkerNameChanged();
              }
            }
        }
        private string _WorkerName;
        partial void OnGetWorkerName(ref string value);
        partial void OnWorkerNameChanging(ref string value);
        partial void OnWorkerNameChanged();
    
        /// <summary>
        /// There are no comments for ProtocolName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ProtocolName
        {
            get
            {
                string value = _ProtocolName;
                OnGetProtocolName(ref value);
                return value;
            }
            set
            {
                if (_ProtocolName != value)
                {
                  OnProtocolNameChanging(ref value);
                  ReportPropertyChanging("ProtocolName");
                  _ProtocolName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProtocolName");
                  OnProtocolNameChanged();
              }
            }
        }
        private string _ProtocolName;
        partial void OnGetProtocolName(ref string value);
        partial void OnProtocolNameChanging(ref string value);
        partial void OnProtocolNameChanged();
    
        /// <summary>
        /// There are no comments for OrganizationName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OrganizationName
        {
            get
            {
                string value = _OrganizationName;
                OnGetOrganizationName(ref value);
                return value;
            }
            set
            {
                if (_OrganizationName != value)
                {
                  OnOrganizationNameChanging(ref value);
                  ReportPropertyChanging("OrganizationName");
                  _OrganizationName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrganizationName");
                  OnOrganizationNameChanged();
              }
            }
        }
        private string _OrganizationName;
        partial void OnGetOrganizationName(ref string value);
        partial void OnOrganizationNameChanging(ref string value);
        partial void OnOrganizationNameChanged();
    
        /// <summary>
        /// There are no comments for CurrentOccupation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string CurrentOccupation
        {
            get
            {
                string value = _CurrentOccupation;
                OnGetCurrentOccupation(ref value);
                return value;
            }
            set
            {
                if (_CurrentOccupation != value)
                {
                  OnCurrentOccupationChanging(ref value);
                  ReportPropertyChanging("CurrentOccupation");
                  _CurrentOccupation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CurrentOccupation");
                  OnCurrentOccupationChanged();
              }
            }
        }
        private string _CurrentOccupation;
        partial void OnGetCurrentOccupation(ref string value);
        partial void OnCurrentOccupationChanging(ref string value);
        partial void OnCurrentOccupationChanged();
    
        /// <summary>
        /// There are no comments for ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ServiceId
        {
            get
            {
                string value = _ServiceId;
                OnGetServiceId(ref value);
                return value;
            }
            set
            {
                if (_ServiceId != value)
                {
                  OnServiceIdChanging(ref value);
                  ReportPropertyChanging("ServiceId");
                  _ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ServiceId");
                  OnServiceIdChanged();
              }
            }
        }
        private string _ServiceId;
        partial void OnGetServiceId(ref string value);
        partial void OnServiceIdChanging(ref string value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// There are no comments for PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string PersonId
        {
            get
            {
                string value = _PersonId;
                OnGetPersonId(ref value);
                return value;
            }
            set
            {
                if (_PersonId != value)
                {
                  OnPersonIdChanging(ref value);
                  ReportPropertyChanging("PersonId");
                  _PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PersonId");
                  OnPersonIdChanged();
              }
            }
        }
        private string _PersonId;
        partial void OnGetPersonId(ref string value);
        partial void OnPersonIdChanging(ref string value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// There are no comments for ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentId
        {
            get
            {
                string value = _ComponentId;
                OnGetComponentId(ref value);
                return value;
            }
            set
            {
                if (_ComponentId != value)
                {
                  OnComponentIdChanging(ref value);
                  ReportPropertyChanging("ComponentId");
                  _ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentId");
                  OnComponentIdChanged();
              }
            }
        }
        private string _ComponentId;
        partial void OnGetComponentId(ref string value);
        partial void OnComponentIdChanging(ref string value);
        partial void OnComponentIdChanged();
    
        /// <summary>
        /// There are no comments for IIndex in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> IIndex
        {
            get
            {
                global::System.Nullable<int> value = _IIndex;
                OnGetIIndex(ref value);
                return value;
            }
            set
            {
                if (_IIndex != value)
                {
                  OnIIndexChanging(ref value);
                  ReportPropertyChanging("IIndex");
                  _IIndex = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IIndex");
                  OnIIndexChanged();
              }
            }
        }
        private global::System.Nullable<int> _IIndex;
        partial void OnGetIIndex(ref global::System.Nullable<int> value);
        partial void OnIIndexChanging(ref global::System.Nullable<int> value);
        partial void OnIIndexChanged();
    
        /// <summary>
        /// There are no comments for OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OrganizationId
        {
            get
            {
                string value = _OrganizationId;
                OnGetOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_OrganizationId != value)
                {
                  OnOrganizationIdChanging(ref value);
                  ReportPropertyChanging("OrganizationId");
                  _OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrganizationId");
                  OnOrganizationIdChanged();
              }
            }
        }
        private string _OrganizationId;
        partial void OnGetOrganizationId(ref string value);
        partial void OnOrganizationIdChanging(ref string value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for TelephoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TelephoneNumber
        {
            get
            {
                string value = _TelephoneNumber;
                OnGetTelephoneNumber(ref value);
                return value;
            }
            set
            {
                if (_TelephoneNumber != value)
                {
                  OnTelephoneNumberChanging(ref value);
                  ReportPropertyChanging("TelephoneNumber");
                  _TelephoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TelephoneNumber");
                  OnTelephoneNumberChanged();
              }
            }
        }
        private string _TelephoneNumber;
        partial void OnGetTelephoneNumber(ref string value);
        partial void OnTelephoneNumberChanging(ref string value);
        partial void OnTelephoneNumberChanged();
    
        /// <summary>
        /// There are no comments for ServiceComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ServiceComponentId
        {
            get
            {
                string value = _ServiceComponentId;
                OnGetServiceComponentId(ref value);
                return value;
            }
            set
            {
                if (_ServiceComponentId != value)
                {
                  OnServiceComponentIdChanging(ref value);
                  ReportPropertyChanging("ServiceComponentId");
                  _ServiceComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ServiceComponentId");
                  OnServiceComponentIdChanged();
              }
            }
        }
        private string _ServiceComponentId;
        partial void OnGetServiceComponentId(ref string value);
        partial void OnServiceComponentIdChanging(ref string value);
        partial void OnServiceComponentIdChanged();
    
        /// <summary>
        /// There are no comments for EncuestaCulminada in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> EncuestaCulminada
        {
            get
            {
                global::System.Nullable<int> value = _EncuestaCulminada;
                OnGetEncuestaCulminada(ref value);
                return value;
            }
            set
            {
                if (_EncuestaCulminada != value)
                {
                  OnEncuestaCulminadaChanging(ref value);
                  ReportPropertyChanging("EncuestaCulminada");
                  _EncuestaCulminada = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EncuestaCulminada");
                  OnEncuestaCulminadaChanged();
              }
            }
        }
        private global::System.Nullable<int> _EncuestaCulminada;
        partial void OnGetEncuestaCulminada(ref global::System.Nullable<int> value);
        partial void OnEncuestaCulminadaChanging(ref global::System.Nullable<int> value);
        partial void OnEncuestaCulminadaChanged();
    
        /// <summary>
        /// There are no comments for LaboratorioCulminada in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> LaboratorioCulminada
        {
            get
            {
                global::System.Nullable<int> value = _LaboratorioCulminada;
                OnGetLaboratorioCulminada(ref value);
                return value;
            }
            set
            {
                if (_LaboratorioCulminada != value)
                {
                  OnLaboratorioCulminadaChanging(ref value);
                  ReportPropertyChanging("LaboratorioCulminada");
                  _LaboratorioCulminada = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LaboratorioCulminada");
                  OnLaboratorioCulminadaChanged();
              }
            }
        }
        private global::System.Nullable<int> _LaboratorioCulminada;
        partial void OnGetLaboratorioCulminada(ref global::System.Nullable<int> value);
        partial void OnLaboratorioCulminadaChanging(ref global::System.Nullable<int> value);
        partial void OnLaboratorioCulminadaChanged();
    
        /// <summary>
        /// There are no comments for ClinicaExternad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ClinicaExternad
        {
            get
            {
                global::System.Nullable<int> value = _ClinicaExternad;
                OnGetClinicaExternad(ref value);
                return value;
            }
            set
            {
                if (_ClinicaExternad != value)
                {
                  OnClinicaExternadChanging(ref value);
                  ReportPropertyChanging("ClinicaExternad");
                  _ClinicaExternad = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClinicaExternad");
                  OnClinicaExternadChanged();
              }
            }
        }
        private global::System.Nullable<int> _ClinicaExternad;
        partial void OnGetClinicaExternad(ref global::System.Nullable<int> value);
        partial void OnClinicaExternadChanging(ref global::System.Nullable<int> value);
        partial void OnClinicaExternadChanged();
    
        /// <summary>
        /// There are no comments for MedicalCenter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string MedicalCenter
        {
            get
            {
                string value = _MedicalCenter;
                OnGetMedicalCenter(ref value);
                return value;
            }
            set
            {
                if (_MedicalCenter != value)
                {
                  OnMedicalCenterChanging(ref value);
                  ReportPropertyChanging("MedicalCenter");
                  _MedicalCenter = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MedicalCenter");
                  OnMedicalCenterChanged();
              }
            }
        }
        private string _MedicalCenter;
        partial void OnGetMedicalCenter(ref string value);
        partial void OnMedicalCenterChanging(ref string value);
        partial void OnMedicalCenterChanged();
    
        /// <summary>
        /// There are no comments for TypeExam in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TypeExam
        {
            get
            {
                string value = _TypeExam;
                OnGetTypeExam(ref value);
                return value;
            }
            set
            {
                if (_TypeExam != value)
                {
                  OnTypeExamChanging(ref value);
                  ReportPropertyChanging("TypeExam");
                  _TypeExam = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TypeExam");
                  OnTypeExamChanged();
              }
            }
        }
        private string _TypeExam;
        partial void OnGetTypeExam(ref string value);
        partial void OnTypeExamChanging(ref string value);
        partial void OnTypeExamChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_list_services_foradminResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_list_services_foradminResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_list_services_foradminResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_list_services_foradminResult object.
        /// </summary>
        /// <param name="serviceId">Initial value of ServiceId.</param>
        /// <param name="personId">Initial value of PersonId.</param>
        public static regcovid_list_services_foradminResult Createregcovid_list_services_foradminResult(string serviceId, string personId)
        {
            regcovid_list_services_foradminResult regcovid_list_services_foradminResult = new regcovid_list_services_foradminResult();
            regcovid_list_services_foradminResult.ServiceId = serviceId;
            regcovid_list_services_foradminResult.PersonId = personId;
            return regcovid_list_services_foradminResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for d_ServiceDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ServiceDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ServiceDate;
                OnGetd_ServiceDate(ref value);
                return value;
            }
            set
            {
                if (_d_ServiceDate != value)
                {
                  Ond_ServiceDateChanging(ref value);
                  ReportPropertyChanging("d_ServiceDate");
                  _d_ServiceDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ServiceDate");
                  Ond_ServiceDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ServiceDate;
        partial void OnGetd_ServiceDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanged();
    
        /// <summary>
        /// There are no comments for WorkerName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string WorkerName
        {
            get
            {
                string value = _WorkerName;
                OnGetWorkerName(ref value);
                return value;
            }
            set
            {
                if (_WorkerName != value)
                {
                  OnWorkerNameChanging(ref value);
                  ReportPropertyChanging("WorkerName");
                  _WorkerName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WorkerName");
                  OnWorkerNameChanged();
              }
            }
        }
        private string _WorkerName;
        partial void OnGetWorkerName(ref string value);
        partial void OnWorkerNameChanging(ref string value);
        partial void OnWorkerNameChanged();
    
        /// <summary>
        /// There are no comments for ProtocolName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ProtocolName
        {
            get
            {
                string value = _ProtocolName;
                OnGetProtocolName(ref value);
                return value;
            }
            set
            {
                if (_ProtocolName != value)
                {
                  OnProtocolNameChanging(ref value);
                  ReportPropertyChanging("ProtocolName");
                  _ProtocolName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProtocolName");
                  OnProtocolNameChanged();
              }
            }
        }
        private string _ProtocolName;
        partial void OnGetProtocolName(ref string value);
        partial void OnProtocolNameChanging(ref string value);
        partial void OnProtocolNameChanged();
    
        /// <summary>
        /// There are no comments for OrganizationName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OrganizationName
        {
            get
            {
                string value = _OrganizationName;
                OnGetOrganizationName(ref value);
                return value;
            }
            set
            {
                if (_OrganizationName != value)
                {
                  OnOrganizationNameChanging(ref value);
                  ReportPropertyChanging("OrganizationName");
                  _OrganizationName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrganizationName");
                  OnOrganizationNameChanged();
              }
            }
        }
        private string _OrganizationName;
        partial void OnGetOrganizationName(ref string value);
        partial void OnOrganizationNameChanging(ref string value);
        partial void OnOrganizationNameChanged();
    
        /// <summary>
        /// There are no comments for CurrentOccupation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string CurrentOccupation
        {
            get
            {
                string value = _CurrentOccupation;
                OnGetCurrentOccupation(ref value);
                return value;
            }
            set
            {
                if (_CurrentOccupation != value)
                {
                  OnCurrentOccupationChanging(ref value);
                  ReportPropertyChanging("CurrentOccupation");
                  _CurrentOccupation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CurrentOccupation");
                  OnCurrentOccupationChanged();
              }
            }
        }
        private string _CurrentOccupation;
        partial void OnGetCurrentOccupation(ref string value);
        partial void OnCurrentOccupationChanging(ref string value);
        partial void OnCurrentOccupationChanged();
    
        /// <summary>
        /// There are no comments for ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ServiceId
        {
            get
            {
                string value = _ServiceId;
                OnGetServiceId(ref value);
                return value;
            }
            set
            {
                if (_ServiceId != value)
                {
                  OnServiceIdChanging(ref value);
                  ReportPropertyChanging("ServiceId");
                  _ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ServiceId");
                  OnServiceIdChanged();
              }
            }
        }
        private string _ServiceId;
        partial void OnGetServiceId(ref string value);
        partial void OnServiceIdChanging(ref string value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// There are no comments for PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string PersonId
        {
            get
            {
                string value = _PersonId;
                OnGetPersonId(ref value);
                return value;
            }
            set
            {
                if (_PersonId != value)
                {
                  OnPersonIdChanging(ref value);
                  ReportPropertyChanging("PersonId");
                  _PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PersonId");
                  OnPersonIdChanged();
              }
            }
        }
        private string _PersonId;
        partial void OnGetPersonId(ref string value);
        partial void OnPersonIdChanging(ref string value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// There are no comments for ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentId
        {
            get
            {
                string value = _ComponentId;
                OnGetComponentId(ref value);
                return value;
            }
            set
            {
                if (_ComponentId != value)
                {
                  OnComponentIdChanging(ref value);
                  ReportPropertyChanging("ComponentId");
                  _ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentId");
                  OnComponentIdChanged();
              }
            }
        }
        private string _ComponentId;
        partial void OnGetComponentId(ref string value);
        partial void OnComponentIdChanging(ref string value);
        partial void OnComponentIdChanged();
    
        /// <summary>
        /// There are no comments for IIndex in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> IIndex
        {
            get
            {
                global::System.Nullable<int> value = _IIndex;
                OnGetIIndex(ref value);
                return value;
            }
            set
            {
                if (_IIndex != value)
                {
                  OnIIndexChanging(ref value);
                  ReportPropertyChanging("IIndex");
                  _IIndex = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IIndex");
                  OnIIndexChanged();
              }
            }
        }
        private global::System.Nullable<int> _IIndex;
        partial void OnGetIIndex(ref global::System.Nullable<int> value);
        partial void OnIIndexChanging(ref global::System.Nullable<int> value);
        partial void OnIIndexChanged();
    
        /// <summary>
        /// There are no comments for OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OrganizationId
        {
            get
            {
                string value = _OrganizationId;
                OnGetOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_OrganizationId != value)
                {
                  OnOrganizationIdChanging(ref value);
                  ReportPropertyChanging("OrganizationId");
                  _OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrganizationId");
                  OnOrganizationIdChanged();
              }
            }
        }
        private string _OrganizationId;
        partial void OnGetOrganizationId(ref string value);
        partial void OnOrganizationIdChanging(ref string value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for TelephoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TelephoneNumber
        {
            get
            {
                string value = _TelephoneNumber;
                OnGetTelephoneNumber(ref value);
                return value;
            }
            set
            {
                if (_TelephoneNumber != value)
                {
                  OnTelephoneNumberChanging(ref value);
                  ReportPropertyChanging("TelephoneNumber");
                  _TelephoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TelephoneNumber");
                  OnTelephoneNumberChanged();
              }
            }
        }
        private string _TelephoneNumber;
        partial void OnGetTelephoneNumber(ref string value);
        partial void OnTelephoneNumberChanging(ref string value);
        partial void OnTelephoneNumberChanged();
    
        /// <summary>
        /// There are no comments for EncuestaCulminada in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> EncuestaCulminada
        {
            get
            {
                global::System.Nullable<int> value = _EncuestaCulminada;
                OnGetEncuestaCulminada(ref value);
                return value;
            }
            set
            {
                if (_EncuestaCulminada != value)
                {
                  OnEncuestaCulminadaChanging(ref value);
                  ReportPropertyChanging("EncuestaCulminada");
                  _EncuestaCulminada = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EncuestaCulminada");
                  OnEncuestaCulminadaChanged();
              }
            }
        }
        private global::System.Nullable<int> _EncuestaCulminada;
        partial void OnGetEncuestaCulminada(ref global::System.Nullable<int> value);
        partial void OnEncuestaCulminadaChanging(ref global::System.Nullable<int> value);
        partial void OnEncuestaCulminadaChanged();
    
        /// <summary>
        /// There are no comments for LaboratorioCulminada in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> LaboratorioCulminada
        {
            get
            {
                global::System.Nullable<int> value = _LaboratorioCulminada;
                OnGetLaboratorioCulminada(ref value);
                return value;
            }
            set
            {
                if (_LaboratorioCulminada != value)
                {
                  OnLaboratorioCulminadaChanging(ref value);
                  ReportPropertyChanging("LaboratorioCulminada");
                  _LaboratorioCulminada = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LaboratorioCulminada");
                  OnLaboratorioCulminadaChanged();
              }
            }
        }
        private global::System.Nullable<int> _LaboratorioCulminada;
        partial void OnGetLaboratorioCulminada(ref global::System.Nullable<int> value);
        partial void OnLaboratorioCulminadaChanging(ref global::System.Nullable<int> value);
        partial void OnLaboratorioCulminadaChanged();
    
        /// <summary>
        /// There are no comments for ClinicaExternad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ClinicaExternad
        {
            get
            {
                global::System.Nullable<int> value = _ClinicaExternad;
                OnGetClinicaExternad(ref value);
                return value;
            }
            set
            {
                if (_ClinicaExternad != value)
                {
                  OnClinicaExternadChanging(ref value);
                  ReportPropertyChanging("ClinicaExternad");
                  _ClinicaExternad = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClinicaExternad");
                  OnClinicaExternadChanged();
              }
            }
        }
        private global::System.Nullable<int> _ClinicaExternad;
        partial void OnGetClinicaExternad(ref global::System.Nullable<int> value);
        partial void OnClinicaExternadChanging(ref global::System.Nullable<int> value);
        partial void OnClinicaExternadChanged();
    
        /// <summary>
        /// There are no comments for MedicalCenter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string MedicalCenter
        {
            get
            {
                string value = _MedicalCenter;
                OnGetMedicalCenter(ref value);
                return value;
            }
            set
            {
                if (_MedicalCenter != value)
                {
                  OnMedicalCenterChanging(ref value);
                  ReportPropertyChanging("MedicalCenter");
                  _MedicalCenter = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MedicalCenter");
                  OnMedicalCenterChanged();
              }
            }
        }
        private string _MedicalCenter;
        partial void OnGetMedicalCenter(ref string value);
        partial void OnMedicalCenterChanging(ref string value);
        partial void OnMedicalCenterChanged();
    
        /// <summary>
        /// There are no comments for TypeExam in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TypeExam
        {
            get
            {
                string value = _TypeExam;
                OnGetTypeExam(ref value);
                return value;
            }
            set
            {
                if (_TypeExam != value)
                {
                  OnTypeExamChanging(ref value);
                  ReportPropertyChanging("TypeExam");
                  _TypeExam = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TypeExam");
                  OnTypeExamChanged();
              }
            }
        }
        private string _TypeExam;
        partial void OnGetTypeExam(ref string value);
        partial void OnTypeExamChanging(ref string value);
        partial void OnTypeExamChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_positivosenviadosreg_vs_positivosrecividosvigResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_positivosenviadosreg_vs_positivosrecividosvigResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_positivosenviadosreg_vs_positivosrecividosvigResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_positivosenviadosreg_vs_positivosrecividosvigResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        /// <param name="serviceComponentFieldsId">Initial value of ServiceComponentFieldsId.</param>
        public static regcovid_positivosenviadosreg_vs_positivosrecividosvigResult Createregcovid_positivosenviadosreg_vs_positivosrecividosvigResult(string v_ServiceId, string serviceComponentFieldsId)
        {
            regcovid_positivosenviadosreg_vs_positivosrecividosvigResult regcovid_positivosenviadosreg_vs_positivosrecividosvigResult = new regcovid_positivosenviadosreg_vs_positivosrecividosvigResult();
            regcovid_positivosenviadosreg_vs_positivosrecividosvigResult.v_ServiceId = v_ServiceId;
            regcovid_positivosenviadosreg_vs_positivosrecividosvigResult.ServiceComponentFieldsId = serviceComponentFieldsId;
            return regcovid_positivosenviadosreg_vs_positivosrecividosvigResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for d_ServiceDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ServiceDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ServiceDate;
                OnGetd_ServiceDate(ref value);
                return value;
            }
            set
            {
                if (_d_ServiceDate != value)
                {
                  Ond_ServiceDateChanging(ref value);
                  ReportPropertyChanging("d_ServiceDate");
                  _d_ServiceDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ServiceDate");
                  Ond_ServiceDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ServiceDate;
        partial void OnGetd_ServiceDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanged();
    
        /// <summary>
        /// There are no comments for Nombres in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Nombres
        {
            get
            {
                string value = _Nombres;
                OnGetNombres(ref value);
                return value;
            }
            set
            {
                if (_Nombres != value)
                {
                  OnNombresChanging(ref value);
                  ReportPropertyChanging("Nombres");
                  _Nombres = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Nombres");
                  OnNombresChanged();
              }
            }
        }
        private string _Nombres;
        partial void OnGetNombres(ref string value);
        partial void OnNombresChanging(ref string value);
        partial void OnNombresChanged();
    
        /// <summary>
        /// There are no comments for TecnicoCovid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TecnicoCovid
        {
            get
            {
                string value = _TecnicoCovid;
                OnGetTecnicoCovid(ref value);
                return value;
            }
            set
            {
                if (_TecnicoCovid != value)
                {
                  OnTecnicoCovidChanging(ref value);
                  ReportPropertyChanging("TecnicoCovid");
                  _TecnicoCovid = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TecnicoCovid");
                  OnTecnicoCovidChanged();
              }
            }
        }
        private string _TecnicoCovid;
        partial void OnGetTecnicoCovid(ref string value);
        partial void OnTecnicoCovidChanging(ref string value);
        partial void OnTecnicoCovidChanged();
    
        /// <summary>
        /// There are no comments for ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentFieldId
        {
            get
            {
                string value = _ComponentFieldId;
                OnGetComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_ComponentFieldId != value)
                {
                  OnComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("ComponentFieldId");
                  _ComponentFieldId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentFieldId");
                  OnComponentFieldIdChanged();
              }
            }
        }
        private string _ComponentFieldId;
        partial void OnGetComponentFieldId(ref string value);
        partial void OnComponentFieldIdChanging(ref string value);
        partial void OnComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for ServiceComponentFieldsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ServiceComponentFieldsId
        {
            get
            {
                string value = _ServiceComponentFieldsId;
                OnGetServiceComponentFieldsId(ref value);
                return value;
            }
            set
            {
                if (_ServiceComponentFieldsId != value)
                {
                  OnServiceComponentFieldsIdChanging(ref value);
                  ReportPropertyChanging("ServiceComponentFieldsId");
                  _ServiceComponentFieldsId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ServiceComponentFieldsId");
                  OnServiceComponentFieldsIdChanged();
              }
            }
        }
        private string _ServiceComponentFieldsId;
        partial void OnGetServiceComponentFieldsId(ref string value);
        partial void OnServiceComponentFieldsIdChanging(ref string value);
        partial void OnServiceComponentFieldsIdChanged();
    
        /// <summary>
        /// There are no comments for Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Value1
        {
            get
            {
                string value = _Value1;
                OnGetValue1(ref value);
                return value;
            }
            set
            {
                if (_Value1 != value)
                {
                  OnValue1Changing(ref value);
                  ReportPropertyChanging("Value1");
                  _Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Value1");
                  OnValue1Changed();
              }
            }
        }
        private string _Value1;
        partial void OnGetValue1(ref string value);
        partial void OnValue1Changing(ref string value);
        partial void OnValue1Changed();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1 in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1 : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1 object.
        /// </summary>
        /// <param name="nombreCompleto">Initial value of NombreCompleto.</param>
        /// <param name="apePaterno">Initial value of ApePaterno.</param>
        /// <param name="apeMaterno">Initial value of ApeMaterno.</param>
        /// <param name="dni">Initial value of Dni.</param>
        public static regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1 Createregcovid_positivosenviadosreg_vs_positivosrecividosvigResult1(string nombreCompleto, string apePaterno, string apeMaterno, string dni)
        {
            regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1 regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1 = new regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1();
            regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1.NombreCompleto = nombreCompleto;
            regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1.ApePaterno = apePaterno;
            regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1.ApeMaterno = apeMaterno;
            regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1.Dni = dni;
            return regcovid_positivosenviadosreg_vs_positivosrecividosvigResult1;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NombreCompleto in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string NombreCompleto
        {
            get
            {
                string value = _NombreCompleto;
                OnGetNombreCompleto(ref value);
                return value;
            }
            set
            {
                if (_NombreCompleto != value)
                {
                  OnNombreCompletoChanging(ref value);
                  ReportPropertyChanging("NombreCompleto");
                  _NombreCompleto = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NombreCompleto");
                  OnNombreCompletoChanged();
              }
            }
        }
        private string _NombreCompleto;
        partial void OnGetNombreCompleto(ref string value);
        partial void OnNombreCompletoChanging(ref string value);
        partial void OnNombreCompletoChanged();
    
        /// <summary>
        /// There are no comments for ApePaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ApePaterno
        {
            get
            {
                string value = _ApePaterno;
                OnGetApePaterno(ref value);
                return value;
            }
            set
            {
                if (_ApePaterno != value)
                {
                  OnApePaternoChanging(ref value);
                  ReportPropertyChanging("ApePaterno");
                  _ApePaterno = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ApePaterno");
                  OnApePaternoChanged();
              }
            }
        }
        private string _ApePaterno;
        partial void OnGetApePaterno(ref string value);
        partial void OnApePaternoChanging(ref string value);
        partial void OnApePaternoChanged();
    
        /// <summary>
        /// There are no comments for ApeMaterno in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ApeMaterno
        {
            get
            {
                string value = _ApeMaterno;
                OnGetApeMaterno(ref value);
                return value;
            }
            set
            {
                if (_ApeMaterno != value)
                {
                  OnApeMaternoChanging(ref value);
                  ReportPropertyChanging("ApeMaterno");
                  _ApeMaterno = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ApeMaterno");
                  OnApeMaternoChanged();
              }
            }
        }
        private string _ApeMaterno;
        partial void OnGetApeMaterno(ref string value);
        partial void OnApeMaternoChanging(ref string value);
        partial void OnApeMaternoChanged();
    
        /// <summary>
        /// There are no comments for Dni in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Dni
        {
            get
            {
                string value = _Dni;
                OnGetDni(ref value);
                return value;
            }
            set
            {
                if (_Dni != value)
                {
                  OnDniChanging(ref value);
                  ReportPropertyChanging("Dni");
                  _Dni = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Dni");
                  OnDniChanged();
              }
            }
        }
        private string _Dni;
        partial void OnGetDni(ref string value);
        partial void OnDniChanging(ref string value);
        partial void OnDniChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_scheduleworkerResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_scheduleworkerResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_scheduleworkerResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_scheduleworkerResult object.
        /// </summary>
        public static regcovid_scheduleworkerResult Createregcovid_scheduleworkerResult()
        {
            regcovid_scheduleworkerResult regcovid_scheduleworkerResult = new regcovid_scheduleworkerResult();
            return regcovid_scheduleworkerResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for column0 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string column0
        {
            get
            {
                string value = _column0;
                OnGetcolumn0(ref value);
                return value;
            }
            set
            {
                if (_column0 != value)
                {
                  Oncolumn0Changing(ref value);
                  ReportPropertyChanging("column0");
                  _column0 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("column0");
                  Oncolumn0Changed();
              }
            }
        }
        private string _column0;
        partial void OnGetcolumn0(ref string value);
        partial void Oncolumn0Changing(ref string value);
        partial void Oncolumn0Changed();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_select_brandResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_select_brandResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_select_brandResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_select_brandResult object.
        /// </summary>
        /// <param name="iBrandId">Initial value of iBrandId.</param>
        public static regcovid_select_brandResult Createregcovid_select_brandResult(int iBrandId)
        {
            regcovid_select_brandResult regcovid_select_brandResult = new regcovid_select_brandResult();
            regcovid_select_brandResult.iBrandId = iBrandId;
            return regcovid_select_brandResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for iBrandId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int iBrandId
        {
            get
            {
                int value = _iBrandId;
                OnGetiBrandId(ref value);
                return value;
            }
            set
            {
                if (_iBrandId != value)
                {
                  OniBrandIdChanging(ref value);
                  ReportPropertyChanging("iBrandId");
                  _iBrandId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iBrandId");
                  OniBrandIdChanged();
              }
            }
        }
        private int _iBrandId;
        partial void OnGetiBrandId(ref int value);
        partial void OniBrandIdChanging(ref int value);
        partial void OniBrandIdChanged();
    
        /// <summary>
        /// There are no comments for vBrandName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string vBrandName
        {
            get
            {
                string value = _vBrandName;
                OnGetvBrandName(ref value);
                return value;
            }
            set
            {
                if (_vBrandName != value)
                {
                  OnvBrandNameChanging(ref value);
                  ReportPropertyChanging("vBrandName");
                  _vBrandName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("vBrandName");
                  OnvBrandNameChanged();
              }
            }
        }
        private string _vBrandName;
        partial void OnGetvBrandName(ref string value);
        partial void OnvBrandNameChanging(ref string value);
        partial void OnvBrandNameChanged();
    
        /// <summary>
        /// There are no comments for iBrandState in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> iBrandState
        {
            get
            {
                global::System.Nullable<bool> value = _iBrandState;
                OnGetiBrandState(ref value);
                return value;
            }
            set
            {
                if (_iBrandState != value)
                {
                  OniBrandStateChanging(ref value);
                  ReportPropertyChanging("iBrandState");
                  _iBrandState = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iBrandState");
                  OniBrandStateChanged();
              }
            }
        }
        private global::System.Nullable<bool> _iBrandState;
        partial void OnGetiBrandState(ref global::System.Nullable<bool> value);
        partial void OniBrandStateChanging(ref global::System.Nullable<bool> value);
        partial void OniBrandStateChanged();
    
        /// <summary>
        /// There are no comments for iDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> iDeleted
        {
            get
            {
                global::System.Nullable<bool> value = _iDeleted;
                OnGetiDeleted(ref value);
                return value;
            }
            set
            {
                if (_iDeleted != value)
                {
                  OniDeletedChanging(ref value);
                  ReportPropertyChanging("iDeleted");
                  _iDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iDeleted");
                  OniDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _iDeleted;
        partial void OnGetiDeleted(ref global::System.Nullable<bool> value);
        partial void OniDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OniDeletedChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_select_testdeviceResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_select_testdeviceResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_select_testdeviceResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_select_testdeviceResult object.
        /// </summary>
        /// <param name="iTestDeviceId">Initial value of iTestDeviceId.</param>
        public static regcovid_select_testdeviceResult Createregcovid_select_testdeviceResult(int iTestDeviceId)
        {
            regcovid_select_testdeviceResult regcovid_select_testdeviceResult = new regcovid_select_testdeviceResult();
            regcovid_select_testdeviceResult.iTestDeviceId = iTestDeviceId;
            return regcovid_select_testdeviceResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for iTestDeviceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int iTestDeviceId
        {
            get
            {
                int value = _iTestDeviceId;
                OnGetiTestDeviceId(ref value);
                return value;
            }
            set
            {
                if (_iTestDeviceId != value)
                {
                  OniTestDeviceIdChanging(ref value);
                  ReportPropertyChanging("iTestDeviceId");
                  _iTestDeviceId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iTestDeviceId");
                  OniTestDeviceIdChanged();
              }
            }
        }
        private int _iTestDeviceId;
        partial void OnGetiTestDeviceId(ref int value);
        partial void OniTestDeviceIdChanging(ref int value);
        partial void OniTestDeviceIdChanged();
    
        /// <summary>
        /// There are no comments for vTestDeviceName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string vTestDeviceName
        {
            get
            {
                string value = _vTestDeviceName;
                OnGetvTestDeviceName(ref value);
                return value;
            }
            set
            {
                if (_vTestDeviceName != value)
                {
                  OnvTestDeviceNameChanging(ref value);
                  ReportPropertyChanging("vTestDeviceName");
                  _vTestDeviceName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("vTestDeviceName");
                  OnvTestDeviceNameChanged();
              }
            }
        }
        private string _vTestDeviceName;
        partial void OnGetvTestDeviceName(ref string value);
        partial void OnvTestDeviceNameChanging(ref string value);
        partial void OnvTestDeviceNameChanged();
    
        /// <summary>
        /// There are no comments for vTestDeviceDescription in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string vTestDeviceDescription
        {
            get
            {
                string value = _vTestDeviceDescription;
                OnGetvTestDeviceDescription(ref value);
                return value;
            }
            set
            {
                if (_vTestDeviceDescription != value)
                {
                  OnvTestDeviceDescriptionChanging(ref value);
                  ReportPropertyChanging("vTestDeviceDescription");
                  _vTestDeviceDescription = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("vTestDeviceDescription");
                  OnvTestDeviceDescriptionChanged();
              }
            }
        }
        private string _vTestDeviceDescription;
        partial void OnGetvTestDeviceDescription(ref string value);
        partial void OnvTestDeviceDescriptionChanging(ref string value);
        partial void OnvTestDeviceDescriptionChanged();
    
        /// <summary>
        /// There are no comments for iTestDeviceIdBrand in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> iTestDeviceIdBrand
        {
            get
            {
                global::System.Nullable<int> value = _iTestDeviceIdBrand;
                OnGetiTestDeviceIdBrand(ref value);
                return value;
            }
            set
            {
                if (_iTestDeviceIdBrand != value)
                {
                  OniTestDeviceIdBrandChanging(ref value);
                  ReportPropertyChanging("iTestDeviceIdBrand");
                  _iTestDeviceIdBrand = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iTestDeviceIdBrand");
                  OniTestDeviceIdBrandChanged();
              }
            }
        }
        private global::System.Nullable<int> _iTestDeviceIdBrand;
        partial void OnGetiTestDeviceIdBrand(ref global::System.Nullable<int> value);
        partial void OniTestDeviceIdBrandChanging(ref global::System.Nullable<int> value);
        partial void OniTestDeviceIdBrandChanged();
    
        /// <summary>
        /// There are no comments for vTestDeviceLot in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string vTestDeviceLot
        {
            get
            {
                string value = _vTestDeviceLot;
                OnGetvTestDeviceLot(ref value);
                return value;
            }
            set
            {
                if (_vTestDeviceLot != value)
                {
                  OnvTestDeviceLotChanging(ref value);
                  ReportPropertyChanging("vTestDeviceLot");
                  _vTestDeviceLot = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("vTestDeviceLot");
                  OnvTestDeviceLotChanged();
              }
            }
        }
        private string _vTestDeviceLot;
        partial void OnGetvTestDeviceLot(ref string value);
        partial void OnvTestDeviceLotChanging(ref string value);
        partial void OnvTestDeviceLotChanged();
    
        /// <summary>
        /// There are no comments for dTestDeviceDueDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> dTestDeviceDueDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _dTestDeviceDueDate;
                OnGetdTestDeviceDueDate(ref value);
                return value;
            }
            set
            {
                if (_dTestDeviceDueDate != value)
                {
                  OndTestDeviceDueDateChanging(ref value);
                  ReportPropertyChanging("dTestDeviceDueDate");
                  _dTestDeviceDueDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("dTestDeviceDueDate");
                  OndTestDeviceDueDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _dTestDeviceDueDate;
        partial void OnGetdTestDeviceDueDate(ref global::System.Nullable<System.DateTime> value);
        partial void OndTestDeviceDueDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OndTestDeviceDueDateChanged();
    
        /// <summary>
        /// There are no comments for iTestDeviceState in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> iTestDeviceState
        {
            get
            {
                global::System.Nullable<bool> value = _iTestDeviceState;
                OnGetiTestDeviceState(ref value);
                return value;
            }
            set
            {
                if (_iTestDeviceState != value)
                {
                  OniTestDeviceStateChanging(ref value);
                  ReportPropertyChanging("iTestDeviceState");
                  _iTestDeviceState = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iTestDeviceState");
                  OniTestDeviceStateChanged();
              }
            }
        }
        private global::System.Nullable<bool> _iTestDeviceState;
        partial void OnGetiTestDeviceState(ref global::System.Nullable<bool> value);
        partial void OniTestDeviceStateChanging(ref global::System.Nullable<bool> value);
        partial void OniTestDeviceStateChanged();
    
        /// <summary>
        /// There are no comments for iDeleted in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<bool> iDeleted
        {
            get
            {
                global::System.Nullable<bool> value = _iDeleted;
                OnGetiDeleted(ref value);
                return value;
            }
            set
            {
                if (_iDeleted != value)
                {
                  OniDeletedChanging(ref value);
                  ReportPropertyChanging("iDeleted");
                  _iDeleted = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("iDeleted");
                  OniDeletedChanged();
              }
            }
        }
        private global::System.Nullable<bool> _iDeleted;
        partial void OnGetiDeleted(ref global::System.Nullable<bool> value);
        partial void OniDeletedChanging(ref global::System.Nullable<bool> value);
        partial void OniDeletedChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_servicios_listadoResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_servicios_listadoResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_servicios_listadoResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_servicios_listadoResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        public static regcovid_servicios_listadoResult Createregcovid_servicios_listadoResult(string v_ServiceId)
        {
            regcovid_servicios_listadoResult regcovid_servicios_listadoResult = new regcovid_servicios_listadoResult();
            regcovid_servicios_listadoResult.v_ServiceId = v_ServiceId;
            return regcovid_servicios_listadoResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for FechaHoraRegistro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> FechaHoraRegistro
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _FechaHoraRegistro;
                OnGetFechaHoraRegistro(ref value);
                return value;
            }
            set
            {
                if (_FechaHoraRegistro != value)
                {
                  OnFechaHoraRegistroChanging(ref value);
                  ReportPropertyChanging("FechaHoraRegistro");
                  _FechaHoraRegistro = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaHoraRegistro");
                  OnFechaHoraRegistroChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _FechaHoraRegistro;
        partial void OnGetFechaHoraRegistro(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaHoraRegistroChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnFechaHoraRegistroChanged();
    
        /// <summary>
        /// There are no comments for MedicalCenter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string MedicalCenter
        {
            get
            {
                string value = _MedicalCenter;
                OnGetMedicalCenter(ref value);
                return value;
            }
            set
            {
                if (_MedicalCenter != value)
                {
                  OnMedicalCenterChanging(ref value);
                  ReportPropertyChanging("MedicalCenter");
                  _MedicalCenter = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MedicalCenter");
                  OnMedicalCenterChanged();
              }
            }
        }
        private string _MedicalCenter;
        partial void OnGetMedicalCenter(ref string value);
        partial void OnMedicalCenterChanging(ref string value);
        partial void OnMedicalCenterChanged();
    
        /// <summary>
        /// There are no comments for v_Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Sede
        {
            get
            {
                string value = _v_Sede;
                OnGetv_Sede(ref value);
                return value;
            }
            set
            {
                if (_v_Sede != value)
                {
                  Onv_SedeChanging(ref value);
                  ReportPropertyChanging("v_Sede");
                  _v_Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Sede");
                  Onv_SedeChanged();
              }
            }
        }
        private string _v_Sede;
        partial void OnGetv_Sede(ref string value);
        partial void Onv_SedeChanging(ref string value);
        partial void Onv_SedeChanged();
    
        /// <summary>
        /// There are no comments for Trabajador in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Trabajador
        {
            get
            {
                string value = _Trabajador;
                OnGetTrabajador(ref value);
                return value;
            }
            set
            {
                if (_Trabajador != value)
                {
                  OnTrabajadorChanging(ref value);
                  ReportPropertyChanging("Trabajador");
                  _Trabajador = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Trabajador");
                  OnTrabajadorChanged();
              }
            }
        }
        private string _Trabajador;
        partial void OnGetTrabajador(ref string value);
        partial void OnTrabajadorChanging(ref string value);
        partial void OnTrabajadorChanged();
    
        /// <summary>
        /// There are no comments for DNI in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DNI
        {
            get
            {
                string value = _DNI;
                OnGetDNI(ref value);
                return value;
            }
            set
            {
                if (_DNI != value)
                {
                  OnDNIChanging(ref value);
                  ReportPropertyChanging("DNI");
                  _DNI = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DNI");
                  OnDNIChanged();
              }
            }
        }
        private string _DNI;
        partial void OnGetDNI(ref string value);
        partial void OnDNIChanging(ref string value);
        partial void OnDNIChanged();
    
        /// <summary>
        /// There are no comments for CELULAR in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string CELULAR
        {
            get
            {
                string value = _CELULAR;
                OnGetCELULAR(ref value);
                return value;
            }
            set
            {
                if (_CELULAR != value)
                {
                  OnCELULARChanging(ref value);
                  ReportPropertyChanging("CELULAR");
                  _CELULAR = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CELULAR");
                  OnCELULARChanged();
              }
            }
        }
        private string _CELULAR;
        partial void OnGetCELULAR(ref string value);
        partial void OnCELULARChanging(ref string value);
        partial void OnCELULARChanged();
    
        /// <summary>
        /// There are no comments for TecnicoCovid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TecnicoCovid
        {
            get
            {
                string value = _TecnicoCovid;
                OnGetTecnicoCovid(ref value);
                return value;
            }
            set
            {
                if (_TecnicoCovid != value)
                {
                  OnTecnicoCovidChanging(ref value);
                  ReportPropertyChanging("TecnicoCovid");
                  _TecnicoCovid = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TecnicoCovid");
                  OnTecnicoCovidChanged();
              }
            }
        }
        private string _TecnicoCovid;
        partial void OnGetTecnicoCovid(ref string value);
        partial void OnTecnicoCovidChanging(ref string value);
        partial void OnTecnicoCovidChanged();
    
        /// <summary>
        /// There are no comments for EDAD in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> EDAD
        {
            get
            {
                global::System.Nullable<int> value = _EDAD;
                OnGetEDAD(ref value);
                return value;
            }
            set
            {
                if (_EDAD != value)
                {
                  OnEDADChanging(ref value);
                  ReportPropertyChanging("EDAD");
                  _EDAD = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EDAD");
                  OnEDADChanged();
              }
            }
        }
        private global::System.Nullable<int> _EDAD;
        partial void OnGetEDAD(ref global::System.Nullable<int> value);
        partial void OnEDADChanging(ref global::System.Nullable<int> value);
        partial void OnEDADChanged();
    
        /// <summary>
        /// There are no comments for Resultado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Resultado
        {
            get
            {
                string value = _Resultado;
                OnGetResultado(ref value);
                return value;
            }
            set
            {
                if (_Resultado != value)
                {
                  OnResultadoChanging(ref value);
                  ReportPropertyChanging("Resultado");
                  _Resultado = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Resultado");
                  OnResultadoChanged();
              }
            }
        }
        private string _Resultado;
        partial void OnGetResultado(ref string value);
        partial void OnResultadoChanging(ref string value);
        partial void OnResultadoChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_servicios_vs_resultadosResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_servicios_vs_resultadosResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_servicios_vs_resultadosResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_servicios_vs_resultadosResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        /// <param name="serviceComponentFieldsId">Initial value of ServiceComponentFieldsId.</param>
        public static regcovid_servicios_vs_resultadosResult Createregcovid_servicios_vs_resultadosResult(string v_ServiceId, string serviceComponentFieldsId)
        {
            regcovid_servicios_vs_resultadosResult regcovid_servicios_vs_resultadosResult = new regcovid_servicios_vs_resultadosResult();
            regcovid_servicios_vs_resultadosResult.v_ServiceId = v_ServiceId;
            regcovid_servicios_vs_resultadosResult.ServiceComponentFieldsId = serviceComponentFieldsId;
            return regcovid_servicios_vs_resultadosResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for column0 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string column0
        {
            get
            {
                string value = _column0;
                OnGetcolumn0(ref value);
                return value;
            }
            set
            {
                if (_column0 != value)
                {
                  Oncolumn0Changing(ref value);
                  ReportPropertyChanging("column0");
                  _column0 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("column0");
                  Oncolumn0Changed();
              }
            }
        }
        private string _column0;
        partial void OnGetcolumn0(ref string value);
        partial void Oncolumn0Changing(ref string value);
        partial void Oncolumn0Changed();
    
        /// <summary>
        /// There are no comments for v_DocNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_DocNumber
        {
            get
            {
                string value = _v_DocNumber;
                OnGetv_DocNumber(ref value);
                return value;
            }
            set
            {
                if (_v_DocNumber != value)
                {
                  Onv_DocNumberChanging(ref value);
                  ReportPropertyChanging("v_DocNumber");
                  _v_DocNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_DocNumber");
                  Onv_DocNumberChanged();
              }
            }
        }
        private string _v_DocNumber;
        partial void OnGetv_DocNumber(ref string value);
        partial void Onv_DocNumberChanging(ref string value);
        partial void Onv_DocNumberChanged();
    
        /// <summary>
        /// There are no comments for Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Value1
        {
            get
            {
                string value = _Value1;
                OnGetValue1(ref value);
                return value;
            }
            set
            {
                if (_Value1 != value)
                {
                  OnValue1Changing(ref value);
                  ReportPropertyChanging("Value1");
                  _Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Value1");
                  OnValue1Changed();
              }
            }
        }
        private string _Value1;
        partial void OnGetValue1(ref string value);
        partial void OnValue1Changing(ref string value);
        partial void OnValue1Changed();
    
        /// <summary>
        /// There are no comments for d_ServiceDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ServiceDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ServiceDate;
                OnGetd_ServiceDate(ref value);
                return value;
            }
            set
            {
                if (_d_ServiceDate != value)
                {
                  Ond_ServiceDateChanging(ref value);
                  ReportPropertyChanging("d_ServiceDate");
                  _d_ServiceDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ServiceDate");
                  Ond_ServiceDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ServiceDate;
        partial void OnGetd_ServiceDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanged();
    
        /// <summary>
        /// There are no comments for ValueSede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ValueSede
        {
            get
            {
                global::System.Nullable<int> value = _ValueSede;
                OnGetValueSede(ref value);
                return value;
            }
            set
            {
                if (_ValueSede != value)
                {
                  OnValueSedeChanging(ref value);
                  ReportPropertyChanging("ValueSede");
                  _ValueSede = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ValueSede");
                  OnValueSedeChanged();
              }
            }
        }
        private global::System.Nullable<int> _ValueSede;
        partial void OnGetValueSede(ref global::System.Nullable<int> value);
        partial void OnValueSedeChanging(ref global::System.Nullable<int> value);
        partial void OnValueSedeChanged();
    
        /// <summary>
        /// There are no comments for v_Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Sede
        {
            get
            {
                string value = _v_Sede;
                OnGetv_Sede(ref value);
                return value;
            }
            set
            {
                if (_v_Sede != value)
                {
                  Onv_SedeChanging(ref value);
                  ReportPropertyChanging("v_Sede");
                  _v_Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Sede");
                  Onv_SedeChanged();
              }
            }
        }
        private string _v_Sede;
        partial void OnGetv_Sede(ref string value);
        partial void Onv_SedeChanging(ref string value);
        partial void Onv_SedeChanged();
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for d_InsertDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_InsertDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_InsertDate;
                OnGetd_InsertDate(ref value);
                return value;
            }
            set
            {
                if (_d_InsertDate != value)
                {
                  Ond_InsertDateChanging(ref value);
                  ReportPropertyChanging("d_InsertDate");
                  _d_InsertDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_InsertDate");
                  Ond_InsertDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_InsertDate;
        partial void OnGetd_InsertDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_InsertDateChanged();
    
        /// <summary>
        /// There are no comments for TecnicoCovid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TecnicoCovid
        {
            get
            {
                string value = _TecnicoCovid;
                OnGetTecnicoCovid(ref value);
                return value;
            }
            set
            {
                if (_TecnicoCovid != value)
                {
                  OnTecnicoCovidChanging(ref value);
                  ReportPropertyChanging("TecnicoCovid");
                  _TecnicoCovid = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TecnicoCovid");
                  OnTecnicoCovidChanged();
              }
            }
        }
        private string _TecnicoCovid;
        partial void OnGetTecnicoCovid(ref string value);
        partial void OnTecnicoCovidChanging(ref string value);
        partial void OnTecnicoCovidChanged();
    
        /// <summary>
        /// There are no comments for ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentFieldId
        {
            get
            {
                string value = _ComponentFieldId;
                OnGetComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_ComponentFieldId != value)
                {
                  OnComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("ComponentFieldId");
                  _ComponentFieldId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentFieldId");
                  OnComponentFieldIdChanged();
              }
            }
        }
        private string _ComponentFieldId;
        partial void OnGetComponentFieldId(ref string value);
        partial void OnComponentFieldIdChanging(ref string value);
        partial void OnComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for ServiceComponentFieldsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ServiceComponentFieldsId
        {
            get
            {
                string value = _ServiceComponentFieldsId;
                OnGetServiceComponentFieldsId(ref value);
                return value;
            }
            set
            {
                if (_ServiceComponentFieldsId != value)
                {
                  OnServiceComponentFieldsIdChanging(ref value);
                  ReportPropertyChanging("ServiceComponentFieldsId");
                  _ServiceComponentFieldsId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ServiceComponentFieldsId");
                  OnServiceComponentFieldsIdChanged();
              }
            }
        }
        private string _ServiceComponentFieldsId;
        partial void OnGetServiceComponentFieldsId(ref string value);
        partial void OnServiceComponentFieldsIdChanging(ref string value);
        partial void OnServiceComponentFieldsIdChanged();
    
        /// <summary>
        /// There are no comments for CorreoEnviado in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> CorreoEnviado
        {
            get
            {
                global::System.Nullable<int> value = _CorreoEnviado;
                OnGetCorreoEnviado(ref value);
                return value;
            }
            set
            {
                if (_CorreoEnviado != value)
                {
                  OnCorreoEnviadoChanging(ref value);
                  ReportPropertyChanging("CorreoEnviado");
                  _CorreoEnviado = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("CorreoEnviado");
                  OnCorreoEnviadoChanged();
              }
            }
        }
        private global::System.Nullable<int> _CorreoEnviado;
        partial void OnGetCorreoEnviado(ref global::System.Nullable<int> value);
        partial void OnCorreoEnviadoChanging(ref global::System.Nullable<int> value);
        partial void OnCorreoEnviadoChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_servicios_vs_resultadosResult1 in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_servicios_vs_resultadosResult1")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_servicios_vs_resultadosResult1 : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_servicios_vs_resultadosResult1 object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        public static regcovid_servicios_vs_resultadosResult1 Createregcovid_servicios_vs_resultadosResult1(string v_ServiceId)
        {
            regcovid_servicios_vs_resultadosResult1 regcovid_servicios_vs_resultadosResult1 = new regcovid_servicios_vs_resultadosResult1();
            regcovid_servicios_vs_resultadosResult1.v_ServiceId = v_ServiceId;
            return regcovid_servicios_vs_resultadosResult1;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.regcovid_sp_getempresasprincipalesResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="regcovid_sp_getempresasprincipalesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class regcovid_sp_getempresasprincipalesResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new regcovid_sp_getempresasprincipalesResult object.
        /// </summary>
        /// <param name="id">Initial value of id.</param>
        public static regcovid_sp_getempresasprincipalesResult Createregcovid_sp_getempresasprincipalesResult(string id)
        {
            regcovid_sp_getempresasprincipalesResult regcovid_sp_getempresasprincipalesResult = new regcovid_sp_getempresasprincipalesResult();
            regcovid_sp_getempresasprincipalesResult.id = id;
            return regcovid_sp_getempresasprincipalesResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string id
        {
            get
            {
                string value = _id;
                OnGetid(ref value);
                return value;
            }
            set
            {
                if (_id != value)
                {
                  OnidChanging(ref value);
                  ReportPropertyChanging("id");
                  _id = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("id");
                  OnidChanged();
              }
            }
        }
        private string _id;
        partial void OnGetid(ref string value);
        partial void OnidChanging(ref string value);
        partial void OnidChanged();
    
        /// <summary>
        /// There are no comments for nombre in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string nombre
        {
            get
            {
                string value = _nombre;
                OnGetnombre(ref value);
                return value;
            }
            set
            {
                if (_nombre != value)
                {
                  OnnombreChanging(ref value);
                  ReportPropertyChanging("nombre");
                  _nombre = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("nombre");
                  OnnombreChanged();
              }
            }
        }
        private string _nombre;
        partial void OnGetnombre(ref string value);
        partial void OnnombreChanging(ref string value);
        partial void OnnombreChanged();
    
        /// <summary>
        /// There are no comments for nombreAbrev in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string nombreAbrev
        {
            get
            {
                string value = _nombreAbrev;
                OnGetnombreAbrev(ref value);
                return value;
            }
            set
            {
                if (_nombreAbrev != value)
                {
                  OnnombreAbrevChanging(ref value);
                  ReportPropertyChanging("nombreAbrev");
                  _nombreAbrev = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("nombreAbrev");
                  OnnombreAbrevChanged();
              }
            }
        }
        private string _nombreAbrev;
        partial void OnGetnombreAbrev(ref string value);
        partial void OnnombreAbrevChanging(ref string value);
        partial void OnnombreAbrevChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.salus_comprobarresultadoslaboratorioResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="salus_comprobarresultadoslaboratorioResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class salus_comprobarresultadoslaboratorioResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new salus_comprobarresultadoslaboratorioResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        /// <param name="serviceComponentFieldsId">Initial value of ServiceComponentFieldsId.</param>
        public static salus_comprobarresultadoslaboratorioResult Createsalus_comprobarresultadoslaboratorioResult(string v_ServiceId, string serviceComponentFieldsId)
        {
            salus_comprobarresultadoslaboratorioResult salus_comprobarresultadoslaboratorioResult = new salus_comprobarresultadoslaboratorioResult();
            salus_comprobarresultadoslaboratorioResult.v_ServiceId = v_ServiceId;
            salus_comprobarresultadoslaboratorioResult.ServiceComponentFieldsId = serviceComponentFieldsId;
            return salus_comprobarresultadoslaboratorioResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for TecnicoCovid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TecnicoCovid
        {
            get
            {
                string value = _TecnicoCovid;
                OnGetTecnicoCovid(ref value);
                return value;
            }
            set
            {
                if (_TecnicoCovid != value)
                {
                  OnTecnicoCovidChanging(ref value);
                  ReportPropertyChanging("TecnicoCovid");
                  _TecnicoCovid = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TecnicoCovid");
                  OnTecnicoCovidChanged();
              }
            }
        }
        private string _TecnicoCovid;
        partial void OnGetTecnicoCovid(ref string value);
        partial void OnTecnicoCovidChanging(ref string value);
        partial void OnTecnicoCovidChanged();
    
        /// <summary>
        /// There are no comments for ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentFieldId
        {
            get
            {
                string value = _ComponentFieldId;
                OnGetComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_ComponentFieldId != value)
                {
                  OnComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("ComponentFieldId");
                  _ComponentFieldId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentFieldId");
                  OnComponentFieldIdChanged();
              }
            }
        }
        private string _ComponentFieldId;
        partial void OnGetComponentFieldId(ref string value);
        partial void OnComponentFieldIdChanging(ref string value);
        partial void OnComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for ServiceComponentFieldsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ServiceComponentFieldsId
        {
            get
            {
                string value = _ServiceComponentFieldsId;
                OnGetServiceComponentFieldsId(ref value);
                return value;
            }
            set
            {
                if (_ServiceComponentFieldsId != value)
                {
                  OnServiceComponentFieldsIdChanging(ref value);
                  ReportPropertyChanging("ServiceComponentFieldsId");
                  _ServiceComponentFieldsId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ServiceComponentFieldsId");
                  OnServiceComponentFieldsIdChanged();
              }
            }
        }
        private string _ServiceComponentFieldsId;
        partial void OnGetServiceComponentFieldsId(ref string value);
        partial void OnServiceComponentFieldsIdChanging(ref string value);
        partial void OnServiceComponentFieldsIdChanged();
    
        /// <summary>
        /// There are no comments for Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Value1
        {
            get
            {
                string value = _Value1;
                OnGetValue1(ref value);
                return value;
            }
            set
            {
                if (_Value1 != value)
                {
                  OnValue1Changing(ref value);
                  ReportPropertyChanging("Value1");
                  _Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Value1");
                  OnValue1Changed();
              }
            }
        }
        private string _Value1;
        partial void OnGetValue1(ref string value);
        partial void OnValue1Changing(ref string value);
        partial void OnValue1Changed();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.salus_comprobarresultadoslaboratorioResult1 in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="salus_comprobarresultadoslaboratorioResult1")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class salus_comprobarresultadoslaboratorioResult1 : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new salus_comprobarresultadoslaboratorioResult1 object.
        /// </summary>
        public static salus_comprobarresultadoslaboratorioResult1 Createsalus_comprobarresultadoslaboratorioResult1()
        {
            salus_comprobarresultadoslaboratorioResult1 salus_comprobarresultadoslaboratorioResult1 = new salus_comprobarresultadoslaboratorioResult1();
            return salus_comprobarresultadoslaboratorioResult1;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for column0 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> column0
        {
            get
            {
                global::System.Nullable<int> value = _column0;
                OnGetcolumn0(ref value);
                return value;
            }
            set
            {
                if (_column0 != value)
                {
                  Oncolumn0Changing(ref value);
                  ReportPropertyChanging("column0");
                  _column0 = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("column0");
                  Oncolumn0Changed();
              }
            }
        }
        private global::System.Nullable<int> _column0;
        partial void OnGetcolumn0(ref global::System.Nullable<int> value);
        partial void Oncolumn0Changing(ref global::System.Nullable<int> value);
        partial void Oncolumn0Changed();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_authorization_regcovidResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_authorization_regcovidResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_authorization_regcovidResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_authorization_regcovidResult object.
        /// </summary>
        /// <param name="usuarioRegcovidId">Initial value of UsuarioRegcovidId.</param>
        public static usp_authorization_regcovidResult Createusp_authorization_regcovidResult(int usuarioRegcovidId)
        {
            usp_authorization_regcovidResult usp_authorization_regcovidResult = new usp_authorization_regcovidResult();
            usp_authorization_regcovidResult.UsuarioRegcovidId = usuarioRegcovidId;
            return usp_authorization_regcovidResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for UsuarioRegcovidId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int UsuarioRegcovidId
        {
            get
            {
                int value = _UsuarioRegcovidId;
                OnGetUsuarioRegcovidId(ref value);
                return value;
            }
            set
            {
                if (_UsuarioRegcovidId != value)
                {
                  OnUsuarioRegcovidIdChanging(ref value);
                  ReportPropertyChanging("UsuarioRegcovidId");
                  _UsuarioRegcovidId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("UsuarioRegcovidId");
                  OnUsuarioRegcovidIdChanged();
              }
            }
        }
        private int _UsuarioRegcovidId;
        partial void OnGetUsuarioRegcovidId(ref int value);
        partial void OnUsuarioRegcovidIdChanging(ref int value);
        partial void OnUsuarioRegcovidIdChanged();
    
        /// <summary>
        /// There are no comments for OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OrganizationId
        {
            get
            {
                string value = _OrganizationId;
                OnGetOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_OrganizationId != value)
                {
                  OnOrganizationIdChanging(ref value);
                  ReportPropertyChanging("OrganizationId");
                  _OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrganizationId");
                  OnOrganizationIdChanged();
              }
            }
        }
        private string _OrganizationId;
        partial void OnGetOrganizationId(ref string value);
        partial void OnOrganizationIdChanging(ref string value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for ProtocolId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ProtocolId
        {
            get
            {
                string value = _ProtocolId;
                OnGetProtocolId(ref value);
                return value;
            }
            set
            {
                if (_ProtocolId != value)
                {
                  OnProtocolIdChanging(ref value);
                  ReportPropertyChanging("ProtocolId");
                  _ProtocolId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProtocolId");
                  OnProtocolIdChanged();
              }
            }
        }
        private string _ProtocolId;
        partial void OnGetProtocolId(ref string value);
        partial void OnProtocolIdChanging(ref string value);
        partial void OnProtocolIdChanged();
    
        /// <summary>
        /// There are no comments for NodeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> NodeId
        {
            get
            {
                global::System.Nullable<int> value = _NodeId;
                OnGetNodeId(ref value);
                return value;
            }
            set
            {
                if (_NodeId != value)
                {
                  OnNodeIdChanging(ref value);
                  ReportPropertyChanging("NodeId");
                  _NodeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("NodeId");
                  OnNodeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _NodeId;
        partial void OnGetNodeId(ref global::System.Nullable<int> value);
        partial void OnNodeIdChanging(ref global::System.Nullable<int> value);
        partial void OnNodeIdChanged();
    
        /// <summary>
        /// There are no comments for NodeName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string NodeName
        {
            get
            {
                string value = _NodeName;
                OnGetNodeName(ref value);
                return value;
            }
            set
            {
                if (_NodeName != value)
                {
                  OnNodeNameChanging(ref value);
                  ReportPropertyChanging("NodeName");
                  _NodeName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NodeName");
                  OnNodeNameChanged();
              }
            }
        }
        private string _NodeName;
        partial void OnGetNodeName(ref string value);
        partial void OnNodeNameChanging(ref string value);
        partial void OnNodeNameChanged();
    
        /// <summary>
        /// There are no comments for UserName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string UserName
        {
            get
            {
                string value = _UserName;
                OnGetUserName(ref value);
                return value;
            }
            set
            {
                if (_UserName != value)
                {
                  OnUserNameChanging(ref value);
                  ReportPropertyChanging("UserName");
                  _UserName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("UserName");
                  OnUserNameChanged();
              }
            }
        }
        private string _UserName;
        partial void OnGetUserName(ref string value);
        partial void OnUserNameChanging(ref string value);
        partial void OnUserNameChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_get_protocolcomponentbyprotocolidResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_get_protocolcomponentbyprotocolidResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_protocolcomponentbyprotocolidResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_get_protocolcomponentbyprotocolidResult object.
        /// </summary>
        public static usp_get_protocolcomponentbyprotocolidResult Createusp_get_protocolcomponentbyprotocolidResult()
        {
            usp_get_protocolcomponentbyprotocolidResult usp_get_protocolcomponentbyprotocolidResult = new usp_get_protocolcomponentbyprotocolidResult();
            return usp_get_protocolcomponentbyprotocolidResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentId
        {
            get
            {
                string value = _ComponentId;
                OnGetComponentId(ref value);
                return value;
            }
            set
            {
                if (_ComponentId != value)
                {
                  OnComponentIdChanging(ref value);
                  ReportPropertyChanging("ComponentId");
                  _ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentId");
                  OnComponentIdChanged();
              }
            }
        }
        private string _ComponentId;
        partial void OnGetComponentId(ref string value);
        partial void OnComponentIdChanging(ref string value);
        partial void OnComponentIdChanged();
    
        /// <summary>
        /// There are no comments for Price in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<float> Price
        {
            get
            {
                global::System.Nullable<float> value = _Price;
                OnGetPrice(ref value);
                return value;
            }
            set
            {
                if (_Price != value)
                {
                  OnPriceChanging(ref value);
                  ReportPropertyChanging("Price");
                  _Price = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Price");
                  OnPriceChanged();
              }
            }
        }
        private global::System.Nullable<float> _Price;
        partial void OnGetPrice(ref global::System.Nullable<float> value);
        partial void OnPriceChanging(ref global::System.Nullable<float> value);
        partial void OnPriceChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_get_secuentialResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_get_secuentialResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_secuentialResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_get_secuentialResult object.
        /// </summary>
        public static usp_get_secuentialResult Createusp_get_secuentialResult()
        {
            usp_get_secuentialResult usp_get_secuentialResult = new usp_get_secuentialResult();
            return usp_get_secuentialResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for NewId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string NewId
        {
            get
            {
                string value = _NewId;
                OnGetNewId(ref value);
                return value;
            }
            set
            {
                if (_NewId != value)
                {
                  OnNewIdChanging(ref value);
                  ReportPropertyChanging("NewId");
                  _NewId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NewId");
                  OnNewIdChanged();
              }
            }
        }
        private string _NewId;
        partial void OnGetNewId(ref string value);
        partial void OnNewIdChanging(ref string value);
        partial void OnNewIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_get_servicecomponentfieldvaluesbyservicecomponentidResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_get_servicecomponentfieldvaluesbyservicecomponentidResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_servicecomponentfieldvaluesbyservicecomponentidResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_get_servicecomponentfieldvaluesbyservicecomponentidResult object.
        /// </summary>
        /// <param name="serviceComponentFieldValuesId">Initial value of ServiceComponentFieldValuesId.</param>
        public static usp_get_servicecomponentfieldvaluesbyservicecomponentidResult Createusp_get_servicecomponentfieldvaluesbyservicecomponentidResult(string serviceComponentFieldValuesId)
        {
            usp_get_servicecomponentfieldvaluesbyservicecomponentidResult usp_get_servicecomponentfieldvaluesbyservicecomponentidResult = new usp_get_servicecomponentfieldvaluesbyservicecomponentidResult();
            usp_get_servicecomponentfieldvaluesbyservicecomponentidResult.ServiceComponentFieldValuesId = serviceComponentFieldValuesId;
            return usp_get_servicecomponentfieldvaluesbyservicecomponentidResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ServiceComponentFieldValuesId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ServiceComponentFieldValuesId
        {
            get
            {
                string value = _ServiceComponentFieldValuesId;
                OnGetServiceComponentFieldValuesId(ref value);
                return value;
            }
            set
            {
                if (_ServiceComponentFieldValuesId != value)
                {
                  OnServiceComponentFieldValuesIdChanging(ref value);
                  ReportPropertyChanging("ServiceComponentFieldValuesId");
                  _ServiceComponentFieldValuesId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ServiceComponentFieldValuesId");
                  OnServiceComponentFieldValuesIdChanged();
              }
            }
        }
        private string _ServiceComponentFieldValuesId;
        partial void OnGetServiceComponentFieldValuesId(ref string value);
        partial void OnServiceComponentFieldValuesIdChanging(ref string value);
        partial void OnServiceComponentFieldValuesIdChanged();
    
        /// <summary>
        /// There are no comments for ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentFieldId
        {
            get
            {
                string value = _ComponentFieldId;
                OnGetComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_ComponentFieldId != value)
                {
                  OnComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("ComponentFieldId");
                  _ComponentFieldId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentFieldId");
                  OnComponentFieldIdChanged();
              }
            }
        }
        private string _ComponentFieldId;
        partial void OnGetComponentFieldId(ref string value);
        partial void OnComponentFieldIdChanging(ref string value);
        partial void OnComponentFieldIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_get_valorescomponenteResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_get_valorescomponenteResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_get_valorescomponenteResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_get_valorescomponenteResult object.
        /// </summary>
        /// <param name="serviceComponentFieldsId">Initial value of ServiceComponentFieldsId.</param>
        public static usp_get_valorescomponenteResult Createusp_get_valorescomponenteResult(string serviceComponentFieldsId)
        {
            usp_get_valorescomponenteResult usp_get_valorescomponenteResult = new usp_get_valorescomponenteResult();
            usp_get_valorescomponenteResult.ServiceComponentFieldsId = serviceComponentFieldsId;
            return usp_get_valorescomponenteResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for ComponentFieldId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentFieldId
        {
            get
            {
                string value = _ComponentFieldId;
                OnGetComponentFieldId(ref value);
                return value;
            }
            set
            {
                if (_ComponentFieldId != value)
                {
                  OnComponentFieldIdChanging(ref value);
                  ReportPropertyChanging("ComponentFieldId");
                  _ComponentFieldId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentFieldId");
                  OnComponentFieldIdChanged();
              }
            }
        }
        private string _ComponentFieldId;
        partial void OnGetComponentFieldId(ref string value);
        partial void OnComponentFieldIdChanging(ref string value);
        partial void OnComponentFieldIdChanged();
    
        /// <summary>
        /// There are no comments for v_TextLabel in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_TextLabel
        {
            get
            {
                string value = _v_TextLabel;
                OnGetv_TextLabel(ref value);
                return value;
            }
            set
            {
                if (_v_TextLabel != value)
                {
                  Onv_TextLabelChanging(ref value);
                  ReportPropertyChanging("v_TextLabel");
                  _v_TextLabel = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_TextLabel");
                  Onv_TextLabelChanged();
              }
            }
        }
        private string _v_TextLabel;
        partial void OnGetv_TextLabel(ref string value);
        partial void Onv_TextLabelChanging(ref string value);
        partial void Onv_TextLabelChanged();
    
        /// <summary>
        /// There are no comments for ServiceComponentFieldsId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ServiceComponentFieldsId
        {
            get
            {
                string value = _ServiceComponentFieldsId;
                OnGetServiceComponentFieldsId(ref value);
                return value;
            }
            set
            {
                if (_ServiceComponentFieldsId != value)
                {
                  OnServiceComponentFieldsIdChanging(ref value);
                  ReportPropertyChanging("ServiceComponentFieldsId");
                  _ServiceComponentFieldsId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ServiceComponentFieldsId");
                  OnServiceComponentFieldsIdChanged();
              }
            }
        }
        private string _ServiceComponentFieldsId;
        partial void OnGetServiceComponentFieldsId(ref string value);
        partial void OnServiceComponentFieldsIdChanging(ref string value);
        partial void OnServiceComponentFieldsIdChanged();
    
        /// <summary>
        /// There are no comments for Value1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Value1
        {
            get
            {
                string value = _Value1;
                OnGetValue1(ref value);
                return value;
            }
            set
            {
                if (_Value1 != value)
                {
                  OnValue1Changing(ref value);
                  ReportPropertyChanging("Value1");
                  _Value1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Value1");
                  OnValue1Changed();
              }
            }
        }
        private string _Value1;
        partial void OnGetValue1(ref string value);
        partial void OnValue1Changing(ref string value);
        partial void OnValue1Changed();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_getpersonbydocumentResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_getpersonbydocumentResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_getpersonbydocumentResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_getpersonbydocumentResult object.
        /// </summary>
        /// <param name="personId">Initial value of PersonId.</param>
        public static usp_getpersonbydocumentResult Createusp_getpersonbydocumentResult(string personId)
        {
            usp_getpersonbydocumentResult usp_getpersonbydocumentResult = new usp_getpersonbydocumentResult();
            usp_getpersonbydocumentResult.PersonId = personId;
            return usp_getpersonbydocumentResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string PersonId
        {
            get
            {
                string value = _PersonId;
                OnGetPersonId(ref value);
                return value;
            }
            set
            {
                if (_PersonId != value)
                {
                  OnPersonIdChanging(ref value);
                  ReportPropertyChanging("PersonId");
                  _PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PersonId");
                  OnPersonIdChanged();
              }
            }
        }
        private string _PersonId;
        partial void OnGetPersonId(ref string value);
        partial void OnPersonIdChanging(ref string value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// There are no comments for FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                string value = _FirstName;
                OnGetFirstName(ref value);
                return value;
            }
            set
            {
                if (_FirstName != value)
                {
                  OnFirstNameChanging(ref value);
                  ReportPropertyChanging("FirstName");
                  _FirstName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FirstName");
                  OnFirstNameChanged();
              }
            }
        }
        private string _FirstName;
        partial void OnGetFirstName(ref string value);
        partial void OnFirstNameChanging(ref string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// There are no comments for FirstLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string FirstLastName
        {
            get
            {
                string value = _FirstLastName;
                OnGetFirstLastName(ref value);
                return value;
            }
            set
            {
                if (_FirstLastName != value)
                {
                  OnFirstLastNameChanging(ref value);
                  ReportPropertyChanging("FirstLastName");
                  _FirstLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("FirstLastName");
                  OnFirstLastNameChanged();
              }
            }
        }
        private string _FirstLastName;
        partial void OnGetFirstLastName(ref string value);
        partial void OnFirstLastNameChanging(ref string value);
        partial void OnFirstLastNameChanged();
    
        /// <summary>
        /// There are no comments for SecondLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string SecondLastName
        {
            get
            {
                string value = _SecondLastName;
                OnGetSecondLastName(ref value);
                return value;
            }
            set
            {
                if (_SecondLastName != value)
                {
                  OnSecondLastNameChanging(ref value);
                  ReportPropertyChanging("SecondLastName");
                  _SecondLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("SecondLastName");
                  OnSecondLastNameChanged();
              }
            }
        }
        private string _SecondLastName;
        partial void OnGetSecondLastName(ref string value);
        partial void OnSecondLastNameChanging(ref string value);
        partial void OnSecondLastNameChanged();
    
        /// <summary>
        /// There are no comments for DocTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> DocTypeId
        {
            get
            {
                global::System.Nullable<int> value = _DocTypeId;
                OnGetDocTypeId(ref value);
                return value;
            }
            set
            {
                if (_DocTypeId != value)
                {
                  OnDocTypeIdChanging(ref value);
                  ReportPropertyChanging("DocTypeId");
                  _DocTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("DocTypeId");
                  OnDocTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _DocTypeId;
        partial void OnGetDocTypeId(ref global::System.Nullable<int> value);
        partial void OnDocTypeIdChanging(ref global::System.Nullable<int> value);
        partial void OnDocTypeIdChanged();
    
        /// <summary>
        /// There are no comments for DocNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string DocNumber
        {
            get
            {
                string value = _DocNumber;
                OnGetDocNumber(ref value);
                return value;
            }
            set
            {
                if (_DocNumber != value)
                {
                  OnDocNumberChanging(ref value);
                  ReportPropertyChanging("DocNumber");
                  _DocNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("DocNumber");
                  OnDocNumberChanged();
              }
            }
        }
        private string _DocNumber;
        partial void OnGetDocNumber(ref string value);
        partial void OnDocNumberChanging(ref string value);
        partial void OnDocNumberChanged();
    
        /// <summary>
        /// There are no comments for SexTypeId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> SexTypeId
        {
            get
            {
                global::System.Nullable<int> value = _SexTypeId;
                OnGetSexTypeId(ref value);
                return value;
            }
            set
            {
                if (_SexTypeId != value)
                {
                  OnSexTypeIdChanging(ref value);
                  ReportPropertyChanging("SexTypeId");
                  _SexTypeId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("SexTypeId");
                  OnSexTypeIdChanged();
              }
            }
        }
        private global::System.Nullable<int> _SexTypeId;
        partial void OnGetSexTypeId(ref global::System.Nullable<int> value);
        partial void OnSexTypeIdChanging(ref global::System.Nullable<int> value);
        partial void OnSexTypeIdChanged();
    
        /// <summary>
        /// There are no comments for Birthdate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> Birthdate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _Birthdate;
                OnGetBirthdate(ref value);
                return value;
            }
            set
            {
                if (_Birthdate != value)
                {
                  OnBirthdateChanging(ref value);
                  ReportPropertyChanging("Birthdate");
                  _Birthdate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Birthdate");
                  OnBirthdateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _Birthdate;
        partial void OnGetBirthdate(ref global::System.Nullable<System.DateTime> value);
        partial void OnBirthdateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnBirthdateChanged();
    
        /// <summary>
        /// There are no comments for Mail in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Mail
        {
            get
            {
                string value = _Mail;
                OnGetMail(ref value);
                return value;
            }
            set
            {
                if (_Mail != value)
                {
                  OnMailChanging(ref value);
                  ReportPropertyChanging("Mail");
                  _Mail = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Mail");
                  OnMailChanged();
              }
            }
        }
        private string _Mail;
        partial void OnGetMail(ref string value);
        partial void OnMailChanging(ref string value);
        partial void OnMailChanged();
    
        /// <summary>
        /// There are no comments for TelephoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TelephoneNumber
        {
            get
            {
                string value = _TelephoneNumber;
                OnGetTelephoneNumber(ref value);
                return value;
            }
            set
            {
                if (_TelephoneNumber != value)
                {
                  OnTelephoneNumberChanging(ref value);
                  ReportPropertyChanging("TelephoneNumber");
                  _TelephoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TelephoneNumber");
                  OnTelephoneNumberChanged();
              }
            }
        }
        private string _TelephoneNumber;
        partial void OnGetTelephoneNumber(ref string value);
        partial void OnTelephoneNumberChanging(ref string value);
        partial void OnTelephoneNumberChanged();
    
        /// <summary>
        /// There are no comments for CurrentOccupation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string CurrentOccupation
        {
            get
            {
                string value = _CurrentOccupation;
                OnGetCurrentOccupation(ref value);
                return value;
            }
            set
            {
                if (_CurrentOccupation != value)
                {
                  OnCurrentOccupationChanging(ref value);
                  ReportPropertyChanging("CurrentOccupation");
                  _CurrentOccupation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CurrentOccupation");
                  OnCurrentOccupationChanged();
              }
            }
        }
        private string _CurrentOccupation;
        partial void OnGetCurrentOccupation(ref string value);
        partial void OnCurrentOccupationChanging(ref string value);
        partial void OnCurrentOccupationChanged();
    
        /// <summary>
        /// There are no comments for AdressLocation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string AdressLocation
        {
            get
            {
                string value = _AdressLocation;
                OnGetAdressLocation(ref value);
                return value;
            }
            set
            {
                if (_AdressLocation != value)
                {
                  OnAdressLocationChanging(ref value);
                  ReportPropertyChanging("AdressLocation");
                  _AdressLocation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("AdressLocation");
                  OnAdressLocationChanged();
              }
            }
        }
        private string _AdressLocation;
        partial void OnGetAdressLocation(ref string value);
        partial void OnAdressLocationChanging(ref string value);
        partial void OnAdressLocationChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_getregisterworkesResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_getregisterworkesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_getregisterworkesResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_getregisterworkesResult object.
        /// </summary>
        /// <param name="serviceId">Initial value of ServiceId.</param>
        /// <param name="personId">Initial value of PersonId.</param>
        public static usp_getregisterworkesResult Createusp_getregisterworkesResult(string serviceId, string personId)
        {
            usp_getregisterworkesResult usp_getregisterworkesResult = new usp_getregisterworkesResult();
            usp_getregisterworkesResult.ServiceId = serviceId;
            usp_getregisterworkesResult.PersonId = personId;
            return usp_getregisterworkesResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for d_ServiceDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ServiceDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ServiceDate;
                OnGetd_ServiceDate(ref value);
                return value;
            }
            set
            {
                if (_d_ServiceDate != value)
                {
                  Ond_ServiceDateChanging(ref value);
                  ReportPropertyChanging("d_ServiceDate");
                  _d_ServiceDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ServiceDate");
                  Ond_ServiceDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ServiceDate;
        partial void OnGetd_ServiceDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanged();
    
        /// <summary>
        /// There are no comments for WorkerName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string WorkerName
        {
            get
            {
                string value = _WorkerName;
                OnGetWorkerName(ref value);
                return value;
            }
            set
            {
                if (_WorkerName != value)
                {
                  OnWorkerNameChanging(ref value);
                  ReportPropertyChanging("WorkerName");
                  _WorkerName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WorkerName");
                  OnWorkerNameChanged();
              }
            }
        }
        private string _WorkerName;
        partial void OnGetWorkerName(ref string value);
        partial void OnWorkerNameChanging(ref string value);
        partial void OnWorkerNameChanged();
    
        /// <summary>
        /// There are no comments for ProtocolName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ProtocolName
        {
            get
            {
                string value = _ProtocolName;
                OnGetProtocolName(ref value);
                return value;
            }
            set
            {
                if (_ProtocolName != value)
                {
                  OnProtocolNameChanging(ref value);
                  ReportPropertyChanging("ProtocolName");
                  _ProtocolName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProtocolName");
                  OnProtocolNameChanged();
              }
            }
        }
        private string _ProtocolName;
        partial void OnGetProtocolName(ref string value);
        partial void OnProtocolNameChanging(ref string value);
        partial void OnProtocolNameChanged();
    
        /// <summary>
        /// There are no comments for OrganizationName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OrganizationName
        {
            get
            {
                string value = _OrganizationName;
                OnGetOrganizationName(ref value);
                return value;
            }
            set
            {
                if (_OrganizationName != value)
                {
                  OnOrganizationNameChanging(ref value);
                  ReportPropertyChanging("OrganizationName");
                  _OrganizationName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrganizationName");
                  OnOrganizationNameChanged();
              }
            }
        }
        private string _OrganizationName;
        partial void OnGetOrganizationName(ref string value);
        partial void OnOrganizationNameChanging(ref string value);
        partial void OnOrganizationNameChanged();
    
        /// <summary>
        /// There are no comments for CurrentOccupation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string CurrentOccupation
        {
            get
            {
                string value = _CurrentOccupation;
                OnGetCurrentOccupation(ref value);
                return value;
            }
            set
            {
                if (_CurrentOccupation != value)
                {
                  OnCurrentOccupationChanging(ref value);
                  ReportPropertyChanging("CurrentOccupation");
                  _CurrentOccupation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CurrentOccupation");
                  OnCurrentOccupationChanged();
              }
            }
        }
        private string _CurrentOccupation;
        partial void OnGetCurrentOccupation(ref string value);
        partial void OnCurrentOccupationChanging(ref string value);
        partial void OnCurrentOccupationChanged();
    
        /// <summary>
        /// There are no comments for ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ServiceId
        {
            get
            {
                string value = _ServiceId;
                OnGetServiceId(ref value);
                return value;
            }
            set
            {
                if (_ServiceId != value)
                {
                  OnServiceIdChanging(ref value);
                  ReportPropertyChanging("ServiceId");
                  _ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ServiceId");
                  OnServiceIdChanged();
              }
            }
        }
        private string _ServiceId;
        partial void OnGetServiceId(ref string value);
        partial void OnServiceIdChanging(ref string value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// There are no comments for PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string PersonId
        {
            get
            {
                string value = _PersonId;
                OnGetPersonId(ref value);
                return value;
            }
            set
            {
                if (_PersonId != value)
                {
                  OnPersonIdChanging(ref value);
                  ReportPropertyChanging("PersonId");
                  _PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PersonId");
                  OnPersonIdChanged();
              }
            }
        }
        private string _PersonId;
        partial void OnGetPersonId(ref string value);
        partial void OnPersonIdChanging(ref string value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// There are no comments for ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentId
        {
            get
            {
                string value = _ComponentId;
                OnGetComponentId(ref value);
                return value;
            }
            set
            {
                if (_ComponentId != value)
                {
                  OnComponentIdChanging(ref value);
                  ReportPropertyChanging("ComponentId");
                  _ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentId");
                  OnComponentIdChanged();
              }
            }
        }
        private string _ComponentId;
        partial void OnGetComponentId(ref string value);
        partial void OnComponentIdChanging(ref string value);
        partial void OnComponentIdChanged();
    
        /// <summary>
        /// There are no comments for IIndex in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> IIndex
        {
            get
            {
                global::System.Nullable<int> value = _IIndex;
                OnGetIIndex(ref value);
                return value;
            }
            set
            {
                if (_IIndex != value)
                {
                  OnIIndexChanging(ref value);
                  ReportPropertyChanging("IIndex");
                  _IIndex = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IIndex");
                  OnIIndexChanged();
              }
            }
        }
        private global::System.Nullable<int> _IIndex;
        partial void OnGetIIndex(ref global::System.Nullable<int> value);
        partial void OnIIndexChanging(ref global::System.Nullable<int> value);
        partial void OnIIndexChanged();
    
        /// <summary>
        /// There are no comments for OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OrganizationId
        {
            get
            {
                string value = _OrganizationId;
                OnGetOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_OrganizationId != value)
                {
                  OnOrganizationIdChanging(ref value);
                  ReportPropertyChanging("OrganizationId");
                  _OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrganizationId");
                  OnOrganizationIdChanged();
              }
            }
        }
        private string _OrganizationId;
        partial void OnGetOrganizationId(ref string value);
        partial void OnOrganizationIdChanging(ref string value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for TelephoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TelephoneNumber
        {
            get
            {
                string value = _TelephoneNumber;
                OnGetTelephoneNumber(ref value);
                return value;
            }
            set
            {
                if (_TelephoneNumber != value)
                {
                  OnTelephoneNumberChanging(ref value);
                  ReportPropertyChanging("TelephoneNumber");
                  _TelephoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TelephoneNumber");
                  OnTelephoneNumberChanged();
              }
            }
        }
        private string _TelephoneNumber;
        partial void OnGetTelephoneNumber(ref string value);
        partial void OnTelephoneNumberChanging(ref string value);
        partial void OnTelephoneNumberChanged();
    
        /// <summary>
        /// There are no comments for ServiceComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ServiceComponentId
        {
            get
            {
                string value = _ServiceComponentId;
                OnGetServiceComponentId(ref value);
                return value;
            }
            set
            {
                if (_ServiceComponentId != value)
                {
                  OnServiceComponentIdChanging(ref value);
                  ReportPropertyChanging("ServiceComponentId");
                  _ServiceComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ServiceComponentId");
                  OnServiceComponentIdChanged();
              }
            }
        }
        private string _ServiceComponentId;
        partial void OnGetServiceComponentId(ref string value);
        partial void OnServiceComponentIdChanging(ref string value);
        partial void OnServiceComponentIdChanged();
    
        /// <summary>
        /// There are no comments for EncuestaCulminada in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> EncuestaCulminada
        {
            get
            {
                global::System.Nullable<int> value = _EncuestaCulminada;
                OnGetEncuestaCulminada(ref value);
                return value;
            }
            set
            {
                if (_EncuestaCulminada != value)
                {
                  OnEncuestaCulminadaChanging(ref value);
                  ReportPropertyChanging("EncuestaCulminada");
                  _EncuestaCulminada = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EncuestaCulminada");
                  OnEncuestaCulminadaChanged();
              }
            }
        }
        private global::System.Nullable<int> _EncuestaCulminada;
        partial void OnGetEncuestaCulminada(ref global::System.Nullable<int> value);
        partial void OnEncuestaCulminadaChanging(ref global::System.Nullable<int> value);
        partial void OnEncuestaCulminadaChanged();
    
        /// <summary>
        /// There are no comments for LaboratorioCulminada in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> LaboratorioCulminada
        {
            get
            {
                global::System.Nullable<int> value = _LaboratorioCulminada;
                OnGetLaboratorioCulminada(ref value);
                return value;
            }
            set
            {
                if (_LaboratorioCulminada != value)
                {
                  OnLaboratorioCulminadaChanging(ref value);
                  ReportPropertyChanging("LaboratorioCulminada");
                  _LaboratorioCulminada = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LaboratorioCulminada");
                  OnLaboratorioCulminadaChanged();
              }
            }
        }
        private global::System.Nullable<int> _LaboratorioCulminada;
        partial void OnGetLaboratorioCulminada(ref global::System.Nullable<int> value);
        partial void OnLaboratorioCulminadaChanging(ref global::System.Nullable<int> value);
        partial void OnLaboratorioCulminadaChanged();
    
        /// <summary>
        /// There are no comments for ClinicaExternad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ClinicaExternad
        {
            get
            {
                global::System.Nullable<int> value = _ClinicaExternad;
                OnGetClinicaExternad(ref value);
                return value;
            }
            set
            {
                if (_ClinicaExternad != value)
                {
                  OnClinicaExternadChanging(ref value);
                  ReportPropertyChanging("ClinicaExternad");
                  _ClinicaExternad = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClinicaExternad");
                  OnClinicaExternadChanged();
              }
            }
        }
        private global::System.Nullable<int> _ClinicaExternad;
        partial void OnGetClinicaExternad(ref global::System.Nullable<int> value);
        partial void OnClinicaExternadChanging(ref global::System.Nullable<int> value);
        partial void OnClinicaExternadChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_notificacion_vigcovidResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_notificacion_vigcovidResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_notificacion_vigcovidResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_notificacion_vigcovidResult object.
        /// </summary>
        /// <param name="id">Initial value of Id.</param>
        /// <param name="trabajador">Initial value of Trabajador.</param>
        /// <param name="fechaIngreso">Initial value of FechaIngreso.</param>
        /// <param name="dni">Initial value of Dni.</param>
        /// <param name="puestoTrabajo">Initial value of PuestoTrabajo.</param>
        /// <param name="emailTrabajador">Initial value of EmailTrabajador.</param>
        public static usp_notificacion_vigcovidResult Createusp_notificacion_vigcovidResult(int id, string trabajador, global::System.DateTime fechaIngreso, string dni, string puestoTrabajo, string emailTrabajador)
        {
            usp_notificacion_vigcovidResult usp_notificacion_vigcovidResult = new usp_notificacion_vigcovidResult();
            usp_notificacion_vigcovidResult.Id = id;
            usp_notificacion_vigcovidResult.Trabajador = trabajador;
            usp_notificacion_vigcovidResult.FechaIngreso = fechaIngreso;
            usp_notificacion_vigcovidResult.Dni = dni;
            usp_notificacion_vigcovidResult.PuestoTrabajo = puestoTrabajo;
            usp_notificacion_vigcovidResult.EmailTrabajador = emailTrabajador;
            return usp_notificacion_vigcovidResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int Id
        {
            get
            {
                int value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private int _Id;
        partial void OnGetId(ref int value);
        partial void OnIdChanging(ref int value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for Trabajador in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Trabajador
        {
            get
            {
                string value = _Trabajador;
                OnGetTrabajador(ref value);
                return value;
            }
            set
            {
                if (_Trabajador != value)
                {
                  OnTrabajadorChanging(ref value);
                  ReportPropertyChanging("Trabajador");
                  _Trabajador = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Trabajador");
                  OnTrabajadorChanged();
              }
            }
        }
        private string _Trabajador;
        partial void OnGetTrabajador(ref string value);
        partial void OnTrabajadorChanging(ref string value);
        partial void OnTrabajadorChanged();
    
        /// <summary>
        /// There are no comments for FechaIngreso in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FechaIngreso
        {
            get
            {
                global::System.DateTime value = _FechaIngreso;
                OnGetFechaIngreso(ref value);
                return value;
            }
            set
            {
                if (_FechaIngreso != value)
                {
                  OnFechaIngresoChanging(ref value);
                  ReportPropertyChanging("FechaIngreso");
                  _FechaIngreso = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("FechaIngreso");
                  OnFechaIngresoChanged();
              }
            }
        }
        private global::System.DateTime _FechaIngreso;
        partial void OnGetFechaIngreso(ref global::System.DateTime value);
        partial void OnFechaIngresoChanging(ref global::System.DateTime value);
        partial void OnFechaIngresoChanged();
    
        /// <summary>
        /// There are no comments for Dni in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Dni
        {
            get
            {
                string value = _Dni;
                OnGetDni(ref value);
                return value;
            }
            set
            {
                if (_Dni != value)
                {
                  OnDniChanging(ref value);
                  ReportPropertyChanging("Dni");
                  _Dni = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Dni");
                  OnDniChanged();
              }
            }
        }
        private string _Dni;
        partial void OnGetDni(ref string value);
        partial void OnDniChanging(ref string value);
        partial void OnDniChanged();
    
        /// <summary>
        /// There are no comments for Edad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Edad
        {
            get
            {
                global::System.Nullable<int> value = _Edad;
                OnGetEdad(ref value);
                return value;
            }
            set
            {
                if (_Edad != value)
                {
                  OnEdadChanging(ref value);
                  ReportPropertyChanging("Edad");
                  _Edad = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Edad");
                  OnEdadChanged();
              }
            }
        }
        private global::System.Nullable<int> _Edad;
        partial void OnGetEdad(ref global::System.Nullable<int> value);
        partial void OnEdadChanging(ref global::System.Nullable<int> value);
        partial void OnEdadChanged();
    
        /// <summary>
        /// There are no comments for Empleadora in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Empleadora
        {
            get
            {
                string value = _Empleadora;
                OnGetEmpleadora(ref value);
                return value;
            }
            set
            {
                if (_Empleadora != value)
                {
                  OnEmpleadoraChanging(ref value);
                  ReportPropertyChanging("Empleadora");
                  _Empleadora = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Empleadora");
                  OnEmpleadoraChanged();
              }
            }
        }
        private string _Empleadora;
        partial void OnGetEmpleadora(ref string value);
        partial void OnEmpleadoraChanging(ref string value);
        partial void OnEmpleadoraChanged();
    
        /// <summary>
        /// There are no comments for PuestoTrabajo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string PuestoTrabajo
        {
            get
            {
                string value = _PuestoTrabajo;
                OnGetPuestoTrabajo(ref value);
                return value;
            }
            set
            {
                if (_PuestoTrabajo != value)
                {
                  OnPuestoTrabajoChanging(ref value);
                  ReportPropertyChanging("PuestoTrabajo");
                  _PuestoTrabajo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PuestoTrabajo");
                  OnPuestoTrabajoChanged();
              }
            }
        }
        private string _PuestoTrabajo;
        partial void OnGetPuestoTrabajo(ref string value);
        partial void OnPuestoTrabajoChanging(ref string value);
        partial void OnPuestoTrabajoChanged();
    
        /// <summary>
        /// There are no comments for EmailTrabajador in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string EmailTrabajador
        {
            get
            {
                string value = _EmailTrabajador;
                OnGetEmailTrabajador(ref value);
                return value;
            }
            set
            {
                if (_EmailTrabajador != value)
                {
                  OnEmailTrabajadorChanging(ref value);
                  ReportPropertyChanging("EmailTrabajador");
                  _EmailTrabajador = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EmailTrabajador");
                  OnEmailTrabajadorChanged();
              }
            }
        }
        private string _EmailTrabajador;
        partial void OnGetEmailTrabajador(ref string value);
        partial void OnEmailTrabajadorChanging(ref string value);
        partial void OnEmailTrabajadorChanged();
    
        /// <summary>
        /// There are no comments for EmailAnalista in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmailAnalista
        {
            get
            {
                string value = _EmailAnalista;
                OnGetEmailAnalista(ref value);
                return value;
            }
            set
            {
                if (_EmailAnalista != value)
                {
                  OnEmailAnalistaChanging(ref value);
                  ReportPropertyChanging("EmailAnalista");
                  _EmailAnalista = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmailAnalista");
                  OnEmailAnalistaChanged();
              }
            }
        }
        private string _EmailAnalista;
        partial void OnGetEmailAnalista(ref string value);
        partial void OnEmailAnalistaChanging(ref string value);
        partial void OnEmailAnalistaChanged();
    
        /// <summary>
        /// There are no comments for EmailBP in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmailBP
        {
            get
            {
                string value = _EmailBP;
                OnGetEmailBP(ref value);
                return value;
            }
            set
            {
                if (_EmailBP != value)
                {
                  OnEmailBPChanging(ref value);
                  ReportPropertyChanging("EmailBP");
                  _EmailBP = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmailBP");
                  OnEmailBPChanged();
              }
            }
        }
        private string _EmailBP;
        partial void OnGetEmailBP(ref string value);
        partial void OnEmailBPChanging(ref string value);
        partial void OnEmailBPChanged();
    
        /// <summary>
        /// There are no comments for EmailChampion in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmailChampion
        {
            get
            {
                string value = _EmailChampion;
                OnGetEmailChampion(ref value);
                return value;
            }
            set
            {
                if (_EmailChampion != value)
                {
                  OnEmailChampionChanging(ref value);
                  ReportPropertyChanging("EmailChampion");
                  _EmailChampion = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmailChampion");
                  OnEmailChampionChanged();
              }
            }
        }
        private string _EmailChampion;
        partial void OnGetEmailChampion(ref string value);
        partial void OnEmailChampionChanging(ref string value);
        partial void OnEmailChampionChanged();
    
        /// <summary>
        /// There are no comments for EmailSeguridadFisica in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string EmailSeguridadFisica
        {
            get
            {
                string value = _EmailSeguridadFisica;
                OnGetEmailSeguridadFisica(ref value);
                return value;
            }
            set
            {
                if (_EmailSeguridadFisica != value)
                {
                  OnEmailSeguridadFisicaChanging(ref value);
                  ReportPropertyChanging("EmailSeguridadFisica");
                  _EmailSeguridadFisica = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("EmailSeguridadFisica");
                  OnEmailSeguridadFisicaChanged();
              }
            }
        }
        private string _EmailSeguridadFisica;
        partial void OnGetEmailSeguridadFisica(ref string value);
        partial void OnEmailSeguridadFisicaChanging(ref string value);
        partial void OnEmailSeguridadFisicaChanged();
    
        /// <summary>
        /// There are no comments for MedicoVigila in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string MedicoVigila
        {
            get
            {
                string value = _MedicoVigila;
                OnGetMedicoVigila(ref value);
                return value;
            }
            set
            {
                if (_MedicoVigila != value)
                {
                  OnMedicoVigilaChanging(ref value);
                  ReportPropertyChanging("MedicoVigila");
                  _MedicoVigila = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MedicoVigila");
                  OnMedicoVigilaChanged();
              }
            }
        }
        private string _MedicoVigila;
        partial void OnGetMedicoVigila(ref string value);
        partial void OnMedicoVigilaChanging(ref string value);
        partial void OnMedicoVigilaChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_regcovid_servicesResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_regcovid_servicesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_regcovid_servicesResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_regcovid_servicesResult object.
        /// </summary>
        /// <param name="serviceId">Initial value of ServiceId.</param>
        /// <param name="personId">Initial value of PersonId.</param>
        public static usp_regcovid_servicesResult Createusp_regcovid_servicesResult(string serviceId, string personId)
        {
            usp_regcovid_servicesResult usp_regcovid_servicesResult = new usp_regcovid_servicesResult();
            usp_regcovid_servicesResult.ServiceId = serviceId;
            usp_regcovid_servicesResult.PersonId = personId;
            return usp_regcovid_servicesResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for d_ServiceDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> d_ServiceDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _d_ServiceDate;
                OnGetd_ServiceDate(ref value);
                return value;
            }
            set
            {
                if (_d_ServiceDate != value)
                {
                  Ond_ServiceDateChanging(ref value);
                  ReportPropertyChanging("d_ServiceDate");
                  _d_ServiceDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("d_ServiceDate");
                  Ond_ServiceDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _d_ServiceDate;
        partial void OnGetd_ServiceDate(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void Ond_ServiceDateChanged();
    
        /// <summary>
        /// There are no comments for WorkerName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string WorkerName
        {
            get
            {
                string value = _WorkerName;
                OnGetWorkerName(ref value);
                return value;
            }
            set
            {
                if (_WorkerName != value)
                {
                  OnWorkerNameChanging(ref value);
                  ReportPropertyChanging("WorkerName");
                  _WorkerName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("WorkerName");
                  OnWorkerNameChanged();
              }
            }
        }
        private string _WorkerName;
        partial void OnGetWorkerName(ref string value);
        partial void OnWorkerNameChanging(ref string value);
        partial void OnWorkerNameChanged();
    
        /// <summary>
        /// There are no comments for ProtocolName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ProtocolName
        {
            get
            {
                string value = _ProtocolName;
                OnGetProtocolName(ref value);
                return value;
            }
            set
            {
                if (_ProtocolName != value)
                {
                  OnProtocolNameChanging(ref value);
                  ReportPropertyChanging("ProtocolName");
                  _ProtocolName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ProtocolName");
                  OnProtocolNameChanged();
              }
            }
        }
        private string _ProtocolName;
        partial void OnGetProtocolName(ref string value);
        partial void OnProtocolNameChanging(ref string value);
        partial void OnProtocolNameChanged();
    
        /// <summary>
        /// There are no comments for OrganizationName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OrganizationName
        {
            get
            {
                string value = _OrganizationName;
                OnGetOrganizationName(ref value);
                return value;
            }
            set
            {
                if (_OrganizationName != value)
                {
                  OnOrganizationNameChanging(ref value);
                  ReportPropertyChanging("OrganizationName");
                  _OrganizationName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrganizationName");
                  OnOrganizationNameChanged();
              }
            }
        }
        private string _OrganizationName;
        partial void OnGetOrganizationName(ref string value);
        partial void OnOrganizationNameChanging(ref string value);
        partial void OnOrganizationNameChanged();
    
        /// <summary>
        /// There are no comments for CurrentOccupation in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string CurrentOccupation
        {
            get
            {
                string value = _CurrentOccupation;
                OnGetCurrentOccupation(ref value);
                return value;
            }
            set
            {
                if (_CurrentOccupation != value)
                {
                  OnCurrentOccupationChanging(ref value);
                  ReportPropertyChanging("CurrentOccupation");
                  _CurrentOccupation = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("CurrentOccupation");
                  OnCurrentOccupationChanged();
              }
            }
        }
        private string _CurrentOccupation;
        partial void OnGetCurrentOccupation(ref string value);
        partial void OnCurrentOccupationChanging(ref string value);
        partial void OnCurrentOccupationChanged();
    
        /// <summary>
        /// There are no comments for ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string ServiceId
        {
            get
            {
                string value = _ServiceId;
                OnGetServiceId(ref value);
                return value;
            }
            set
            {
                if (_ServiceId != value)
                {
                  OnServiceIdChanging(ref value);
                  ReportPropertyChanging("ServiceId");
                  _ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("ServiceId");
                  OnServiceIdChanged();
              }
            }
        }
        private string _ServiceId;
        partial void OnGetServiceId(ref string value);
        partial void OnServiceIdChanging(ref string value);
        partial void OnServiceIdChanged();
    
        /// <summary>
        /// There are no comments for PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string PersonId
        {
            get
            {
                string value = _PersonId;
                OnGetPersonId(ref value);
                return value;
            }
            set
            {
                if (_PersonId != value)
                {
                  OnPersonIdChanging(ref value);
                  ReportPropertyChanging("PersonId");
                  _PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("PersonId");
                  OnPersonIdChanged();
              }
            }
        }
        private string _PersonId;
        partial void OnGetPersonId(ref string value);
        partial void OnPersonIdChanging(ref string value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// There are no comments for ComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ComponentId
        {
            get
            {
                string value = _ComponentId;
                OnGetComponentId(ref value);
                return value;
            }
            set
            {
                if (_ComponentId != value)
                {
                  OnComponentIdChanging(ref value);
                  ReportPropertyChanging("ComponentId");
                  _ComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ComponentId");
                  OnComponentIdChanged();
              }
            }
        }
        private string _ComponentId;
        partial void OnGetComponentId(ref string value);
        partial void OnComponentIdChanging(ref string value);
        partial void OnComponentIdChanged();
    
        /// <summary>
        /// There are no comments for IIndex in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> IIndex
        {
            get
            {
                global::System.Nullable<int> value = _IIndex;
                OnGetIIndex(ref value);
                return value;
            }
            set
            {
                if (_IIndex != value)
                {
                  OnIIndexChanging(ref value);
                  ReportPropertyChanging("IIndex");
                  _IIndex = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IIndex");
                  OnIIndexChanged();
              }
            }
        }
        private global::System.Nullable<int> _IIndex;
        partial void OnGetIIndex(ref global::System.Nullable<int> value);
        partial void OnIIndexChanging(ref global::System.Nullable<int> value);
        partial void OnIIndexChanged();
    
        /// <summary>
        /// There are no comments for OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string OrganizationId
        {
            get
            {
                string value = _OrganizationId;
                OnGetOrganizationId(ref value);
                return value;
            }
            set
            {
                if (_OrganizationId != value)
                {
                  OnOrganizationIdChanging(ref value);
                  ReportPropertyChanging("OrganizationId");
                  _OrganizationId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("OrganizationId");
                  OnOrganizationIdChanged();
              }
            }
        }
        private string _OrganizationId;
        partial void OnGetOrganizationId(ref string value);
        partial void OnOrganizationIdChanging(ref string value);
        partial void OnOrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for TelephoneNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string TelephoneNumber
        {
            get
            {
                string value = _TelephoneNumber;
                OnGetTelephoneNumber(ref value);
                return value;
            }
            set
            {
                if (_TelephoneNumber != value)
                {
                  OnTelephoneNumberChanging(ref value);
                  ReportPropertyChanging("TelephoneNumber");
                  _TelephoneNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("TelephoneNumber");
                  OnTelephoneNumberChanged();
              }
            }
        }
        private string _TelephoneNumber;
        partial void OnGetTelephoneNumber(ref string value);
        partial void OnTelephoneNumberChanging(ref string value);
        partial void OnTelephoneNumberChanged();
    
        /// <summary>
        /// There are no comments for ServiceComponentId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string ServiceComponentId
        {
            get
            {
                string value = _ServiceComponentId;
                OnGetServiceComponentId(ref value);
                return value;
            }
            set
            {
                if (_ServiceComponentId != value)
                {
                  OnServiceComponentIdChanging(ref value);
                  ReportPropertyChanging("ServiceComponentId");
                  _ServiceComponentId = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("ServiceComponentId");
                  OnServiceComponentIdChanged();
              }
            }
        }
        private string _ServiceComponentId;
        partial void OnGetServiceComponentId(ref string value);
        partial void OnServiceComponentIdChanging(ref string value);
        partial void OnServiceComponentIdChanged();
    
        /// <summary>
        /// There are no comments for EncuestaCulminada in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> EncuestaCulminada
        {
            get
            {
                global::System.Nullable<int> value = _EncuestaCulminada;
                OnGetEncuestaCulminada(ref value);
                return value;
            }
            set
            {
                if (_EncuestaCulminada != value)
                {
                  OnEncuestaCulminadaChanging(ref value);
                  ReportPropertyChanging("EncuestaCulminada");
                  _EncuestaCulminada = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EncuestaCulminada");
                  OnEncuestaCulminadaChanged();
              }
            }
        }
        private global::System.Nullable<int> _EncuestaCulminada;
        partial void OnGetEncuestaCulminada(ref global::System.Nullable<int> value);
        partial void OnEncuestaCulminadaChanging(ref global::System.Nullable<int> value);
        partial void OnEncuestaCulminadaChanged();
    
        /// <summary>
        /// There are no comments for LaboratorioCulminada in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> LaboratorioCulminada
        {
            get
            {
                global::System.Nullable<int> value = _LaboratorioCulminada;
                OnGetLaboratorioCulminada(ref value);
                return value;
            }
            set
            {
                if (_LaboratorioCulminada != value)
                {
                  OnLaboratorioCulminadaChanging(ref value);
                  ReportPropertyChanging("LaboratorioCulminada");
                  _LaboratorioCulminada = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("LaboratorioCulminada");
                  OnLaboratorioCulminadaChanged();
              }
            }
        }
        private global::System.Nullable<int> _LaboratorioCulminada;
        partial void OnGetLaboratorioCulminada(ref global::System.Nullable<int> value);
        partial void OnLaboratorioCulminadaChanging(ref global::System.Nullable<int> value);
        partial void OnLaboratorioCulminadaChanged();
    
        /// <summary>
        /// There are no comments for ClinicaExternad in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> ClinicaExternad
        {
            get
            {
                global::System.Nullable<int> value = _ClinicaExternad;
                OnGetClinicaExternad(ref value);
                return value;
            }
            set
            {
                if (_ClinicaExternad != value)
                {
                  OnClinicaExternadChanging(ref value);
                  ReportPropertyChanging("ClinicaExternad");
                  _ClinicaExternad = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("ClinicaExternad");
                  OnClinicaExternadChanged();
              }
            }
        }
        private global::System.Nullable<int> _ClinicaExternad;
        partial void OnGetClinicaExternad(ref global::System.Nullable<int> value);
        partial void OnClinicaExternadChanging(ref global::System.Nullable<int> value);
        partial void OnClinicaExternadChanged();
    
        /// <summary>
        /// There are no comments for MedicalCenter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string MedicalCenter
        {
            get
            {
                string value = _MedicalCenter;
                OnGetMedicalCenter(ref value);
                return value;
            }
            set
            {
                if (_MedicalCenter != value)
                {
                  OnMedicalCenterChanging(ref value);
                  ReportPropertyChanging("MedicalCenter");
                  _MedicalCenter = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MedicalCenter");
                  OnMedicalCenterChanged();
              }
            }
        }
        private string _MedicalCenter;
        partial void OnGetMedicalCenter(ref string value);
        partial void OnMedicalCenterChanging(ref string value);
        partial void OnMedicalCenterChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_resultados_covid_get_personaResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_resultados_covid_get_personaResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_resultados_covid_get_personaResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_resultados_covid_get_personaResult object.
        /// </summary>
        /// <param name="v_PersonId">Initial value of v_PersonId.</param>
        public static usp_resultados_covid_get_personaResult Createusp_resultados_covid_get_personaResult(string v_PersonId)
        {
            usp_resultados_covid_get_personaResult usp_resultados_covid_get_personaResult = new usp_resultados_covid_get_personaResult();
            usp_resultados_covid_get_personaResult.v_PersonId = v_PersonId;
            return usp_resultados_covid_get_personaResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_PersonId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_PersonId
        {
            get
            {
                string value = _v_PersonId;
                OnGetv_PersonId(ref value);
                return value;
            }
            set
            {
                if (_v_PersonId != value)
                {
                  Onv_PersonIdChanging(ref value);
                  ReportPropertyChanging("v_PersonId");
                  _v_PersonId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_PersonId");
                  Onv_PersonIdChanged();
              }
            }
        }
        private string _v_PersonId;
        partial void OnGetv_PersonId(ref string value);
        partial void Onv_PersonIdChanging(ref string value);
        partial void Onv_PersonIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_resultados_covid_get_resultadosResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_resultados_covid_get_resultadosResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_resultados_covid_get_resultadosResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_resultados_covid_get_resultadosResult object.
        /// </summary>
        /// <param name="archivo">Initial value of Archivo.</param>
        public static usp_resultados_covid_get_resultadosResult Createusp_resultados_covid_get_resultadosResult(string archivo)
        {
            usp_resultados_covid_get_resultadosResult usp_resultados_covid_get_resultadosResult = new usp_resultados_covid_get_resultadosResult();
            usp_resultados_covid_get_resultadosResult.Archivo = archivo;
            return usp_resultados_covid_get_resultadosResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Nro in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<long> Nro
        {
            get
            {
                global::System.Nullable<long> value = _Nro;
                OnGetNro(ref value);
                return value;
            }
            set
            {
                if (_Nro != value)
                {
                  OnNroChanging(ref value);
                  ReportPropertyChanging("Nro");
                  _Nro = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Nro");
                  OnNroChanged();
              }
            }
        }
        private global::System.Nullable<long> _Nro;
        partial void OnGetNro(ref global::System.Nullable<long> value);
        partial void OnNroChanging(ref global::System.Nullable<long> value);
        partial void OnNroChanged();
    
        /// <summary>
        /// There are no comments for Trabajador in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Trabajador
        {
            get
            {
                string value = _Trabajador;
                OnGetTrabajador(ref value);
                return value;
            }
            set
            {
                if (_Trabajador != value)
                {
                  OnTrabajadorChanging(ref value);
                  ReportPropertyChanging("Trabajador");
                  _Trabajador = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Trabajador");
                  OnTrabajadorChanged();
              }
            }
        }
        private string _Trabajador;
        partial void OnGetTrabajador(ref string value);
        partial void OnTrabajadorChanging(ref string value);
        partial void OnTrabajadorChanged();
    
        /// <summary>
        /// There are no comments for Sede in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Sede
        {
            get
            {
                string value = _Sede;
                OnGetSede(ref value);
                return value;
            }
            set
            {
                if (_Sede != value)
                {
                  OnSedeChanging(ref value);
                  ReportPropertyChanging("Sede");
                  _Sede = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Sede");
                  OnSedeChanged();
              }
            }
        }
        private string _Sede;
        partial void OnGetSede(ref string value);
        partial void OnSedeChanging(ref string value);
        partial void OnSedeChanged();
    
        /// <summary>
        /// There are no comments for Examen in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Examen
        {
            get
            {
                string value = _Examen;
                OnGetExamen(ref value);
                return value;
            }
            set
            {
                if (_Examen != value)
                {
                  OnExamenChanging(ref value);
                  ReportPropertyChanging("Examen");
                  _Examen = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Examen");
                  OnExamenChanged();
              }
            }
        }
        private string _Examen;
        partial void OnGetExamen(ref string value);
        partial void OnExamenChanging(ref string value);
        partial void OnExamenChanged();
    
        /// <summary>
        /// There are no comments for Fecha in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string Fecha
        {
            get
            {
                string value = _Fecha;
                OnGetFecha(ref value);
                return value;
            }
            set
            {
                if (_Fecha != value)
                {
                  OnFechaChanging(ref value);
                  ReportPropertyChanging("Fecha");
                  _Fecha = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("Fecha");
                  OnFechaChanged();
              }
            }
        }
        private string _Fecha;
        partial void OnGetFecha(ref string value);
        partial void OnFechaChanging(ref string value);
        partial void OnFechaChanged();
    
        /// <summary>
        /// There are no comments for Archivo in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Archivo
        {
            get
            {
                string value = _Archivo;
                OnGetArchivo(ref value);
                return value;
            }
            set
            {
                if (_Archivo != value)
                {
                  OnArchivoChanging(ref value);
                  ReportPropertyChanging("Archivo");
                  _Archivo = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Archivo");
                  OnArchivoChanged();
              }
            }
        }
        private string _Archivo;
        partial void OnGetArchivo(ref string value);
        partial void OnArchivoChanging(ref string value);
        partial void OnArchivoChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_resultados_covid_get_sedesResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_resultados_covid_get_sedesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_resultados_covid_get_sedesResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_resultados_covid_get_sedesResult object.
        /// </summary>
        public static usp_resultados_covid_get_sedesResult Createusp_resultados_covid_get_sedesResult()
        {
            usp_resultados_covid_get_sedesResult usp_resultados_covid_get_sedesResult = new usp_resultados_covid_get_sedesResult();
            return usp_resultados_covid_get_sedesResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for column0 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string column0
        {
            get
            {
                string value = _column0;
                OnGetcolumn0(ref value);
                return value;
            }
            set
            {
                if (_column0 != value)
                {
                  Oncolumn0Changing(ref value);
                  ReportPropertyChanging("column0");
                  _column0 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("column0");
                  Oncolumn0Changed();
              }
            }
        }
        private string _column0;
        partial void OnGetcolumn0(ref string value);
        partial void Oncolumn0Changing(ref string value);
        partial void Oncolumn0Changed();
    
        /// <summary>
        /// There are no comments for column1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string column1
        {
            get
            {
                string value = _column1;
                OnGetcolumn1(ref value);
                return value;
            }
            set
            {
                if (_column1 != value)
                {
                  Oncolumn1Changing(ref value);
                  ReportPropertyChanging("column1");
                  _column1 = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("column1");
                  Oncolumn1Changed();
              }
            }
        }
        private string _column1;
        partial void OnGetcolumn1(ref string value);
        partial void Oncolumn1Changing(ref string value);
        partial void Oncolumn1Changed();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_resultados_covid_login_externosResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_resultados_covid_login_externosResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_resultados_covid_login_externosResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_resultados_covid_login_externosResult object.
        /// </summary>
        /// <param name="v_Usuario">Initial value of v_Usuario.</param>
        /// <param name="v_Nombres">Initial value of v_Nombres.</param>
        /// <param name="v_OrganizationId">Initial value of v_OrganizationId.</param>
        public static usp_resultados_covid_login_externosResult Createusp_resultados_covid_login_externosResult(string v_Usuario, string v_Nombres, string v_OrganizationId)
        {
            usp_resultados_covid_login_externosResult usp_resultados_covid_login_externosResult = new usp_resultados_covid_login_externosResult();
            usp_resultados_covid_login_externosResult.v_Usuario = v_Usuario;
            usp_resultados_covid_login_externosResult.v_Nombres = v_Nombres;
            usp_resultados_covid_login_externosResult.v_OrganizationId = v_OrganizationId;
            return usp_resultados_covid_login_externosResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_Usuario in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_Usuario
        {
            get
            {
                string value = _v_Usuario;
                OnGetv_Usuario(ref value);
                return value;
            }
            set
            {
                if (_v_Usuario != value)
                {
                  Onv_UsuarioChanging(ref value);
                  ReportPropertyChanging("v_Usuario");
                  _v_Usuario = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_Usuario");
                  Onv_UsuarioChanged();
              }
            }
        }
        private string _v_Usuario;
        partial void OnGetv_Usuario(ref string value);
        partial void Onv_UsuarioChanging(ref string value);
        partial void Onv_UsuarioChanged();
    
        /// <summary>
        /// There are no comments for v_Nombres in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_Nombres
        {
            get
            {
                string value = _v_Nombres;
                OnGetv_Nombres(ref value);
                return value;
            }
            set
            {
                if (_v_Nombres != value)
                {
                  Onv_NombresChanging(ref value);
                  ReportPropertyChanging("v_Nombres");
                  _v_Nombres = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_Nombres");
                  Onv_NombresChanged();
              }
            }
        }
        private string _v_Nombres;
        partial void OnGetv_Nombres(ref string value);
        partial void Onv_NombresChanging(ref string value);
        partial void Onv_NombresChanged();
    
        /// <summary>
        /// There are no comments for v_Apellidos in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Apellidos
        {
            get
            {
                string value = _v_Apellidos;
                OnGetv_Apellidos(ref value);
                return value;
            }
            set
            {
                if (_v_Apellidos != value)
                {
                  Onv_ApellidosChanging(ref value);
                  ReportPropertyChanging("v_Apellidos");
                  _v_Apellidos = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Apellidos");
                  Onv_ApellidosChanged();
              }
            }
        }
        private string _v_Apellidos;
        partial void OnGetv_Apellidos(ref string value);
        partial void Onv_ApellidosChanging(ref string value);
        partial void Onv_ApellidosChanged();
    
        /// <summary>
        /// There are no comments for v_OrganizationId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_OrganizationId
        {
            get
            {
                string value = _v_OrganizationId;
                OnGetv_OrganizationId(ref value);
                return value;
            }
            set
            {
                if (_v_OrganizationId != value)
                {
                  Onv_OrganizationIdChanging(ref value);
                  ReportPropertyChanging("v_OrganizationId");
                  _v_OrganizationId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_OrganizationId");
                  Onv_OrganizationIdChanged();
              }
            }
        }
        private string _v_OrganizationId;
        partial void OnGetv_OrganizationId(ref string value);
        partial void Onv_OrganizationIdChanging(ref string value);
        partial void Onv_OrganizationIdChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.usp_validate_scheduleResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="usp_validate_scheduleResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class usp_validate_scheduleResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new usp_validate_scheduleResult object.
        /// </summary>
        /// <param name="v_CalendarId">Initial value of v_CalendarId.</param>
        public static usp_validate_scheduleResult Createusp_validate_scheduleResult(string v_CalendarId)
        {
            usp_validate_scheduleResult usp_validate_scheduleResult = new usp_validate_scheduleResult();
            usp_validate_scheduleResult.v_CalendarId = v_CalendarId;
            return usp_validate_scheduleResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_CalendarId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_CalendarId
        {
            get
            {
                string value = _v_CalendarId;
                OnGetv_CalendarId(ref value);
                return value;
            }
            set
            {
                if (_v_CalendarId != value)
                {
                  Onv_CalendarIdChanging(ref value);
                  ReportPropertyChanging("v_CalendarId");
                  _v_CalendarId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_CalendarId");
                  Onv_CalendarIdChanged();
              }
            }
        }
        private string _v_CalendarId;
        partial void OnGetv_CalendarId(ref string value);
        partial void Onv_CalendarIdChanging(ref string value);
        partial void Onv_CalendarIdChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.uspgetemployeesResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="uspgetemployeesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uspgetemployeesResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new uspgetemployeesResult object.
        /// </summary>
        /// <param name="identificationType">Initial value of IdentificationType.</param>
        /// <param name="nationalIDNumber">Initial value of NationalIDNumber.</param>
        /// <param name="gender">Initial value of Gender.</param>
        /// <param name="firstName">Initial value of FirstName.</param>
        /// <param name="lastName">Initial value of LastName.</param>
        /// <param name="emailAddress">Initial value of EmailAddress.</param>
        /// <param name="job">Initial value of Job.</param>
        /// <param name="addressLine1">Initial value of AddressLine1.</param>
        public static uspgetemployeesResult CreateuspgetemployeesResult(int identificationType, string nationalIDNumber, int gender, string firstName, string lastName, string emailAddress, string job, string addressLine1)
        {
            uspgetemployeesResult uspgetemployeesResult = new uspgetemployeesResult();
            uspgetemployeesResult.IdentificationType = identificationType;
            uspgetemployeesResult.NationalIDNumber = nationalIDNumber;
            uspgetemployeesResult.Gender = gender;
            uspgetemployeesResult.FirstName = firstName;
            uspgetemployeesResult.LastName = lastName;
            uspgetemployeesResult.EmailAddress = emailAddress;
            uspgetemployeesResult.Job = job;
            uspgetemployeesResult.AddressLine1 = addressLine1;
            return uspgetemployeesResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for Id in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.Guid> Id
        {
            get
            {
                global::System.Nullable<System.Guid> value = _Id;
                OnGetId(ref value);
                return value;
            }
            set
            {
                if (_Id != value)
                {
                  OnIdChanging(ref value);
                  ReportPropertyChanging("Id");
                  _Id = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Id");
                  OnIdChanged();
              }
            }
        }
        private global::System.Nullable<System.Guid> _Id;
        partial void OnGetId(ref global::System.Nullable<System.Guid> value);
        partial void OnIdChanging(ref global::System.Nullable<System.Guid> value);
        partial void OnIdChanged();
    
        /// <summary>
        /// There are no comments for IdentificationType in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int IdentificationType
        {
            get
            {
                int value = _IdentificationType;
                OnGetIdentificationType(ref value);
                return value;
            }
            set
            {
                if (_IdentificationType != value)
                {
                  OnIdentificationTypeChanging(ref value);
                  ReportPropertyChanging("IdentificationType");
                  _IdentificationType = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("IdentificationType");
                  OnIdentificationTypeChanged();
              }
            }
        }
        private int _IdentificationType;
        partial void OnGetIdentificationType(ref int value);
        partial void OnIdentificationTypeChanging(ref int value);
        partial void OnIdentificationTypeChanged();
    
        /// <summary>
        /// There are no comments for NationalIDNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string NationalIDNumber
        {
            get
            {
                string value = _NationalIDNumber;
                OnGetNationalIDNumber(ref value);
                return value;
            }
            set
            {
                if (_NationalIDNumber != value)
                {
                  OnNationalIDNumberChanging(ref value);
                  ReportPropertyChanging("NationalIDNumber");
                  _NationalIDNumber = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("NationalIDNumber");
                  OnNationalIDNumberChanged();
              }
            }
        }
        private string _NationalIDNumber;
        partial void OnGetNationalIDNumber(ref string value);
        partial void OnNationalIDNumberChanging(ref string value);
        partial void OnNationalIDNumberChanged();
    
        /// <summary>
        /// There are no comments for Gender in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int Gender
        {
            get
            {
                int value = _Gender;
                OnGetGender(ref value);
                return value;
            }
            set
            {
                if (_Gender != value)
                {
                  OnGenderChanging(ref value);
                  ReportPropertyChanging("Gender");
                  _Gender = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Gender");
                  OnGenderChanged();
              }
            }
        }
        private int _Gender;
        partial void OnGetGender(ref int value);
        partial void OnGenderChanging(ref int value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// There are no comments for FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string FirstName
        {
            get
            {
                string value = _FirstName;
                OnGetFirstName(ref value);
                return value;
            }
            set
            {
                if (_FirstName != value)
                {
                  OnFirstNameChanging(ref value);
                  ReportPropertyChanging("FirstName");
                  _FirstName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("FirstName");
                  OnFirstNameChanged();
              }
            }
        }
        private string _FirstName;
        partial void OnGetFirstName(ref string value);
        partial void OnFirstNameChanging(ref string value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// There are no comments for MiddleName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string MiddleName
        {
            get
            {
                string value = _MiddleName;
                OnGetMiddleName(ref value);
                return value;
            }
            set
            {
                if (_MiddleName != value)
                {
                  OnMiddleNameChanging(ref value);
                  ReportPropertyChanging("MiddleName");
                  _MiddleName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("MiddleName");
                  OnMiddleNameChanged();
              }
            }
        }
        private string _MiddleName;
        partial void OnGetMiddleName(ref string value);
        partial void OnMiddleNameChanging(ref string value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// There are no comments for LastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string LastName
        {
            get
            {
                string value = _LastName;
                OnGetLastName(ref value);
                return value;
            }
            set
            {
                if (_LastName != value)
                {
                  OnLastNameChanging(ref value);
                  ReportPropertyChanging("LastName");
                  _LastName = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("LastName");
                  OnLastNameChanged();
              }
            }
        }
        private string _LastName;
        partial void OnGetLastName(ref string value);
        partial void OnLastNameChanging(ref string value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// There are no comments for BirthDate in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.DateTime> BirthDate
        {
            get
            {
                global::System.Nullable<System.DateTime> value = _BirthDate;
                OnGetBirthDate(ref value);
                return value;
            }
            set
            {
                if (_BirthDate != value)
                {
                  OnBirthDateChanging(ref value);
                  ReportPropertyChanging("BirthDate");
                  _BirthDate = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("BirthDate");
                  OnBirthDateChanged();
              }
            }
        }
        private global::System.Nullable<System.DateTime> _BirthDate;
        partial void OnGetBirthDate(ref global::System.Nullable<System.DateTime> value);
        partial void OnBirthDateChanging(ref global::System.Nullable<System.DateTime> value);
        partial void OnBirthDateChanged();
    
        /// <summary>
        /// There are no comments for EmailAddress in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string EmailAddress
        {
            get
            {
                string value = _EmailAddress;
                OnGetEmailAddress(ref value);
                return value;
            }
            set
            {
                if (_EmailAddress != value)
                {
                  OnEmailAddressChanging(ref value);
                  ReportPropertyChanging("EmailAddress");
                  _EmailAddress = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("EmailAddress");
                  OnEmailAddressChanged();
              }
            }
        }
        private string _EmailAddress;
        partial void OnGetEmailAddress(ref string value);
        partial void OnEmailAddressChanging(ref string value);
        partial void OnEmailAddressChanged();
    
        /// <summary>
        /// There are no comments for Job in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Job
        {
            get
            {
                string value = _Job;
                OnGetJob(ref value);
                return value;
            }
            set
            {
                if (_Job != value)
                {
                  OnJobChanging(ref value);
                  ReportPropertyChanging("Job");
                  _Job = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Job");
                  OnJobChanged();
              }
            }
        }
        private string _Job;
        partial void OnGetJob(ref string value);
        partial void OnJobChanging(ref string value);
        partial void OnJobChanged();
    
        /// <summary>
        /// There are no comments for AddressLine1 in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string AddressLine1
        {
            get
            {
                string value = _AddressLine1;
                OnGetAddressLine1(ref value);
                return value;
            }
            set
            {
                if (_AddressLine1 != value)
                {
                  OnAddressLine1Changing(ref value);
                  ReportPropertyChanging("AddressLine1");
                  _AddressLine1 = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("AddressLine1");
                  OnAddressLine1Changed();
              }
            }
        }
        private string _AddressLine1;
        partial void OnGetAddressLine1(ref string value);
        partial void OnAddressLine1Changing(ref string value);
        partial void OnAddressLine1Changed();
    
        /// <summary>
        /// There are no comments for Hire in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Hire
        {
            get
            {
                global::System.Nullable<int> value = _Hire;
                OnGetHire(ref value);
                return value;
            }
            set
            {
                if (_Hire != value)
                {
                  OnHireChanging(ref value);
                  ReportPropertyChanging("Hire");
                  _Hire = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Hire");
                  OnHireChanged();
              }
            }
        }
        private global::System.Nullable<int> _Hire;
        partial void OnGetHire(ref global::System.Nullable<int> value);
        partial void OnHireChanging(ref global::System.Nullable<int> value);
        partial void OnHireChanged();
    
        /// <summary>
        /// There are no comments for Headquarter in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Headquarter
        {
            get
            {
                global::System.Nullable<int> value = _Headquarter;
                OnGetHeadquarter(ref value);
                return value;
            }
            set
            {
                if (_Headquarter != value)
                {
                  OnHeadquarterChanging(ref value);
                  ReportPropertyChanging("Headquarter");
                  _Headquarter = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Headquarter");
                  OnHeadquarterChanged();
              }
            }
        }
        private global::System.Nullable<int> _Headquarter;
        partial void OnGetHeadquarter(ref global::System.Nullable<int> value);
        partial void OnHeadquarterChanging(ref global::System.Nullable<int> value);
        partial void OnHeadquarterChanged();
    
        /// <summary>
        /// There are no comments for Employer in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<int> Employer
        {
            get
            {
                global::System.Nullable<int> value = _Employer;
                OnGetEmployer(ref value);
                return value;
            }
            set
            {
                if (_Employer != value)
                {
                  OnEmployerChanging(ref value);
                  ReportPropertyChanging("Employer");
                  _Employer = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("Employer");
                  OnEmployerChanged();
              }
            }
        }
        private global::System.Nullable<int> _Employer;
        partial void OnGetEmployer(ref global::System.Nullable<int> value);
        partial void OnEmployerChanging(ref global::System.Nullable<int> value);
        partial void OnEmployerChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.uspgetemployercompaniesResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="uspgetemployercompaniesResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uspgetemployercompaniesResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new uspgetemployercompaniesResult object.
        /// </summary>
        /// <param name="employerCompanyId">Initial value of EmployerCompanyId.</param>
        /// <param name="name">Initial value of Name.</param>
        public static uspgetemployercompaniesResult CreateuspgetemployercompaniesResult(int employerCompanyId, string name)
        {
            uspgetemployercompaniesResult uspgetemployercompaniesResult = new uspgetemployercompaniesResult();
            uspgetemployercompaniesResult.EmployerCompanyId = employerCompanyId;
            uspgetemployercompaniesResult.Name = name;
            return uspgetemployercompaniesResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for EmployerCompanyId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public int EmployerCompanyId
        {
            get
            {
                int value = _EmployerCompanyId;
                OnGetEmployerCompanyId(ref value);
                return value;
            }
            set
            {
                if (_EmployerCompanyId != value)
                {
                  OnEmployerCompanyIdChanging(ref value);
                  ReportPropertyChanging("EmployerCompanyId");
                  _EmployerCompanyId = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("EmployerCompanyId");
                  OnEmployerCompanyIdChanged();
              }
            }
        }
        private int _EmployerCompanyId;
        partial void OnGetEmployerCompanyId(ref int value);
        partial void OnEmployerCompanyIdChanging(ref int value);
        partial void OnEmployerCompanyIdChanged();
    
        /// <summary>
        /// There are no comments for NationalIDNumber in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string NationalIDNumber
        {
            get
            {
                string value = _NationalIDNumber;
                OnGetNationalIDNumber(ref value);
                return value;
            }
            set
            {
                if (_NationalIDNumber != value)
                {
                  OnNationalIDNumberChanging(ref value);
                  ReportPropertyChanging("NationalIDNumber");
                  _NationalIDNumber = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("NationalIDNumber");
                  OnNationalIDNumberChanged();
              }
            }
        }
        private string _NationalIDNumber;
        partial void OnGetNationalIDNumber(ref string value);
        partial void OnNationalIDNumberChanging(ref string value);
        partial void OnNationalIDNumberChanged();
    
        /// <summary>
        /// There are no comments for Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string Name
        {
            get
            {
                string value = _Name;
                OnGetName(ref value);
                return value;
            }
            set
            {
                if (_Name != value)
                {
                  OnNameChanging(ref value);
                  ReportPropertyChanging("Name");
                  _Name = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("Name");
                  OnNameChanged();
              }
            }
        }
        private string _Name;
        partial void OnGetName(ref string value);
        partial void OnNameChanging(ref string value);
        partial void OnNameChanged();
    
        /// <summary>
        /// There are no comments for rowguid in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public global::System.Nullable<System.Guid> rowguid
        {
            get
            {
                global::System.Nullable<System.Guid> value = _rowguid;
                OnGetrowguid(ref value);
                return value;
            }
            set
            {
                if (_rowguid != value)
                {
                  OnrowguidChanging(ref value);
                  ReportPropertyChanging("rowguid");
                  _rowguid = StructuralObject.SetValidValue(value);
                  ReportPropertyChanged("rowguid");
                  OnrowguidChanged();
              }
            }
        }
        private global::System.Nullable<System.Guid> _rowguid;
        partial void OnGetrowguid(ref global::System.Nullable<System.Guid> value);
        partial void OnrowguidChanging(ref global::System.Nullable<System.Guid> value);
        partial void OnrowguidChanged();

        #endregion
    }

    /// <summary>
    /// There are no comments for Sigesoft.Node.WinClient.DAL.uspgetresultResult in the schema.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="Sigesoft.Node.WinClient.DAL", Name="uspgetresultResult")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class uspgetresultResult : ComplexObject    {
        #region Factory Method

        /// <summary>
        /// Create a new uspgetresultResult object.
        /// </summary>
        /// <param name="v_ServiceId">Initial value of v_ServiceId.</param>
        public static uspgetresultResult CreateuspgetresultResult(string v_ServiceId)
        {
            uspgetresultResult uspgetresultResult = new uspgetresultResult();
            uspgetresultResult.v_ServiceId = v_ServiceId;
            return uspgetresultResult;
        }

        #endregion

        #region Properties
    
        /// <summary>
        /// There are no comments for v_ServiceId in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute(IsNullable=false)]
        [DataMemberAttribute()]
        public string v_ServiceId
        {
            get
            {
                string value = _v_ServiceId;
                OnGetv_ServiceId(ref value);
                return value;
            }
            set
            {
                if (_v_ServiceId != value)
                {
                  Onv_ServiceIdChanging(ref value);
                  ReportPropertyChanging("v_ServiceId");
                  _v_ServiceId = StructuralObject.SetValidValue(value, false);
                  ReportPropertyChanged("v_ServiceId");
                  Onv_ServiceIdChanged();
              }
            }
        }
        private string _v_ServiceId;
        partial void OnGetv_ServiceId(ref string value);
        partial void Onv_ServiceIdChanging(ref string value);
        partial void Onv_ServiceIdChanged();
    
        /// <summary>
        /// There are no comments for v_FirstLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FirstLastName
        {
            get
            {
                string value = _v_FirstLastName;
                OnGetv_FirstLastName(ref value);
                return value;
            }
            set
            {
                if (_v_FirstLastName != value)
                {
                  Onv_FirstLastNameChanging(ref value);
                  ReportPropertyChanging("v_FirstLastName");
                  _v_FirstLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FirstLastName");
                  Onv_FirstLastNameChanged();
              }
            }
        }
        private string _v_FirstLastName;
        partial void OnGetv_FirstLastName(ref string value);
        partial void Onv_FirstLastNameChanging(ref string value);
        partial void Onv_FirstLastNameChanged();
    
        /// <summary>
        /// There are no comments for v_SecondLastName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_SecondLastName
        {
            get
            {
                string value = _v_SecondLastName;
                OnGetv_SecondLastName(ref value);
                return value;
            }
            set
            {
                if (_v_SecondLastName != value)
                {
                  Onv_SecondLastNameChanging(ref value);
                  ReportPropertyChanging("v_SecondLastName");
                  _v_SecondLastName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_SecondLastName");
                  Onv_SecondLastNameChanged();
              }
            }
        }
        private string _v_SecondLastName;
        partial void OnGetv_SecondLastName(ref string value);
        partial void Onv_SecondLastNameChanging(ref string value);
        partial void Onv_SecondLastNameChanged();
    
        /// <summary>
        /// There are no comments for v_FirstName in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_FirstName
        {
            get
            {
                string value = _v_FirstName;
                OnGetv_FirstName(ref value);
                return value;
            }
            set
            {
                if (_v_FirstName != value)
                {
                  Onv_FirstNameChanging(ref value);
                  ReportPropertyChanging("v_FirstName");
                  _v_FirstName = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_FirstName");
                  Onv_FirstNameChanged();
              }
            }
        }
        private string _v_FirstName;
        partial void OnGetv_FirstName(ref string value);
        partial void Onv_FirstNameChanging(ref string value);
        partial void Onv_FirstNameChanged();
    
        /// <summary>
        /// There are no comments for v_Name in the schema.
        /// </summary>
        [EdmScalarPropertyAttribute()]
        [DataMemberAttribute()]
        public string v_Name
        {
            get
            {
                string value = _v_Name;
                OnGetv_Name(ref value);
                return value;
            }
            set
            {
                if (_v_Name != value)
                {
                  Onv_NameChanging(ref value);
                  ReportPropertyChanging("v_Name");
                  _v_Name = StructuralObject.SetValidValue(value, true);
                  ReportPropertyChanged("v_Name");
                  Onv_NameChanged();
              }
            }
        }
        private string _v_Name;
        partial void OnGetv_Name(ref string value);
        partial void Onv_NameChanging(ref string value);
        partial void Onv_NameChanged();

        #endregion
    }

}
