//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2021/05/17 - 17:34:42
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="protocolregcovid"/> and <see cref="protocolregcovidDto"/>.
    /// </summary>
    public static partial class protocolregcovidAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="protocolregcovidDto"/> converted from <see cref="protocolregcovid"/>.</param>
        static partial void OnDTO(this protocolregcovid entity, protocolregcovidDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="protocolregcovid"/> converted from <see cref="protocolregcovidDto"/>.</param>
        static partial void OnEntity(this protocolregcovidDto dto, protocolregcovid entity);

        /// <summary>
        /// Converts this instance of <see cref="protocolregcovidDto"/> to an instance of <see cref="protocolregcovid"/>.
        /// </summary>
        /// <param name="dto"><see cref="protocolregcovidDto"/> to convert.</param>
        public static protocolregcovid ToEntity(this protocolregcovidDto dto)
        {
            if (dto == null) return null;

            var entity = new protocolregcovid();

            entity.ProtocolRegcovidId = dto.ProtocolRegcovidId;
            entity.OrganizationId = dto.OrganizationId;
            entity.ComponentId = dto.ComponentId;
            entity.ProtocolId = dto.ProtocolId;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="protocolregcovid"/> to an instance of <see cref="protocolregcovidDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="protocolregcovid"/> to convert.</param>
        public static protocolregcovidDto ToDTO(this protocolregcovid entity)
        {
            if (entity == null) return null;

            var dto = new protocolregcovidDto();

            dto.ProtocolRegcovidId = entity.ProtocolRegcovidId;
            dto.OrganizationId = entity.OrganizationId;
            dto.ComponentId = entity.ComponentId;
            dto.ProtocolId = entity.ProtocolId;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="protocolregcovidDto"/> to an instance of <see cref="protocolregcovid"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<protocolregcovid> ToEntities(this IEnumerable<protocolregcovidDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="protocolregcovid"/> to an instance of <see cref="protocolregcovidDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<protocolregcovidDto> ToDTOs(this IEnumerable<protocolregcovid> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
