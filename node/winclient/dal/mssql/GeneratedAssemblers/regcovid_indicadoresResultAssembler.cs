//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2021/05/17 - 17:34:24
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="regcovid_indicadoresResult"/> and <see cref="regcovid_indicadoresResultDto"/>.
    /// </summary>
    public static partial class regcovid_indicadoresResultAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="regcovid_indicadoresResultDto"/> converted from <see cref="regcovid_indicadoresResult"/>.</param>
        static partial void OnDTO(this regcovid_indicadoresResult entity, regcovid_indicadoresResultDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="regcovid_indicadoresResult"/> converted from <see cref="regcovid_indicadoresResultDto"/>.</param>
        static partial void OnEntity(this regcovid_indicadoresResultDto dto, regcovid_indicadoresResult entity);

        /// <summary>
        /// Converts this instance of <see cref="regcovid_indicadoresResultDto"/> to an instance of <see cref="regcovid_indicadoresResult"/>.
        /// </summary>
        /// <param name="dto"><see cref="regcovid_indicadoresResultDto"/> to convert.</param>
        public static regcovid_indicadoresResult ToEntity(this regcovid_indicadoresResultDto dto)
        {
            if (dto == null) return null;

            var entity = new regcovid_indicadoresResult();

            entity.Resultado = dto.Resultado;
            entity.Contador = dto.Contador;
            entity.Total = dto.Total;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="regcovid_indicadoresResult"/> to an instance of <see cref="regcovid_indicadoresResultDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="regcovid_indicadoresResult"/> to convert.</param>
        public static regcovid_indicadoresResultDto ToDTO(this regcovid_indicadoresResult entity)
        {
            if (entity == null) return null;

            var dto = new regcovid_indicadoresResultDto();

            dto.Resultado = entity.Resultado;
            dto.Contador = entity.Contador;
            dto.Total = entity.Total;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="regcovid_indicadoresResultDto"/> to an instance of <see cref="regcovid_indicadoresResult"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<regcovid_indicadoresResult> ToEntities(this IEnumerable<regcovid_indicadoresResultDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="regcovid_indicadoresResult"/> to an instance of <see cref="regcovid_indicadoresResultDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<regcovid_indicadoresResultDto> ToDTOs(this IEnumerable<regcovid_indicadoresResult> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
