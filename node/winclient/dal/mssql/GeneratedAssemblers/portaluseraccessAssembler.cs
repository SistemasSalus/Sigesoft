//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2021/05/17 - 17:34:39
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="portaluseraccess"/> and <see cref="portaluseraccessDto"/>.
    /// </summary>
    public static partial class portaluseraccessAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="portaluseraccessDto"/> converted from <see cref="portaluseraccess"/>.</param>
        static partial void OnDTO(this portaluseraccess entity, portaluseraccessDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="portaluseraccess"/> converted from <see cref="portaluseraccessDto"/>.</param>
        static partial void OnEntity(this portaluseraccessDto dto, portaluseraccess entity);

        /// <summary>
        /// Converts this instance of <see cref="portaluseraccessDto"/> to an instance of <see cref="portaluseraccess"/>.
        /// </summary>
        /// <param name="dto"><see cref="portaluseraccessDto"/> to convert.</param>
        public static portaluseraccess ToEntity(this portaluseraccessDto dto)
        {
            if (dto == null) return null;

            var entity = new portaluseraccess();

            entity.PortalUserAccessId = dto.PortalUserAccessId;
            entity.PortalUserId = dto.PortalUserId;
            entity.OrganizationId = dto.OrganizationId;
            entity.IsDeleted = dto.IsDeleted;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="portaluseraccess"/> to an instance of <see cref="portaluseraccessDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="portaluseraccess"/> to convert.</param>
        public static portaluseraccessDto ToDTO(this portaluseraccess entity)
        {
            if (entity == null) return null;

            var dto = new portaluseraccessDto();

            dto.PortalUserAccessId = entity.PortalUserAccessId;
            dto.PortalUserId = entity.PortalUserId;
            dto.OrganizationId = entity.OrganizationId;
            dto.IsDeleted = entity.IsDeleted;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="portaluseraccessDto"/> to an instance of <see cref="portaluseraccess"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<portaluseraccess> ToEntities(this IEnumerable<portaluseraccessDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="portaluseraccess"/> to an instance of <see cref="portaluseraccessDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<portaluseraccessDto> ToDTOs(this IEnumerable<portaluseraccess> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
