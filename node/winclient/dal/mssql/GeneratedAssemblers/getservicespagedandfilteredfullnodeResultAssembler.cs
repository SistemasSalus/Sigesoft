//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2021/05/17 - 17:34:23
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="getservicespagedandfilteredfullnodeResult"/> and <see cref="getservicespagedandfilteredfullnodeResultDto"/>.
    /// </summary>
    public static partial class getservicespagedandfilteredfullnodeResultAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="getservicespagedandfilteredfullnodeResultDto"/> converted from <see cref="getservicespagedandfilteredfullnodeResult"/>.</param>
        static partial void OnDTO(this getservicespagedandfilteredfullnodeResult entity, getservicespagedandfilteredfullnodeResultDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="getservicespagedandfilteredfullnodeResult"/> converted from <see cref="getservicespagedandfilteredfullnodeResultDto"/>.</param>
        static partial void OnEntity(this getservicespagedandfilteredfullnodeResultDto dto, getservicespagedandfilteredfullnodeResult entity);

        /// <summary>
        /// Converts this instance of <see cref="getservicespagedandfilteredfullnodeResultDto"/> to an instance of <see cref="getservicespagedandfilteredfullnodeResult"/>.
        /// </summary>
        /// <param name="dto"><see cref="getservicespagedandfilteredfullnodeResultDto"/> to convert.</param>
        public static getservicespagedandfilteredfullnodeResult ToEntity(this getservicespagedandfilteredfullnodeResultDto dto)
        {
            if (dto == null) return null;

            var entity = new getservicespagedandfilteredfullnodeResult();

            entity.b_Seleccionar = dto.b_Seleccionar;
            entity.v_ServiceId = dto.v_ServiceId;
            entity.v_Nodo = dto.v_Nodo;
            entity.v_CalendarId = dto.v_CalendarId;
            entity.v_ProtocolId = dto.v_ProtocolId;
            entity.v_PersonId = dto.v_PersonId;
            entity.i_MasterServiceId = dto.i_MasterServiceId;
            entity.v_MasterServiceName = dto.v_MasterServiceName;
            entity.i_ServiceStatusId = dto.i_ServiceStatusId;
            entity.v_ServiceStatusName = dto.v_ServiceStatusName;
            entity.i_AptitudeStatusId = dto.i_AptitudeStatusId;
            entity.d_ServiceDate = dto.d_ServiceDate;
            entity.d_GlobalExpirationDate = dto.d_GlobalExpirationDate;
            entity.d_ObsExpirationDate = dto.d_ObsExpirationDate;
            entity.i_FlagAgentId = dto.i_FlagAgentId;
            entity.v_OrganizationId = dto.v_OrganizationId;
            entity.v_OrganizationName = dto.v_OrganizationName;
            entity.v_GenderName = dto.v_GenderName;
            entity.v_ServiceTypeName = dto.v_ServiceTypeName;
            entity.i_ServiceTypeId = dto.i_ServiceTypeId;
            entity.i_EsoTypeId = dto.i_EsoTypeId;
            entity.v_LocationId = dto.v_LocationId;
            entity.v_LocationName = dto.v_LocationName;
            entity.v_Pacient = dto.v_Pacient;
            entity.v_PacientDocument = dto.v_PacientDocument;
            entity.v_ProtocolName = dto.v_ProtocolName;
            entity.v_CreationUser = dto.v_CreationUser;
            entity.v_UpdateUser = dto.v_UpdateUser;
            entity.d_CreationDate = dto.d_CreationDate;
            entity.d_UpdateDate = dto.d_UpdateDate;
            entity.v_AptitudeStatusName = dto.v_AptitudeStatusName;
            entity.v_DocTypeName = dto.v_DocTypeName;
            entity.v_DocNumber = dto.v_DocNumber;
            entity.v_CustomerOrganizationId = dto.v_CustomerOrganizationId;
            entity.v_CustomerLocationId = dto.v_CustomerLocationId;
            entity.v_EsoTypeName = dto.v_EsoTypeName;
            entity.i_StatusLiquidation = dto.i_StatusLiquidation;
            entity.Email = dto.Email;
            entity.Contratista = dto.Contratista;
            entity.Sede = dto.Sede;
            entity.DAS = dto.DAS;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="getservicespagedandfilteredfullnodeResult"/> to an instance of <see cref="getservicespagedandfilteredfullnodeResultDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="getservicespagedandfilteredfullnodeResult"/> to convert.</param>
        public static getservicespagedandfilteredfullnodeResultDto ToDTO(this getservicespagedandfilteredfullnodeResult entity)
        {
            if (entity == null) return null;

            var dto = new getservicespagedandfilteredfullnodeResultDto();

            dto.b_Seleccionar = entity.b_Seleccionar;
            dto.v_ServiceId = entity.v_ServiceId;
            dto.v_Nodo = entity.v_Nodo;
            dto.v_CalendarId = entity.v_CalendarId;
            dto.v_ProtocolId = entity.v_ProtocolId;
            dto.v_PersonId = entity.v_PersonId;
            dto.i_MasterServiceId = entity.i_MasterServiceId;
            dto.v_MasterServiceName = entity.v_MasterServiceName;
            dto.i_ServiceStatusId = entity.i_ServiceStatusId;
            dto.v_ServiceStatusName = entity.v_ServiceStatusName;
            dto.i_AptitudeStatusId = entity.i_AptitudeStatusId;
            dto.d_ServiceDate = entity.d_ServiceDate;
            dto.d_GlobalExpirationDate = entity.d_GlobalExpirationDate;
            dto.d_ObsExpirationDate = entity.d_ObsExpirationDate;
            dto.i_FlagAgentId = entity.i_FlagAgentId;
            dto.v_OrganizationId = entity.v_OrganizationId;
            dto.v_OrganizationName = entity.v_OrganizationName;
            dto.v_GenderName = entity.v_GenderName;
            dto.v_ServiceTypeName = entity.v_ServiceTypeName;
            dto.i_ServiceTypeId = entity.i_ServiceTypeId;
            dto.i_EsoTypeId = entity.i_EsoTypeId;
            dto.v_LocationId = entity.v_LocationId;
            dto.v_LocationName = entity.v_LocationName;
            dto.v_Pacient = entity.v_Pacient;
            dto.v_PacientDocument = entity.v_PacientDocument;
            dto.v_ProtocolName = entity.v_ProtocolName;
            dto.v_CreationUser = entity.v_CreationUser;
            dto.v_UpdateUser = entity.v_UpdateUser;
            dto.d_CreationDate = entity.d_CreationDate;
            dto.d_UpdateDate = entity.d_UpdateDate;
            dto.v_AptitudeStatusName = entity.v_AptitudeStatusName;
            dto.v_DocTypeName = entity.v_DocTypeName;
            dto.v_DocNumber = entity.v_DocNumber;
            dto.v_CustomerOrganizationId = entity.v_CustomerOrganizationId;
            dto.v_CustomerLocationId = entity.v_CustomerLocationId;
            dto.v_EsoTypeName = entity.v_EsoTypeName;
            dto.i_StatusLiquidation = entity.i_StatusLiquidation;
            dto.Email = entity.Email;
            dto.Contratista = entity.Contratista;
            dto.Sede = entity.Sede;
            dto.DAS = entity.DAS;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="getservicespagedandfilteredfullnodeResultDto"/> to an instance of <see cref="getservicespagedandfilteredfullnodeResult"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<getservicespagedandfilteredfullnodeResult> ToEntities(this IEnumerable<getservicespagedandfilteredfullnodeResultDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="getservicespagedandfilteredfullnodeResult"/> to an instance of <see cref="getservicespagedandfilteredfullnodeResultDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<getservicespagedandfilteredfullnodeResultDto> ToDTOs(this IEnumerable<getservicespagedandfilteredfullnodeResult> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
