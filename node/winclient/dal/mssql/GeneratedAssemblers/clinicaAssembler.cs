//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2021/05/17 - 17:34:30
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="clinica"/> and <see cref="clinicaDto"/>.
    /// </summary>
    public static partial class clinicaAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="clinicaDto"/> converted from <see cref="clinica"/>.</param>
        static partial void OnDTO(this clinica entity, clinicaDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="clinica"/> converted from <see cref="clinicaDto"/>.</param>
        static partial void OnEntity(this clinicaDto dto, clinica entity);

        /// <summary>
        /// Converts this instance of <see cref="clinicaDto"/> to an instance of <see cref="clinica"/>.
        /// </summary>
        /// <param name="dto"><see cref="clinicaDto"/> to convert.</param>
        public static clinica ToEntity(this clinicaDto dto)
        {
            if (dto == null) return null;

            var entity = new clinica();

            entity.i_clinicaId = dto.i_clinicaId;
            entity.v_Nombre = dto.v_Nombre;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="clinica"/> to an instance of <see cref="clinicaDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="clinica"/> to convert.</param>
        public static clinicaDto ToDTO(this clinica entity)
        {
            if (entity == null) return null;

            var dto = new clinicaDto();

            dto.i_clinicaId = entity.i_clinicaId;
            dto.v_Nombre = entity.v_Nombre;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="clinicaDto"/> to an instance of <see cref="clinica"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<clinica> ToEntities(this IEnumerable<clinicaDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="clinica"/> to an instance of <see cref="clinicaDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<clinicaDto> ToDTOs(this IEnumerable<clinica> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
