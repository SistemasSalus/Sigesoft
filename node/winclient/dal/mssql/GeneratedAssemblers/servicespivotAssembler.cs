//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2021/05/17 - 17:34:48
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="servicespivot"/> and <see cref="servicespivotDto"/>.
    /// </summary>
    public static partial class servicespivotAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="servicespivotDto"/> converted from <see cref="servicespivot"/>.</param>
        static partial void OnDTO(this servicespivot entity, servicespivotDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="servicespivot"/> converted from <see cref="servicespivotDto"/>.</param>
        static partial void OnEntity(this servicespivotDto dto, servicespivot entity);

        /// <summary>
        /// Converts this instance of <see cref="servicespivotDto"/> to an instance of <see cref="servicespivot"/>.
        /// </summary>
        /// <param name="dto"><see cref="servicespivotDto"/> to convert.</param>
        public static servicespivot ToEntity(this servicespivotDto dto)
        {
            if (dto == null) return null;

            var entity = new servicespivot();

            entity.servicespivot1 = dto.servicespivot1;
            entity.ServiceId = dto.ServiceId;
            entity.ProtocolId = dto.ProtocolId;
            entity.ComponentId = dto.ComponentId;
            entity.Component = dto.Component;
            entity.PersonId = dto.PersonId;
            entity.ServiceComponentId = dto.ServiceComponentId;
            entity.DNI = dto.DNI;
            entity.Nombre = dto.Nombre;
            entity.ApellidoP = dto.ApellidoP;
            entity.ApellidoM = dto.ApellidoM;
            entity.NombresApellidos = dto.NombresApellidos;
            entity.Correo = dto.Correo;
            entity.Telefono = dto.Telefono;
            entity.Direccion = dto.Direccion;
            entity.OrganizationId = dto.OrganizationId;
            entity.EmpresaFacturacion = dto.EmpresaFacturacion;
            entity.EmpresaPrincipalID = dto.EmpresaPrincipalID;
            entity.EmpresaPrincipal = dto.EmpresaPrincipal;
            entity.Puesto = dto.Puesto;
            entity.FechaRegistro = dto.FechaRegistro;
            entity.FechaServicio = dto.FechaServicio;
            entity.Eliminado = dto.Eliminado;
            entity.EmpresaEmpleadora = dto.EmpresaEmpleadora;
            entity.TipoEmpresa = dto.TipoEmpresa;
            entity.Sede = dto.Sede;
            entity.Usuario = dto.Usuario;
            entity.CorreoEnviado = dto.CorreoEnviado;
            entity.Encuesta = dto.Encuesta;
            entity.Laboratorio = dto.Laboratorio;
            entity.Profesion = dto.Profesion;
            entity.Es_Personal_salud = dto.Es_Personal_salud;
            entity.Sintomas = dto.Sintomas;
            entity.Abdominal = dto.Abdominal;
            entity.Articulaciones = dto.Articulaciones;
            entity.Asma = dto.Asma;
            entity.Cancer = dto.Cancer;
            entity.Cefalea = dto.Cefalea;
            entity.Clas_clinica = dto.Clas_clinica;
            entity.Congestion_nasal = dto.Congestion_nasal;
            entity.Diabetes = dto.Diabetes;
            entity.Diarrea = dto.Diarrea;
            entity.Dolor = dto.Dolor;
            entity.Dolor_garganta = dto.Dolor_garganta;
            entity.Domicilio_residencia = dto.Domicilio_residencia;
            entity.Embarazo_puerperio = dto.Embarazo_puerperio;
            entity.Enf_cardiovasculares = dto.Enf_cardiovasculares;
            entity.Enf_tratamiento_inmunosupresor = dto.Enf_tratamiento_inmunosupresor;
            entity.Enf_pulmonar_cronica = dto.Enf_pulmonar_cronica;
            entity.Fecha_Prueba = dto.Fecha_Prueba;
            entity.Fiebre_Escalofrio = dto.Fiebre_Escalofrio;
            entity.Geolocalizacion_domicilio = dto.Geolocalizacion_domicilio;
            entity.Hipertencion_arterial = dto.Hipertencion_arterial;
            entity.Inicio_sintomas = dto.Inicio_sintomas;
            entity.Insuficiencia_cronica = dto.Insuficiencia_cronica;
            entity.Irritabilidad_confusion = dto.Irritabilidad_confusion;
            entity.Malestar_general = dto.Malestar_general;
            entity.Mayor65 = dto.Mayor65;
            entity.Muscular = dto.Muscular;
            entity.Nauseas_vomitos = dto.Nauseas_vomitos;
            entity.Obesidad = dto.Obesidad;
            entity.Otros_sintomas = dto.Otros_sintomas;
            entity.Pecho = dto.Pecho;
            entity.Personal_salud = dto.Personal_salud;
            entity.Procedencia_solicitud = dto.Procedencia_solicitud;
            entity.Resultado_1ERA = dto.Resultado_1ERA;
            entity.Resultado_2DA = dto.Resultado_2DA;
            entity.Tos = dto.Tos;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="servicespivot"/> to an instance of <see cref="servicespivotDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="servicespivot"/> to convert.</param>
        public static servicespivotDto ToDTO(this servicespivot entity)
        {
            if (entity == null) return null;

            var dto = new servicespivotDto();

            dto.servicespivot1 = entity.servicespivot1;
            dto.ServiceId = entity.ServiceId;
            dto.ProtocolId = entity.ProtocolId;
            dto.ComponentId = entity.ComponentId;
            dto.Component = entity.Component;
            dto.PersonId = entity.PersonId;
            dto.ServiceComponentId = entity.ServiceComponentId;
            dto.DNI = entity.DNI;
            dto.Nombre = entity.Nombre;
            dto.ApellidoP = entity.ApellidoP;
            dto.ApellidoM = entity.ApellidoM;
            dto.NombresApellidos = entity.NombresApellidos;
            dto.Correo = entity.Correo;
            dto.Telefono = entity.Telefono;
            dto.Direccion = entity.Direccion;
            dto.OrganizationId = entity.OrganizationId;
            dto.EmpresaFacturacion = entity.EmpresaFacturacion;
            dto.EmpresaPrincipalID = entity.EmpresaPrincipalID;
            dto.EmpresaPrincipal = entity.EmpresaPrincipal;
            dto.Puesto = entity.Puesto;
            dto.FechaRegistro = entity.FechaRegistro;
            dto.FechaServicio = entity.FechaServicio;
            dto.Eliminado = entity.Eliminado;
            dto.EmpresaEmpleadora = entity.EmpresaEmpleadora;
            dto.TipoEmpresa = entity.TipoEmpresa;
            dto.Sede = entity.Sede;
            dto.Usuario = entity.Usuario;
            dto.CorreoEnviado = entity.CorreoEnviado;
            dto.Encuesta = entity.Encuesta;
            dto.Laboratorio = entity.Laboratorio;
            dto.Profesion = entity.Profesion;
            dto.Es_Personal_salud = entity.Es_Personal_salud;
            dto.Sintomas = entity.Sintomas;
            dto.Abdominal = entity.Abdominal;
            dto.Articulaciones = entity.Articulaciones;
            dto.Asma = entity.Asma;
            dto.Cancer = entity.Cancer;
            dto.Cefalea = entity.Cefalea;
            dto.Clas_clinica = entity.Clas_clinica;
            dto.Congestion_nasal = entity.Congestion_nasal;
            dto.Diabetes = entity.Diabetes;
            dto.Diarrea = entity.Diarrea;
            dto.Dolor = entity.Dolor;
            dto.Dolor_garganta = entity.Dolor_garganta;
            dto.Domicilio_residencia = entity.Domicilio_residencia;
            dto.Embarazo_puerperio = entity.Embarazo_puerperio;
            dto.Enf_cardiovasculares = entity.Enf_cardiovasculares;
            dto.Enf_tratamiento_inmunosupresor = entity.Enf_tratamiento_inmunosupresor;
            dto.Enf_pulmonar_cronica = entity.Enf_pulmonar_cronica;
            dto.Fecha_Prueba = entity.Fecha_Prueba;
            dto.Fiebre_Escalofrio = entity.Fiebre_Escalofrio;
            dto.Geolocalizacion_domicilio = entity.Geolocalizacion_domicilio;
            dto.Hipertencion_arterial = entity.Hipertencion_arterial;
            dto.Inicio_sintomas = entity.Inicio_sintomas;
            dto.Insuficiencia_cronica = entity.Insuficiencia_cronica;
            dto.Irritabilidad_confusion = entity.Irritabilidad_confusion;
            dto.Malestar_general = entity.Malestar_general;
            dto.Mayor65 = entity.Mayor65;
            dto.Muscular = entity.Muscular;
            dto.Nauseas_vomitos = entity.Nauseas_vomitos;
            dto.Obesidad = entity.Obesidad;
            dto.Otros_sintomas = entity.Otros_sintomas;
            dto.Pecho = entity.Pecho;
            dto.Personal_salud = entity.Personal_salud;
            dto.Procedencia_solicitud = entity.Procedencia_solicitud;
            dto.Resultado_1ERA = entity.Resultado_1ERA;
            dto.Resultado_2DA = entity.Resultado_2DA;
            dto.Tos = entity.Tos;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="servicespivotDto"/> to an instance of <see cref="servicespivot"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<servicespivot> ToEntities(this IEnumerable<servicespivotDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="servicespivot"/> to an instance of <see cref="servicespivotDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<servicespivotDto> ToDTOs(this IEnumerable<servicespivot> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
