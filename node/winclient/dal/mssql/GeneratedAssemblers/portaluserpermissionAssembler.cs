//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2021/05/17 - 17:34:40
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="portaluserpermission"/> and <see cref="portaluserpermissionDto"/>.
    /// </summary>
    public static partial class portaluserpermissionAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="portaluserpermissionDto"/> converted from <see cref="portaluserpermission"/>.</param>
        static partial void OnDTO(this portaluserpermission entity, portaluserpermissionDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="portaluserpermission"/> converted from <see cref="portaluserpermissionDto"/>.</param>
        static partial void OnEntity(this portaluserpermissionDto dto, portaluserpermission entity);

        /// <summary>
        /// Converts this instance of <see cref="portaluserpermissionDto"/> to an instance of <see cref="portaluserpermission"/>.
        /// </summary>
        /// <param name="dto"><see cref="portaluserpermissionDto"/> to convert.</param>
        public static portaluserpermission ToEntity(this portaluserpermissionDto dto)
        {
            if (dto == null) return null;

            var entity = new portaluserpermission();

            entity.PortalUserPermissionId = dto.PortalUserPermissionId;
            entity.PortalUserId = dto.PortalUserId;
            entity.Value = dto.Value;
            entity.IsDeleted = dto.IsDeleted;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="portaluserpermission"/> to an instance of <see cref="portaluserpermissionDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="portaluserpermission"/> to convert.</param>
        public static portaluserpermissionDto ToDTO(this portaluserpermission entity)
        {
            if (entity == null) return null;

            var dto = new portaluserpermissionDto();

            dto.PortalUserPermissionId = entity.PortalUserPermissionId;
            dto.PortalUserId = entity.PortalUserId;
            dto.Value = entity.Value;
            dto.IsDeleted = entity.IsDeleted;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="portaluserpermissionDto"/> to an instance of <see cref="portaluserpermission"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<portaluserpermission> ToEntities(this IEnumerable<portaluserpermissionDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="portaluserpermission"/> to an instance of <see cref="portaluserpermissionDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<portaluserpermissionDto> ToDTOs(this IEnumerable<portaluserpermission> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
