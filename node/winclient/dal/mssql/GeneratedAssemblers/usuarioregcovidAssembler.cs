//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2021/05/17 - 17:34:50
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Node.WinClient.DAL;

namespace Sigesoft.Node.WinClient.BE
{

    /// <summary>
    /// Assembler for <see cref="usuarioregcovid"/> and <see cref="usuarioregcovidDto"/>.
    /// </summary>
    public static partial class usuarioregcovidAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="usuarioregcovidDto"/> converted from <see cref="usuarioregcovid"/>.</param>
        static partial void OnDTO(this usuarioregcovid entity, usuarioregcovidDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="usuarioregcovid"/> converted from <see cref="usuarioregcovidDto"/>.</param>
        static partial void OnEntity(this usuarioregcovidDto dto, usuarioregcovid entity);

        /// <summary>
        /// Converts this instance of <see cref="usuarioregcovidDto"/> to an instance of <see cref="usuarioregcovid"/>.
        /// </summary>
        /// <param name="dto"><see cref="usuarioregcovidDto"/> to convert.</param>
        public static usuarioregcovid ToEntity(this usuarioregcovidDto dto)
        {
            if (dto == null) return null;

            var entity = new usuarioregcovid();

            entity.i_UsuarioRegcovidId = dto.i_UsuarioRegcovidId;
            entity.i_NodeId = dto.i_NodeId;
            entity.v_OrganizationId = dto.v_OrganizationId;
            entity.v_ProtocolId = dto.v_ProtocolId;
            entity.v_NodeName = dto.v_NodeName;
            entity.v_UserName = dto.v_UserName;
            entity.v_Password = dto.v_Password;
            entity.i_IsDeleted = dto.i_IsDeleted;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="usuarioregcovid"/> to an instance of <see cref="usuarioregcovidDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="usuarioregcovid"/> to convert.</param>
        public static usuarioregcovidDto ToDTO(this usuarioregcovid entity)
        {
            if (entity == null) return null;

            var dto = new usuarioregcovidDto();

            dto.i_UsuarioRegcovidId = entity.i_UsuarioRegcovidId;
            dto.i_NodeId = entity.i_NodeId;
            dto.v_OrganizationId = entity.v_OrganizationId;
            dto.v_ProtocolId = entity.v_ProtocolId;
            dto.v_NodeName = entity.v_NodeName;
            dto.v_UserName = entity.v_UserName;
            dto.v_Password = entity.v_Password;
            dto.i_IsDeleted = entity.i_IsDeleted;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="usuarioregcovidDto"/> to an instance of <see cref="usuarioregcovid"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<usuarioregcovid> ToEntities(this IEnumerable<usuarioregcovidDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="usuarioregcovid"/> to an instance of <see cref="usuarioregcovidDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<usuarioregcovidDto> ToDTOs(this IEnumerable<usuarioregcovid> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
