//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2020/07/24 - 14:16:02
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using Sigesoft.Server.WebClientAdmin.DAL;

namespace Sigesoft.Server.WebClientAdmin.BE
{

    /// <summary>
    /// Assembler for <see cref="obtenerestadoxcomponentesResult"/> and <see cref="obtenerestadoxcomponentesResultDto"/>.
    /// </summary>
    public static partial class obtenerestadoxcomponentesResultAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="obtenerestadoxcomponentesResultDto"/> converted from <see cref="obtenerestadoxcomponentesResult"/>.</param>
        static partial void OnDTO(this obtenerestadoxcomponentesResult entity, obtenerestadoxcomponentesResultDto dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="obtenerestadoxcomponentesResult"/> converted from <see cref="obtenerestadoxcomponentesResultDto"/>.</param>
        static partial void OnEntity(this obtenerestadoxcomponentesResultDto dto, obtenerestadoxcomponentesResult entity);

        /// <summary>
        /// Converts this instance of <see cref="obtenerestadoxcomponentesResultDto"/> to an instance of <see cref="obtenerestadoxcomponentesResult"/>.
        /// </summary>
        /// <param name="dto"><see cref="obtenerestadoxcomponentesResultDto"/> to convert.</param>
        public static obtenerestadoxcomponentesResult ToEntity(this obtenerestadoxcomponentesResultDto dto)
        {
            if (dto == null) return null;

            var entity = new obtenerestadoxcomponentesResult();

            entity.v_Name = dto.v_Name;
            entity.Consultorio = dto.Consultorio;
            entity.Llamado = dto.Llamado;
            entity.Estado = dto.Estado;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="obtenerestadoxcomponentesResult"/> to an instance of <see cref="obtenerestadoxcomponentesResultDto"/>.
        /// </summary>
        /// <param name="entity"><see cref="obtenerestadoxcomponentesResult"/> to convert.</param>
        public static obtenerestadoxcomponentesResultDto ToDTO(this obtenerestadoxcomponentesResult entity)
        {
            if (entity == null) return null;

            var dto = new obtenerestadoxcomponentesResultDto();

            dto.v_Name = entity.v_Name;
            dto.Consultorio = entity.Consultorio;
            dto.Llamado = entity.Llamado;
            dto.Estado = entity.Estado;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="obtenerestadoxcomponentesResultDto"/> to an instance of <see cref="obtenerestadoxcomponentesResult"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<obtenerestadoxcomponentesResult> ToEntities(this IEnumerable<obtenerestadoxcomponentesResultDto> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="obtenerestadoxcomponentesResult"/> to an instance of <see cref="obtenerestadoxcomponentesResultDto"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<obtenerestadoxcomponentesResultDto> ToDTOs(this IEnumerable<obtenerestadoxcomponentesResult> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
